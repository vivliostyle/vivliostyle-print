{"version":3,"file":"bundle.js","sources":["../node_modules/fast-diff/diff.js","../node_modules/@vivliostyle/core/src/vivliostyle/constants.ts","../node_modules/@vivliostyle/core/src/vivliostyle/logging.ts","../node_modules/@vivliostyle/core/src/vivliostyle/plugin.ts","../node_modules/@vivliostyle/core/src/vivliostyle/profile.ts","../node_modules/@vivliostyle/core/src/vivliostyle/base.ts","../node_modules/@vivliostyle/core/src/vivliostyle/cfi.ts","../node_modules/@vivliostyle/core/src/vivliostyle/exprs.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css.ts","../node_modules/@vivliostyle/core/src/vivliostyle/geometry-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-prop.ts","../node_modules/@vivliostyle/core/src/vivliostyle/counters.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-tokenizer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/net.ts","../node_modules/@vivliostyle/core/src/vivliostyle/assets.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-parser.ts","../node_modules/@vivliostyle/core/src/vivliostyle/matchers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/types.ts","../node_modules/@vivliostyle/core/src/vivliostyle/diff.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vtree.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-cascade.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-logical-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sizing.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-floats.ts","../node_modules/@vivliostyle/core/src/vivliostyle/footnotes.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break.ts","../node_modules/@vivliostyle/core/src/vivliostyle/display.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-helper.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break-position.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-processor.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-retryers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/shared.ts","../node_modules/@vivliostyle/core/src/vivliostyle/text-polyfill.ts","../node_modules/@vivliostyle/core/src/vivliostyle/pseudo-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout.ts","../node_modules/@vivliostyle/core/src/vivliostyle/repetitive-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/table.ts","../node_modules/@vivliostyle/core/src/vivliostyle/math-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/columns.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-validator.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-styler.ts","../node_modules/@vivliostyle/core/src/vivliostyle/font.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-master.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-page.ts","../node_modules/@vivliostyle/core/src/vivliostyle/scripts.ts","../node_modules/@vivliostyle/core/src/vivliostyle/urls.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vgen.ts","../node_modules/@vivliostyle/core/src/vivliostyle/xml-doc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/ops.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sha1.ts","../node_modules/@vivliostyle/core/src/vivliostyle/toc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/epub.ts","../node_modules/@vivliostyle/core/src/vivliostyle/adaptive-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/core-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/print.ts","index.js"],"sourcesContent":["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 !== 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length && y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length && y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i), shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i), shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(\n          j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a, best_longtext_b,\n        best_shorttext_a, best_shorttext_b, best_common\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(0, -1);\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n        diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(0, diffs[pointer][1].length -\n            diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n};\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xD800 && charCode <= 0xDBFF;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xDC00 && charCode <= 0xDFFF;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after]\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange = typeof cursor_pos === 'number' ?\n    { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === 'number' ?\n    null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: ((p1: ErrorInfo) => void)[] } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listeners = this.listeners[level];\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(args);\n      });\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    let listeners = this.listeners[level];\n    if (!listeners) {\n      listeners = this.listeners[level] = [];\n    }\n    listeners.push(listener);\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (p1: Base.JSON) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Ident,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n */\nexport function registerHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    hooksForName.push(fn);\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming =\n      registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern =\n  /^[\\s\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:[\\s\\p{Zs}]*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  if (i < baseURL.length - 1) {\n    const j = baseURL.lastIndexOf(\".\");\n    if (j < i) {\n      // Assume the last part without '.' to be a directory name.\n      if (relURL == \"\") {\n        return baseURL;\n      }\n      baseURL += \"/\";\n      i = baseURL.length - 1;\n    }\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r =\n      /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n        url,\n      ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n  NCX = \"http://www.daisy.org/z3986/2005/ncx/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\n/**\n * @return ?string\n */\nexport function asString(v: any): any {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\n/**\n * @param prefix Prefix (containing leading and trailing hyphens)\n * @param cssPropName CSS property name\n * @return JavaScript property name\n */\nexport function cssToJSProp(prefix: string, cssPropName: string): string {\n  if (prefix) {\n    cssPropName = `-${cssPropName}`;\n    prefix = prefix.replace(/-/g, \"\");\n    if (prefix === \"moz\") {\n      prefix = \"Moz\";\n    }\n  }\n  return (\n    prefix +\n    cssPropName.replace(/-[a-z]/g, (txt) => txt.substr(1).toUpperCase())\n  );\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\"];\n\nexport const propNameMap = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  const style = document.documentElement.style;\n  return typeof style[cssToJSProp(prefix, prop)] === \"string\";\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"behavior\":\n      propNameMap[prop] = null;\n      return null;\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n    case \"filter\":\n      // Special case: prefer '-webkit-filter' to 'filter'\n      if (checkIfPropertySupported(\"-webkit-\", \"filter\")) {\n        propNameMap[prop] = [\"-webkit-filter\"];\n        return [\"-webkit-filter\"];\n      }\n      break;\n    case \"clip-path\":\n      // Special case for chrome.\n      if (checkIfPropertySupported(\"-webkit-\", \"clip-path\")) {\n        return (propNameMap[prop] = [\"-webkit-clip-path\", \"clip-path\"]);\n      }\n      break;\n    case \"margin-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-start\")) {\n        propNameMap[prop] = [\"-webkit-margin-start\"];\n        return [\"-webkit-margin-start\"];\n      }\n      break;\n    case \"margin-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-end\")) {\n        propNameMap[prop] = [\"-webkit-margin-end\"];\n        return [\"-webkit-margin-end\"];\n      }\n      break;\n    case \"padding-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-start\")) {\n        propNameMap[prop] = [\"-webkit-padding-start\"];\n        return [\"-webkit-padding-start\"];\n      }\n      break;\n    case \"padding-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-end\")) {\n        propNameMap[prop] = [\"-webkit-padding-end\"];\n        return [\"-webkit-padding-end\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = prefix + prop;\n      propNameMap[prop] = [prefixed];\n      return [prefixed];\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  try {\n    const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n    if (!prefixedPropertyNames) {\n      return;\n    }\n    const elemStyle = (elem as HTMLElement)?.style;\n    if (!elemStyle) {\n      return;\n    }\n    prefixedPropertyNames.forEach((prefixed) => {\n      switch (prefixed) {\n        case \"-webkit-text-combine\": // for Safari\n          switch (value) {\n            case \"all\":\n              value = \"horizontal\";\n              break;\n          }\n          break;\n        case \"text-combine-upright\":\n          switch (value) {\n            case \"all\":\n              // workaround for Chrome 93 bug https://crbug.com/1242755\n              elemStyle.setProperty(\"text-indent\", \"0\");\n              break;\n          }\n          break;\n      }\n      elemStyle.setProperty(prefixed, value);\n    });\n  } catch (err) {\n    Logging.logger.warn(err);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\nexport const base64Chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nexport function appendBase64(sb: StringBuffer, data: string): void {\n  const length = data.length;\n  const length3 = Math.floor(length / 3) * 3;\n  for (let i = 0; i < length3; i += 3) {\n    const c1 = data.charCodeAt(i) & 255;\n    const c2 = data.charCodeAt(i + 1) & 255;\n    const c3 = data.charCodeAt(i + 2) & 255;\n    sb.append(base64Chars.charAt(c1 >> 2));\n    sb.append(base64Chars.charAt(((c1 << 4) | (c2 >> 4)) & 63));\n    sb.append(base64Chars.charAt(((c2 << 2) | (c3 >> 6)) & 63));\n    sb.append(base64Chars.charAt(c3 & 63));\n  }\n  switch (length - length3) {\n    case 1: {\n      const p1 = data.charCodeAt(length3) & 255;\n      sb.append(base64Chars.charAt(p1 >> 2));\n      sb.append(base64Chars.charAt((p1 << 4) & 63));\n      sb.append(\"==\");\n      break;\n    }\n    case 2: {\n      const q1 = data.charCodeAt(length3) & 255;\n      const q2 = data.charCodeAt(length3 + 1) & 255;\n      sb.append(base64Chars.charAt(q1 >> 2));\n      sb.append(base64Chars.charAt(((q1 << 4) | (q2 >> 4)) & 63));\n      sb.append(base64Chars.charAt((q2 << 2) & 63));\n      sb.append(\"=\");\n      break;\n    }\n  }\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      list.push(listener);\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n\nexport let hasLShapeFloatBug: boolean | null = null;\n\n/**\n * Check if there is a bug with L-shape floats overlapping text.\n */\nexport function checkLShapeFloatBug(body: HTMLElement): boolean {\n  if (hasLShapeFloatBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    body.appendChild(container);\n    const f1 = doc.createElement(\"div\") as HTMLElement;\n    f1.style.width = \"0px\";\n    f1.style.height = \"14px\";\n    f1.style.cssFloat = \"left\";\n    container.appendChild(f1);\n    const f2 = doc.createElement(\"div\") as HTMLElement;\n    f2.style.width = \"50px\";\n    f2.style.height = \"50px\";\n    f2.style.cssFloat = \"left\";\n    f2.style.clear = \"left\";\n    container.appendChild(f2);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const leftEdge = range.getBoundingClientRect().left;\n    hasLShapeFloatBug = leftEdge < 40;\n    body.removeChild(container);\n  }\n  return hasLShapeFloatBug;\n}\n\nexport let hasVerticalBBoxBug: boolean | null = null;\n\n/**\n * Check if there is a bug with the bounding boxes of vertical text characters.\n * Though method used to be used check Chrome bug, it seems that the bug has\n * been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method to check Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function checkVerticalBBoxBug(body: HTMLElement): boolean {\n  if (hasVerticalBBoxBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    setCSSProperty(container, \"writing-mode\", \"vertical-rl\");\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const box = range.getBoundingClientRect();\n    hasVerticalBBoxBug = box.right - box.left < 10;\n    body.removeChild(container);\n  }\n  return hasVerticalBBoxBug;\n}\n\nexport let hasInlineBlockJustificationBug: boolean | null = null;\n\nexport function checkInlineBlockJustificationBug(body: HTMLElement): boolean {\n  if (hasInlineBlockJustificationBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"30px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a | \");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"30px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 3);\n    const box = range.getBoundingClientRect();\n    hasInlineBlockJustificationBug = box.right < 27;\n    body.removeChild(container);\n  }\n  return hasInlineBlockJustificationBug;\n}\n\nexport let hasSoftWrapOpportunityAfterHyphenBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityAfterHyphenBug(\n  body: HTMLElement,\n): boolean {\n  if (hasSoftWrapOpportunityAfterHyphenBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityAfterHyphenBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityAfterHyphenBug;\n}\n\nexport let hasSoftWrapOpportunityByWbrBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityByWbrBug(body: HTMLElement): boolean {\n  if (hasSoftWrapOpportunityByWbrBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    container.appendChild(doc.createElement(\"wbr\"));\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityByWbrBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityByWbrBug;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      const movedNode = elem.ownerDocument.getElementById(this.id);\n      if (movedNode) {\n        pos.node = movedNode;\n      } else {\n        Logging.logger.warn(\"E_CFI_ID_MISMATCH:\", this.id);\n      }\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n      return !CSS.supports(\"font-size\", \"1q\");\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  isRelativeRootFontSize: boolean | null = null;\n  fontSize: () => number;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return this.pageVertical ? vh : vw;\n        case \"vb\":\n          return this.pageVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return this.pageVertical ? pvh : pvw;\n        case \"pvb\":\n          return this.pageVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= req;\n        case \"max\":\n          return actual <= req;\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    context.storeVal(this.scope, this.key, result);\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(scope: LexicalScope, public val: Val) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(scope: LexicalScope, public lhs: Val, public rhs: Val) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class NotMedia extends Not {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"not \";\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"-\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"&&\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"||\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class Comma extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \", \";\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" or \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"==\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"+\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" - \";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"*\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"/\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"%\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(scope: LexicalScope, public num: number, unit: string) {\n    super(scope);\n    this.unit = unit.toLowerCase();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(scope: LexicalScope, public qualifiedName: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  constructor(scope: LexicalScope, public not: boolean, public name: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  /**\n   * @override\n   */\n  isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(scope: LexicalScope, public val: Result) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(scope: LexicalScope, public name: MediaName, public value: Val) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class SupportsTest extends Val {\n  constructor(\n    scope: LexicalScope,\n    public name: string,\n    public value: string,\n    public isFunc: boolean,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.isFunc) {\n      buf.append(this.name);\n    }\n    buf.append(\"(\");\n    if (!this.isFunc && this.name) {\n      buf.append(this.name);\n      buf.append(\":\");\n    }\n    buf.append(this.value);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalSupportsTest(this.name, this.value, this.isFunc);\n  }\n}\n\nexport class Param extends Val {\n  constructor(scope: LexicalScope, public index: number) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  /**\n   * @return void\n   */\n  visitValues(values: Val[]): any {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n  }\n\n  visitEmpty(empty: Val): Val {\n    throw new Error(\"E_CSS_EMPTY_NOT_ALLOWED\");\n  }\n\n  visitSlash(slash: Val): Val {\n    throw new Error(\"E_CSS_SLASH_NOT_ALLOWED\");\n  }\n\n  visitStr(str: Str): Val {\n    throw new Error(\"E_CSS_STR_NOT_ALLOWED\");\n  }\n\n  visitIdent(ident: Ident): Val {\n    throw new Error(\"E_CSS_IDENT_NOT_ALLOWED\");\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    throw new Error(\"E_CSS_NUMERIC_NOT_ALLOWED\");\n  }\n\n  visitNum(num: Num): Val {\n    throw new Error(\"E_CSS_NUM_NOT_ALLOWED\");\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitHexColor(color: HexColor): Val {\n    throw new Error(\"E_CSS_COLOR_NOT_ALLOWED\");\n  }\n\n  visitURL(url: URL): Val {\n    throw new Error(\"E_CSS_URL_NOT_ALLOWED\");\n  }\n\n  visitURange(urange: URange): Val {\n    throw new Error(\"E_CSS_URANGE_NOT_ALLOWED\");\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    throw new Error(\"E_CSS_LIST_NOT_ALLOWED\");\n  }\n\n  visitCommaList(list: CommaList): Val {\n    throw new Error(\"E_CSS_COMMA_NOT_ALLOWED\");\n  }\n\n  visitFunc(func: Func): Val {\n    throw new Error(\"E_CSS_FUNC_NOT_ALLOWED\");\n  }\n\n  visitExpr(expr: Expr): Val {\n    throw new Error(\"E_CSS_EXPR_NOT_ALLOWED\");\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  constructor() {\n    super();\n  }\n\n  visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Str): Val {\n    return str;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Num): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Int): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitHexColor(color: HexColor): Val {\n    return color;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: URL): Val {\n    return url;\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: URange): Val {\n    return urange;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: any): any {\n    throw new Error(\"F_ABSTRACT\");\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitIdent(this);\n  }\n\n  /**\n   * @override\n   */\n  isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(public num: number, unit: string) {\n    super();\n    this.unit = unit.toLowerCase(); // units are case-insensitive in CSS\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNumeric(this);\n  }\n\n  /**\n   * @override\n   */\n  isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNum(this);\n  }\n\n  /**\n   * @override\n   */\n  isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class HexColor extends Val {\n  constructor(public hex: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    buf.append(this.hex);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitHexColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURL(this);\n  }\n}\n\nexport class URange extends Val {\n  constructor(public urangeText: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.urangeText);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURange(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0].appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i].appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSpaceList(this);\n  }\n\n  /**\n   * @override\n   */\n  isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(public name: string, public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"-epubx-expr(\");\n    this.expr.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitExpr(this);\n  }\n\n  /**\n   * @override\n   */\n  isExpr(): boolean {\n    return true;\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  anywhere: getName(\"anywhere\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  initial: getName(\"initial\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  revert: getName(\"revert\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  unset: getName(\"unset\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const fullURange: URange = new URange(\"U+0-10FFFF\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  color: 2,\n};\n\nexport function isDefaultingValue(value: Val): boolean {\n  return (\n    value === ident.inherit ||\n    value === ident.initial ||\n    value === ident.revert ||\n    value === ident.unset\n  );\n}\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  /** @override */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  /** @override */\n  visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters and named strings\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(public readonly targetId: string, public resolved: boolean) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /**\n   * @override\n   */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedStringValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedStringValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /**\n   * @override\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr) => {\n      return format(arr[0]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /**\n   * @override\n   */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * @override\n   */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const stringValues = this.namedStringValues[name];\n        if (!stringValues) {\n          return \"\";\n        }\n        const offsets = Object.keys(stringValues)\n          .map((a) => parseInt(a, 10))\n          .sort(Base.numberCompare);\n\n        const currentPage = this.counterStore.currentPage;\n        const pageStartOffset = currentPage.isBlankPage\n          ? currentPage.offset - 1\n          : currentPage.offset;\n        const pageLastOffset = currentPage.isBlankPage\n          ? pageStartOffset\n          : Math.max(\n              pageStartOffset,\n              ...Array.from(\n                currentPage.container.querySelectorAll(\n                  `[${Base.ELEMENT_OFFSET_ATTR}]`,\n                ),\n              ).map((e) =>\n                parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10),\n              ),\n            );\n\n        let firstOffset = -1;\n        let startOffset = -1;\n        let lastOffset = -1;\n        let firstExceptOffset = -1;\n\n        for (let i = 0; i < offsets.length; i++) {\n          const offset = offsets[i];\n          const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n          const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n          if (offset > pageLastOffset) {\n            break;\n          }\n          if (offset >= pageStartOffset) {\n            if (firstOffset < 0) {\n              firstOffset = offset;\n              firstExceptOffset = -1;\n            }\n            if (startOffset < 0) {\n              if (offset === pageStartOffset) {\n                startOffset = offset;\n              } else {\n                if (offsetPrev < firstOffset) {\n                  startOffset = offsetPrev;\n                }\n                // Check if the element at the offset is at beginning of the page\n                const elementAtOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n                );\n                if (!elementAtOffset) {\n                  // title or meta elements are not output, but should be treated as start\n                  if (startOffset < 0) {\n                    startOffset = offset;\n                  }\n                } else {\n                  let elementAtPageStartOffset =\n                    currentPage.container.querySelector(\n                      `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                    );\n                  if (!elementAtPageStartOffset) {\n                    // The element at pageStartOffset is not found when page break occured\n                    // within an element, so use the ancestor element with offset 0 instead.\n                    elementAtPageStartOffset =\n                      currentPage.container.querySelector(\n                        `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                      );\n                  }\n                  if (elementAtPageStartOffset) {\n                    // Find if the element at the offset is (the first child of)* the element at page start\n                    for (\n                      let element = elementAtPageStartOffset;\n                      element;\n                      element = element.firstElementChild\n                    ) {\n                      if (element === elementAtOffset) {\n                        startOffset = offset;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            lastOffset = offset;\n          } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n            firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n          }\n        }\n\n        const stringValue =\n          stringValues[\n            {\n              first: firstOffset,\n              start: startOffset,\n              last: lastOffset,\n              \"first-except\": firstExceptOffset,\n            }[retrievePosition]\n          ] || \"\";\n\n        return stringValue;\n      },\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CssCascade.CascadeInstance,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[cascadeInstance.currentElementOffset] = stringValue;\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(page: Vtree.Page): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    }\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(expr, val, document) {\n    const found = this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    if (found) {\n      const node = document.createElement(\"span\");\n      node.textContent = val;\n      node.setAttribute(PAGES_COUNTER_ATTR, expr.key);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = this.currentPageCounters[\"page\"][0];\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"data-vivliostyle-id\") ||\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code <= 65535) {\n    return String.fromCharCode(code);\n  }\n  if (code <= 1114111) {\n    // non-BMP characters: convert to a surrogate pair\n    return String.fromCharCode(\n      55296 | ((code >> 10) & 1023),\n      56320 | (code & 1023),\n    );\n  }\n\n  // not a valid Unicode value\n  return \"\\ufffd\";\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{0,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n  URANGE,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  INVALID,\n  LAST = 51,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n}\n\nexport function makeActions(def: Action, spec: Action[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.ENDNOTK,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  9 /*tab*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  32 /*sp*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  head: number = -1; // saved, occupied if >= 0\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(public input: string, public readonly handler: TokenizerHandler) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  mark(): void {\n    if (this.head >= 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL mark\");\n    }\n    this.head = this.curr;\n  }\n\n  reset(): void {\n    if (this.head < 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL reset\");\n    }\n    this.curr = this.head;\n    this.head = -1;\n  }\n\n  unmark(): void {\n    this.head = -1;\n  }\n\n  hasMark(): boolean {\n    return this.head >= 0;\n  }\n\n  private reallocate(): void {\n    const newIndexMask = 2 * (this.indexMask + 1) - 1;\n    const newBuffer: Token[] = Array(newIndexMask + 1);\n    let oldIndex = this.head;\n    let newIndex = 0;\n    while (oldIndex != this.tail) {\n      newBuffer[newIndex] = this.buffer[oldIndex];\n      oldIndex = (oldIndex + 1) & this.indexMask;\n      newIndex++;\n    }\n    this.head = 0;\n    this.curr = newIndex;\n    this.tail = newIndex;\n    this.indexMask = newIndexMask;\n    this.buffer = newBuffer;\n    while (newIndex <= newIndexMask) {\n      newBuffer[newIndex++] = new Token();\n    }\n  }\n\n  private error(position, token, mnemonics) {\n    if (this.handler) {\n      this.handler.error(mnemonics, token);\n    }\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.head >= 0 ? this.head : this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      // only expect to get here when mark is in effect\n      if (this.head < 0) {\n        throw new Error(\"F_CSSTOK_INTERNAL\");\n      }\n      this.reallocate();\n      tail = this.tail;\n      indexMask = this.indexMask;\n      head = indexMask; // this.head is zero\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenType = TokenType.INVALID;\n          if (isNaN(charCode)) {\n            tokenText = \"E_CSS_UNEXPECTED_EOF\";\n          } else {\n            tokenText = \"E_CSS_UNEXPECTED_CHAR\";\n          }\n          actions = actionsNormal;\n          position++;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = input.substring(tokenPosition, position);\n\n          // unicode-range support\n          if (\n            (tokenType === TokenType.URANGE && charCode === 63) ||\n            (tokenType === TokenType.IDENT &&\n              tokenText.toLowerCase() === \"u\" &&\n              /^(\\bu\\+[?0-9a-f]+(-[?0-9a-f]+)?|,|\\s+|\\/\\*([^*]|\\*[^/])*\\*\\/)+[;}]/i.test(\n                input.substring(position - 1),\n              ))\n          ) {\n            tokenType = TokenType.URANGE;\n            position++;\n            continue;\n          }\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          continue;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   * @return.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err as Error, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /**\n   * @override\n   */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /**\n   * @override\n   */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /**\n   * @override\n   */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err as Error);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /**\n   * @override\n   */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(public scheduler: Scheduler, public name: string) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /**\n   * @override\n   */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /**\n   * @override\n   */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(public task: Task, public parent: Frame<T>, public name: string) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err as Error, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err as Error, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err as Error, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(public readonly fetch: () => Task.Result<T>, opt_name?: string) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(elem: Element, src?: string): Fetcher<string> {\n  const fetcher = new Fetcher(() => {\n    const frame: Task.Frame<string> = Task.newFrame(\"loadElement\");\n    const continuation = frame.suspend(elem);\n    let done = false;\n    const handler = (evt: Event) => {\n      if (done) {\n        return;\n      } else {\n        done = true;\n      }\n      continuation.schedule(evt ? evt.type : \"timeout\");\n    };\n    elem.addEventListener(\"load\", handler, false);\n    elem.addEventListener(\"error\", handler, false);\n    elem.addEventListener(\"abort\", handler, false);\n    if (elem.namespaceURI == Base.NS.SVG) {\n      if (src) {\n        elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n      }\n      // SVG handlers are not reliable\n      setTimeout(handler, 300);\n    } else if (elem.localName === \"script\") {\n      setTimeout(handler, 3000);\n    } else if (src) {\n      (elem as any).src = src;\n    }\n    return frame.result();\n  }, `loadElement ${src || elem.localName}`);\n  fetcher.start();\n  return fetcher;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum XMLHttpRequestResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type Response = Net.Response;\n\nexport function ajax(\n  url: string,\n  opt_type?: XMLHttpRequestResponseType,\n  opt_method?: string,\n  opt_data?: string,\n  opt_contentType?: string,\n): Task.Result<Response> {\n  const frame: Task.Frame<Response> = Task.newFrame(\"ajax\");\n  const request = new XMLHttpRequest();\n  const continuation = frame.suspend(request);\n  const response: Response = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n  request.open(opt_method || \"GET\", url, true);\n  if (opt_type) {\n    request.responseType = opt_type;\n  }\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      response.status = request.status;\n      response.statusText =\n        request.statusText || (request.status == 404 && \"Not Found\") || \"\";\n      if (response.status == 200 || response.status == 0) {\n        if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.responseXML &&\n          request.responseXML.documentElement.localName != \"parsererror\"\n        ) {\n          response.responseXML = request.responseXML;\n          response.contentType = (request.responseXML as any).contentType;\n        } else if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.response instanceof HTMLDocument\n        ) {\n          response.responseXML = request.response;\n          response.contentType = (request.response as any).contentType;\n        } else {\n          const text = request.response;\n          if (\n            (!opt_type || opt_type === XMLHttpRequestResponseType.TEXT) &&\n            typeof text == \"string\"\n          ) {\n            response.responseText = text;\n          } else if (!text) {\n            Logging.logger.warn(\"Unexpected empty success response for\", url);\n          } else {\n            if (typeof text == \"string\") {\n              response.responseBlob = makeBlob([text]);\n            } else {\n              response.responseBlob = text as Blob;\n            }\n          }\n          const contentTypeHeader = request.getResponseHeader(\"Content-Type\");\n          if (contentTypeHeader) {\n            response.contentType = contentTypeHeader.replace(/(.*);.*$/, \"$1\");\n          }\n        }\n      }\n      continuation.schedule(response);\n    }\n  };\n  try {\n    if (opt_data) {\n      request.setRequestHeader(\n        \"Content-Type\",\n        opt_contentType || \"text/plain; charset=UTF-8\",\n      );\n      request.send(opt_data);\n    } else {\n      if (\n        /^file:|^https?:\\/\\/[^/]+\\.githubusercontent\\.com|\\.(xhtml|xht|opf)$/i.test(\n          url,\n        )\n      ) {\n        // File or GitHub raw URL or .xht(ml) or .opf\n        if (\n          /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n        ) {\n          // Aozorabunko's (X)HTML support\n          request.overrideMimeType(\"text/html; charset=Shift_JIS\");\n        } else if (/\\.(html|htm)$/i.test(url)) {\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        } else if (/\\.(xhtml|xht|xml|opf)$/i.test(url)) {\n          request.overrideMimeType(\"application/xml; charset=UTF-8\");\n        } else if (/\\.(txt|css)$/i.test(url)) {\n          request.overrideMimeType(\"text/plain; charset=UTF-8\");\n        } else {\n          // fallback to HTML\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        }\n      } else if (/^data:,(<|%3c)/i.test(url)) {\n        request.overrideMimeType(\"text/html; charset=UTF-8\");\n      } else if (/^data:,/i.test(url)) {\n        request.overrideMimeType(\"text/plain; charset=UTF-8\");\n      }\n      request.send(null);\n    }\n  } catch (e) {\n    Logging.logger.warn(e, `Error fetching ${url}`);\n    continuation.schedule(response);\n  }\n  return frame.result();\n}\n\n/**\n * @return Blob\n */\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): any {\n  const type = opt_type || \"application/octet-stream\";\n  const builderCtr = window[\"WebKitBlobBuilder\"] || window[\"MSBlobBuilder\"]; // deprecated\n  if (builderCtr) {\n    const builder = new builderCtr();\n    for (let i = 0; i < parts.length; i++) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(type);\n  }\n  return new Blob(parts, { type });\n}\n\n/**\n * @return Task.Result.<ArrayBuffer>\n */\nexport function readBlob(blob: Blob): any {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  (window[\"URL\"] || window[\"webkitURL\"]).revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return (window[\"URL\"] || window[\"webkitURL\"]).createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: XMLHttpRequestResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    ajax(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: Response,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, XMLHttpRequestResponseType.TEXT);\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n// vivliostyle-viewport-screen.css\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: -webkit-flex;\n    display: flex;\n    flex: none;\n    justify-content: center;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n// vivliostyle-viewport.css\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n  overflow: hidden;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  /* overflow: hidden; ** removed to fix issue #945 */\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container],\n  [data-vivliostyle-page-container] {\n    transform: none !important;\n  }\n\n  [data-vivliostyle-page-container] {\n    display: block !important;\n    max-height: 100vh;\n    break-after: page;\n  }\n\n  [data-vivliostyle-bleed-box] > div > div::before {\n    display: block;\n    content: \"\";\n    padding-top: 0.015625px;\n    margin-bottom: -0.015625px;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document url-prefix()  {\n    [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n    /* Workaround Gecko problem on page break */\n    [data-vivliostyle-page-container] {\n      break-after: auto;\n      height: 100% !important;\n    }\n  }\n}\n`;\n\n// validation.txt\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO | NEGATIVE;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nMIN_MAX_FIT_CONTENT = min-content | max-content | fit-content;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nURI_OR_NONE = URI | none;\nIMAGE = URI | IMAGE_FUNCTION | none;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = disc | circle | square | decimal | decimal-leading-zero | lower-roman |\n    upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha |\n    upper-alpha | russian | upper-russian | lower-russian | cjk-ideographic | trad-chinese-informal |\n    hebrew | none;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH | POS_NUM;\nfont-style = normal | italic | oblique;\nfont-weight = normal | bold | bolder | lighter | POS_NUM;\nheight = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-width = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-height = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-width = APLENGTH | MIN_MAX_FIT_CONTENT;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nposition = static | relative | absolute | fixed;\nquotes = [STRING STRING]+ | none | auto;\nright = APLENGTH;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-decoration = none | [ underline || overline || line-through || blink ];\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line | break-spaces;\nwidows = POS_INT;\nwidth = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\ninline-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-block-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-inline-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-block-size = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-inline-size = APLENGTH | MIN_MAX_FIT_CONTENT;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub]transform = none | TRANSFORM_FUNCTION+;\n[epub]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto | IDENT; /* page: IDENT is for CSS Paged Media */\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nCOMMON_LIG_VALUES        = [ common-ligatures | no-common-ligatures ];\nDISCRETIONARY_LIG_VALUES = [ discretionary-ligatures | no-discretionary-ligatures ];\nHISTORICAL_LIG_VALUES    = [ historical-ligatures | no-historical-ligatures ];\nCONTEXTUAL_ALT_VALUES    = [ contextual | no-contextual ];\nfont-variant-ligatures = normal | none | [ COMMON_LIG_VALUES || DISCRETIONARY_LIG_VALUES || HISTORICAL_LIG_VALUES || CONTEXTUAL_ALT_VALUES ];\nfont-variant-caps = normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps;\nNUMERIC_FIGURE_VALUES   = [ lining-nums | oldstyle-nums ];\nNUMERIC_SPACING_VALUES  = [ proportional-nums | tabular-nums ];\nNUMERIC_FRACTION_VALUES = [ diagonal-fractions | stacked-fractions ];\nfont-variant-numeric = normal | [ NUMERIC_FIGURE_VALUES || NUMERIC_SPACING_VALUES || NUMERIC_FRACTION_VALUES || ordinal || slashed-zero ];\nEAST_ASIAN_VARIANT_VALUES = [ jis78 | jis83 | jis90 | jis04 | simplified | traditional ];\nEAST_ASIAN_WIDTH_VALUES   = [ full-width | proportional-width ];\nfont-variant-east-asian = normal | [ EAST_ASIAN_VARIANT_VALUES || EAST_ASIAN_WIDTH_VALUES || ruby ];\nfont-variant_css2 = normal | small-caps; /* for font shorthand */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nFONT_STRETCH_CSS3_VALUES = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\nfont-stretch = FONT_STRETCH_CSS3_VALUES | PERCENTAGE;\nfont-stretch_css3 = FONT_STRETCH_CSS3_VALUES; /* for font shorthand */\nfont-display = [ auto | block | swap | fallback | optional ];\nunicode-range = COMMA( URANGE+ );\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a10 | a9 | a8 | a7 | a6 | a5 | a4 | a3 | a2 | a1 | a0\n          | b10 | b9 | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0\n          | c10 | c9 | c8 | c7 | c6 | c5 | c4 | c3 | c2 | c1 | c0\n          | jis-b10 | jis-b9 | jis-b8 | jis-b7 | jis-b6 | jis-b5 | jis-b4 | jis-b3 | jis-b2 | jis-b1 | jis-b0\n          | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\ncrop-offset = auto | LENGTH;\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = block-start | block-end | inline-start | inline-end | snap-block | snap-inline | left | right | top | bottom | none | footnote;\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[webkit]line-break = auto | loose | normal | strict | anywhere;\noverflow-wrap = normal | break-word | anywhere;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz]text-align-last = auto | start | end | left | right | center | justify;\ntext-justify = auto | none | inter-word | inter-character;\nword-break = normal | keep-all | break-all | break-word;\ntext-spacing = normal | none | auto | [[ trim-start | space-start | space-first ] ||\n    [ trim-end | space-end | allow-end ] || [ trim-adjacent | space-adjacent ] ||\n    no-compress || ideograph-alpha || ideograph-numeric || punctuation];\nhanging-punctuation = none | [ first || [ force-end | allow-end ] || last ];\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\nbox-sizing = content-box | padding-box | border-box;\ntext-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[epub,webkit]text-combine = none | horizontal;\ntext-combine-upright = none | all; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\ntouch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-size-adjust: none;\nfont-kerning: auto;\nfont-feature-settings: normal;\nfont-variant-ligatures: normal;\nfont-variant-caps: normal;\nfont-variant-numeric: normal;\nfont-variant-east-asian: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nall = ALL;\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-type list-style-position list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\nfont = FONT font-style font-variant_css2 font-weight font-stretch_css3 /* font-size line-height font-family are special-cased */;\nfont-variant = font-variant-ligatures font-variant-caps font-variant-numeric font-variant-east-asian;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\ninset = INSETS top right bottom left;\n\n/* old names  */\nword-wrap = overflow-wrap;\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n// user-agent.xml\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.footnote-content {\n  float: footnote;\n}\n\n.table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n// user-agent-page.css\nexport const UserAgentPageCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n// user-agent-base.css\nexport const UserAgentBaseCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\nhtml|html,\nhtml|address,\nhtml|blockquote,\nhtml|body,\nhtml|dd,\nhtml|div,\nhtml|dl,\nhtml|dt,\nhtml|fieldset,\nhtml|form,\nhtml|frame,\nhtml|frameset,\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|noframes,\nhtml|ol,\nhtml|p,\nhtml|ul,\nhtml|center,\nhtml|dir,\nhtml|hr,\nhtml|menu,\nhtml|pre,\nhtml|article,\nhtml|section,\nhtml|nav,\nhtml|aside,\nhtml|hgroup,\nhtml|footer,\nhtml|header,\nhtml|figure,\nhtml|figcaption,\nhtml|main {\n  display: block;\n  unicode-bidi: normal;\n}\nhtml|li {\n  display: list-item;\n}\nhtml|head {\n  display: none !important;\n}\nhtml|table {\n  display: table;\n}\nhtml|tr {\n  display: table-row;\n}\nhtml|thead {\n  display: table-header-group;\n  break-after: avoid;\n}\nhtml|tbody {\n  display: table-row-group;\n}\nhtml|tfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\nhtml|col {\n  display: table-column;\n}\nhtml|colgroup {\n  display: table-column-group;\n}\nhtml|td,\nhtml|th {\n  display: table-cell;\n}\nhtml|caption {\n  display: table-caption;\n  text-align: center;\n}\nhtml|th {\n  font-weight: bolder;\n  text-align: center;\n}\nhtml|*[hidden],\nhtml|link,\nhtml|style,\nhtml|script {\n  display: none;\n}\nhtml|h1 {\n  font-size: 2em;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h2 {\n  font-size: 1.5em;\n  margin-block-start: 0.75em;\n  margin-block-end: 0.75em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h3 {\n  font-size: 1.17em;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h4,\nhtml|p,\nhtml|blockquote,\nhtml|ul,\nhtml|fieldset,\nhtml|form,\nhtml|ol,\nhtml|dl,\nhtml|dir,\nhtml|menu,\nhtml|h5,\nhtml|h6 {\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h5 {\n  font-size: 0.83em;\n}\nhtml|h6 {\n  font-size: 0.75em;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|b,\nhtml|strong {\n  font-weight: bolder;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6 {\n  break-after: avoid;\n}\nhtml|blockquote {\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n}\nhtml|i,\nhtml|cite,\nhtml|em,\nhtml|var,\nhtml|address {\n  font-style: italic;\n}\nhtml|pre,\nhtml|tt,\nhtml|code,\nhtml|kbd,\nhtml|samp {\n  font-family: monospace;\n}\nhtml|pre {\n  white-space: pre;\n}\nhtml|button,\nhtml|textarea,\nhtml|input,\nhtml|select {\n  display: inline-block;\n}\nhtml|big {\n  font-size: 1.17em;\n}\nhtml|small,\nhtml|sub,\nhtml|sup {\n  font-size: 0.83em;\n}\nhtml|sub {\n  vertical-align: sub;\n}\nhtml|sup {\n  vertical-align: super;\n}\nhtml|table {\n  border-spacing: 2px;\n}\nhtml|thead,\nhtml|tbody,\nhtml|tfoot {\n  vertical-align: middle;\n}\n/* for XHTML tables without tbody */\nhtml|table > html|tr {\n  vertical-align: middle;\n}\nhtml|td,\nhtml|th {\n  vertical-align: inherit;\n}\nhtml|s,\nhtml|strike,\nhtml|del {\n  text-decoration: line-through;\n}\nhtml|hr {\n  border: 1px inset;\n}\nhtml|ol,\nhtml|ul,\nhtml|dir,\nhtml|menu,\nhtml|dd {\n  margin: 0px;\n  margin-inline-start: 40px;\n}\nhtml|ol html|ul,\nhtml|ul html|ol,\nhtml|ul html|ul,\nhtml|ol html|ol {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\nhtml|u,\nhtml|ins {\n  text-decoration: underline;\n}\nhtml|center {\n  text-align: center;\n}\nhtml|q:before {\n  content: open-quote;\n}\nhtml|q:after {\n  content: close-quote;\n}\n\nhtml|audio,\nhtml|video {\n  break-inside: avoid;\n}\n\nhtml|ruby {\n  display: ruby;\n}\nhtml|rp {\n  display: none;\n}\nhtml|rbc {\n  display: ruby-base-container;\n}\nhtml|rtc {\n  display: ruby-text-container;\n}\nhtml|rb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nhtml|rt {\n  display: ruby-text;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-variant-east-asian: ruby;\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\n\nhtml|rtc:lang(zh),\nhtml|rt:lang(zh) {\n  ruby-align: center;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-size: 50%;\n}\n\nhtml|rtc:lang(zh-TW),\nhtml|rt:lang(zh-TW) {\n  font-size: 30%;\n}\n\nhtml|rtc > html|rt,\nhtml|rtc > html|rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nhtml|bdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nhtml|bdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\nhtml|*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: embed;\n}\nhtml|*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: embed;\n}\n\n/*------------------ epub-specific ---------------------*/\n\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml|a[epub|type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\nhtml|a[epub|type=\"noteref\"]:href-epub-type(footnote) {\n  -adapt-template: url(user-agent.xml#footnote);\n  text-decoration: none;\n}\n\nhtml|aside[epub|type=\"footnote\"] {\n  display: none;\n}\n\nhtml|aside[epub|type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n\n/*--------------- ncx and toc ----------------------*/\n\n@namespace ncx \"http://www.daisy.org/z3986/2005/ncx/\";\n\nncx|ncx {\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nncx|content {\n  display: none;\n}\n\nbody > * {\n  -adapt-behavior: body-child;\n}\n\n[role=\"doc-toc\"],\n[role=\"directory\"],\nnav,\n.toc,\n#toc,\n#table-of-contents,\n#contents {\n  -adapt-behavior: toc-root;\n}\n\n[role=\"doc-toc\"] a,\n[role=\"directory\"] a,\nnav a,\n.toc a,\n#toc a,\nncx|navLabel {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[role=\"doc-toc\"] li,\n[role=\"directory\"] li,\nnav li,\n.toc li,\n#toc li,\nncx|navPoint {\n  -adapt-behavior: toc-node;\n}\n\n[role=\"doc-toc\"] li > *:first-child,\n[role=\"directory\"] li > *:first-child,\nnav li > *:first-child,\n.toc li > *:first-child,\n#toc li > *:first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[role=\"doc-toc\"] ol,\n[role=\"directory\"] ol,\nnav ol,\n.toc ol,\n#toc ol,\n[role=\"doc-toc\"] ul,\n[role=\"directory\"] ul,\nnav ul,\n.toc ul,\n#toc ul,\nol[role=\"doc-toc\"],\nol[role=\"directory\"],\nol.toc,\nol#toc,\nul[role=\"doc-toc\"],\nul[role=\"directory\"],\nul.toc,\nul#toc {\n  -adapt-behavior: toc-container;\n}\n`;\n\n// text-polyfill.css\nexport const TextPolyfillCss = `\nviv-ts-open.viv-ts-auto > viv-ts-inner,\nviv-ts-open.viv-ts-trim > viv-ts-inner {\n  margin-inline-start: -0.5em;\n}\nviv-ts-close.viv-ts-auto > viv-ts-inner,\nviv-ts-close.viv-ts-trim > viv-ts-inner {\n  letter-spacing: -0.5em;\n}\nviv-ts-close.viv-hang-end > viv-ts-inner,\nviv-ts-close.viv-hang-last > viv-ts-inner {\n  letter-spacing: -1em;\n}\nviv-ts-open.viv-ts-auto::before,\nviv-ts-close.viv-ts-auto::after,\nviv-ts-close.viv-hang-end::after {\n  content: \" \";\n  font-family: Courier, monospace;\n  word-spacing: normal;\n  letter-spacing: -0.11em;\n  line-height: 0;\n  text-orientation: mixed;\n  visibility: hidden;\n}\nviv-ts-close.viv-hang-end:not(.viv-hang-hw)::after {\n  letter-spacing: 0.4em;\n}\nviv-ts-close.viv-hang-hw > viv-ts-inner {\n  letter-spacing: -0.5em;\n}\nviv-ts-open.viv-hang-first > viv-ts-inner {\n  display: inline-block;\n  line-height: 1;\n  inline-size: 1em;\n  text-indent: 0;\n  text-align: end;\n  text-align-last: end;\n  margin-inline-start: -1em;\n}\nviv-ts-thin-sp::after {\n  content: \" \";\n  font-family: Times, serif;\n  font-size: 66.6%;\n  word-spacing: normal;\n  letter-spacing: normal;\n  line-height: 0;\n  text-orientation: mixed;\n  visibility: hidden;\n}\n`;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 16777216;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 33554432;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 50331648;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 67108864;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 83886080;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 100663296;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as an\n   *     argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    this.slave.endRule();\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    return this.owner.getCurrentToken();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner.errorMsg(mnemonics, token);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.depth++;\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  VAL_URANGE,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = CssTokenizer.TokenType.LAST + 1;\nexport const OP_MEDIA_OR: number = CssTokenizer.TokenType.LAST + 2;\nexport const OP_MEDIA_NOT: number = CssTokenizer.TokenType.LAST + 3;\n\n(() => {\n  actionsBase[CssTokenizer.TokenType.IDENT] = Action.IDENT;\n  actionsBase[CssTokenizer.TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.AT] = Action.AT;\n  actionsBase[CssTokenizer.TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[CssTokenizer.TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n\n  actionsSelector[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[CssTokenizer.TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[CssTokenizer.TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelector[CssTokenizer.TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelectorInFunc[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.C_PAR] = Action.DONE;\n  actionsSelectorInFunc[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COL_COL] =\n    Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[CssTokenizer.TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[CssTokenizer.TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[CssTokenizer.TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[CssTokenizer.TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[CssTokenizer.TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[CssTokenizer.TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[CssTokenizer.TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[CssTokenizer.TokenType.URANGE] = Action.VAL_URANGE;\n  actionsPropVal[CssTokenizer.TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[CssTokenizer.TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[CssTokenizer.TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[CssTokenizer.TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[CssTokenizer.TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[CssTokenizer.TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[CssTokenizer.TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[CssTokenizer.TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[CssTokenizer.TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[CssTokenizer.TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[CssTokenizer.TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[CssTokenizer.TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[CssTokenizer.TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[CssTokenizer.TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[CssTokenizer.TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[CssTokenizer.TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[CssTokenizer.TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[CssTokenizer.TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[CssTokenizer.TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsError[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  priority[CssTokenizer.TokenType.C_PAR] = 0;\n  priority[CssTokenizer.TokenType.COMMA] = 0;\n  priority[CssTokenizer.TokenType.QMARK] = 1;\n  priority[CssTokenizer.TokenType.COLON] = 1;\n  priority[CssTokenizer.TokenType.AMP_AMP] = 2;\n  priority[CssTokenizer.TokenType.BAR_BAR] = 2;\n  priority[CssTokenizer.TokenType.LT] = 3;\n  priority[CssTokenizer.TokenType.GT] = 3;\n  priority[CssTokenizer.TokenType.LT_EQ] = 3;\n  priority[CssTokenizer.TokenType.GT_EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ_EQ] = 3;\n  priority[CssTokenizer.TokenType.BANG_EQ] = 3;\n  priority[CssTokenizer.TokenType.PLUS] = 4;\n  priority[CssTokenizer.TokenType.MINUS] = 4;\n  priority[CssTokenizer.TokenType.STAR] = 5;\n  priority[CssTokenizer.TokenType.SLASH] = 5;\n  priority[CssTokenizer.TokenType.PERCENT] = 5;\n  priority[CssTokenizer.TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n  priority[OP_MEDIA_OR] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n  SUPPORTS,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index == valStack.length) {\n        break;\n      }\n      if (valStack[index++] != sep) {\n        throw new Error(\"Unexpected state\");\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let v;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n        this.actions = actionsErrorDecl;\n        return null;\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n      return null;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    return valStack[0] as Css.Val;\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    // this.handler.error(mnemonics, token);\n    // (should not throw error by expression syntax errors)\n    Logging.logger.warn(mnemonics);\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == CssTokenizer.TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == CssTokenizer.TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.Comma(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = CssTokenizer.TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == CssTokenizer.TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = CssTokenizer.TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -CssTokenizer.TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -CssTokenizer.TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else if (tok == -OP_MEDIA_NOT) {\n          // `not` operator in `@media` or `@supports`\n          val = new Exprs.NotMedia(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case CssTokenizer.TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            // `and` operator in `@media` or `@supports`\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_OR:\n            // `or` operator in `@media` or `@supports`\n            val = new Exprs.OrMedia(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.EQ:\n          case CssTokenizer.TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case CssTokenizer.TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case CssTokenizer.TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (op != CssTokenizer.TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case CssTokenizer.TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readSupportsTest(token: CssTokenizer.Token): Exprs.SupportsTest {\n    // `@supports (prop-name:...)`\n    // `@supports func-name(...)`\n    const isFunc = token.type === CssTokenizer.TokenType.FUNC;\n    const tokenizer = this.tokenizer;\n    let startPosition: number;\n    let name: string;\n    if (isFunc) {\n      name = token.text;\n      startPosition = token.position + name.length + 1;\n    } else if (token.type === CssTokenizer.TokenType.O_PAR) {\n      const token1 = tokenizer.nthToken(1);\n      const token2 = tokenizer.nthToken(2);\n      if (\n        token1.type === CssTokenizer.TokenType.IDENT &&\n        token2.type === CssTokenizer.TokenType.COLON\n      ) {\n        tokenizer.consume();\n        tokenizer.consume();\n        name = token1.text;\n        startPosition = token2.position + 1;\n      } else if (\n        token1.type === CssTokenizer.TokenType.O_PAR ||\n        token1.type === CssTokenizer.TokenType.FUNC ||\n        (token1.type === CssTokenizer.TokenType.IDENT &&\n          token1.text.toLowerCase() === \"not\" &&\n          (token2.type === CssTokenizer.TokenType.O_PAR ||\n            token2.type === CssTokenizer.TokenType.FUNC))\n      ) {\n        return null;\n      } else {\n        // Unknown `(...)` syntax, read until `)` and evaluate to false\n        startPosition = token.position + 1;\n      }\n    } else {\n      return null;\n    }\n    let parLevel = 0;\n    let tokenN: CssTokenizer.Token;\n    while (parLevel >= 0) {\n      tokenizer.consume();\n      tokenN = tokenizer.token();\n      switch (tokenN.type) {\n        case CssTokenizer.TokenType.C_PAR:\n          parLevel--;\n          break;\n        case CssTokenizer.TokenType.O_PAR:\n        case CssTokenizer.TokenType.FUNC:\n          parLevel++;\n          break;\n        case CssTokenizer.TokenType.INVALID:\n        case CssTokenizer.TokenType.EOF:\n          this.exprError(\"E_CSS_UNEXPECTED_EOF\", tokenN);\n          return null;\n      }\n    }\n    tokenizer.consume();\n    const endPosition = tokenN.position;\n    const value = tokenizer.input.substring(startPosition, endPosition).trim();\n    const supportsTest = new Exprs.SupportsTest(\n      this.handler.getScope(),\n      name,\n      value,\n      isFunc,\n    );\n    return supportsTest;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case CssTokenizer.TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case CssTokenizer.TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case CssTokenizer.TokenType.NUM:\n        case CssTokenizer.TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === CssTokenizer.TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === CssTokenizer.TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case CssTokenizer.TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case CssTokenizer.TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === CssTokenizer.TokenType.MINUS;\n          const hasSign =\n            token.type === CssTokenizer.TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === CssTokenizer.TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === CssTokenizer.TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === CssTokenizer.TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case CssTokenizer.TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue: boolean,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery: boolean,\n    parsingFunctionParam: boolean,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n    parserLoop: for (; count > 0; --count) {\n      token = tokenizer.token();\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          token1 = tokenizer.nthToken(2);\n          if (\n            token1.precededBySpace ||\n            (token1.type != CssTokenizer.TokenType.IDENT &&\n              token1.type != CssTokenizer.TokenType.FUNC)\n          ) {\n            // cannot be a selector\n          } else {\n            // can be either a selector or a property assignment\n            tokenizer.mark();\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case CssTokenizer.TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case CssTokenizer.TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case CssTokenizer.TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"not\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(\"not\");\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  break parserLoop;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === CssTokenizer.TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.BAR) {\n            ns = text ? this.namespacePrefixToURI[text] : text;\n            if (ns == null) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != CssTokenizer.TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.EQ:\n            case CssTokenizer.TokenType.TILDE_EQ:\n            case CssTokenizer.TokenType.BAR_EQ:\n            case CssTokenizer.TokenType.HAT_EQ:\n            case CssTokenizer.TokenType.DOLLAR_EQ:\n            case CssTokenizer.TokenType.STAR_EQ:\n            case CssTokenizer.TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case CssTokenizer.TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                CssTokenizer.TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n            case CssTokenizer.TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != CssTokenizer.TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          valStack.push(new Css.HexColor(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          if (Exprs.isViewportRelativeLengthUnit(token.text)) {\n            // Treat numeric value with viewport unit as numeric in expr.\n            valStack.push(\n              new Css.Expr(\n                new Exprs.Numeric(handler.getScope(), token.num, token.text),\n              ),\n            );\n          } else {\n            valStack.push(new Css.Numeric(token.num, token.text));\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URANGE:\n          valStack.push(new Css.URange(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"calc\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == CssTokenizer.TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == CssTokenizer.TokenType.SEMICOL ||\n              token1.type == CssTokenizer.TokenType.EOF ||\n              token1.type == CssTokenizer.TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case CssTokenizer.TokenType.NUM:\n            case CssTokenizer.TokenType.NUMERIC:\n            case CssTokenizer.TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          } else {\n            this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n            continue;\n          }\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          if (parsingStyleAttr) {\n            return true;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == CssTokenizer.TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else if (\n              this.exprContext === ExprContext.SUPPORTS &&\n              token.text.toLowerCase() === \"not\" &&\n              valStack[valStack.length - 1] !== OP_MEDIA_AND &&\n              valStack[valStack.length - 1] !== OP_MEDIA_OR &&\n              (token1.type === CssTokenizer.TokenType.O_PAR ||\n                token1.type === CssTokenizer.TokenType.FUNC)\n            ) {\n              // for `@supports not (...)`\n              valStack.push(-OP_MEDIA_NOT);\n              tokenizer.consume();\n              continue;\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports selector(...)`\n            valStack.push(this.readSupportsTest(token));\n            this.actions = actionsExprOp;\n            continue;\n          }\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (\n            token.type != CssTokenizer.TokenType.INT ||\n            token.precededBySpace\n          ) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          // `and` or `or` operator in `@media` or `@supports`\n          if (\n            token.text.toLowerCase() === \"and\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_OR &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else if (\n            token.text.toLowerCase() === \"or\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_AND &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_OR, token);\n            valStack.push(OP_MEDIA_OR);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            this.actions = actionsPropVal;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n              // `@media ...;` and `@supports ...;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports (...)`\n            const supportsTest = this.readSupportsTest(token);\n            if (supportsTest) {\n              valStack.push(supportsTest);\n              this.actions = actionsExprOp;\n              continue;\n            }\n          }\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR ||\n                token.type == CssTokenizer.TokenType.URL\n              ) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == CssTokenizer.TokenType.SEMICOL ||\n                  token.type == CssTokenizer.TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == CssTokenizer.TokenType.STR ||\n                      token.type == CssTokenizer.TokenType.URL) &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case CssTokenizer.TokenType.STR:\n                case CssTokenizer.TokenType.URL:\n                  if (\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  continue;\n                case CssTokenizer.TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == CssTokenizer.TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"supports\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.SUPPORTS;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == CssTokenizer.TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == CssTokenizer.TokenType.COLON &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == CssTokenizer.TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (\n            this.errorBrackets.length == 0 &&\n            token.type == CssTokenizer.TokenType.C_BRC\n          ) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          if (parsingFunctionParam) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n          }\n          return true;\n        default:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            return false;\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else if (token.type === CssTokenizer.TokenType.O_BRC) {\n              // `@media {...}` and `@supports {...}` should be ok\n              handler.startMediaRule(valStack.pop() as Css.Expr);\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n              tokenizer.consume();\n              continue;\n            } else if (token.type === CssTokenizer.TokenType.SEMICOL) {\n              // `@media;` and `@supports;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    throw new Error(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.ajax(url).then((xhr) => {\n        if (!xhr.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            xhr.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n\n/**\n * @return val\n */\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName: string,\n): Css.Val {\n  if (val.isExpr()) {\n    try {\n      return evaluateExprToCSS(context, (val as Css.Expr).expr, propName);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return Css.empty;\n  }\n  return val;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export interface ElementStyle {}\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(element: Element, styles: { [key: string]: Css.Val });\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\" units or a number.\n     * @return value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string | number): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    createJustificationAdjustmentElement(\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n      vertical: boolean,\n    ): HTMLElement;\n    addAndAdjustJustificationElement(\n      nodeContext: Vtree.NodeContext,\n      insertAfter: boolean,\n      node: Node,\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n    ): HTMLElement;\n    compensateJustificationLineHeight(\n      span: Element,\n      br: Element,\n      nodeContext: Vtree.NodeContext,\n    ): void;\n    /**\n     * Fix justification of the last line of text broken across pages (if\n     * needed).\n     */\n    fixJustificationIfNeeded(\n      nodeContext: Vtree.NodeContext,\n      endOfColumn: boolean,\n    ): void;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n      edge: number;\n      checkPoint: Vtree.NodeContext | null;\n    };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type Response = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: object;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n    pageType: string | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    /**\n     * Walk up NodeContext tree (starting from itself) and call the callback for\n     * each block.\n     */\n    walkUpBlocks(callback: (p1: NodeContext) => any): void;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\n/**\n * @returns string\n */\nexport function restoreOriginalText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\n/**\n * @returns string\n */\nexport function restoreNewText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport {\n  CssStyler,\n  PageFloats,\n  PseudoElement,\n  Selectors,\n  Vtree,\n  XmlDoc,\n} from \"./types\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isBlankPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Zoom page.\n   * @param scale Factor to which the page will be scaled.\n   */\n  zoom(scale: number) {\n    Base.setCSSProperty(this.container, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Returns the page area element.\n   */\n  getPageAreaElement(): HTMLElement {\n    return this.pageAreaElement || this.container;\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n    case \"break-spaces\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace: Whitespace): boolean {\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.IGNORE:\n      return !!text.match(/^\\s*$/);\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t\\f]*$/);\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n  }\n  throw new Error(`Unexpected whitespace: ${whitespace}`);\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    (nps1.node === nps2.node ||\n      // Fix for issue #869\n      (!!nps1.shadowContext &&\n        !!nps2.shadowContext &&\n        nps1.shadowType === Vtree.ShadowType.ROOTLESS &&\n        nps2.shadowType === Vtree.ShadowType.ROOTLESS &&\n        (nps1.node as Element)?.outerHTML ===\n          (nps2.node as Element)?.outerHTML)) &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: CssStyler.AbstractStyler,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: Vtree.ShadowContext,\n  sc2: Vtree.ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: Vtree.ShadowContext;\n  nodeShadow: Vtree.ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n  pageType: string | null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n    this.pageType = parent ? parent.pageType : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      (nc.shadowContext?.styler as PseudoElement.PseudoelementStyler)?.style?.[\n        \"_pseudos\"\n      ]\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Walk up NodeContext tree (starting from itself) and call the callback for\n   * each block.\n   */\n  walkUpBlocks(callback: (p1: NodeContext) => any) {\n    let nodeContext: NodeContext = this;\n    while (nodeContext) {\n      if (!nodeContext.inline) {\n        callback(nodeContext);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startSide: string = \"any\";\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startSide = this.startSide;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n  isBlankPage: boolean = false;\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.isBlankPage = this.isBlankPage;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page\n      // Removed:\n      //   || this.highestSeenOffset !== other.highestSeenOffset\n      // to prevent unnecessary re-layout (Issue #681-case2)\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return \"any\";\n    }\n    return flowPos.startSide;\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical ? box.top : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical ? box.bottom : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      const outerExtent =\n        extent +\n        this.marginLeft +\n        this.marginRight +\n        this.paddingLeft +\n        this.paddingRight +\n        this.borderLeft +\n        this.borderRight;\n      this.setHorizontalPosition(\n        start + outerExtent * this.getBoxDir(),\n        extent,\n      );\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setVerticalPosition(start, extent);\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      if (this.elem.lastChild instanceof Text) {\n        this.elem.lastChild.textContent += str;\n        return;\n      }\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  /** @override */\n  visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /** @override */\n  visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.empty &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    !Css.isDefaultingValue(val)\n  );\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssCascade } from \"./types\";\n\nexport interface ElementStyle extends CssCascade.ElementStyle {}\n\nexport const inheritedProps = {\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant-ligatures\": true,\n  \"font-variant-caps\": true,\n  \"font-variant-numeric\": true,\n  \"font-variant-east-asian\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  \"hanging-punctuation\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  quotes: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"shape-rendering\": true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-orientation\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-spacing\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"box-decoration-break\",\n  // TODO: box-decoration-break should not be inherited.\n  // https://github.com/vivliostyle/vivliostyle.js/issues/259\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(context: Exprs.Context, propName: string): Css.Val {\n    return CssParser.evaluateCSSToCSS(context, this.value, propName);\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  /**\n   * @override\n   */\n  getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  /**\n   * @override\n   */\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  /**\n   * @override\n   */\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    try {\n      return !!this.condition.evaluate(context);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return false;\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((tv == null || av.priority > tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) == \"_\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) != \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name];\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\n/**\n * @return void\n */\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): any {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyleMap }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyleMap;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target as ElementStyleMap,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const av = getProp(style, prop).increaseSpecificity(specificity);\n      const tv = getProp(target, prop);\n      setProp(target, prop, cascadeValues(context, tv, av));\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    if (!cascval.value.isNumeric()) {\n      // FIXME: cascval may be Ident value e.g. \"smaller\"\n      return Exprs.defaultUnitSizes[\"em\"];\n    }\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit == \"em\" ||\n      numeric.unit == \"ex\" ||\n      numeric.unit == \"rem\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    } else if (numeric.unit == \"%\") {\n      if (this.propName === \"line-height\") {\n        return numeric;\n      }\n      const unit = this.propName.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      return new Css.Numeric(numeric.num, unit);\n    }\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = CssParser.evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(public readonly epubTypePatt: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem && cascadeInstance.currentLocalName == \"a\") {\n      const href = elem.getAttribute(\"href\");\n      if (href && href.match(/^#/)) {\n        const id = href.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (target) {\n          const epubType = target.getAttributeNS(Base.NS.epub, \"type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.hasAttributeNS(this.ns, this.name)\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.getAttributeNS(this.ns, this.name) ==\n        this.value\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const ns = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (ns && supportedNamespaces[ns]) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const attr = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (attr && attr.match(this.regexp)) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(public readonly a: number, public readonly b: number) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\nexport class NegateActionsSet extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstAction: CascadeAction;\n\n  constructor(list: ChainedAction[]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    this.firstAction = chainActions(list, this.checkAppliedAction);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.firstAction.apply(cascadeInstance);\n    if (!this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return (this.firstAction as ChainedAction).getPriority();\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: any): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CascadeInstance,\n  ): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n    const c = new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n      case \"first-letter\":\n        stringValue = this.element.textContent.trim().replace(/\\s+/g, \" \");\n        if (pseudoName === \"first-letter\") {\n          const r = stringValue.match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val: Css.Val = pseudos?.[pseudoName]?.[\"content\"]?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n    }\n    Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return new Css.Str(\"\");\n  }\n}\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 1048576;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  previousPageType: string | null = null;\n  firstPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    if (this.counters[counterName]) {\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal = Css.ident.inline;\n    const display = props[\"display\"];\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    let floatVal = Css.ident.inline;\n    const float = props[\"float\"];\n    if (float) {\n      floatVal = float.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"];\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"ua-list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"ua-list-item\"] = 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!resetMap) {\n          resetMap = {};\n        }\n        resetMap[\"ua-list-item\"] = (this.currentElement as any).value - 1;\n      }\n    }\n    if (this.currentElement?.parentNode.nodeType === Node.DOCUMENT_NODE) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      // `counter-reset: footnote 0` is implicitly applied on the root element\n      if (resetMap[\"footnote\"] === undefined) {\n        resetMap[\"footnote\"] = 0;\n      }\n    }\n    if (floatVal === Css.ident.footnote) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      // `counter-increment: footnote 1` is implicitly applied on the\n      // element (or pseudo element) with `float: footnote`,\n      // unless `counter-increment: footnote` is explicitly specified\n      // on the element (parent element of the pseudo element).\n      if (incrementMap[\"footnote\"] === undefined) {\n        const incrPropValue = this.currentStyle[\"counter-increment\"]?.value;\n        if (\n          !incrPropValue ||\n          !(\n            incrPropValue === Css.ident.footnote ||\n            incrPropValue.values?.includes(Css.ident.footnote)\n          )\n        ) {\n          incrementMap[\"footnote\"] = 1;\n        }\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"ua-list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet: CascadeValue = props[\"string-set\"];\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(name, stringValue, this);\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    if (pseudoprops[\"content\"]) {\n      pseudoprops[\"content\"] = pseudoprops[\"content\"].filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack =\n      this.followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts =\n      (this.currentFollowingSiblingTypeCounts =\n        followingSiblingTypeCountsStack[\n          followingSiblingTypeCountsStack.length - 1\n        ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"];\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (\n          quotesVal === Css.ident.auto ||\n          quotesVal === Css.ident.initial\n        ) {\n          this.quotes = [\n            new Css.Str(\"\\u201c\"),\n            new Css.Str(\"\\u201d\"),\n            new Css.Str(\"\\u2018\"),\n            new Css.Str(\"\\u2019\"),\n          ];\n          // FIXME: quotes:auto should be based on the content language\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (\n            (pseudoName === \"before\" || pseudoName === \"after\") &&\n            !Vtree.nonTrivialContent(pseudoProps[\"content\"]?.value)\n          ) {\n            delete pseudos[pseudoName];\n          } else if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(visitor, elementStyle): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName)) {\n        elementStyle[propName] = elementStyle[propName].filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\", // content\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n      ? uaBaseCascade.clone()\n      : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    if (name) {\n      this.specificity += 1;\n    }\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by .${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by :${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|s)${Base.escapeRegExp(value)}(\\$|s)`);\n          this.chain.push(new CheckTargetEpubTypeAction(patt));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fais\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default:\n        Logging.logger.warn(`unknown pseudo-class selector: ${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 256;\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          Logging.logger.warn(\n            `Double pseudoelement ::${this.pseudoelement}::${name}`,\n          );\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              Logging.logger.warn(\n                `Double pseudoelement ::${this.pseudoelement}::${name}`,\n              );\n              this.chain.push(new CheckConditionAction(\"\")); // always fails\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(`Unrecognized pseudoelement: ::${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 1;\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case CssTokenizer.TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case CssTokenizer.TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case CssTokenizer.TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case CssTokenizer.TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          Logging.logger.warn(\"Unsupported :: attr selector op:\", value);\n          action = new CheckConditionAction(\"\"); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(\"Unsupported attr selector:\", op);\n        action = new CheckConditionAction(\"\"); // always fails\n    }\n    this.chain.push(action);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      const specificity: number = this.specificity + this.cascade.nextOrder();\n      this.processChain(this.makeApplyRuleAction(specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    switch (funcName) {\n      case \"not\": {\n        const notParserHandler = new NotParameterParserHandler(this);\n        notParserHandler.startSelectorRule();\n        this.owner.pushHandler(notParserHandler);\n        break;\n      }\n      default:\n        // TODO\n        break;\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\nexport class NotParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    if (funcName == \"not\") {\n      this.reportAndSkip(\"E_CSS_UNEXPECTED_NOT\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_NEXT_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    if (this.chain && this.chain.length > 0) {\n      this.parentChain.push(new NegateActionsSet(this.chain));\n    }\n    this.parent.specificity += this.specificity;\n    this.owner.popHandler();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.owner.popHandler();\n  }\n}\n\n/**\n * @override\n */\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const av = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, av);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver\n{\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (\n      writingMode &&\n      writingMode !== Css.ident.inherit &&\n      writingMode !== Css.ident.revert &&\n      writingMode !== Css.ident.unset\n    ) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (\n      direction &&\n      direction !== Css.ident.inherit &&\n      direction !== Css.ident.revert &&\n      direction !== Css.ident.unset\n    ) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n    ? couplingMapHorRtl\n    : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    return getComputedValue(inlineSizeName);\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition =\n  PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext\n{\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent =\n        this.parent.getLastFollowingFloatInFragments(float);\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const logicalFloatSide2 = this.toLogical(fragment.floatSide);\n        if (logicalFloatSide2 === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogical(float.floatSide);\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogical(fragment.floatSide);\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical ? limits.top : limits.left;\n      case \"inline-end\":\n        return this.container.vertical ? limits.bottom : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogical(f.floatSide);\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    let logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSide]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSide === \"block-start\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-start\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSide === \"block-end\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = inlineEnd - inlineStart;\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSide === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSide = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSide = \"block-start\";\n          } else {\n            logicalFloatSide = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSide]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSide = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSide === \"inline-start\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize = inlineEnd - inlineStart;\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n    switch (logicalFloatSide) {\n      case \"inline-start\":\n      case \"block-start\":\n      case \"snap-block\":\n        area.setInlinePosition(inlineStart, inlineSize);\n        area.setBlockPosition(blockStart, blockSize);\n        break;\n      case \"inline-end\":\n      case \"block-end\":\n        area.setInlinePosition(inlineEnd - outerInlineSize, inlineSize);\n        area.setBlockPosition(\n          blockEnd - outerBlockSize * area.getBoxDir(),\n          blockSize,\n        );\n        break;\n      default:\n        throw new Error(`unknown float direction: ${floatSide}`);\n    }\n    return logicalFloatSide;\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogical(floatSide);\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /**\n   * @override\n   */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  /**\n   * @override\n   */\n  isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  /**\n   * @override\n   */\n  getOrder(): number {\n    return Infinity;\n  }\n\n  /**\n   * @override\n   */\n  shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint\n{\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy\n{\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext =\n      pageFloatLayoutContext.getPageFloatLayoutContext(floatReference);\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /**\n   * @override\n   */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartSideValue(breakValue: string | null): string {\n  switch (breakValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return breakValue;\n    default:\n      return \"any\";\n  }\n}\n\nexport function startSideValueToBreakValue(\n  startSideValue: string,\n): string | null {\n  switch (startSideValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return startSideValue;\n    default:\n      return null;\n  }\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display.toString();\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Ident): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDislayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Ident } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if (\n    (float && float !== Css.ident.none && !Css.isDefaultingValue(float)) ||\n    isRoot\n  ) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDislayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident | string): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident | string): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none && !Css.isDefaultingValue(float)) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible &&\n      !Css.isDefaultingValue(overflow)) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Display from \"./display\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Though method used to be used as a workaround for Chrome bug, it seems that\n * the bug has been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method as a workaround for Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function fixBoxesForNode(\n  clientLayout: Vtree.ClientLayout,\n  boxes: Vtree.ClientRect[],\n  node: Node,\n): Vtree.ClientRect[] {\n  const fullRange = node.ownerDocument.createRange();\n  fullRange.setStart(node, 0);\n  fullRange.setEnd(node, node.textContent.length);\n  const fullBoxes = clientLayout.getRangeClientRects(fullRange);\n  const result = [];\n  for (const box of boxes) {\n    let k: number;\n    for (k = 0; k < fullBoxes.length; k++) {\n      const fullBox = fullBoxes[k];\n      if (\n        box.top >= fullBox.top &&\n        box.bottom <= fullBox.bottom &&\n        Math.abs(box.left - fullBox.left) < 1\n      ) {\n        result.push({\n          top: box.top,\n          left: fullBox.left,\n          bottom: box.bottom,\n          right: fullBox.right,\n        });\n        break;\n      }\n    }\n    if (k == fullBoxes.length) {\n      Logging.logger.warn(\"Could not fix character box\");\n      result.push(box);\n    }\n  }\n  return result;\n}\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n  const element = node.nodeType == 1 ? (node as Element) : node.parentElement;\n  if (element && element instanceof HTMLElement) {\n    if (element.localName === \"rt\" && element.style[\"zoom\"]) {\n      // \"zoom\" is set in fixRubyTextFontSize() to fix the issue #673 for Chrome.\n      // when zoom is set, it is hard to get the edge value, so return NaN.\n      // (Fix for issues #804 and #808)\n      return NaN;\n    }\n    if (/^([\\d\\.]|super|(text-)?top)/.test(element.style.verticalAlign)) {\n      // (Fix for issue #811)\n      return NaN;\n    }\n  }\n  if (node.nodeType == 1) {\n    if (nodeContext.after || !nodeContext.inline) {\n      const cbox = clientLayout.getElementClientRect(node as Element);\n      if (\n        cbox.left === 0 &&\n        cbox.top === 0 &&\n        cbox.right === 0 &&\n        cbox.bottom === 0\n      ) {\n        // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n        // (Fix for issue #802)\n        return NaN;\n      }\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    if (vertical && Base.checkVerticalBBoxBug(document.body)) {\n      boxes = fixBoxesForNode(clientLayout, boxes, node);\n    }\n    boxes = boxes.filter((box) => box.right > box.left && box.bottom > box.top);\n    if (!boxes.length) {\n      return NaN;\n    }\n    if (vertical) {\n      edge = Math.min.apply(\n        null,\n        boxes.map((box) => box.left),\n      );\n    } else {\n      edge = Math.max.apply(\n        null,\n        boxes.map((box) => box.bottom),\n      );\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  let lastChild: Node;\n  while ((lastChild = parentNode.lastChild) != viewNode) {\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  const viewNode = nodeContext?.viewNode;\n  return viewNode instanceof Element && isSpecial(viewNode);\n}\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  return (\n    display !== \"inline\" &&\n    (Display.isInlineLevel(display) || Display.isRubyInternalDisplay(display))\n  );\n}\n\nexport function findAncestorSpecialInlineNodeContext(\n  nodeContext: Vtree.NodeContext,\n): Vtree.NodeContext | null {\n  for (let p = nodeContext.parent; p; p = p.parent) {\n    if (p.display !== \"inline\" && Display.isInlineLevel(p.display)) {\n      return p;\n    }\n  }\n  return null;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition\n{\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition\n{\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    // Fix for issue #740\n    if (\n      nodeContext.shadowType === Vtree.ShadowType.ROOTLESS &&\n      LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      return;\n    }\n    let node = nodeContext.viewNode;\n    if (node.parentElement?.localName === \"viv-ts-inner\") {\n      // special element for text-spacing\n      node = node.parentElement.parentElement;\n    }\n    const parentNode = node.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, node);\n    if (removeSelf) {\n      parentNode.removeChild(node);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.fixJustificationIfNeeded(nodeContext, true);\n      column.layoutContext.processFragmentedBlockEdge(\n        removeSelf ? nodeContext : nodeContext.parent,\n      );\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext =\n        nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"LayoutIterator\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  /**\n   * @override\n   */\n  startNonElementNode(state: LayoutIteratorState): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n","/**\n * Copyright 2021 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TextPolyfill - CSS text-spacing and hanging-punctuation support.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\n\ntype PropertyValue = string | number | Css.Val;\n\ntype HangingPunctuation = {\n  first: boolean;\n  end: boolean; // force-end or allow-end\n  allowEnd: boolean;\n  last: boolean;\n};\n\nconst HANGING_PUNCTUATION_NONE: HangingPunctuation = {\n  first: false,\n  end: false,\n  allowEnd: false,\n  last: false,\n};\n\nfunction hangingPunctuationFromPropertyValue(\n  value: PropertyValue,\n): HangingPunctuation {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n      ? Css.getName(value)\n      : Css.ident.none;\n\n  if (cssval === Css.ident.none) {\n    return HANGING_PUNCTUATION_NONE;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const hangingPunctuation: HangingPunctuation = Object.create(\n    HANGING_PUNCTUATION_NONE,\n  );\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"first\":\n          hangingPunctuation.first = true;\n          break;\n        case \"force-end\":\n          hangingPunctuation.end = true;\n          break;\n        case \"allow-end\":\n          hangingPunctuation.end = true;\n          hangingPunctuation.allowEnd = true;\n          break;\n        case \"last\":\n          hangingPunctuation.last = true;\n          break;\n      }\n    }\n  }\n  return hangingPunctuation;\n}\n\nfunction isHangingPunctuationNone(\n  hangingPunctuation: HangingPunctuation,\n): boolean {\n  return (\n    !hangingPunctuation.first &&\n    !hangingPunctuation.last &&\n    !hangingPunctuation.end\n  );\n}\n\ntype TextSpacing = {\n  trimStart: boolean; // trim-start or space-first (not space-start)\n  spaceFirst: boolean; // space-first (trim-start except at first line)\n  trimEnd: boolean; // trim-end or allow-end (not space-end)\n  allowEnd: boolean; // allow-end (not force-end)\n  trimAdjacent: boolean;\n  ideographAlpha: boolean;\n  ideographNumeric: boolean;\n};\n\n/**\n * text-spacing: none\n * none = space-start space-end space-adjacent\n */\nconst TEXT_SPACING_NONE: TextSpacing = {\n  trimStart: false,\n  spaceFirst: false,\n  trimEnd: false,\n  allowEnd: false,\n  trimAdjacent: false,\n  ideographAlpha: false,\n  ideographNumeric: false,\n};\n\n/**\n * text-spacing: normal\n * normal = space-first trim-end trim-adjacent\n */\nconst TEXT_SPACING_NORMAL: TextSpacing = {\n  trimStart: true,\n  spaceFirst: true,\n  trimEnd: true,\n  allowEnd: false,\n  trimAdjacent: true,\n  ideographAlpha: false,\n  ideographNumeric: false,\n};\n/**\n * text-spacing: auto\n * auto = trim-start trim-end trim-adjacent ideograph-alpha ideograph-numeric\n */\nconst TEXT_SPACING_AUTO: TextSpacing = {\n  trimStart: true,\n  spaceFirst: false,\n  trimEnd: true,\n  allowEnd: false,\n  trimAdjacent: true,\n  ideographAlpha: true,\n  ideographNumeric: true,\n};\n\nfunction textSpacingFromPropertyValue(value: PropertyValue): TextSpacing {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n      ? Css.getName(value)\n      : Css.ident.normal;\n\n  if (cssval === Css.ident.normal) {\n    return TEXT_SPACING_NORMAL;\n  }\n  if (cssval === Css.ident.none) {\n    return TEXT_SPACING_NONE;\n  }\n  if (cssval === Css.ident.auto) {\n    return TEXT_SPACING_AUTO;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const textSpacing: TextSpacing = Object.create(TEXT_SPACING_NORMAL);\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"trim-start\":\n          textSpacing.trimStart = true;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-start\":\n          textSpacing.trimStart = false;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-first\":\n          textSpacing.trimStart = true;\n          textSpacing.spaceFirst = true;\n          break;\n        case \"trim-end\":\n          textSpacing.trimEnd = true;\n          textSpacing.allowEnd = false;\n          break;\n        case \"space-end\":\n          textSpacing.trimEnd = false;\n          textSpacing.allowEnd = false;\n          break;\n        case \"allow-end\":\n          textSpacing.trimEnd = true;\n          textSpacing.allowEnd = true;\n          break;\n        case \"trim-adjacent\":\n          textSpacing.trimAdjacent = true;\n          break;\n        case \"space-adjacent\":\n          textSpacing.trimAdjacent = false;\n          break;\n        case \"ideograph-alpha\":\n          textSpacing.ideographAlpha = true;\n          break;\n        case \"ideograph-numeric\":\n          textSpacing.ideographNumeric = true;\n          break;\n      }\n    }\n  }\n\n  return textSpacing;\n}\n\nfunction isTextSpacingNone(textSpacing: TextSpacing): boolean {\n  return (\n    !textSpacing.trimStart &&\n    !textSpacing.trimEnd &&\n    !textSpacing.trimAdjacent &&\n    !textSpacing.ideographAlpha &&\n    !textSpacing.ideographNumeric\n  );\n}\n\nfunction normalizeLang(lang: string): string | null {\n  if (lang) {\n    // Normalize CJK lang\n    lang = lang.toLowerCase();\n    if (/^zh\\b.*-(hant|tw|hk)\\b/.test(lang)) {\n      return \"zh-hant\";\n    }\n    if (/^zh\\b/.test(lang)) {\n      return \"zh-hans\";\n    }\n    if (/^ja\\b/.test(lang)) {\n      return \"ja\";\n    }\n    if (/^ko\\b/.test(lang)) {\n      return \"ko\";\n    }\n    return lang;\n  }\n  return null;\n}\n\nconst embeddedContentTags = {\n  audio: true,\n  canvas: true,\n  embed: true,\n  iframe: true,\n  img: true,\n  math: true,\n  object: true,\n  picture: true,\n  svg: true,\n  video: true,\n};\n\nclass TextSpacingPolyfill {\n  getPolyfilledInheritedProps() {\n    return [\"hanging-punctuation\", \"text-spacing\"];\n  }\n\n  preprocessSingleDocument(document: Document): void {\n    if (!document.body) {\n      return;\n    }\n    this.preprocessForTextSpacing(document.body);\n  }\n\n  preprocessForTextSpacing(element: Element): void {\n    // Split text nodes by punctuations and ideograph/non-ideograph boundary\n    const nodeIter = element.ownerDocument.createNodeIterator(\n      element,\n      NodeFilter.SHOW_TEXT,\n    );\n    for (let node = nodeIter.nextNode(); node; node = nodeIter.nextNode()) {\n      if (\n        node.parentElement.namespaceURI !== Base.NS.XHTML ||\n        node.parentElement.dataset?.[\"mathTypeset\"] === \"true\"\n      ) {\n        continue;\n      }\n      const textArr = node.textContent\n        .replace(\n          /(?![()\\[\\]{}])[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}、。，．：；､｡]\\p{M}*(?=\\P{M})|.(?=(?![()\\[\\]{}])[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}、。，．：；､｡])|(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*(?=(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}])|(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}]\\p{M}*(?=(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF])/gsu,\n          \"$&\\x00\",\n        )\n        .split(\"\\x00\");\n\n      if (textArr.length > 1) {\n        const lastIndex = textArr.length - 1;\n        for (let i = 0; i < lastIndex; i++) {\n          node.parentNode.insertBefore(\n            document.createTextNode(textArr[i]),\n            node,\n          );\n        }\n        node.textContent = textArr[lastIndex];\n      }\n    }\n  }\n\n  processGeneratedContent(\n    element: HTMLElement,\n    textSpacingVal: Css.Val,\n    hangingPunctuationVal: Css.Val,\n    lang: string,\n    vertical: boolean,\n  ): void {\n    lang = normalizeLang(lang);\n    const textSpacing = textSpacingFromPropertyValue(textSpacingVal);\n    const hangingPunctuation = hangingPunctuationFromPropertyValue(\n      hangingPunctuationVal,\n    );\n\n    if (\n      isHangingPunctuationNone(hangingPunctuation) &&\n      isTextSpacingNone(textSpacing)\n    ) {\n      return;\n    }\n\n    this.preprocessForTextSpacing(element);\n\n    const whiteSpaceSave = element.style.whiteSpace;\n    if ((vertical ? element.offsetHeight : element.offsetWidth) === 0) {\n      // Prevent wrong line wrapping\n      element.style.whiteSpace = \"pre\";\n    }\n\n    const nodeIter = element.ownerDocument.createNodeIterator(\n      element,\n      NodeFilter.SHOW_TEXT,\n    );\n    let prevNode: Node = null;\n    let nextNode: Node = null;\n    for (let node = nodeIter.nextNode(); node; node = nextNode) {\n      nextNode = nodeIter.nextNode();\n      const isFirstInBlock = !prevNode;\n      const isFirstAfterForcedLineBreak =\n        !prevNode || /\\n$/.test(prevNode.textContent);\n      const isLastBeforeForcedLineBreak =\n        !nextNode || /^\\n/.test(nextNode.textContent);\n      const isLastInBlock = !nextNode;\n      this.processTextSpacing(\n        node,\n        isFirstInBlock,\n        isFirstAfterForcedLineBreak,\n        isLastBeforeForcedLineBreak,\n        isLastInBlock,\n        prevNode,\n        nextNode,\n        textSpacing,\n        hangingPunctuation,\n        lang,\n        vertical,\n      );\n      prevNode = node;\n    }\n\n    element.style.whiteSpace = whiteSpaceSave;\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): void {\n    const isFirstFragment = !nodeContext || nodeContext.fragmentIndex === 1;\n    const isAfterForcedLineBreak =\n      isFirstFragment || checkIfAfterForcedLineBreak();\n\n    function checkIfAfterForcedLineBreak(): boolean {\n      let p = checkPoints[0];\n      let prevNode: Node;\n      while (p && p.inline) {\n        prevNode = p.sourceNode?.previousSibling;\n        if (prevNode) {\n          if (\n            prevNode instanceof Text &&\n            /^\\s*$/.test(prevNode.textContent) &&\n            p.whitespace !== Vtree.Whitespace.PRESERVE\n          ) {\n            prevNode = prevNode.previousSibling;\n          }\n          if (prevNode) {\n            break;\n          }\n        }\n        p = p.parent;\n      }\n\n      while (prevNode) {\n        if (prevNode instanceof Element) {\n          if (prevNode.localName === \"br\") {\n            return true;\n          }\n        } else if (prevNode instanceof Text) {\n          if (p.whitespace === Vtree.Whitespace.PRESERVE) {\n            if (/\\n$/.test(prevNode.textContent)) {\n              return true;\n            }\n          } else if (p.whitespace === Vtree.Whitespace.NEWLINE) {\n            if (/\\n\\s*$/.test(prevNode.textContent)) {\n              return true;\n            }\n          }\n        }\n        prevNode = prevNode.lastChild;\n      }\n      return false;\n    }\n\n    for (let i = 0; i < checkPoints.length; i++) {\n      const p = checkPoints[i];\n      if (\n        !p.after &&\n        p.inline &&\n        !p.display &&\n        p.parent &&\n        p.viewNode.parentNode &&\n        p.viewNode.nodeType === Node.TEXT_NODE &&\n        p.viewNode.textContent.trimStart().length > 0\n      ) {\n        const lang = normalizeLang(\n          p.lang ??\n            p.parent.lang ??\n            nodeContext?.lang ??\n            nodeContext?.parent?.lang,\n        );\n        const textSpacing = textSpacingFromPropertyValue(\n          p.inheritedProps[\"text-spacing\"],\n        );\n        const hangingPunctuation = hangingPunctuationFromPropertyValue(\n          p.inheritedProps[\"hanging-punctuation\"],\n        );\n\n        if (\n          isHangingPunctuationNone(hangingPunctuation) &&\n          isTextSpacingNone(textSpacing)\n        ) {\n          continue;\n        }\n        if (/\\b(flex|grid)\\b/.test(p.parent.display)) {\n          // Cannot process if parent is flex or grid. (Issue #926)\n          continue;\n        }\n\n        let prevNode: Node = null;\n        let nextNode: Node = null;\n        let isFirstInBlock = i === 0 && isFirstFragment;\n        let isFirstAfterForcedLineBreak = i === 0 && isAfterForcedLineBreak;\n        let isLastBeforeForcedLineBreak = false;\n        let isLastInBlock = false;\n\n        function checkIfFirstAfterForcedLineBreak(\n          prevP: Vtree.NodeContext,\n        ): boolean {\n          if (prevP.viewNode instanceof Element) {\n            return prevP.viewNode.localName === \"br\";\n          }\n          if (prevP.viewNode instanceof Text) {\n            if (prevP.whitespace === Vtree.Whitespace.PRESERVE) {\n              if (/\\n$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            } else if (prevP.whitespace === Vtree.Whitespace.NEWLINE) {\n              if (/\\n\\s*$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            }\n            if (prevP.viewNode.previousElementSibling?.localName === \"br\") {\n              return Vtree.canIgnore(prevP.viewNode, prevP.whitespace);\n            }\n          }\n          return false;\n        }\n\n        function checkIfLastBeforeForcedLineBreak(\n          nextP: Vtree.NodeContext,\n        ): boolean {\n          if (nextP.viewNode instanceof Element) {\n            return nextP.viewNode.localName === \"br\";\n          }\n          if (nextP.viewNode instanceof Text) {\n            if (nextP.whitespace === Vtree.Whitespace.PRESERVE) {\n              if (/^\\n/.test(nextP.viewNode.textContent)) {\n                return true;\n              }\n            } else if (nextP.whitespace === Vtree.Whitespace.NEWLINE) {\n              if (/^\\s*\\n/.test(nextP.viewNode.textContent)) {\n                return true;\n              }\n            }\n            if (nextP.viewNode.nextElementSibling?.localName === \"br\") {\n              return Vtree.canIgnore(nextP.viewNode, nextP.whitespace);\n            }\n          }\n          return false;\n        }\n\n        for (let prev = i - 1; prev >= 0; prev--) {\n          const prevP = checkPoints[prev];\n          if (checkIfFirstAfterForcedLineBreak(prevP)) {\n            isFirstAfterForcedLineBreak = true;\n            break;\n          }\n          if (\n            !prevP.display &&\n            prevP.viewNode.nodeType === Node.TEXT_NODE &&\n            prevP.viewNode.textContent.length > 0\n          ) {\n            prevNode = prevP.viewNode;\n            break;\n          }\n          if (\n            (prevP.display && !/^(inline|ruby)\\b/.test(prevP.display)) ||\n            (prevP.viewNode instanceof Element &&\n              (prevP.viewNode.localName === \"br\" ||\n                embeddedContentTags[prevP.viewNode.localName]))\n          ) {\n            break;\n          }\n          if (prev === 0 && isFirstFragment) {\n            isFirstInBlock = true;\n            isFirstAfterForcedLineBreak = true;\n          }\n        }\n        for (let next = i + 1; next < checkPoints.length; next++) {\n          const nextP = checkPoints[next];\n          if (checkIfLastBeforeForcedLineBreak(nextP)) {\n            isLastBeforeForcedLineBreak = true;\n            break;\n          }\n          if (\n            nextP.viewNode !== p.viewNode &&\n            !nextP.display &&\n            nextP.viewNode.nodeType === Node.TEXT_NODE &&\n            nextP.viewNode.textContent.length > 0\n          ) {\n            nextNode = nextP.viewNode;\n            break;\n          }\n          if (\n            (nextP.display && !/^(inline|ruby)\\b/.test(nextP.display)) ||\n            (nextP.viewNode instanceof Element &&\n              (nextP.viewNode.localName === \"br\" ||\n                embeddedContentTags[nextP.viewNode.localName]))\n          ) {\n            break;\n          }\n          if (next === checkPoints.length - 1) {\n            isLastInBlock = true;\n            isLastBeforeForcedLineBreak = true;\n          }\n        }\n        this.processTextSpacing(\n          p.viewNode,\n          isFirstInBlock,\n          isFirstAfterForcedLineBreak,\n          isLastBeforeForcedLineBreak,\n          isLastInBlock,\n          prevNode,\n          nextNode,\n          textSpacing,\n          hangingPunctuation,\n          lang,\n          p.vertical,\n        );\n      }\n    }\n  }\n\n  private processTextSpacing(\n    textNode: Node,\n    isFirstInBlock: boolean,\n    isFirstAfterForcedLineBreak: boolean,\n    isLastBeforeForcedLineBreak: boolean,\n    isLastInBlock: boolean,\n    prevNode: Node,\n    nextNode: Node,\n    textSpacing: TextSpacing,\n    hangingPunctuation: HangingPunctuation,\n    lang: string,\n    vertical: boolean,\n  ): void {\n    const text = textNode.textContent;\n    const document = textNode.ownerDocument;\n    let currRange: Range;\n    let prevRange: Range;\n    let nextRange: Range;\n\n    function isAtStartOfLine(): boolean {\n      if (!prevNode) {\n        return false;\n      }\n      if (!currRange) {\n        currRange = document.createRange();\n        currRange.selectNode(textNode);\n      }\n      const rect = currRange.getClientRects()[0];\n      if (!prevRange) {\n        prevRange = document.createRange();\n        prevRange.selectNode(prevNode);\n      }\n      const prevRects = prevRange.getClientRects();\n      const prevRect = prevRects[prevRects.length - 1];\n      if (!rect || !prevRect) {\n        return false;\n      }\n      return vertical\n        ? rect.top < prevRect.top + prevRect.height - rect.width ||\n            rect.left + rect.width < prevRect.left + 1 ||\n            rect.left > prevRect.left + prevRect.width - 1\n        : rect.left < prevRect.left + prevRect.width - rect.height ||\n            rect.top > prevRect.top + prevRect.height - 1 ||\n            rect.top + rect.height < prevRect.top + 1;\n    }\n\n    function isAtEndOfLine(): boolean {\n      if (!nextNode) {\n        return false;\n      }\n      if (!currRange) {\n        currRange = document.createRange();\n        currRange.selectNode(textNode);\n      }\n      const rect = currRange.getClientRects()[0];\n      if (!nextRange) {\n        nextRange = document.createRange();\n        nextRange.selectNode(nextNode);\n      }\n      const nextRect = nextRange.getClientRects()[0];\n      if (!rect || !nextRect) {\n        return false;\n      }\n      return vertical\n        ? rect.top + rect.height > nextRect.top + rect.width ||\n            rect.left > nextRect.left + nextRect.width - 1 ||\n            rect.left + rect.width < nextRect.left + 1\n        : rect.left + rect.width > nextRect.left + rect.height ||\n            rect.top + rect.height < nextRect.top + 1 ||\n            rect.top > nextRect.top + nextRect.height - 1;\n    }\n\n    let punctProcessing = false;\n    let hangingFirst = false;\n    let hangingLast = false;\n    let hangingEnd = false;\n    let tagName: \"viv-ts-open\" | \"viv-ts-close\";\n\n    if (\n      isFirstInBlock &&\n      hangingPunctuation.first &&\n      /^[\\p{Ps}\\p{Pf}\\p{Pi}'\"]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: first\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n      hangingFirst = true;\n    } else if (\n      isLastInBlock &&\n      hangingPunctuation.last &&\n      /^[\\p{Pe}\\p{Pf}\\p{Pi}'\"]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: last\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hangingLast = true;\n    } else if (hangingPunctuation.end && /^[、。，．､｡]\\p{M}*$/u.test(text)) {\n      // hanging-punctuation: force-end | allow-end\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hangingEnd = true;\n    } else if (\n      (textSpacing.trimStart || textSpacing.trimAdjacent) &&\n      /^[‘“〝（［｛｟〈〈《「『【〔〖〘〚]\\p{M}*$/u.test(text)\n    ) {\n      // fullwidth opening punctuation\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n    } else if (\n      (textSpacing.trimEnd || textSpacing.trimAdjacent) &&\n      (/^[’”〞〟）］｝｠〉〉》」』】〕〗〙〛]\\p{M}*$/u.test(text) ||\n        (lang === \"zh-hans\" && /^[：；]\\p{M}*$/u.test(text)) ||\n        (lang !== \"zh-hant\" && /^[、。，．]\\p{M}*$/u.test(text)))\n    ) {\n      // fullwidth closing punctuation\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n    }\n\n    if (punctProcessing) {\n      if (textNode.parentElement.localName === \"viv-ts-inner\") {\n        // Already processed\n        return;\n      }\n      // Wrap the textNode as `<{tagName}><viv-ts-inner>{text}<viv-ts-inner></{tagName}>`\n      const outerElem = document.createElement(tagName);\n      const innerElem = document.createElement(\"viv-ts-inner\");\n      outerElem.appendChild(innerElem);\n      textNode.parentNode.insertBefore(outerElem, textNode);\n      innerElem.appendChild(textNode);\n\n      // Check if che punctuation is almost full width\n      const fontSize = parseFloat(\n        document.defaultView.getComputedStyle(outerElem).fontSize,\n      );\n      const isFullWidth =\n        (vertical ? innerElem.offsetHeight : innerElem.offsetWidth) >\n        fontSize * 0.7;\n\n      if (isFullWidth || hangingFirst || hangingLast || hangingEnd) {\n        if (tagName === \"viv-ts-open\") {\n          if (hangingFirst) {\n            outerElem.className = \"viv-hang-first\";\n          } else if (isFirstInBlock || isFirstAfterForcedLineBreak) {\n            if (textSpacing.trimStart && !textSpacing.spaceFirst) {\n              outerElem.className = \"viv-ts-trim\";\n            } else {\n              outerElem.className = \"viv-ts-space\";\n            }\n          } else if (!textSpacing.trimStart && isAtStartOfLine()) {\n            outerElem.className = \"viv-ts-space\";\n          } else if (\n            textSpacing.trimAdjacent &&\n            prevNode &&\n            /[\\p{Ps}\\p{Pi}\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000：；、。，．]\\p{M}*$/u.test(\n              prevNode.textContent,\n            )\n          ) {\n            outerElem.className = \"viv-ts-trim\";\n          } else {\n            outerElem.className = \"viv-ts-auto\";\n          }\n        } else if (tagName === \"viv-ts-close\") {\n          if (hangingLast) {\n            outerElem.className = isFullWidth\n              ? \"viv-hang-last\"\n              : \"viv-hang-last viv-hang-hw\";\n          } else if (isLastInBlock || isLastBeforeForcedLineBreak) {\n            if (hangingEnd) {\n              outerElem.className = isFullWidth\n                ? \"viv-hang-end\"\n                : \"viv-hang-end viv-hang-hw\";\n            } else if (textSpacing.trimEnd) {\n              outerElem.className = \"viv-ts-trim\";\n            } else {\n              outerElem.className = \"viv-ts-space\";\n            }\n          } else if (\n            nextNode &&\n            /^[\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000：；、。，．]/u.test(\n              nextNode.textContent,\n            )\n          ) {\n            if (isFullWidth && textSpacing.trimAdjacent) {\n              outerElem.className = \"viv-ts-trim\";\n            }\n          } else if (hangingEnd) {\n            const atEnd = isAtEndOfLine();\n            const atEndNoHang = atEnd && hangingPunctuation.allowEnd;\n            if (!atEndNoHang) {\n              outerElem.className = isFullWidth\n                ? \"viv-hang-end\"\n                : \"viv-hang-end viv-hang-hw\";\n            }\n            if (!isFullWidth) {\n              if (!atEnd && !isAtEndOfLine()) {\n                outerElem.className = \"\";\n              }\n            } else if (\n              atEndNoHang\n                ? textSpacing.trimEnd && !textSpacing.allowEnd\n                : !isAtEndOfLine()\n            ) {\n              outerElem.className = \"viv-ts-auto\";\n            } else if (!atEnd && hangingPunctuation.allowEnd) {\n              if (!textSpacing.trimEnd || textSpacing.allowEnd) {\n                outerElem.className = \"viv-ts-space\";\n                if (!isAtEndOfLine()) {\n                  if (textSpacing.trimEnd) {\n                    outerElem.className = \"viv-ts-auto\";\n                    if (!isAtEndOfLine()) {\n                      outerElem.className = \"viv-hang-end\";\n                    }\n                  } else {\n                    outerElem.className = \"viv-hang-end\";\n                  }\n                }\n              } else {\n                outerElem.className = \"viv-ts-auto\";\n                if (!isAtEndOfLine()) {\n                  outerElem.className = \"viv-hang-end\";\n                }\n              }\n            }\n          } else if (textSpacing.trimEnd) {\n            if (textSpacing.allowEnd && isAtEndOfLine()) {\n              outerElem.className = \"viv-ts-space\";\n            } else {\n              outerElem.className = \"viv-ts-auto\";\n            }\n          }\n        }\n      }\n    }\n\n    let spaceIdeoAlnumProcessing = false;\n\n    function checkUpright(elem: Element): boolean {\n      const style = elem?.ownerDocument.defaultView?.getComputedStyle(elem);\n      return (\n        !!style &&\n        (style.textOrientation === \"upright\" ||\n          style.textCombineUpright === \"all\" ||\n          style[\"-webkit-text-combine\"] === \"horizontal\")\n      );\n    }\n\n    if (textSpacing.ideographAlpha || textSpacing.ideographNumeric) {\n      if (\n        prevNode &&\n        /^(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]/u.test(text) &&\n        ((textSpacing.ideographAlpha &&\n          /(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}\\p{M}*$/u.test(\n            prevNode.textContent,\n          )) ||\n          (textSpacing.ideographNumeric &&\n            /(?![\\uFF01-\\uFF60])\\p{Nd}\\p{M}*$/u.test(prevNode.textContent))) &&\n        !(vertical && checkUpright(prevNode.parentElement))\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n      if (\n        nextNode &&\n        /(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*$/u.test(text) &&\n        ((textSpacing.ideographAlpha &&\n          /^(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}/u.test(\n            nextNode.textContent,\n          )) ||\n          (textSpacing.ideographNumeric &&\n            /^(?![\\uFF01-\\uFF60])\\p{Nd}/u.test(nextNode.textContent))) &&\n        !(vertical && checkUpright(nextNode.parentElement))\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode.nextSibling,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n    }\n  }\n\n  registerHooks() {\n    Plugin.registerHook(\n      Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n      this.getPolyfilledInheritedProps.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT,\n      this.preprocessSingleDocument.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n      this.postLayoutBlock.bind(this),\n    );\n  }\n}\n\nconst textPolyfill = new TextSpacingPolyfill();\ntextPolyfill.registerHooks();\n\nexport function preprocessForTextSpacing(element: Element): void {\n  textPolyfill.preprocessForTextSpacing(element);\n}\n\nexport function processGeneratedContent(\n  element: HTMLElement,\n  textSpacing: Css.Val,\n  hangingPunctuation: Css.Val,\n  lang: string,\n  vertical: boolean,\n): void {\n  textPolyfill.processGeneratedContent(\n    element,\n    textSpacing,\n    hangingPunctuation,\n    lang,\n    vertical,\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as TextPolyfill from \"./text-polyfill\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n          // text-spacing & hanging-punctuation support\n          TextPolyfill.preprocessForTextSpacing(element);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset\n{\n  constructor(public nodeContext, public pseudoElementHeight) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\nexport const mediaTags = {\n  img: true,\n  svg: true,\n  audio: true,\n  video: true,\n};\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition\n{\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated = true;\n    }\n    return this.breakNodeContext;\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null =\n    null;\n  blockDistanceToBlockEndFloats: number = NaN;\n  breakAtTheEdgeBeforeFloat: string | null = null;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical ? this.startEdge : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical ? this.endEdge : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical ? this.afterEdge : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical ? this.beforeEdge : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions =\n      this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode =\n              this.calculateOffsetInNodeForNodeContext(position);\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        let firstLetterLength = r ? r[0].length : 0;\n        if (\n          !r &&\n          position.sourceNode instanceof Text &&\n          position.sourceNode.nextSibling instanceof Text &&\n          text === position.sourceNode.textContent\n        ) {\n          // The text '“Foo' may be split to '“' and 'Foo'\n          const text2 = text + position.sourceNode.nextSibling.textContent;\n          const r2 = text2.match(Base.firstLetterPattern);\n          if (r2) {\n            const firstLetterText = r2[0];\n            firstLetterLength = firstLetterText.length;\n            position.sourceNode.textContent = firstLetterText;\n            position.viewNode.textContent = firstLetterText;\n            position.sourceNode.nextSibling.textContent =\n              text2.substr(firstLetterLength);\n          }\n        }\n        return this.layoutContext.peelOff(position, firstLetterLength);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (position.viewNode && !LayoutHelper.isSpecialNodeContext(position)) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (this.isFloatNodeContext(position) && !this.vertical) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\" units or a number.\n   * @return value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string | number): number {\n    if (typeof val == \"number\") {\n      return val;\n    }\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return parseFloat(r[0]);\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = PageFloats.resolveInlineFloatDirection(\n      nodeContext.floatSide,\n      nodeContext.vertical,\n      nodeContext.direction,\n    );\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.startEdge;\n      let x2 = this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(this.getStartEdge(parentBox), x1);\n        x2 = Math.min(this.getEndEdge(parentBox), x2);\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        if (!nodeContext.firstPseudo) {\n          // Unless float is specified on ::first-letter (Fix for issue #923)\n          parent.viewNode.appendChild(nodeContext.viewNode);\n        }\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe =\n          containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n            \"div\",\n          );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft =\n      area.paddingRight =\n      area.paddingTop =\n      area.paddingBottom =\n        0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext =\n      this.pageFloatLayoutContext.getPageFloatLayoutContext(\n        float.floatReference,\n      );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments =\n      context.getStashedFloatFragments(floatReference);\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n            stashedFragment.continuations[0].float,\n          );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy =\n      new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n        nodeContext,\n      );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  createJustificationAdjustmentElement(\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n    vertical: boolean,\n  ): HTMLElement {\n    const span = doc.createElement(\"span\") as HTMLElement;\n    span.style.visibility = \"hidden\";\n    span.style.verticalAlign = \"top\";\n    span.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    const inner = doc.createElement(\"span\") as HTMLElement;\n    inner.style.fontSize = \"0\";\n    inner.style.lineHeight = \"0\";\n    inner.textContent = \" #\";\n    span.appendChild(inner);\n\n    // Measure inline-start and inline-end edge positions of the line box,\n    // taking (exclusion) floats into consideration\n    span.style.display = \"block\";\n    span.style.textIndent = \"0\";\n    span.style.textAlign = \"left\";\n    parentNode.insertBefore(span, insertionPoint);\n    const leftPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"right\";\n    const rightPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"\";\n    if (Base.checkInlineBlockJustificationBug(document.body)) {\n      // For Chrome\n      span.style.display = \"inline\";\n    } else {\n      // For Firefox, Edge and IE\n      span.style.display = \"inline-block\";\n    }\n    const padding = vertical\n      ? rightPos.top - leftPos.top\n      : rightPos.left - leftPos.left;\n    const paddingStr = padding >= 1 ? `${padding - 1}px` : \"100%\";\n    if (vertical) {\n      span.style.paddingTop = paddingStr;\n    } else {\n      span.style.paddingLeft = paddingStr;\n    }\n    return span;\n  }\n\n  addAndAdjustJustificationElement(\n    nodeContext: Vtree.NodeContext,\n    insertAfter: boolean,\n    node: Node,\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n  ): HTMLElement {\n    fixJustificationOnHyphen(nodeContext, insertAfter, node, insertionPoint);\n    return this.createJustificationAdjustmentElement(\n      insertionPoint,\n      doc,\n      parentNode,\n      nodeContext.vertical,\n    );\n  }\n\n  compensateJustificationLineHeight(\n    span: Element,\n    br: Element,\n    nodeContext: Vtree.NodeContext,\n  ) {\n    const spanRect = this.clientLayout.getElementClientRect(span);\n    const brRect = this.clientLayout.getElementClientRect(br);\n    if (nodeContext.vertical) {\n      (br as HTMLElement).style.marginRight = `${\n        brRect.right - spanRect.right\n      }px`;\n      (br as HTMLElement).style.width = \"0px\";\n    } else {\n      (br as HTMLElement).style.marginTop = `${spanRect.top - brRect.top}px`;\n      (br as HTMLElement).style.height = \"0px\";\n    }\n    br.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n  }\n\n  /**\n   * Fix justification of the last line of text broken across pages (if\n   * needed).\n   */\n  fixJustificationIfNeeded(\n    nodeContext: Vtree.NodeContext,\n    endOfColumn: boolean,\n  ): void {\n    if (nodeContext.after && !nodeContext.inline) {\n      return;\n    }\n    if (endOfColumn) {\n      const parentElem = nodeContext.parent?.viewNode as Element;\n      const textAlign =\n        parentElem &&\n        this.clientLayout.getElementComputedStyle(parentElem).textAlign;\n      if (textAlign !== \"justify\") {\n        return;\n      }\n    }\n    let node = nodeContext.viewNode;\n    if (node.parentElement?.localName === \"viv-ts-inner\") {\n      // special element for text-spacing\n      node = node.parentElement.parentElement;\n    }\n    const doc = node.ownerDocument;\n    const insertAfter =\n      endOfColumn && (nodeContext.after || node.nodeType != 1);\n    let insertionPoint = insertAfter ? node.nextSibling : node;\n    if (insertionPoint && !insertionPoint.parentNode) {\n      // Possible if removeSelf = false in finishBreak()\n      insertionPoint = null;\n    }\n    const parentNode =\n      node.parentNode || (nodeContext.parent && nodeContext.parent.viewNode);\n    if (!parentNode) {\n      // Possible if nothing was added to the column\n      return;\n    }\n    const span = this.addAndAdjustJustificationElement(\n      nodeContext,\n      insertAfter,\n      node,\n      insertionPoint,\n      doc,\n      parentNode,\n    );\n    if (!endOfColumn) {\n      const br = doc.createElement(\"div\") as HTMLElement;\n      parentNode.insertBefore(br, insertionPoint);\n      this.compensateJustificationLineHeight(span, br, nodeContext);\n    }\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"processLineStyling\");\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              this.fixJustificationIfNeeded(nodeContext, false);\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos + minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Text-spacing etc. must be done before calculating edge. (Issue #898)\n        this.postLayoutBlock(nodeContext, checkPoints);\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          // Text-spacing etc. must be done before calculating edge. (Issue #898)\n          // this.postLayoutBlock(nodeContext, checkPoints);\n\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n    const viewNode = nodeContext.viewNode;\n    if (\n      viewNode.nodeType != 1 &&\n      viewNode.parentElement?.localName !== \"viv-ts-inner\"\n    ) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    } else {\n      // Fix for issue #821, #885\n      const p = LayoutHelper.findAncestorSpecialInlineNodeContext(nodeContext);\n      if (p) {\n        nodeContext = p;\n      }\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elments\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        if (node.nodeType != 1) {\n          if (!haveStart) {\n            if (node.parentNode == null) {\n              endNotReached = false;\n            } else {\n              range.setStartBefore(node);\n              haveStart = true;\n            }\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(node as Element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          /^r(uby|[bt]c?)$/.test((node as Element).localName) ||\n          LayoutHelper.isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(node as Element).display,\n          )\n        ) {\n          // ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    nodeContext.walkUpBlocks((block) => {\n      if (block.inheritedProps[\"box-decoration-break\"] === \"clone\") {\n        Asserts.assert(block.viewNode instanceof Element);\n        const paddingBorders = this.getComputedPaddingBorder(\n          block.viewNode as Element,\n        );\n        clonedPaddingBorder += block.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (block.display === \"table\") {\n          clonedPaddingBorder += block.blockBorderSpacing;\n        }\n      }\n    });\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    // Workaround for issue #816 (Text with ruby overflowed at column/page break)\n    const parentNode = this.element.parentNode;\n    const nextSibling = this.element.nextSibling;\n    parentNode.removeChild(this.element);\n    parentNode.insertBefore(this.element, nextSibling);\n\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing =\n      this.findFirstOverflowingEdgeAndCheckPoint(checkPoints);\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && blockEdge < edge) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n    edge: number;\n    checkPoint: Vtree.NodeContext | null;\n  } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch ((flowPosition.sourceNode as Element).namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    switch (clear) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (this.vertical) {\n        let wAdj = afterEdge + margin.right - clearEdge;\n        if (wAdj > 0 == margin.right >= 0) {\n          // In addition to collapsed portion\n          wAdj += margin.right;\n        }\n        spacer.style.marginLeft = `${wAdj}px`;\n      } else {\n        let hAdj = clearEdge - (afterEdge + margin.top);\n        if (hAdj > 0 == margin.top >= 0) {\n          // In addition to collapsed portion\n          hAdj += margin.top;\n        }\n        spacer.style.marginBottom = `${hAdj}px`;\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent?.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak() {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge && Break.isForcedBreakValue(breakAtTheEdge))\n      );\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              nodeContext.formattingContext,\n            );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (nodeContext.floatSide) {\n                // Save break-after:avoid* value at before the float\n                // (Fix for issue #904)\n                this.breakAtTheEdgeBeforeFloat = Break.isAvoidBreakValue(\n                  breakAtTheEdge,\n                )\n                  ? breakAtTheEdge\n                  : null;\n              }\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // new formatting context, or float or flex container\n                // (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              if (nodeContext.floatSide) {\n                // Restore break-after:avoid* value at before the float\n                // (Fix for issue #904)\n                breakAtTheEdge =\n                  breakAtTheEdge ?? this.breakAtTheEdgeBeforeFloat;\n                this.breakAtTheEdgeBeforeFloat = null;\n              }\n              const element = nodeContext.sourceNode as Element;\n              // Make breakable after svg and math elements\n              // (Fix for issue #750)\n              if (\n                element.localName === \"svg\" ||\n                element.localName === \"math\" ||\n                element.getAttribute(\"data-math-typeset\") === \"true\"\n              ) {\n                onStartEdges = false;\n                lastAfterNodeContext = nodeContext.copy();\n                trailingEdgeContexts.push(lastAfterNodeContext);\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  null,\n                  nodeContext.breakAfter,\n                );\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                break;\n              }\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (\n                (nodeContext.pageType != nodeContext.parent?.pageType || // Fix for issue #771\n                  !Break.isForcedBreakValue(breakAtTheEdge)) && // Fix for issue #722\n                !this.layoutConstraint.allowLayout(nodeContext)\n              ) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              formattingContext,\n            );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor =\n        new LayoutProcessor.LayoutProcessorResolver().find(formattingContext);\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.top\n        : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.bottom\n        : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    let penalty = checkPoints[0].breakPenalty;\n    if (penalty) {\n      // Fix for issue #546\n      let block = checkPoints[0];\n      while (block.parent && block.inline) {\n        block = block.parent;\n      }\n      penalty = block.breakPenalty;\n    }\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext =\n                  this.nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats =\n      this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder =\n      this.column.calculateClonedPaddingBorder(parentNodeContext);\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\nexport function fixJustificationOnHyphen(\n  nodeContext: Vtree.NodeContext,\n  insertAfter: boolean,\n  node: Node,\n  insertionPoint: Node,\n): void {\n  if (Base.checkSoftWrapOpportunityAfterHyphenBug(document.body)) {\n    const hyphenChar = resolveHyphenateCharacter(nodeContext);\n    const prevSibling = insertAfter ? node : node.previousSibling;\n    const prevText = prevSibling ? prevSibling.textContent : \"\";\n    if (prevText.charAt(prevText.length - 1) === hyphenChar) {\n      const doc = node.ownerDocument;\n      const parent = node.parentNode;\n      if (Base.checkSoftWrapOpportunityByWbrBug(document.body)) {\n        // For IE\n        parent.insertBefore(doc.createTextNode(\" \"), insertionPoint);\n      } else {\n        // For Edge\n        parent.insertBefore(doc.createElement(\"wbr\"), insertionPoint);\n      }\n    }\n  }\n}\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord ? resolveHyphenateCharacter(nodeContext) : \"\",\n    );\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  /**\n   * @override\n   */\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  /**\n   * @override\n   */\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  /**\n   * @override\n   */\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n{\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements\n{\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  /**\n   * @return\n   */\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (nodeContext && this.isAfterLastContent(nodeContext)) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode =\n          nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor\n{\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext =\n      getRepetitiveElementsOwnerFormattingContextOrNull(nodeContext);\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as Element;\n    const verticalAlign = this.cellNodeContext.verticalAlign;\n    if (verticalAlign === \"middle\" || verticalAlign === \"bottom\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext =\n      position.formattingContext as TableFormattingContext;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = 0;\n    if (!formattingContext.isFreelyFragmentableRow(row)) {\n      penalty += 10;\n    }\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  isFreelyFragmentableRow(row: TableRow): boolean {\n    return row.getMinimumHeight() > this.tableWidth / 2;\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  /** @override */\n  saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  /** @override */\n  restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset\n{\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode =\n              nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  /** @override */\n  startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer =\n      cellViewNode.ownerDocument.createElement(\"div\");\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions =\n      this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy =\n                  rowNodeContext.viewNode.ownerDocument.createElement(\"td\");\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext =\n                VtreeImpl.makeNodeContextFromNodePositionStep(\n                  cellNodePosition.steps[0],\n                  rowNodeContext,\n                );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(\n      this.currentRowIndex,\n    ).cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions[cell.columnIndex];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (\n          this.column.layoutContext as Vgen.ViewFactory\n        ).xmldoc.getElementOffset(tdNodeStep.node as Element);\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    if (!cell) {\n      // Fix for Issue #712\n      state.break = true;\n      return Task.newResult(true);\n    }\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      const width = vertical ? rect[\"height\"] : rect[\"width\"];\n      // Workaround for issue #958\n      // Non-integer width causes problem, so return rounded-up value.\n      return Math.ceil(width);\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells =\n          formattingContext.getRowSpanningCellsOverflowingTheRow(rowIndex);\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext =\n              cellFragment.findAcceptableBreakPosition().nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode =\n              cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (!repetitiveElements) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n  Base.setCSSProperty(cellContentElement, \"overflow\", \"hidden\");\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements =\n      this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode =\n      this.tableFormattingContext.getRootViewNode(initialPosition);\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /**\n   * @override\n   */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /**\n   * @override\n   */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /**\n   * @override\n   */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints =\n      this.collectCellFragmentLayoutConstraints(\n        positionAfter,\n        formattingContext,\n      );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints:\n          entry.fragment.pseudoColumn.getColumn().fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Ident,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n  return otherColumns.every((c) => lastColumnBlockSize > c.computedBlockSize);\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Logging from \"./logging\";\nimport { ValidationTxt } from \"./assets\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(public where: number, public success: boolean) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (\n        this.nodes[0].validator as PrimitiveValidator\n      ).combine(group.nodes[0].validator as PrimitiveValidator);\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 1;\n\nexport const ALLOW_STR = 2;\n\nexport const ALLOW_IDENT = 4;\n\nexport const ALLOW_POS_NUMERIC = 8;\n\nexport const ALLOW_POS_NUM = 16;\n\nexport const ALLOW_POS_INT = 32;\n\nexport const ALLOW_COLOR = 64;\n\nexport const ALLOW_URL = 128;\n\nexport const ALLOW_NEGATIVE = 256;\n\nexport const ALLOW_ZERO = 512;\n\nexport const ALLOW_ZERO_PERCENT = 1024;\n\nexport const ALLOW_SLASH = 2048;\n\nexport const ALLOW_URANGE = 4096;\n\nexport const ALLOW_IMAGE = 8192;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    if (this.allowed & ALLOW_COLOR) {\n      if (CSS.supports(\"color\", ident.name)) {\n        return ident;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitHexColor(color: Css.HexColor): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      if (/^([0-9A-F]{3,4}|([0-9A-F]{2}){3,4})$/i.test(color.hex)) {\n        return color;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: Css.URange): Css.Val {\n    if (this.allowed & ALLOW_URANGE) {\n      return urange;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      if (CSS.supports(\"color\", func.toString())) {\n        return func;\n      }\n    }\n    if (this.allowed & ALLOW_IMAGE) {\n      if (CSS.supports(\"background-image\", func.toString())) {\n        return func;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitHexColor(color: Css.HexColor): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: Css.URange): Css.Val {\n    return this.validateSingle(urange);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(public readonly name: string, group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(validatorSet: ValidatorSet, public readonly name: string) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(validatorSet: ValidatorSet, public readonly names: string[]) {\n    super(validatorSet, names[0]);\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] || this.validatorSet.defaultValues[name],\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateDefaultingValue(\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, value, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitHexColor(color: Css.HexColor): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    this.error = true;\n    return null;\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val = values[name] || this.validatorSet.defaultValues[name];\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\n      \"font-family\",\n      \"line-height\",\n      \"font-size\",\n      \"font-stretch\",\n      \"font-variant-ligatures\",\n      \"font-variant-caps\",\n      \"font-variant-numeric\",\n      \"font-variant-east-asian\",\n    );\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    const fontVariant = this.values[\"font-variant_css2\"];\n    if (fontVariant) {\n      delete this.values[\"font-variant_css2\"];\n      this.values[\"font-variant-caps\"] = fontVariant;\n    }\n    const fontStretch = this.values[\"font-stretch_css3\"];\n    if (fontStretch) {\n      delete this.values[\"font-stretch_css3\"];\n      this.values[\"font-stretch\"] = fontStretch;\n    }\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nconst propsExcludedFromAll = [\n  \"unicode-bidi\",\n  \"direction\",\n\n  // excludes css-logical\n  \"margin-block-start\",\n  \"margin-block-end\",\n  \"margin-inline-start\",\n  \"margin-inline-end\",\n  \"padding-block-start\",\n  \"padding-block-end\",\n  \"padding-inline-start\",\n  \"padding-inline-end\",\n  \"border-block-start-color\",\n  \"border-block-end-color\",\n  \"border-inline-start-color\",\n  \"border-inline-end-color\",\n  \"border-block-start-style\",\n  \"border-block-end-style\",\n  \"border-inline-start-style\",\n  \"border-inline-end-style\",\n  \"border-block-start-width\",\n  \"border-block-end-width\",\n  \"border-inline-start-width\",\n  \"border-inline-end-width\",\n  \"block-start\",\n  \"block-end\",\n  \"inline-start\",\n  \"inline-end\",\n  \"block-size\",\n  \"inline-size\",\n  \"max-block-size\",\n  \"max-inline-size\",\n  \"min-block-size\",\n  \"min-inline-size\",\n\n  // excludes non-standards and special\n  \"behavior\",\n  \"bleed\",\n  \"conflicting-partitions\",\n  \"crop-offset\",\n  \"enabled\",\n  \"flow-consume\",\n  \"flow-from\",\n  \"flow-into\",\n  \"flow-linger\",\n  \"flow-options\",\n  \"flow-priority\",\n  \"font-display\",\n  \"font-size-adjust\",\n  \"font-stretch_css3\",\n  \"font-variant_css2\",\n  \"glyph-orientation-vertical\",\n  \"marks\",\n  \"min-page-height\",\n  \"min-page-width\",\n  \"repeat-on-break\",\n  \"required\",\n  \"required-partitions\",\n  \"ruby-align\",\n  \"shape-inside\",\n  \"snap-height\",\n  \"snap-width\",\n  \"template\",\n  \"text-decoration-skip\",\n  \"text-justify\",\n  \"text-zoom\",\n  \"unicode-range\",\n  \"utilization\",\n  \"wrap-flow\",\n];\n\nexport class AllShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    for (const name in this.validatorSet.validators) {\n      if (!propsExcludedFromAll.includes(name)) {\n        this.propList.push(name);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n  ALL: AllShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == CssTokenizer.TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == CssTokenizer.TokenType.HASH) {\n      cssval = new Css.HexColor(token.text);\n    } else if (token.type == CssTokenizer.TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"COLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IMAGE_FUNCTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IMAGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"URANGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URANGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == CssTokenizer.TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == CssTokenizer.TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != CssTokenizer.TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == CssTokenizer.TokenType.COMMA);\n      if (token.type != CssTokenizer.TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != CssTokenizer.TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != CssTokenizer.TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != CssTokenizer.TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case CssTokenizer.TokenType.INT: {\n            const idents = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.BAR:\n            setop(\"|\");\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case CssTokenizer.TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != CssTokenizer.TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == CssTokenizer.TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != CssTokenizer.TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != CssTokenizer.TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == CssTokenizer.TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case CssTokenizer.TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case CssTokenizer.TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case CssTokenizer.TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (\n        token.type == CssTokenizer.TokenType.IDENT &&\n        shorthandValidators[token.text]\n      ) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              // `font-variant_css2` and `font-stretch_css3` are not real properties\n              if (!token.text.includes(\"_\")) {\n                propList.push(token.text);\n              }\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        const pval = this.defaultValues[pname];\n        if (!pval) {\n          Logging.logger.warn(\"Unknown property in makePropSet:\", pname);\n        } else {\n          map[pname] = pval;\n        }\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      receiver.unknownProperty(origName, value);\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        Css.isDefaultingValue(value) || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else if (!prefix && CSS.supports(name, value.toString())) {\n        receiver.simpleProperty(name, value, important);\n        return;\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (Css.isDefaultingValue(value)) {\n        shorthand.propagateDefaultingValue(value, important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  /**\n   * @return void\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv: CssCascade.CascadeValue = this.style[name];\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed && this.displayValue() !== Css.ident.none;\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if (\n      (node.nodeType === Node.TEXT_NODE ||\n        node.nodeType === Node.CDATA_SECTION_NODE) &&\n      (this.atBlockStart || this.atFlowStart) &&\n      box.hasBox()\n    ) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      if (whitespace && !Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name];\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    const rootInheritedProps = isBody\n      ? [\"writing-mode\", \"direction\"]\n      : Object.keys(CssCascade.inheritedProps);\n    for (const propName of rootInheritedProps) {\n      if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n        // Copy it over, but keep it at the root element as well.\n        this.rootStyle[propName] = elemStyle[propName];\n      }\n    }\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? elemStyle[\"background-color\"].evaluate(this.context)\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? elemStyle[\"background-image\"].evaluate(this.context)\n        : (null as Css.Val);\n      if (\n        (backgroundColor && !Css.isDefaultingValue(backgroundColor)) ||\n        (backgroundImage && !Css.isDefaultingValue(backgroundImage))\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      const fontSize = elemStyle[\"font-size\"];\n      let isRelativeFontSize = true;\n      if (fontSize && !Css.isDefaultingValue(fontSize.value)) {\n        const val = fontSize.evaluate(this.context);\n        let px = val.num;\n        switch (val.unit) {\n          case \"em\":\n          case \"rem\":\n            px *= this.context.initialFontSize;\n            break;\n          case \"ex\":\n            px *=\n              (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n              Exprs.defaultUnitSizes[\"em\"];\n            break;\n          case \"%\":\n            px *= this.context.initialFontSize / 100;\n            break;\n          default: {\n            const unitSize = Exprs.defaultUnitSizes[val.unit];\n            if (unitSize) {\n              px *= unitSize;\n            }\n            isRelativeFontSize = false;\n          }\n        }\n        this.context.rootFontSize = px;\n        this.context.isRelativeRootFontSize = isRelativeFontSize;\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"];\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"];\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"];\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore =\n                box.afterBox.getBreakValue(\"before\");\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n\n        if (blockStartOffset === 0) {\n          // Named page type at first page\n          const pageCV: CssCascade.CascadeValue = style[\"page\"];\n          const pageType =\n            pageCV &&\n            !Css.isDefaultingValue(pageCV.value) &&\n            pageCV.value.toString();\n          if (pageType && pageType.toLowerCase() !== \"auto\") {\n            this.cascade.firstPageType = pageType;\n          }\n        }\n\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (this.bodyReached && blockStartOffset === 0) {\n          // body reached but the named page type at first page is not determined\n          // (Fix for issue #770)\n          continue;\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const traitProps: { [key: string]: Css.Val } = {\n  \"font-style\": Css.ident.normal,\n  \"font-stretch\": Css.ident.normal,\n  \"font-weight\": Css.ident.normal,\n  \"unicode-range\": Css.fullURange,\n};\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop in traitProps) {\n    sb.append(\" \");\n    sb.append(properties[prop].toString());\n  }\n  return sb.toString();\n}\n\nexport function fillDefaults(properties: { [key: string]: Css.Val }): void {\n  for (const prop in traitProps) {\n    if (!properties[prop]) {\n      properties[prop] = traitProps[prop];\n    }\n  }\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  fillDefaults(result);\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop in traitProps) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop in traitProps) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const style = this.head.ownerDocument.createElement(\"style\");\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    this.head.appendChild(style);\n    Logging.logger.debug(\"Load font:\", src);\n    frame.finish(viewFontFace);\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    const srcFamilySrc = srcFace.family + \";\" + src;\n    let fetcher = this.srcURLMap[srcFamilySrc];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.debug(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(src)\n          : null;\n        if (deobfuscator) {\n          Net.ajax(src, Net.XMLHttpRequestResponseType.BLOB).then((xhr) => {\n            if (!xhr.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(xhr.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[srcFamilySrc] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers).thenAsync(() =>\n      this.waitFontLoading(),\n    );\n  }\n\n  waitFontLoading(): Task.Result<boolean> {\n    const fonts = this.head.ownerDocument.fonts; // FontFaceSet\n    let unloadedCount = 0;\n    fonts.forEach((fontFace) => {\n      if (fontFace.status === \"unloaded\") {\n        unloadedCount++;\n        fontFace.load();\n      }\n    });\n    if (unloadedCount === 0) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"waitFontLoading\");\n    frame\n      .loop(() => {\n        return frame.sleep(20).thenAsync(() => {\n          if (fonts.status === \"loading\") {\n            return Task.newResult(true); // continue\n          }\n          return Task.newResult(false); // break\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>,\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(scope: Exprs.LexicalScope, public pageMaster: PageMaster) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>,\n> extends PageBox<I> {\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance,\n> extends PageBox<I> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto || Css.isDefaultingValue(val)) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal || Css.isDefaultingValue(val)) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (!val && CssCascade.inheritedProps[name]) {\n      // inherit from root style\n      if (\n        name === \"font-size\" &&\n        context.isRelativeRootFontSize &&\n        context.rootFontSize\n      ) {\n        val = new Css.Numeric(context.rootFontSize, \"px\");\n      } else {\n        const rootStyle = (\n          context as Exprs.Context & {\n            styler: { rootStyle: { [key: string]: CssCascade.CascadeValue } };\n          }\n        ).styler?.rootStyle;\n        val = rootStyle[name]?.value;\n      }\n    }\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSinglUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      this.propagatePropertyToElement(\n        context,\n        element,\n        passSingleUriContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos =\n            ((containerSize + columnGap) * i) / columnCount -\n            columnGap / 2 +\n            container.paddingLeft -\n            ruleWidth / 2;\n          const size =\n            container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    if (style[\"content\"]) {\n      style[\"content\"] = style[\"content\"].filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-ligatures\",\n  \"font-variant-caps\",\n  \"font-variant-numeric\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-orientation\",\n  \"text-shadow\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  let writingMode = style[\"writing-mode\"];\n  writingMode = writingMode && writingMode.value;\n  let direction = style[\"direction\"];\n  direction = direction && direction.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a10: { width: new Css.Numeric(26, \"mm\"), height: new Css.Numeric(37, \"mm\") },\n  a9: { width: new Css.Numeric(37, \"mm\"), height: new Css.Numeric(52, \"mm\") },\n  a8: { width: new Css.Numeric(52, \"mm\"), height: new Css.Numeric(74, \"mm\") },\n  a7: { width: new Css.Numeric(74, \"mm\"), height: new Css.Numeric(105, \"mm\") },\n  a6: { width: new Css.Numeric(105, \"mm\"), height: new Css.Numeric(148, \"mm\") },\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  a2: { width: new Css.Numeric(420, \"mm\"), height: new Css.Numeric(594, \"mm\") },\n  a1: { width: new Css.Numeric(594, \"mm\"), height: new Css.Numeric(841, \"mm\") },\n  a0: {\n    width: new Css.Numeric(841, \"mm\"),\n    height: new Css.Numeric(1189, \"mm\"),\n  },\n  b10: { width: new Css.Numeric(31, \"mm\"), height: new Css.Numeric(44, \"mm\") },\n  b9: { width: new Css.Numeric(44, \"mm\"), height: new Css.Numeric(62, \"mm\") },\n  b8: { width: new Css.Numeric(62, \"mm\"), height: new Css.Numeric(88, \"mm\") },\n  b7: { width: new Css.Numeric(88, \"mm\"), height: new Css.Numeric(125, \"mm\") },\n  b6: { width: new Css.Numeric(125, \"mm\"), height: new Css.Numeric(176, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  b3: { width: new Css.Numeric(353, \"mm\"), height: new Css.Numeric(500, \"mm\") },\n  b2: { width: new Css.Numeric(500, \"mm\"), height: new Css.Numeric(707, \"mm\") },\n  b1: {\n    width: new Css.Numeric(707, \"mm\"),\n    height: new Css.Numeric(1000, \"mm\"),\n  },\n  b0: {\n    width: new Css.Numeric(1000, \"mm\"),\n    height: new Css.Numeric(1414, \"mm\"),\n  },\n  c10: { width: new Css.Numeric(28, \"mm\"), height: new Css.Numeric(40, \"mm\") },\n  c9: { width: new Css.Numeric(40, \"mm\"), height: new Css.Numeric(57, \"mm\") },\n  c8: { width: new Css.Numeric(57, \"mm\"), height: new Css.Numeric(81, \"mm\") },\n  c7: { width: new Css.Numeric(81, \"mm\"), height: new Css.Numeric(114, \"mm\") },\n  c6: { width: new Css.Numeric(114, \"mm\"), height: new Css.Numeric(162, \"mm\") },\n  c5: { width: new Css.Numeric(162, \"mm\"), height: new Css.Numeric(229, \"mm\") },\n  c4: { width: new Css.Numeric(229, \"mm\"), height: new Css.Numeric(324, \"mm\") },\n  c3: { width: new Css.Numeric(324, \"mm\"), height: new Css.Numeric(458, \"mm\") },\n  c2: { width: new Css.Numeric(458, \"mm\"), height: new Css.Numeric(648, \"mm\") },\n  c1: { width: new Css.Numeric(648, \"mm\"), height: new Css.Numeric(917, \"mm\") },\n  c0: {\n    width: new Css.Numeric(917, \"mm\"),\n    height: new Css.Numeric(1297, \"mm\"),\n  },\n  \"jis-b10\": {\n    width: new Css.Numeric(32, \"mm\"),\n    height: new Css.Numeric(45, \"mm\"),\n  },\n  \"jis-b9\": {\n    width: new Css.Numeric(45, \"mm\"),\n    height: new Css.Numeric(64, \"mm\"),\n  },\n  \"jis-b8\": {\n    width: new Css.Numeric(64, \"mm\"),\n    height: new Css.Numeric(91, \"mm\"),\n  },\n  \"jis-b7\": {\n    width: new Css.Numeric(91, \"mm\"),\n    height: new Css.Numeric(128, \"mm\"),\n  },\n  \"jis-b6\": {\n    width: new Css.Numeric(128, \"mm\"),\n    height: new Css.Numeric(182, \"mm\"),\n  },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  \"jis-b3\": {\n    width: new Css.Numeric(364, \"mm\"),\n    height: new Css.Numeric(515, \"mm\"),\n  },\n  \"jis-b2\": {\n    width: new Css.Numeric(515, \"mm\"),\n    height: new Css.Numeric(728, \"mm\"),\n  },\n  \"jis-b1\": {\n    width: new Css.Numeric(728, \"mm\"),\n    height: new Css.Numeric(1030, \"mm\"),\n  },\n  \"jis-b0\": {\n    width: new Css.Numeric(1030, \"mm\"),\n    height: new Css.Numeric(1456, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n  cropOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n    cropOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marksCV = style[\"marks\"];\n  const bleedCV = style[\"bleed\"];\n  const marks =\n    marksCV && !Css.isDefaultingValue(marksCV.value)\n      ? marksCV.value\n      : Css.ident.none;\n  const bleed =\n    bleedCV && !Css.isDefaultingValue(bleedCV.value)\n      ? bleedCV.value\n      : Css.ident.auto;\n  if (bleed === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks !== Css.ident.none) {\n      let hasCrop = false;\n      if (marks.isSpaceList()) {\n        hasCrop = (marks as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed as Css.Numeric;\n  }\n\n  // crop-offset (Issue #913)\n  const cropOffsetCV = style[\"crop-offset\"];\n  const cropOffset =\n    cropOffsetCV && !Css.isDefaultingValue(cropOffsetCV.value)\n      ? cropOffsetCV.value\n      : Css.ident.auto;\n  if (cropOffset === Css.ident.auto) {\n    if (marks !== Css.ident.none) {\n      pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n    }\n  } else if (cropOffset.isNumeric()) {\n    pageSizeAndBleed.cropOffset = cropOffset as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    Math.max(0, pageSizeAndBleed.bleed.num) *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    !pageSizeAndBleed.cropOffset.num && pageSizeAndBleed.bleedOffset.num\n      ? pageSizeAndBleed.bleedOffset.num *\n        context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false)\n      : Math.max(\n          0,\n          pageSizeAndBleed.cropOffset.num *\n            context.queryUnitSize(pageSizeAndBleed.cropOffset.unit, false) -\n            bleed,\n        );\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\"stroke\", \"#010101\");\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"];\n  if (marks) {\n    const value = marks.value;\n    if (value.isSpaceList()) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  if (bleed) {\n    const bgcolor = cascadedPageStyle[\"background-color\"];\n    if (bgcolor && bgcolor.value) {\n      page.bleedBox.style.backgroundColor = bgcolor.value.stringValue();\n    }\n  }\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Math.max(\n    0,\n    evaluatedPageSizeAndBleed.bleedOffset -\n      Css.toNumber(defaultPrinterMarkLineLength, context),\n  );\n  const lineLength = evaluatedPageSizeAndBleed.bleedOffset - printerMarkOffset;\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (val && val.value !== Css.ident.inherit) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    this.hasAutoSize_ = !PageMaster.toExprAuto(\n      scope,\n      style[isHorizontal ? \"width\" : \"height\"],\n      new Exprs.Numeric(scope, 0, \"px\"),\n    );\n  }\n\n  /**\n   *  @override\n   */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /**\n   * @override\n   */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return false;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n    style[startSide] = new Css.Expr(marginStart);\n    style[endSide] = new Css.Expr(marginEnd);\n    style[`margin-${startSide}`] = Css.numericZero;\n    style[`margin-${endSide}`] = Css.numericZero;\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n    style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n    page.pageAreaElement = container.element as HTMLElement;\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(\n        element,\n        \"flex-flow\",\n        this.vertical ? \"row\" : \"column\",\n      );\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n      if (this.vertical) {\n        let align = \"center\";\n        if (this.boxInfo.isInTopRow || this.boxInfo.isInBottomRow) {\n          if (\n            this.boxInfo.isInLeftColumn ||\n            this.boxInfo.positionAlongVariableDimension ===\n              MarginBoxPositionAlongVariableDimension.END\n          ) {\n            align = \"start\";\n          } else if (\n            this.boxInfo.isInRightColumn ||\n            this.boxInfo.positionAlongVariableDimension ===\n              MarginBoxPositionAlongVariableDimension.START\n          ) {\n            align = \"end\";\n          }\n        }\n        Base.setCSSProperty(element, \"align-items\", align);\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(context: Exprs.Context): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(pageType: string): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], pageType, style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop];\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size: CssCascade.CascadeValue = style[\"size\"];\n    if (size && !Css.isDefaultingValue(size.value)) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      pageMasterStyle[\"width\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"width\"],\n        new CssCascade.CascadeValue(pageSize.width, priority),\n      );\n      pageMasterStyle[\"height\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"height\"],\n        new CssCascade.CascadeValue(pageSize.height, priority),\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsBlankPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const blankPage = new Exprs.Named(this.scope, \"blank-page\");\n    if (blankPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, parent?.condition, parent, null, validatorSet, false);\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"blank\":\n          this.chain.push(new IsBlankPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        let result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(props, n, noPageSelectorProps[n]);\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          const prevCascVal = CssCascade.getProp(props, name);\n          result = prevCascVal\n            ? CssCascade.cascadeValues(null, result, prevCascVal)\n            : result;\n          CssCascade.setProp(props, name, result);\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  /**\n   * @override\n   */\n  makeApplyRuleAction(specificity: number): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n","/**\n * Copyright 2022 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Scripts - Supports JavaScript in source document.\n */\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Task from \"./task\";\nimport * as Logging from \"./logging\";\nimport * as TaskUtil from \"./task-util\";\n\n/**\n * Enable or disable JavaScript in html support\n */\nexport let allowScripts = true;\nexport function setAllowScripts(value: boolean): void {\n  allowScripts = value;\n}\n\nconst deferredScripts: HTMLScriptElement[] = [];\n\nfunction sameScripts(s1: HTMLScriptElement, s2: HTMLScriptElement): boolean {\n  return (\n    s1 === s2 ||\n    (s1.src || s2.src ? s1.src === s2.src : s1.textContent === s2.textContent)\n  );\n}\n\nfunction getScriptsInOrNearHead(document: Document): HTMLScriptElement[] {\n  // To support Chrome < 88 and Firefox < 84, we cannot use\n  // the selector \"body > script:not(:not(script, link, style) ~ *)\".\n  // (Issue #919)\n  const scriptsInBodyNotNearHead = Array.from(\n    document.querySelectorAll(\n      \"body > :not(script):not(link):not(style) ~ script\",\n    ),\n  ) as HTMLScriptElement[];\n  return (\n    Array.from(\n      document.querySelectorAll(\"head > script, body > script\"),\n    ) as HTMLScriptElement[]\n  ).filter((script) => !scriptsInBodyNotNearHead.includes(script));\n}\n\nexport function loadScript(\n  srcScriptElem: HTMLScriptElement,\n  window: Window,\n  flags?: { inHead?: boolean; atEnd?: boolean; forceDefer?: boolean },\n): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  if (\n    !flags?.inHead &&\n    !flags?.atEnd &&\n    getScriptsInOrNearHead(srcScriptElem.ownerDocument).includes(srcScriptElem)\n  ) {\n    // The script elements at beginning of body have already been processed.\n    return Task.newResult(false);\n  }\n\n  const scriptContent = srcScriptElem.textContent;\n  const src = srcScriptElem.src;\n  const isModule = srcScriptElem.type === \"module\";\n  const async = (isModule || src) && srcScriptElem.async;\n  const defer = (isModule && !async) || (src && srcScriptElem.defer);\n  const needDefer = !flags?.atEnd && (flags?.forceDefer || defer || async);\n\n  if (!hasScripts(window)) {\n    // `window.onload = startViewer`, which was set by vivliostyle-viewer,\n    // has to be unset to prevent `startViewer` restarting because of\n    // `window.dispatchEvent(new Event(\"load\"))` in `loadScriptsAtEnd()`.\n    window.onload = null;\n  }\n\n  if (needDefer) {\n    if (!deferredScripts.some((s) => sameScripts(s, srcScriptElem))) {\n      deferredScripts.push(srcScriptElem);\n    }\n    return Task.newResult(true);\n  }\n\n  if (src.includes(\"/mathjax\")) {\n    const builtinMathJax2 = window.document.head.querySelector(\n      \"script[src*='MathJax.js']:not([data-vivliostyle-scripting])\",\n    );\n    if (builtinMathJax2) {\n      if (src.includes(\"/mathjax@3\")) {\n        // Remove the builtin MathJax 2 when MathJax 3 is specified\n        window.document.head.removeChild(builtinMathJax2);\n        if (window[\"MathJax\"]?.version?.startsWith(\"2.\")) {\n          delete window[\"MathJax\"];\n        }\n      } else if (src.includes(\"/MathJax.js\")) {\n        // Ignore the specified MathJax 2, and use the builtin MathJax 2\n        return Task.newResult(true);\n      }\n    }\n  }\n\n  for (const s of window.document.head.getElementsByTagName(\"script\")) {\n    if (\n      s.hasAttribute(\"data-vivliostyle-scripting\") &&\n      sameScripts(s, srcScriptElem)\n    ) {\n      // If same script is already loaded, remove the already loaded one before load the new one.\n      window.document.head.removeChild(s);\n    }\n  }\n\n  const scriptElem = window.document.createElement(\"script\");\n  scriptElem.textContent = scriptContent;\n  if (src) {\n    scriptElem.src = src;\n  }\n  scriptElem.async = async;\n  scriptElem.defer = defer;\n  scriptElem.setAttribute(\"data-vivliostyle-scripting\", \"true\");\n\n  for (const attr of srcScriptElem.attributes) {\n    if (![\"src\", \"async\", \"defer\"].includes(attr.name)) {\n      scriptElem.setAttribute(attr.name, attr.value);\n    }\n  }\n  Logging.logger.debug(\"script:\", src);\n  if (!src) {\n    window.document.head.appendChild(scriptElem);\n    return Task.newResult(true);\n  } else {\n    const fetcher = TaskUtil.loadElement(scriptElem);\n    window.document.head.appendChild(scriptElem);\n    return TaskUtil.waitForFetchers([fetcher]);\n  }\n}\n\nfunction getAllFontFamilyList(\n  srcDocument: Document,\n  styler: CssStyler.Styler,\n): string {\n  const fontFamilySet = {};\n  const findFontFamilyInStyle = (style: any): void => {\n    const fontFamily = style[\"font-family\"]?.value;\n    if (fontFamily) {\n      if (fontFamily.values) {\n        for (const family1 of fontFamily.values) {\n          fontFamilySet[family1.stringValue()] = true;\n        }\n      } else {\n        fontFamilySet[fontFamily.stringValue()] = true;\n      }\n    }\n    const marginBoxes = style[\"_marginBoxes\"];\n    if (marginBoxes) {\n      for (const marginBoxStyle of Object.values(marginBoxes)) {\n        findFontFamilyInStyle(marginBoxStyle);\n      }\n    }\n  };\n  const findAllFontFamily = (arg: any): void => {\n    if (arg instanceof CssCascade.ApplyRuleAction) {\n      findFontFamilyInStyle(arg.style);\n    } else if (arg instanceof CssCascade.CascadeAction || Array.isArray(arg)) {\n      for (const v of Object.values(arg)) {\n        findAllFontFamily(v);\n      }\n    }\n  };\n  // Find all font-family values in stylesheets.\n  for (const obj of Object.values(styler.cascade.code)) {\n    for (const arg of Object.values(obj ?? {})) {\n      findAllFontFamily(arg);\n    }\n  }\n  // Find all font-family values in inline style.\n  for (const elem of srcDocument.querySelectorAll(\"[style]\")) {\n    if (elem instanceof HTMLElement && elem.style.fontFamily) {\n      fontFamilySet[elem.style.fontFamily] = true;\n    }\n  }\n  return Object.keys(fontFamilySet).join(\",\");\n}\n\nfunction prepareTextContentForWebFonts(\n  srcDocument: Document,\n  window: Window,\n  styler: CssStyler.Styler,\n): HTMLElement {\n  const textContentDiv: HTMLElement =\n    window.document.querySelector(\"[data-vivliostyle-textcontent]\") ??\n    window.document.createElement(\"div\");\n  textContentDiv.style.position = \"fixed\";\n  textContentDiv.style.fontSize = \"0\";\n  textContentDiv.setAttribute(\"data-vivliostyle-textcontent\", \"true\");\n  textContentDiv.setAttribute(\"aria-hidden\", \"true\");\n  textContentDiv.style.fontFamily = getAllFontFamilyList(srcDocument, styler);\n  textContentDiv.textContent = srcDocument.documentElement.textContent;\n  window.document.body.appendChild(textContentDiv);\n  return textContentDiv;\n}\n\nexport function loadScriptsInHead(\n  srcDocument: Document,\n  window: Window,\n  styler: CssStyler.Styler,\n): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  // Process script elements in head and also beginning of body\n  const srcScripts: HTMLScriptElement[] = getScriptsInOrNearHead(srcDocument);\n  if (srcScripts.length === 0) {\n    return Task.newResult(false);\n  }\n  const needPrepareForWebFonts = srcScripts.some(\n    (s) => !(s.async || s.defer || s.type === \"module\"),\n  );\n\n  // Web fonts needs text content of the document\n  const textContentDiv = needPrepareForWebFonts\n    ? prepareTextContentForWebFonts(srcDocument, window, styler)\n    : null;\n  const fonts = window.document.fonts; // FontFaceSet\n  const savedDollar = window[\"$\"];\n  let forceDefer = false;\n  const frame: Task.Frame<boolean> = Task.newFrame(\"loadScripts\");\n  frame\n    .loop(() => {\n      if (srcScripts.length === 0) {\n        if (!needPrepareForWebFonts) {\n          return Task.newResult(false); // break\n        }\n        return frame.sleep(20).thenAsync(() => {\n          if (\n            fonts.status === \"loading\" ||\n            // for Typekit Web Font Loader (Adobe Fonts)\n            window.document.documentElement.classList.contains(\"wf-loading\") ||\n            // For DynaFont\n            // FIXME: checking the global variable `ret` set in https://dfo.dynacw.co.jp/JSDynaFont/DynaFont.js\n            // would be not very good, because it seems to have been made global by mistake.\n            (window[\"FontJSON\"]?.Font &&\n              window[\"ret\"]?.readyState &&\n              window[\"ret\"].readyState < 4)\n          ) {\n            return Task.newResult(true); // continue\n          }\n          return Task.newResult(false); // break\n        });\n      }\n      const srcScriptElem = srcScripts.shift();\n      return loadScript(srcScriptElem, window, {\n        inHead: true,\n        forceDefer,\n      }).thenAsync(() => {\n        if (!forceDefer && window[\"$\"] !== savedDollar) {\n          // jQuery `$(…)` does not work before document is loaded, so need to defer\n          deferredScripts.push(srcScriptElem);\n          forceDefer = true;\n        }\n        if (srcScripts.length === 0) {\n          if (needPrepareForWebFonts) {\n            // Some web font loaders (DynaFont, FONTPLUS) need DOMContentLoaded event\n            Logging.logger.debug(\"dispatchEvent: DOMContentLoaded (document)\");\n            window.document.dispatchEvent(new Event(\"DOMContentLoaded\"));\n          }\n        }\n        return Task.newResult(true); // continue\n      });\n    })\n    .then(() => {\n      if (textContentDiv) {\n        textContentDiv.remove();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function loadScriptsAtEnd(window: Window): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  const frame: Task.Frame<boolean> = Task.newFrame(\"loadScripts\");\n  frame\n    .loop(() => {\n      if (deferredScripts.length === 0) {\n        return Task.newResult(false);\n      }\n      return loadScript(deferredScripts.shift(), window, {\n        atEnd: true,\n      }).thenReturn(deferredScripts.length > 0);\n    })\n    .then(() => {\n      Logging.logger.debug(\"dispatchEvent: DOMContentLoaded (window)\");\n      window.dispatchEvent(new Event(\"DOMContentLoaded\"));\n      Logging.logger.debug(\"dispatchEvent: load (window)\");\n      window.dispatchEvent(new Event(\"load\"));\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function hasScripts(window: Window) {\n  if (!allowScripts) {\n    return false;\n  }\n  return (\n    deferredScripts.length > 0 ||\n    !!window.document.head.querySelector(\"script[data-vivliostyle-scripting]\")\n  );\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap = {};\n\nexport const frontEdgeBlackListHor: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-top\": \"0px\",\n  \"padding-top\": \"0px\",\n  \"border-top-width\": \"0px\",\n  \"border-top-style\": \"none\",\n  \"border-top-color\": \"transparent\",\n  \"border-top-left-radius\": \"0px\",\n  \"border-top-right-radius\": \"0px\",\n};\n\nexport const frontEdgeBlackListVert: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-right\": \"0px\",\n  \"padding-right\": \"0px\",\n  \"border-right-width\": \"0px\",\n  \"border-right-style\": \"none\",\n  \"border-right-color\": \"transparent\",\n  \"border-top-right-radius\": \"0px\",\n  \"border-bottom-right-radius\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListHor: { [key: string]: string } = {\n  \"margin-top\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListVert: { [key: string]: string } = {\n  \"margin-right\": \"0px\",\n};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext\n{\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /**\n   * @override\n   */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"];\n          if (\n            !content ||\n            content === Css.ident.normal ||\n            content === Css.ident.none\n          ) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle = (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createRefShadow\");\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createShadows\");\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (templateURLVal instanceof Css.URL) {\n      const url = (templateURLVal as Css.URL).url;\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n      });\n      cont2.then((shadow) => {\n        shadow = this.createPseudoelementShadow(\n          element,\n          isRoot,\n          cascStyle,\n          computedStyle,\n          styler,\n          context,\n          shadowContext,\n          shadow,\n        );\n        frame.finish(shadow);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      (name, cascVal) => {\n        let value = cascVal.evaluate(context, name);\n        if (name == \"font-family\") {\n          value = this.docFaces.filterFontFamily(value);\n        }\n        return value;\n      },\n    );\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"] as Css.Ident;\n    const displayValues = Display.getComputedDislayValue(\n      (computedStyle[\"display\"] as Css.Ident) || Css.ident.inline,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(elementStyle: CssCascade.ElementStyle): {\n    lang: string | null;\n    elementStyle: CssCascade.ElementStyle;\n  } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const value = CssCascade.getProp(style, name);\n        if (!Css.isDefaultingValue(value.value)) {\n          if (\n            name === \"font-size\" &&\n            i === styles.length - 1 &&\n            this.context.isRelativeRootFontSize &&\n            this.context.rootFontSize\n          ) {\n            // Fix for issue #608, #549\n            props[name] = new CssCascade.CascadeValue(\n              new Css.Numeric(this.context.rootFontSize, \"px\"),\n              value.priority,\n            );\n            continue;\n          }\n          props[name] = value.filterValue(inheritanceVisitor);\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps =\n      CssCascade.getPolyfilledInheritedProps().filter(\n        (name) => computedStyle[name],\n      );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (Css.isDefaultingValue(value)) {\n            if (value === Css.ident.initial) {\n              props[name] = undefined;\n            }\n          } else if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n              default:\n                props[name] = value;\n            }\n          } else {\n            props[name] = value;\n          }\n          delete computedStyle[name];\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Ident,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? (this.nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const floatReferenceCV: CssCascade.CascadeValue =\n      elementStyle[\"float-reference\"];\n    const floatReference =\n      floatReferenceCV && !Css.isDefaultingValue(floatReferenceCV.value)\n        ? PageFloats.floatReferenceOf(floatReferenceCV.value.toString())\n        : null;\n    if (\n      this.nodeContext.parent &&\n      floatReference &&\n      PageFloats.isPageFloat(floatReference)\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    styler.processContent(element, computedStyle);\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    if (Scripts.allowScripts && element instanceof HTMLScriptElement) {\n      Scripts.loadScript(element, this.viewport.window).thenFinish(frame);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"];\n    if (Css.isDefaultingValue(display)) {\n      if (display === Css.ident.initial || display === Css.ident.unset) {\n        display = Css.ident.inline;\n      } else if (display === Css.ident.inherit) {\n        display =\n          this.nodeContext.parent?.display &&\n          Css.getName(this.nodeContext.parent?.display);\n      } else {\n        display = null;\n      }\n    }\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext as Vtree.ShadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"];\n      let floatSide = computedStyle[\"float\"];\n      let clearSide = computedStyle[\"clear\"];\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"],\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute =\n        Display.establishesCBForAbsolute(position);\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      const breakInside = computedStyle[\"break-inside\"];\n      if (\n        floating ||\n        (breakInside &&\n          !Css.isDefaultingValue(breakInside) &&\n          breakInside !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      const floatMinWrapBlock = computedStyle[\"float-min-wrap-block\"];\n      this.nodeContext.floatMinWrapBlock =\n        floatMinWrapBlock && !Css.isDefaultingValue(floatMinWrapBlock)\n          ? floatMinWrapBlock\n          : null;\n      const columnSpan = computedStyle[\"column-span\"];\n      this.nodeContext.columnSpan =\n        columnSpan && !Css.isDefaultingValue(columnSpan) ? columnSpan : null;\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (breakAfter && !Css.isDefaultingValue(breakAfter)) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (breakBefore && !Css.isDefaultingValue(breakBefore)) {\n          this.nodeContext.breakBefore = breakBefore.toString();\n        }\n        // Named page type\n        const pageVal: Css.Val = computedStyle[\"page\"];\n        let pageType =\n          pageVal && !Css.isDefaultingValue(pageVal) && pageVal.toString();\n        if (!pageType || pageType.toLowerCase() === \"auto\") {\n          pageType = this.nodeContext.pageType;\n        } else {\n          this.nodeContext.pageType = pageType;\n        }\n        if (this.styler.cascade.currentPageType !== pageType) {\n          if (!this.isAtForcedBreak()) {\n            this.nodeContext.breakBefore = \"page\";\n          }\n          this.styler.cascade.previousPageType =\n            this.styler.cascade.currentPageType;\n          this.styler.cascade.currentPageType = pageType;\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing;\n        let blockBorderSpacing;\n        if (borderSpacing) {\n          if (borderSpacing.isSpaceList()) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      const footnotePolicy = computedStyle[\"footnote-policy\"];\n      this.nodeContext.footnotePolicy =\n        footnotePolicy && !Css.isDefaultingValue(footnotePolicy)\n          ? footnotePolicy\n          : null;\n      const firstPseudo = computedStyle[\"x-first-pseudo\"];\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter !== Css.ident.auto) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const lineBreak = computedStyle[\"line-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"];\n      this.nodeContext.breakWord =\n        wordBreak === Css.ident.break_all ||\n        lineBreak === Css.ident.anywhere ||\n        overflowWrap === Css.ident.break_word ||\n        overflowWrap === Css.ident.anywhere;\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak =\n          this.processRepeatOnBreak(computedStyle);\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (\n            elementStyle[\"content\"] &&\n            elementStyle[\"content\"].value &&\n            elementStyle[\"content\"].value.url\n          ) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.NCX) {\n        ns = Base.NS.XHTML;\n        if (tag == \"ncx\" || tag == \"navPoint\") {\n          tag = \"div\";\n        } else if (tag == \"navLabel\") {\n          // Cheat here. Translate source to HTML, so it will plug\n          // in into the rest of the pipeline.\n          tag = \"span\";\n          const navParent = element.parentNode;\n          if (navParent) {\n            // find the content element\n            let href: string | null = null;\n            for (let c: Node = navParent.firstChild; c; c = c.nextSibling) {\n              if (c.nodeType != 1) {\n                continue;\n              }\n              const childElement = c as Element;\n              if (\n                childElement.namespaceURI == Base.NS.NCX &&\n                childElement.localName == \"content\"\n              ) {\n                href = childElement.getAttribute(\"src\");\n                break;\n              }\n            }\n            if (href) {\n              tag = \"a\";\n              element = element.ownerDocument.createElementNS(ns, \"a\");\n              element.setAttribute(\"href\", href);\n            }\n          }\n        } else {\n          tag = \"span\";\n        }\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else if (computedStyle[\"display\"] === Css.ident.none) {\n          // No element should be created if display:none is set.\n          // (Fix issue #924)\n          frame.finish(false);\n          return;\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (!Scripts.allowScripts && attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                const transformedValue =\n                  this.documentURLTransformer.transformFragment(\n                    attributeValue,\n                    this.xmldoc.url,\n                  );\n                if (\n                  Scripts.allowScripts &&\n                  !(\n                    result.namespaceURI === Base.NS.SVG &&\n                    result.localName !== \"svg\"\n                  ) &&\n                  !result.ownerDocument.getElementById(attributeValue)\n                ) {\n                  // Keep original id value so that JavaScript can manipulate it\n                  result.setAttribute(attributeName, attributeValue);\n                  result.setAttribute(\"data-vivliostyle-id\", transformedValue);\n\n                  // Create an anchor element with transformed id, necessary for internal links in output PDF\n                  // (issue #877)\n                  const anchorElem = result.ownerDocument.createElement(\"a\");\n                  anchorElem.setAttribute(attributeName, transformedValue);\n                  anchorElem.style.position = \"absolute\";\n                  result.appendChild(anchorElem);\n                } else {\n                  result.setAttribute(attributeName, transformedValue);\n                }\n                this.page.registerElementWithId(result, transformedValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = TaskUtil.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.resolveURL(attributeValue);\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(\n              TaskUtil.loadElement(result, attributeValue),\n            );\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              try {\n                result.setAttribute(attributeName, attributeValue);\n              } catch (err) {\n                Logging.logger.warn(err);\n              }\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = TaskUtil.loadElement(image, delayedSrc);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          if (!hasAutoWidth && !hasAutoHeight) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(TaskUtil.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n        if (!this.nodeContext.inline) {\n          let blackList: { [key: string]: string } = null;\n          if (!firstTime) {\n            if (\n              this.nodeContext.inheritedProps[\"box-decoration-break\"] !==\n              \"clone\"\n            ) {\n              blackList = this.nodeContext.vertical\n                ? frontEdgeBlackListVert\n                : frontEdgeBlackListHor;\n            } else {\n              // When box-decoration-break: clone, cloned margins are always\n              // truncated to zero.\n              blackList = this.nodeContext.vertical\n                ? frontEdgeUnforcedBreakBlackListVert\n                : frontEdgeUnforcedBreakBlackListHor;\n            }\n          } else if (atUnforcedBreak && !this.isAtForcedBreak()) {\n            blackList = this.nodeContext.vertical\n              ? frontEdgeUnforcedBreakBlackListVert\n              : frontEdgeUnforcedBreakBlackListHor;\n          }\n          if (blackList) {\n            for (const propName in blackList) {\n              // Fix for issue #737\n              if (propName === \"text-indent\" && !this.isParagraph(element)) {\n                continue;\n              }\n              Base.setCSSProperty(result, propName, blackList[propName]);\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  private isParagraph(element: Element): boolean {\n    switch (element.localName) {\n      case \"p\":\n        return true;\n      case \"html\":\n      case \"body\":\n      case \"main\":\n      case \"article\":\n      case \"section\":\n        return false;\n    }\n    const textLevelElements = {\n      a: true,\n      abbr: true,\n      b: true,\n      bdi: true,\n      bdo: true,\n      cite: true,\n      code: true,\n      data: true,\n      del: true,\n      dfn: true,\n      em: true,\n      i: true,\n      ins: true,\n      kbd: true,\n      mark: true,\n      q: true,\n      ruby: true,\n      s: true,\n      samp: true,\n      small: true,\n      span: true,\n      strong: true,\n      sub: true,\n      sup: true,\n      time: true,\n      u: true,\n      var: true,\n    };\n    for (\n      let childNode = element.firstChild;\n      childNode;\n      childNode = childNode.nextSibling\n    ) {\n      switch (childNode.nodeType) {\n        case Node.TEXT_NODE:\n          if (childNode.nodeValue.trim().length > 0) {\n            return true;\n          }\n          break;\n        case Node.ELEMENT_NODE:\n          if (textLevelElements[(childNode as Element).localName]) {\n            return true;\n          }\n          break;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the current position is at a forced break\n   * (Fix for Issue #690)\n   */\n  private isAtForcedBreak(): boolean {\n    for (\n      let nodeContext = this.nodeContext;\n      nodeContext && !nodeContext.after;\n      nodeContext = nodeContext.parent\n    ) {\n      if (Break.isForcedBreakValue(nodeContext.breakBefore)) {\n        return true;\n      }\n      if (\n        nodeContext.parent &&\n        (nodeContext.parent.sourceNode as Element).firstElementChild !==\n          nodeContext.sourceNode\n      ) {\n        break;\n      }\n    }\n    return false;\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  /**\n   * @return isSVGUrlAttribute\n   */\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext =\n        new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n          parentFormattingContext,\n          this.nodeContext.sourceNode as Element,\n        );\n      (\n        this.nodeContext\n          .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n      ).initializeRepetitiveElements(this.nodeContext.vertical);\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (\n        repeatOnBreak === Css.ident.auto ||\n        Css.isDefaultingValue(repeatOnBreak)\n      ) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const parent = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : this.viewRoot;\n        if (parent) {\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      (pos.sourceNode as Element).namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    const contentShadow = shadow.subShadow || shadow.parentShadow;\n    if (shadow.subShadow) {\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /**\n   * @override\n   */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(TaskUtil.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    const isRoot =\n      this.nodeContext?.parent === null &&\n      this.sourceNode?.parentElement === null &&\n      !!this.viewRoot?.parentElement;\n\n    for (const propName in computedStyle) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      if (!value || value === Css.empty) {\n        continue;\n      }\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value.isNumeric() &&\n        Exprs.needUnitConversion((value as Css.Numeric).unit)\n      ) {\n        // font-size for the root element is already converted to px\n        value = Css.convertNumericToPx(value, this.context);\n      }\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      if (target.localName === \"rt\" && propName === \"font-size\") {\n        // Fix for Issue #673\n        if (this.fixRubyTextFontSize(target, value)) {\n          continue;\n        }\n      }\n      if (\n        isRoot &&\n        this.page.pageAreaElement &&\n        CssCascade.isInherited(propName)\n      ) {\n        // Fix for Issue #568\n        Base.setCSSProperty(\n          this.page.pageAreaElement.parentElement,\n          propName,\n          value.toString(),\n        );\n      } else {\n        Base.setCSSProperty(target, propName, value.toString());\n      }\n    }\n  }\n\n  /**\n   * Fix ruby text font size.\n   * Issue #673: Minimum font size setting in Chrome causes ruby font size problem\n   * @param target the rt element\n   * @param value the font-size value\n   * @returns true if the font-size fix is done\n   */\n  fixRubyTextFontSize(target: Element, value: Css.Val): boolean {\n    if (!/Chrome/.test(navigator.userAgent)) {\n      // Do nothing if the browser engine is not \"Chrome\"\n      return false;\n    }\n    if (!value.isNumeric()) {\n      return false;\n    }\n    const numeric = value as Css.Numeric;\n    let fontSizeInPx: number;\n    if (numeric.unit === \"%\" || numeric.unit === \"em\") {\n      const parentElem = this.nodeContext?.parent?.viewNode as Element;\n      const parentFontSize =\n        parentElem &&\n        parseFloat(this.viewport.window.getComputedStyle(parentElem).fontSize);\n      fontSizeInPx =\n        (parentFontSize * numeric.num) / (numeric.unit === \"%\" ? 100 : 1);\n    } else {\n      fontSizeInPx = Css.convertNumericToPx(numeric, this.context).num;\n    }\n    if (!fontSizeInPx) {\n      return false;\n    }\n    const minFontSizeInPx = 10; // Default minimum font size setting in Chrome\n    if (fontSizeInPx >= minFontSizeInPx) {\n      return false;\n    }\n    if (!(target instanceof HTMLElement && \"zoom\" in target.style)) {\n      return false;\n    }\n    const zoom = fontSizeInPx / minFontSizeInPx;\n    Base.setCSSProperty(target, \"font-size\", `${minFontSizeInPx}px`);\n    Base.setCSSProperty(target, \"zoom\", `${zoom}`);\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /**\n   * @override\n   */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /**\n   * @override\n   */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /**\n   * @override\n   */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    if (nodeContext) {\n      nodeContext.walkUpBlocks((block) => {\n        const boxDecorationBreak = block.inheritedProps[\"box-decoration-break\"];\n        if (!boxDecorationBreak || boxDecorationBreak === \"slice\") {\n          const elem = block.viewNode as Element;\n          Asserts.assert(elem instanceof Element);\n          if (block.vertical) {\n            Base.setCSSProperty(elem, \"padding-left\", \"0\");\n            Base.setCSSProperty(elem, \"border-left\", \"none\");\n            Base.setCSSProperty(elem, \"border-top-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n          } else {\n            Base.setCSSProperty(elem, \"padding-bottom\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom\", \"none\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-right-radius\", \"0\");\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /**\n   * @override\n   */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"box-decoration-break\": true,\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  page: true,\n};\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /**\n   * @override\n   */\n  getRangeClientRects(range: Range): Vtree.ClientRect[] {\n    const rects = range.getClientRects();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.subtractOffsets(rect, layoutBoxRect),\n    );\n  }\n\n  /**\n   * @override\n   */\n  getElementClientRect(element: Element): Vtree.ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    if (\n      rect.left === 0 &&\n      rect.top === 0 &&\n      rect.right === 0 &&\n      rect.bottom === 0\n    ) {\n      // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n      // (Fix for issue #802)\n      return rect;\n    }\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.subtractOffsets(rect, layoutBoxRect);\n  }\n\n  /**\n   * @override\n   */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: Element;\n  width: number;\n  height: number;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n    let outerZoomBox = this.root.firstElementChild;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n    let layoutBox = outerZoomBox.nextElementSibling;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox as HTMLElement;\n    this.contentContainer = contentContainer as HTMLElement;\n    this.layoutBox = layoutBox as HTMLElement;\n    const clientLayout = new DefaultClientLayout(this);\n    const computedStyle = clientLayout.getElementComputedStyle(this.root);\n    this.width =\n      opt_width || parseFloat(computedStyle[\"width\"]) || window.innerWidth;\n    this.height =\n      opt_height || parseFloat(computedStyle[\"height\"]) || window.innerHeight;\n\n    // Use the fallbackPageSize if window size is 0 or browser is in headless mode.\n    const fallbackPageSize = {\n      // compromise between A4 (210mm 297mm) and letter (8.5in 11in)\n      width: 794, // 210mm (8.27in)\n      height: 1056, // 279.4mm (11in)\n    };\n    const isHeadlessBrowser =\n      (!window.outerWidth && !window.outerHeight) ||\n      /Headless/.test(navigator.userAgent) ||\n      (navigator.webdriver &&\n        window.innerWidth === 800 &&\n        window.innerHeight === 600);\n\n    if (!this.width || (!opt_width && isHeadlessBrowser)) {\n      this.width = fallbackPageSize.width;\n    }\n    if (!this.height || (!opt_height && isHeadlessBrowser)) {\n      this.height = fallbackPageSize.height;\n    }\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n    Base.setCSSProperty(this.contentContainer, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.Response): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.Response,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.XMLHttpRequestResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as TextPolyfill from \"./text-polyfill\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> =\n  new TaskUtil.Fetcher(() => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  }, \"uaStylesheetBaseFetcher\");\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n    this.pageScope.defineName(\n      \"blank-page\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          const cp = styleInstance.currentLayoutPosition;\n          return cp?.isBlankPage;\n        },\n        \"blank-page\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"];\n      const height = viewportProps[\"height\"];\n      const textZoom = viewportProps[\"text-zoom\"];\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer\n{\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n\n    // Named page type at first page\n    this.styler.cascade.currentPageType = this.styler.cascade.firstPageType;\n\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).then(() => {\n      // JavaScript in HTML documents support\n      Scripts.loadScriptsInHead(\n        this.xmldoc.document,\n        this.viewport.window,\n        this.styler,\n      ).thenFinish(frame);\n    });\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    if (!pageProps[\"\"]) {\n      pageProps[\"\"] = {};\n    }\n    Object.keys(pageProps).forEach((selector) => {\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageProps[selector] as any),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /**\n   * @override\n   */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /**\n   * @override\n   */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /**\n   * @override\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  /**\n   * @override\n   */\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    if (isFunc) {\n      if (name === \"selector\") {\n        // TODO: `@supports selector(...)`\n      }\n      return false;\n    }\n    if (!name) {\n      // `(...)` without `name:`\n      return false;\n    }\n\n    let supported = true;\n\n    class SupportsReceiver implements CssValidator.PropertyReceiver {\n      unknownProperty(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      invalidPropertyValue(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      simpleProperty(name: string, value: Css.Val, important): void {}\n    }\n\n    const supportsReceiver = new SupportsReceiver();\n    const val = CssParser.parseValue(\n      this.style.rootScope,\n      new CssTokenizer.Tokenizer(value, null),\n      \"\",\n    );\n    if (!val) {\n      return false;\n    }\n    const validatorSet = (this.xmldoc.store as OPSDocStore).validatorSet;\n    validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      val,\n      false,\n      supportsReceiver,\n    );\n    return supported;\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = Break.startSideValueToBreakValue(\n            flowPos.startSide,\n          );\n          flowPos.startSide = Break.breakValueToStartSideValue(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          const size = cascadedPageStyle[\"size\"];\n          cascadedPageStyle = {}; // clear margin boxes\n          if (size) {\n            // Restore page size (fix for issue #743)\n            cascadedPageStyle[\"size\"] = size;\n          }\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition =\n        this.layoutPositionAtPageStart.flowPositions[parentFlowName];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startSide);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats. (Issue #681)\n    const checkPageFloatForLaterPage = (\n      float: PageFloats.PageFloat,\n    ): boolean => {\n      // FIXME: This check is incomplete when float-reference is other than \"page\".\n      // so give up for now to prevent another problem (Issue #962).\n      if (\n        !this.pageAreaWidth &&\n        !this.pageAreaHeight &&\n        float.floatReference !== PageFloats.FloatReference.PAGE\n      ) {\n        return false;\n      }\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      const deferredFloatOffset = this.xmldoc.getNodeOffset(\n        float.nodePosition.steps[0].node,\n        0,\n        false,\n      );\n      return (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      );\n    };\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n\n        // Prevent deferred page floats from appearing in the preceding pages\n        // (Issue #681)\n        if (checkPageFloatForLaterPage(float)) {\n          loopFrame.breakLoop();\n          return;\n        }\n\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(float);\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated =\n              pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startSide)) {\n      return Task.newResult(true);\n    }\n    flowPosition.startSide = \"any\";\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition =\n                    this.getLastAfterPositionIfDeferredFloatsExists(\n                      column,\n                      newPosition,\n                    );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    if (column.pageBreakType) {\n                      // forced break\n                      flowPosition.startSide = Break.breakValueToStartSideValue(\n                        column.pageBreakType,\n                      );\n                    }\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint =\n      this.counterStore.createLayoutConstraint(pageIndex);\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            const outerWidth = parseFloat(\n              (boxContainer as HTMLElement).style.width,\n            );\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft + outerWidth - layoutContainer.width,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if (column.width >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition =\n        this.currentLayoutPosition.flowPositions[flowNameStr];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> =\n      Task.newFrame(\"layoutFlowColumns\");\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n\n    if (\n      boxInstance instanceof CssPage.PageRuleMasterInstance &&\n      (layoutContainer.width <= 0 || layoutContainer.height <= 0)\n    ) {\n      Logging.logger.warn(\"Negative or zero page area size\");\n    }\n\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer =\n          this.viewport.document.createElement(innerContainerTag);\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSinglUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n        if (innerContainerTag == \"span\") {\n          // text-spacing & hanging-punctuation on margin boxes\n          TextPolyfill.processGeneratedContent(\n            innerContainer,\n            boxInstance.getProp(this, \"text-spacing\"),\n            boxInstance.getProp(this, \"hanging-punctuation\"),\n            this.lang,\n            boxInstance.vertical,\n          );\n        }\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition =\n            this.currentLayoutPosition.flowPositions[flowNameStr];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n\n          // Though it seems that LShapeFloatBug still exists in Firefox, it\n          // apparently does not occur on exclusion floats. See the test file:\n          // test/files/column-break-bug.html\n          // if (Base.checkLShapeFloatBug(this.viewport.root)) {\n          // \t// Simplistic bug workaround: add a copy of the shape translated up.\n          //     exclusions.push(outerShape.withOffset(0, -1.25 * this.queryUnitSize(\"em\", false)));\n          // }\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n\n    // Limit number of pages to prevent endless page generation\n    const LIMIT_PAGES = 10000;\n    if (cp.page > LIMIT_PAGES) {\n      throw new Error(`Too many pages generated (over ${LIMIT_PAGES} pages)`);\n    }\n    cp.page++;\n\n    const startSide = cp.flowPositions[\"body\"]?.startSide;\n    cp.isBlankPage =\n      startSide && startSide !== \"any\" && this.matchPageSide(startSide);\n    page.isBlankPage = cp.isBlankPage;\n\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle(\n          (page.isBlankPage\n            ? this.styler.cascade.previousPageType\n            : this.styler.cascade.currentPageType) ?? \"\",\n        );\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        pageMaster.pageBox.specified[\"width\"].value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        pageMaster.pageBox.specified[\"height\"].value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> =\n      Task.newFrame(\"layoutNextPage\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {}\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\n// override, so we don't register an error\nexport function processViewportMeta(meta: Element): string {\n  let content = meta.getAttribute(\"content\");\n  if (!content) {\n    return \"\";\n  }\n  const vals = {};\n  let r: RegExpMatchArray;\n  while (\n    (r = content.match(\n      /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n    )) != null\n  ) {\n    content = content.substr(r[0].length);\n    vals[r[1]] = r[2];\n  }\n  const width = vals[\"width\"] - 0;\n  const height = vals[\"height\"] - 0;\n  if (width && height) {\n    return `@-epubx-viewport{width:${width}px;height:${height}px;}`;\n  }\n  return \"\";\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(\"CSS parser:\", mnemonics);\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.Response,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.XMLHttpRequestResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const userAgentXML = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.load(userAgentXML).then(() => {\n        this.triggerSingleDocumentPreprocessing = true;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(response: Net.Response): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> =\n      Task.newFrame(\"OPSDocStore.load\");\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] =\n            Plugin.getHooksForName(Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT);\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        const userAgentURL = Base.resolveURL(\n          \"user-agent-page.css\",\n          Base.resourceBaseURL,\n        );\n        sources.push({\n          url: userAgentURL,\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (!isTocBox) {\n          const elemList =\n            xmldoc.document.querySelectorAll(\"style, link, meta\");\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const rel = elem.getAttribute(\"rel\");\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  rel == \"stylesheet\" ||\n                  (rel == \"alternate stylesheet\" && classes)\n                ) {\n                  let src = elem.getAttribute(\"href\");\n                  src = Base.resolveURL(src, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> =\n              Task.newFrame(\"fetchStylesheet\");\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sha1 - Calculate SHA1 hash of the given content.\n */\nimport * as Base from \"./base\";\n\n/**\n * @return big-endian byte sequence\n */\nexport function encode32(n: number): string {\n  return String.fromCharCode(\n    (n >>> 24) & 255,\n    (n >>> 16) & 255,\n    (n >>> 8) & 255,\n    n & 255,\n  );\n}\n\n/**\n * @param bytes big-endian byte sequence\n */\nexport function decode32(bytes: string): number {\n  // Important facts: \"\".charCodeAt(0) == NaN, NaN & 0xFF == 0\n  const b0 = bytes.charCodeAt(0) & 255;\n  const b1 = bytes.charCodeAt(1) & 255;\n  const b2 = bytes.charCodeAt(2) & 255;\n  const b3 = bytes.charCodeAt(3) & 255;\n  return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return big-endian uint32 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int32(bytes: string): number[] {\n  const sb = new Base.StringBuffer();\n  sb.append(bytes);\n  let appendCount = (55 - bytes.length) & 63;\n  sb.append(\"\\u0080\");\n  while (appendCount > 0) {\n    appendCount--;\n    sb.append(\"\\x00\");\n  }\n  sb.append(\"\\x00\\x00\\x00\\x00\");\n  sb.append(encode32(bytes.length * 8));\n  bytes = sb.toString();\n  const h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  const w =\n    /** @type Array.<number> */\n    [] as number[];\n  let i: number;\n  for (let bi = 0; bi < bytes.length; bi += 64) {\n    for (i = 0; i < 16; i++) {\n      w[i] = decode32(bytes.substr(bi + 4 * i, 4));\n    }\n    for (; i < 80; i++) {\n      const q = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n      w[i] = (q << 1) | (q >>> 31);\n    }\n    let a = h[0];\n    let b = h[1];\n    let c = h[2];\n    let d = h[3];\n    let e = h[4];\n    let f: number;\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = ((b & c) | (~b & d)) + 1518500249;\n      } else if (i < 40) {\n        f = (b ^ c ^ d) + 1859775393;\n      } else if (i < 60) {\n        f = ((b & c) | (b & d) | (c & d)) + 2400959708;\n      } else {\n        f = (b ^ c ^ d) + 3395469782;\n      }\n      f += ((a << 5) | (a >>> 27)) + e + w[i];\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = f;\n    }\n    h[0] = (h[0] + a) | 0;\n    h[1] = (h[1] + b) | 0;\n    h[2] = (h[2] + c) | 0;\n    h[3] = (h[3] + d) | 0;\n    h[4] = (h[4] + e) | 0;\n  }\n  return h;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return uint8 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int8(bytes: string): number[] {\n  const h = bytesToSHA1Int32(bytes);\n  const res = [];\n  for (const n of h) {\n    res.push((n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, n & 255);\n  }\n  return res;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return chars with codes 0 - 255 equal to SHA1 hash of the input\n */\nexport function bytesToSHA1Bytes(bytes: string): string {\n  const h = bytesToSHA1Int32(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < h.length; i++) {\n    sb.append(encode32(h[i]));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return hex-encoded SHA1 hash\n */\nexport function bytesToSHA1Hex(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < sha1.length; i++) {\n    sb.append((sha1.charCodeAt(i) | 256).toString(16).substr(1));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return base64-encoded SHA1 hash of the input\n */\nexport function bytesToSHA1Base64(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  Base.appendBase64(sb, sha1);\n  return sb.toString();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"body-child\":\n            if (\n              !srcElem.querySelector(\n                \"[role=doc-toc], [role=directory], nav li a, .toc, #toc\",\n              )\n            ) {\n              // hide elements not containing TOC.\n              computedStyle[\"display\"] = Css.ident.none;\n            }\n            break;\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        firstChild.textContent.trim() === \"\"\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = Base.stripFragment(this.url) + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      // Mark if this doc is the primary entry page.\n      const nonTocBoxDoc = this.store.resources[this.url];\n\n      // Make hidden TOC visible in TOC box\n      for (const elem of xmldoc.document.querySelectorAll(\n        \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n      )) {\n        if (elem.hasAttribute(\"hidden\")) {\n          elem.removeAttribute(\"hidden\");\n        }\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          Array.from(\n            page.container.querySelectorAll(\n              \"[data-vivliostyle-toc-box]>*>*>*>*>*[style*='display: none']\",\n            ),\n          ).forEach((bodyChildElem) => {\n            bodyChildElem.setAttribute(\"aria-hidden\", \"true\");\n            bodyChildElem.setAttribute(\"hidden\", \"hidden\");\n          });\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#?(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as SHA1 from \"./sha1\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  startLoadingAsJSON(url: string): void {\n    this.jsonStore.fetch(url);\n  }\n\n  loadPubDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.ajax(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root, haveZipMetadata).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    if (haveZipMetadata) {\n      this.startLoadingAsJSON(url + \"?r=list\");\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root, haveZipMetadata).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(\n    pubURL: string,\n    root: string,\n    haveZipMetadata: boolean,\n  ): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              const zipMetadataResult = haveZipMetadata\n                ? this.loadAsJSON(`${pubURL}?r=list`)\n                : Task.newResult(null);\n              zipMetadataResult.then((zipMetadata) => {\n                opf = new OPFDoc(this, pubURL);\n                opf\n                  .initWithXMLDoc(\n                    opfXML,\n                    encXML,\n                    zipMetadata,\n                    `${pubURL}?r=manifest`,\n                  )\n                  .then(() => {\n                    this.opfByURL[url] = opf;\n                    this.primaryOPFByEPubURL[pubURL] = opf;\n                    frame.finish(opf);\n                  });\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        if (doc.body) {\n          doc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n        }\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(\n              manifestUrl,\n              true,\n              `Failed to fetch Publication Manifest ${manifestUrl}`,\n            ).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.xhtmlToc && opf.xhtmlToc.src === xmldoc.url) {\n              // xhtmlToc is the primari entry (X)HTML\n              if (\n                !doc.querySelector(\n                  \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n                )\n              ) {\n                // TOC is not found in the primari entry (X)HTML\n                opf.xhtmlToc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  // TODO: use UTF8 of uid\n  const sha1Sum = SHA1.bytesToSHA1Int8(uid);\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    let head: Blob;\n    let tail: Blob;\n    if (blob.slice) {\n      head = blob.slice(0, 1040);\n      tail = blob.slice(1040, blob.size);\n    } else {\n      head = blob[\"webkitSlice\"](0, 1040);\n      tail = blob[\"webkitSlice\"](1040, blob.size - 1040);\n    }\n    Net.readBlob(head).then((buf) => {\n      const dataView = new DataView(buf);\n      for (let k = 0; k < dataView.byteLength; k++) {\n        let b = dataView.getUint8(k);\n        b ^= sha1Sum[k % 20];\n        dataView.setUint8(k, b);\n      }\n      frame.finish(Net.makeBlob([dataView, tail]));\n    });\n    return frame.result();\n  };\n}\n\nexport function makeObfuscationKey(uid: string): string {\n  return `1040:${SHA1.bytesToSHA1Hex(uid)}`;\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport function checkMathJax(): void {\n  if (getMathJaxHub()) {\n    CssCascade.supportedNamespaces[Base.NS.MATHML] = true;\n  }\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  ncxToc: OPFItem = null;\n  xhtmlToc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n    checkMathJax();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /**\n       * @override\n       */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /**\n       * @override\n       */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.items.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /**\n       * @override\n       */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURIComponent(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n    zipMetadata: Base.JSON,\n    manifestURL: string,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.xhtmlToc && item.itemProperties[\"nav\"]) {\n          this.xhtmlToc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const tocAttr = pkg.child(\"spine\").attribute(\"toc\")[0];\n    if (tocAttr) {\n      this.ncxToc = this.itemMap[tocAttr];\n    }\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (!zipMetadata) {\n      if (idpfObfURLs.length > 0 && this.uid) {\n        // Have to deobfuscate in JavaScript\n        const deobfuscator = makeDeobfuscator(this.uid);\n        for (let i = 0; i < idpfObfURLs.length; i++) {\n          this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n        }\n      }\n      if (this.prePaginated) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n    const manifestText = new Base.StringBuffer();\n    const obfuscations = {};\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Deobfuscate in the server.\n      const obfuscationKey = makeObfuscationKey(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        obfuscations[idpfObfURLs[i]] = obfuscationKey;\n      }\n    }\n    for (let i = 0; i < zipMetadata.length; i++) {\n      const entry = zipMetadata[i];\n      const encodedPath = entry[\"n\"];\n      if (encodedPath) {\n        const path = decodeURIComponent(encodedPath);\n        const item = this.itemMapByPath[path];\n        let mediaType: string | null = null;\n        if (item) {\n          item.compressed = entry[\"m\"] != 0;\n          item.compressedSize = entry[\"c\"];\n          if (item.mediaType) {\n            mediaType = item.mediaType.replace(/\\s+/g, \"\");\n          }\n        }\n        const obfuscation = obfuscations[path];\n        if (mediaType || obfuscation) {\n          manifestText.append(encodedPath);\n          manifestText.append(\" \");\n          manifestText.append(mediaType || \"application/octet-stream\");\n          if (obfuscation) {\n            manifestText.append(\" \");\n            manifestText.append(obfuscation);\n          }\n          manifestText.append(\"\\n\");\n        }\n      }\n    }\n    this.assignAutoPages();\n    return Net.ajax(\n      manifestURL,\n      Net.XMLHttpRequestResponseType.DEFAULT,\n      \"POST\",\n      manifestText.toString(),\n      \"text/plain\",\n    );\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      manifestObj[\"name\"] || manifestObj[\"metadata\"]?.[\"title\"] || doc?.title;\n    if (title) {\n      this.metadata[metaTerms.title] = (\n        Array.isArray(title) ? title : [title]\n      ).map((item) => ({ v: item.value ?? item }));\n    }\n    const author =\n      manifestObj[\"author\"] ||\n      manifestObj[\"creator\"] ||\n      manifestObj[\"metadata\"]?.[\"author\"] ||\n      Array.from(\n        doc?.querySelectorAll(\"meta[name='author'], meta[name='DC.Creator']\") ??\n          [],\n      ).map((meta: HTMLMetaElement) => meta.content);\n    if (author && author.length !== 0) {\n      this.metadata[metaTerms.creator] = (\n        Array.isArray(author) ? author : [author]\n      ).map((item) => ({ v: item.name ?? item }));\n    }\n    const language =\n      manifestObj[\"inLanguage\"] ||\n      manifestObj[\"metadata\"]?.[\"language\"] ||\n      doc?.documentElement.lang ||\n      doc?.documentElement.getAttribute(\"xml:lang\");\n    if (language) {\n      this.metadata[metaTerms.language] = (\n        Array.isArray(language) ? language : [language]\n      ).map((item) => ({ v: item }));\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      const selector =\n        \"[role=doc-toc] a[href],\" +\n        \"[role=directory] a[href],\" +\n        \"nav li a[href],\" +\n        \".toc a[href],\" +\n        \"#toc a[href]\";\n      for (const anchorElem of doc.querySelectorAll(selector)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        if (/\\.(jpe?g|png|gif|pdf|svg|mml)([#?]|$)/.test(href)) {\n          // Avoid link to non-HTML resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder =\n              manifestObj[\"readingOrder\"].includes(itemObj);\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url)\n            ) {\n              const baseUrl = manifestUrl\n                ? manifestUrl.replace(/\\/[^/]+$/, \"/\")\n                : this.pubURL;\n              const param = {\n                url: Base.resolveURL(Base.convertSpecialURL(url), baseUrl),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n\n              //TODO: items not in readingOrder should be excluded from linear reading but available with internal link navigation.\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.xhtmlToc = this.items[tocFound];\n      }\n\n      if (!this.xhtmlToc) {\n        this.xhtmlToc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> =\n      Task.newFrame(\"renderSinglePage\");\n    let page = this.makePage(viewItem, pos);\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  private findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    return this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    );\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPagesUpto\");\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult({ left: null, right: null });\n    }\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getSpread\");\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToEPage\");\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToCFI\");\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateTo\");\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      this.findPage(\n        {\n          spineIndex: item.spineIndex,\n          pageIndex: -1,\n          offsetInItem: target ? viewItem.xmldoc.getElementOffset(target) : 0,\n        },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (\n      page.offset === 0 &&\n      !(viewItem.instance.blankPageAtStart && viewItem.pages.length === 0)\n    ) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"span\");\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[spineIndex] =\n        [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties =\n        item.itemRefElement.getAttribute(\"properties\");\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.xhtmlToc || opf.ncxToc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(350, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    pageCont.style.visibility = \"hidden\";\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 10}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport {\n  TextPolyfillCss,\n  VivliostyleViewportCss,\n  VivliostyleViewportScreenCss,\n} from \"./assets\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  haveZipMetadata: boolean;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    const document = viewportElement.ownerDocument;\n    const findOrCreateStyleElement = (\n      id: string,\n      cssText?: string,\n    ): HTMLElement => {\n      let styleElement = document.getElementById(id);\n      if (!styleElement) {\n        styleElement = document.createElement(\"style\");\n        styleElement.id = id;\n        if (cssText) {\n          styleElement.textContent = cssText;\n        }\n        document.head.appendChild(styleElement);\n      }\n      return styleElement;\n    };\n    findOrCreateStyleElement(\n      \"vivliostyle-viewport-screen-css\",\n      VivliostyleViewportScreenCss,\n    );\n    findOrCreateStyleElement(\n      \"vivliostyle-viewport-css\",\n      VivliostyleViewportCss,\n    );\n    findOrCreateStyleElement(\"vivliostyle-text-polyfill-css\", TextPolyfillCss);\n\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = findOrCreateStyleElement(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.haveZipMetadata = false;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const haveZipMetadata = !!command[\"zipmeta\"];\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL, haveZipMetadata).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    // JavaScript in HTML documents support\n    if (\n      typeof command[\"allowScripts\"] == \"boolean\" &&\n      command[\"allowScripts\"] !== Scripts.allowScripts\n    ) {\n      Scripts.setAllowScripts(command[\"allowScripts\"]);\n      this.needRefresh = true;\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(this.window, this.fontSize, viewportElement);\n    }\n  }\n\n  private resolveSpreadView(viewport: Vgen.Viewport): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        // wide enough for a pair of pages of A/B paper sizes, but not too\n        // narrow\n        return viewport.width / viewport.height >= 1.45 && viewport.width > 800;\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const spreadView = this.resolveSpreadView(viewport);\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n    if (\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (\n      this.opfView &&\n      this.opfView.hasPages() &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    // In this implementation, it generates one page rule with the largest\n    // page size both in width and height in the multiple page sizes.\n    // (Resolve issue #751)\n    if (\n      this.pageRuleStyleElement &&\n      (!this.pageSheetSizeAlreadySet ||\n        this.pageSizes[pageIndex].width !==\n          this.pageSizes[pageIndex - 1]?.width ||\n        this.pageSizes[pageIndex].height !==\n          this.pageSizes[pageIndex - 1]?.height)\n    ) {\n      const widthMax = Math.max(...this.pageSizes.map((p) => p.width));\n      const heightMax = Math.max(...this.pageSizes.map((p) => p.height));\n\n      function convertSize(px: number): number {\n        const pt = px * 0.75;\n        // Workaround for Chromium's rounded page size problem.\n        // (Fix for issue #934 and #936)\n        return Math.ceil(pt);\n      }\n      function extraHeightAdj(): number {\n        // Workaround for issue #947,\n        // only necessary if used with Vivliostyle CLI (LayoutNGPrinting enabled)\n        if (navigator.webdriver) {\n          return 1;\n        }\n        return 0;\n      }\n      const widthPt = convertSize(widthMax);\n      const heightPt = convertSize(heightMax) + extraHeightAdj();\n      const styleText = `@page {margin:0;size:${widthPt}pt ${heightPt}pt;}`;\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.isTOCVisible();\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.hideTOC();\n      this.opfView.removeRenderedPages();\n    }\n    this.pageSizes = [];\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n    if (this.pref.spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          if (!spread.left && !spread.right) {\n            return Task.newResult(null);\n          }\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage =\n            page.side === Constants.PageSide.LEFT ? spread.left : spread.right;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle:\n                          this.opf.spine[this.pagePosition.spineIndex].title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] =\n                          this.opf.spine[this.pagePosition.spineIndex].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          // JavaScript in HTML documents support\n                          if (\n                            Scripts.allowScripts &&\n                            Scripts.hasScripts(this.window)\n                          ) {\n                            Scripts.loadScriptsAtEnd(this.window).then(() => {\n                              if (this.renderAllPages) {\n                                this.setReadyState(\n                                  Constants.ReadyState.COMPLETE,\n                                );\n                              }\n                              this.callback({ t: \"loaded\" });\n                              frame.finish(p);\n                            });\n                          } else {\n                            if (this.renderAllPages) {\n                              this.setReadyState(Constants.ReadyState.COMPLETE);\n                            }\n                            this.callback({ t: \"loaded\" });\n                            frame.finish(p);\n                          }\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> =\n          Task.newFrame(\"moveTo.showCurrent\");\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer\n                .showCurrent(viewer.currentPage, !this.renderAllPages)\n                .then(() => {\n                  loopFrame.continueLoop();\n                });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> =\n              Task.newFrame(\"waitForCommand\");\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: string;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n  allowScripts?: boolean;\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n    allowScripts: true,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!singleDocumentOptions) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      (this.adaptViewer_.opfView.opf.xhtmlToc ||\n        this.adaptViewer_.opfView.opf.ncxToc)\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n","// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer({\n        viewportElement: this.iframeWin.document.body\n          .firstElementChild as HTMLElement,\n        window: this.iframeWin,\n        debug: true,\n      });\n    return new Promise<void>((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n","import {\n    printHTML\n} from \"../src\"\n\n\ndocument.getElementById('print').addEventListener('click', () => {\n    const html = document.getElementById('html').value,\n        css = document.getElementById('css').value,\n        title = document.getElementById('title').value,\n        htmlDoc = `\n        <!doctype html>\n        <html>\n            <head>\n                <meta charset=\"UTF-8\">\n                <title>${title}</title>\n                <style>${css}</style>\n            <head>\n            <body>${html}</body>\n        </html>`,\n        printCallback = iframeWin => {\n            const pageCount = iframeWin.document.querySelectorAll('[data-vivliostyle-page-container]').length\n            console.log(`page count: ${pageCount}`)\n            iframeWin.print()\n        }\n\n    printHTML(htmlDoc, {\n        title,\n        printCallback,\n        hideIframe: true, // Whether to use a hidden iframe (default: true)\n        removeIframe: true // Whether to remove the iframe after use (default: true)\n    })\n})\n"],"names":["DIFF_DELETE","diff_main","text1","text2","cursor_pos","_fix_unicode","editdiff","oldText","newText","oldRange","index","length","newRange","oldLength","newLength","oldCursor","oldBefore","slice","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","Math","min","oldPrefix","newPrefix","make_edit_splice","cursor","suffixLength","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","i","indexOf","hm","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","j","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","mid_common","diff_halfMatch_","diffs_a","diffs_b","concat","text1_length","text2_length","max_d","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","unshift","push","diff_cleanupMerge","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","pointerend","is_surrogate_pair_end","fix_unicode","pointer","count_delete","count_insert","text_delete","text_insert","splice","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","n","pop","changes","charCode","str","before","oldMiddle","newMiddle","after","tuples","ret","remove_empty_tuples","diff","INSERT","DELETE","EQUAL","PageSide","ReadyState","LogLevel","setDebug","value","isDebug","pageProgressionOf","PageProgression","LTR","RTL","Error","argumentsToErrorInfo","args","a","from","e","shift","error","messages","buildMessageAndStackTrace","stack","frameTrace","toString","HOOKS","logger","opt_console","listeners","this","consoleDebug","msg","debug","log","console","consoleInfo","info","consoleWarn","warn","consoleError","triggerListeners","level","forEach","listener","addListener","arguments","DEBUG","INFO","WARN","ERROR","hooks","registerHook","name","fn","hooksForName","Logging","removeHook","getHooksForName","plugin","Profiler","performanceInstance","timestamps","registerTiming","registerStartTiming","registerEndTiming","noop","forceRegisterStartTiming","timestamp","call","forceRegisterEndTiming","printTimings","st","Object","keys","stamps","l","t","start","end","disable","enable","isEnabled","startEnd","now","fallbackPerformanceInstance","Date","profiler","window","performance","profile","firstLetterPattern","emptyObj","stringToJSON","JSON","parse","stripFragment","url","r","match","baseURL","location","href","setBaseURL","NS","resourceBaseURL","setResourceBaseURL","resolveURL","relURL","test","toLowerCase","substr","lastIndexOf","urlOption","replace","convertSpecialURL","exec","asString","v","PriorityQueue","queue","add","item","parentIndex","parent","compare","peek","remove","result","curr","size","childIndex","knownPrefixes","propNameMap","checkIfPropertySupported","prefix","prop","document","documentElement","style","cssPropName","txt","toUpperCase","getPrefixedPropertyNames","prefixed","setCSSProperty","elem","prefixedPropertyNames","elemStyle","setProperty","err","getCSSProperty","opt_value","propertyNames","getPropertyValue","getLangAttribute","element","lang","getAttributeNS","XML","namespaceURI","XHTML","getAttribute","StringBuffer","list","append","clear","join","escapeChar","escapeCSSIdent","escapeCSSStr","lightURLEncode","encodeURIComponent","isLetter","ch","escapeNameStrToHex","s","escapeRegExp","binarySearch","high","good","h","m","numberCompare","b","indexArray","arr","key","map","multiIndexArray","SimpleEventTarget","dispatchEvent","evt","type","target","currentTarget","addEventListener","capture","removeEventListener","hasVerticalBBoxBug","hasInlineBlockJustificationBug","hasSoftWrapOpportunityAfterHyphenBug","hasSoftWrapOpportunityByWbrBug","getId","node","nodeType","idtxt","escape","unescapeChar","unescape","parseExtVal","extstr","p","parseExt","ext","RefStep","appendTo","sb","applyTo","pos","ChildStep","id","sideBias","child","childElements","children","childElementCount","firstChild","next","nextSibling","movedNode","ownerDocument","getElementById","OffsetStep","offset","textBefore","textAfter","textLength","textContent","Fragment","steps","fromString","fragstr","decodeURIComponent","parseInt","Base","navigate","doc","ref","trim","text","prependPathFromNode","parentNode","previousSibling","reverse","clonePreferences","pref","fontFamily","lineHeight","margin","hyphenate","columnWidth","horizontal","nightMode","spreadView","pageBorder","enabledMediaTypes","assign","defaultPaperSize","defaultPreferencesInstance","vivliostyle","print","Special","letterbox","viewW","viewH","objW","objH","scale","cssString","cssIdent","makeQualifiedName","objName","memberName","nextKeyIndex","LexicalScope","resolver","scopeKey","zero","one","_true","_false","values","funcs","builtIns","Const","round","sqrt","max","typeof","defineBuiltInName","pageWidth","pageHeight","fontSize","pubTitle","docTitle","Native","defineName","qualifiedName","val","defineFunc","defineBuiltIn","isViewportRelativeLengthUnit","unit","defaultUnitSizes","px","in","pt","pc","cm","mm","q","em","rem","ex","dppx","dpi","dpcm","needUnitConversion","CSS","supports","Context","rootScope","viewportWidth","viewportHeight","actualPageWidth","actualPageHeight","initialFontSize","rootFontSize","isRelativeRootFontSize","scopes","pageAreaWidth","pageAreaHeight","pageVertical","getScopeContext","scope","clearScope","queryUnitSize","isRoot","pvw","pvh","vw","vh","evalName","evalCall","params","noBuiltInEval","body","evaluate","apply","evalMediaName","not","enabled","evalMediaTest","feature","req","actual","screen","availWidth","availHeight","pixelDepth","evalSupportsTest","isFunc","queryVal","storeVal","Val","buf","priority","evaluateCore","context","expand","dependCore","other","dependencyCache","dependOuter","cached","depend","isMediaName","Prefix","_this","getOp","evalPrefix","constructor","Infix","lhs","rhs","_this2","getPriority","evalInfix","thisPriority","Logical","Comparison","Additive","Multiplicative","Not","NotMedia","Negate","And","AndMedia","Or","Comma","OrMedia","Lt","Le","Gt","Ge","Eq","Ne","Add","Subtract","Multiply","Divide","Modulo","Numeric","num","_this3","Named","_this4","MediaName","_this5","_this6","Call","_this7","expandedParams","expanded","Cond","cond","ifTrue","ifFalse","_this8","_this9","MediaTest","_this10","SupportsTest","_this11","Param","_this12","and","sub","mul","div","Visitor","visitValues","visit","visitEmpty","empty","visitSlash","slash","visitStr","visitIdent","ident","visitNumeric","numeric","visitNum","visitInt","visitHexColor","color","visitURL","visitURange","urange","visitSpaceList","visitCommaList","visitFunc","func","visitExpr","expr","FilterVisitor","SpaceList","CommaList","Func","stringValue","toExpr","isExpr","isNumeric","isNum","isIdent","isSpaceList","visitor","Empty","Exprs","instance","Slash","Str","nameTable","Ident","getName","Num","Int","HexColor","hex","URL","URange","urangeText","appendList","separator","Expr","toNumber","convertNumericToPx","absolute","all","always","anywhere","auto","avoid","balance","balance_all","block","block_end","block_start","both","bottom","border_box","break_all","break_word","crop","cross","column","exclusive","fixed","flex","footnote","footer","header","hidden","horizontal_tb","inherit","initial","inline","inline_block","inline_end","inline_start","landscape","left","line","list_item","ltr","manual","none","normal","oeb_page_foot","oeb_page_head","page","relative","revert","right","same","snap_block","spread","_static","rtl","table","table_caption","table_cell","table_footer_group","table_header_group","table_row","top","transparent","unset","vertical_lr","vertical_rl","visible","hundredPercent","fullWidth","fullHeight","numericZero","fullURange","processingOrder","isDefaultingValue","processingOrderFn","name1","name2","Number","MAX_VALUE","Rect","Point","Insets","Segment","low","winding","shapeId","Band","segmentCompare","s1","s2","Shape","points","addSegments","prev","withOffset","offsetX","offsetY","shapeForEllipse","cx","cy","rx","ry","PI","sin","cos","shapeForRect","BandIntersection","lowOrHigh","intersectY","isNaN","addBandIntersections","intersections","w1","w2","mergeIntersections","includeCount","excludeCount","shapeCount","windings1","windings2","xranges","inside","intersectionCount","intersection","stillInside","rotateBox","box","unrotateBox","rotateShape","shape","point","normalize","bands","currBand","prevBand","findBand","mid","findUppermostFullyOpenRect","rect","band","topEdge","bottomEdge","findBottommostFullyOpenRect","SetVisitor","propSet","Css","IntVisitor","toInt","def","ShapeVisitor","collect","coords","getShape","width","height","numbers","coord","GeometryUtil","toShape","CountersVisitor","reset","counters","toCounters","UrlTransformVisitor","baseUrl","transformer","transformURL","cloneCounterValues","TokenType","TargetCounterReference","targetId","resolved","pageCounters","spineIndex","pageIndex","equals","isResolved","resolve","unresolve","CounterListener","counterStore","countersOfId","documentURLTransformer","transformFragment","countersById","getExprContentListener","CounterResolver","pageScope","styler","namedStringValues","setStyler","getFragment","getTransformedId","transformedId","getPageCounterVal","format","currentPageCounters","registerPageCounterExpr","getPageCountersVal","getTargetCounters","lookForElement","targetCounters","styleUntilIdIsReached","getTargetPageCounters","currentPage","elementsById","pageCountersById","getTargetCounterVal","countersOfName","resolveReference","pageCountersOfName","saveReferenceOfCurrentPage","getTargetCountersVal","elementCounters","getNamedStringVal","retrievePosition","stringValues","offsets","sort","pageStartOffset","isBlankPage","pageLastOffset","container","querySelectorAll","firstOffset","startOffset","lastOffset","firstExceptOffset","offsetPrev","offsetNext","elementAtOffset","querySelector","elementAtPageStartOffset","firstElementChild","first","last","setNamedString","cascadeInstance","currentElementOffset","CounterStore","previousPageCounters","currentPageCountersStack","pageIndicesById","newReferencesOfCurrentPage","referencesToSolve","referencesToSolveStack","unresolvedReferences","resolvedReferences","pagesCounterExprs","createCounterListener","createCounterResolver","setCurrentPage","definePageCounter","counterName","forceSetPageCounter","pageNumber","updatePageCounters","cascadedPageStyle","resetMap","incrementMap","resetVal","CssProp","resetCounterName","increment","incrementVal","incrementCounterName","counterValues","pushPageCounters","popPageCounters","unresolvedRefs","resolvedRefs","pushed","some","finishPage","ids","oldPageIndex","prevPageCounters","every","getUnresolvedRefsToPage","refs","idRefs","r1","r2","o","pushReferencesToSolve","popReferencesToSolve","exprContentListener","bind","findIndex","createElement","setAttribute","PAGES_COUNTER_ATTR","finishLastPage","viewport","nodes","root","pages","createLayoutConstraint","LayoutConstraint","allowLayout","nodeContext","viewNode","escapeParseSingle","code","String","fromCharCode","escapeParse","Action","Token","precededBySpace","position","EOF","makeActions","spec","NaN","END","INVALID","actionsNormal","SPACE","BANG","STR2","HASH","DOLLAR","PERCENT","AMP","STR1","O_PAR","C_PAR","STAR","PLUS","COMMA","MINUS","DOT","SLASH","INT","COLON","SEMICOL","LT","EQ","GT","QMARK","AT","IDENT","O_BRK","BSLASH","C_BRK","HAT","O_BRC","BAR","C_BRC","TILDE","actionsIdent","ENDIDNT","FUNC","CONT","IDNTESC","actionsNumOrClass","TOCLASS","TONUM","TOIDES","actionsMinus","MINMIN","TOINT","TOIDENT","actionsIdentEsc","ENDIDES","CHKPOSS","FUNCES","actionsInt","ENDINT","PCUNIT","NUMBER","UNIT","actionsNumber","ENDNUM","FrameState","actionsCheckEq","EQTAIL","actionsColon","COL_COL","actionsBar","BAR_BAR","actionsAmp","AMP_AMP","actionsSlash","COMMENT","actionsComment","COMMST","actionsCommentStar","ENDNOTK","actionsMinusMinus","KILL1","actionsLt","LT_BG","actionsLtBang","LT_BG_M","actionsLtBangMinus","KILL2","actionsIdentEscChr","IDESCH","actionsStr1","ENDSTR","STR1ESC","actionsStr2","STR2ESC","actionsStr1Esc","ENDESTR","CHKPOSN","actionsStr2Esc","actionsURL","URL2","URL1","actionsURLInside","ENDURL","CHKSP","URLESC","actionsURLInside1","TERMURL","actionsURLInside2","actionsURLTail","FINURL","Tokenizer","input","handler","indexMask","buffer","head","tail","token","fillBuffer","nthToken","consume","mark","unmark","hasMark","reallocate","newIndexMask","newBuffer","oldIndex","newIndex","mnemonics","actions","tokenType","tokenPosition","tokenText","tokenNum","seenSpace","backslashPos","STR","CLASS","BANG_EQ","NUM","parseFloat","NUMERIC","URANGE","privateCurrentTask","primaryScheduler","currentTask","newFrame","task","frame","Frame","state","ACTIVE","newResult","SyncResultImpl","handle","onErr","raise","TimerImpl","currentTime","valueOf","setTimeout","delay","clearTimeout","Scheduler","timer","timeout","sliceOverTime","wakeupTime","timeoutToken","inTimeSlice","order","setSlice","isTimeSliceOver","arm","newTime","scheduledTime","doTimeSlice","schedule","continuation","opt_delay","c","canceled","resumeInternal","run","opt_name","Task","then","done","running","callbacks","callback","savedTask","suspend","Continuation","otherComp","getTask","scheduler","finish","cancel","exception","waitTarget","interrupt","getScheduler","isRunning","whenDone","unwind","opt_frame","fillStack","f","out","thenAsync","thenReturn","thenFinish","isPending","get","ResultImpl","res1","res2","res","INIT","checkEnvironment","FINISHED","DEAD","timeSlice","sleep","loop","step","more","loopWithFrame","LoopBodyFrame","opt_waitTarget","continueLoop","breakLoop","Fetcher","fetch","arrived","resource","piggybacks","piggibacks","piggyback","hasArrived","waitForFetchers","fetchers","fetcher","loadElement","src","SVG","setAttributeNS","XLINK","localName","XMLHttpRequestResponseType","VivliostyleViewportScreenCss","VivliostyleViewportCss","ValidationTxt","UserAgentXml","UserAgentPageCss","UserAgentBaseCss","TextPolyfillCss","ajax","opt_type","opt_method","opt_data","opt_contentType","request","XMLHttpRequest","response","status","statusText","contentType","responseText","responseXML","responseBlob","open","responseType","onreadystatechange","readyState","DOCUMENT","HTMLDocument","TEXT","makeBlob","contentTypeHeader","getResponseHeader","setRequestHeader","send","overrideMimeType","parts","builderCtr","WebKitBlobBuilder","MSBlobBuilder","builder","getBlob","Blob","StylesheetFlavor","ResourceStore","parser","resources","load","opt_required","opt_message","fetchInner","isTocBox","endsWith","userAgentXmlUrl","isUserAgentXml","TaskUtil","parseJSONResource","store","ParserHandler","flavor","AUTHOR","getCurrentToken","getScope","startStylesheet","tagSelector","ns","classSelector","pseudoclassSelector","pseudoelementSelector","idSelector","attributeSelector","op","descendantSelector","childSelector","adjacentSiblingSelector","followingSiblingSelector","nextSelector","startSelectorRule","startFontFaceRule","startFootnoteRule","pseudoelem","startViewportRule","startDefineRule","startRegionRule","startPageRule","startPageMarginBoxRule","startWhenRule","startMediaRule","startFlowRule","flowName","startPageTemplateRule","startPageMasterRule","pseudoName","classes","startPartitionRule","startPartitionGroupRule","startRuleBody","property","important","endRule","startFuncWithSelector","funcName","endFuncWithSelector","getImportantSpecificity","USER_AGENT","USER","getBaseSpecificity","DispatchParserHandler","tokenizer","slave","pushHandler","popHandler","errorMsg","_ParserHandler","SkippingParserHandler","owner","topLevel","depth","SlaveParserHandler","report","message","reportAndSkip","actionsBase","actionsStyleAttribute","actionsSelector","actionsSelectorInFunc","actionsSelectorCont","actionsSelectorStart","actionsPropVal","actionsExprVal","actionsExprOp","actionsError","actionsErrorDecl","actionsErrorSelector","ExprContext","OP_MEDIA_AND","CssTokenizer","LAST","OP_MEDIA_OR","OP_MEDIA_NOT","SELECTOR_START","RULE_END","DONE","PROP","SELECTOR_NAME","SELECTOR_ANY","SELECTOR_ID","SELECTOR_CLASS","SELECTOR_ATTR","SELECTOR_PSEUDOCLASS","SELECTOR_CHILD","SELECTOR_SIBLING","SELECTOR_FOLLOWING_SIBLING","SELECTOR_NAME_1","SELECTOR_ANY_1","SELECTOR_ID_1","SELECTOR_CLASS_1","SELECTOR_ATTR_1","SELECTOR_BODY","SELECTOR_PSEUDOCLASS_1","SELECTOR_PSEUDOELEM","SELECTOR_NEXT","VAL_IDENT","VAL_HASH","VAL_NUM","VAL_INT","VAL_NUMERIC","VAL_STR","VAL_URL","VAL_URANGE","VAL_COMMA","VAL_SLASH","VAL_FUNC","VAL_C_PAR","VAL_END","VAL_BRC","VAL_BANG","VAL_PLUS","VAL_FINISH","EXPR_IDENT","EXPR_NUM","EXPR_NUMERIC","EXPR_STR","EXPR_O_PAR","EXPR_FUNC","EXPR_PREFIX","EXPR_PARAM","EXPR_INFIX_NAME","EXPR_INFIX","GT_EQ","LT_EQ","EQ_EQ","EXPR_C_PAR","EXPR_O_BRC","EXPR_SEMICOL","ERROR_PUSH","ERROR_POP","ERROR_SEMICOL","ERROR_POP_DECL","Parser","valStack","namespacePrefixToURI","defaultNamespaceURI","propName","propImportant","exprContext","importReady","importURL","importCondition","errorBrackets","ruleStack","regionRule","pageRule","MEDIA","extractVals","sep","valStackReduce","count","exprError","exprStackReduce","val2","tok","e1","e2","er","readSupportsTest","startPosition","token1","token2","tokenN","parLevel","readPseudoParams","readNthPseudoParams","hasLeadingPlus","hasMinusSign","hasSign","makeCondition","condition","split","isInsidePropertyOnlyRule","runParser","parsingValue","parsingStyleAttr","parsingMediaQuery","parsingFunctionParam","parserLoop","pseudoclassType","POSITIVE_INFINITY","TILDE_EQ","BAR_EQ","HAT_EQ","DOLLAR_EQ","STAR_EQ","IMPORT","SUPPORTS","WHEN","supportsTest","ruleName","rulePseudoName","ErrorHandler","parseStylesheetFromText","media","resolvedURL","innerFrame","parseStylesheetFromURL","Net","xhr","parseValue","numProp","opacity","utilization","evaluateCSSToCSS","matchANPlusB","AnyMatcher","matchers","matches","matcher","AllMatcher","NthFragmentMatcher","elementOffset","registerFragmentIndex","fragmentIndex","indices","fragmentIndices","clearFragmentIndices","entry","LayoutProcessor","PageFloats","Selectors","RepetitiveElement","Table","Vtree","MatcherBuilder","buildViewConditionMatcher","viewCondition","strs","buildAllMatcher","buildAnyMatcher","restoreNewText","reduce","fastdiff","resolveIndex","coef","current","change","object","formattingContextType","FloatReference","flagmentLayoutConstraintType","isInstanceOfTableFormattingContext","isInstanceOfTableRowLayoutConstraint","Whitespace","ShadowType","delayedProps","transform","delayedPropsIfRelativePositioned","DelayedItem","show","obj","visibility","hide","play","pause","resume","mute","muted","unmute","makeListener","action","actionFn","Page","bleedBox","pageAreaElement","delayedItems","hrefHandler","dimensions","isFirstPage","isLastPage","isAutoPageWidth","isAutoPageHeight","side","marginBoxes","anchorElement","preventDefault","setAutoPageWidth","isAuto","AUTO_PAGE_WIDTH_ATTRIBUTE","removeAttribute","setAutoPageHeight","AUTO_PAGE_HEIGHT_ATTRIBUTE","registerElementWithId","triggers","clientLayout","elems","contains","getElementClientRect","trigger","observers","observer","event","zoom","getPageAreaElement","whitespaceFromPropertyValue","whitespace","IGNORE","NEWLINE","PRESERVE","canIgnore","Flow","parentFlowName","forcedBreakOffsets","formattingContext","FlowChunk","linger","repeated","breakBefore","startPage","isBetter","clientrectIncreasingTop","clientrectDecreasingRight","isSameNodePositionStep","nps1","nps2","shadowContext","shadowType","ROOTLESS","outerHTML","_nps2$node","isSameShadowContext","nodeShadow","shadowSibling","isSameNodePosition","np1","np2","offsetInNode","newNodePositionFromNodeContext","initialFragmentIndex","sourceNode","NONE","preprocessedTextContent","makeNodeContextFromNodePositionStep","NodeContext","copy","ShadowContext","xmldoc","parentShadow","superShadow","subShadow","sc1","sc2","FirstPseudo","outer","boxOffset","shared","overflow","breakPenalty","display","floatReference","floatSide","clearSide","floatMinWrapBlock","columnSpan","verticalAlign","captionSide","inlineBorderSpacing","blockBorderSpacing","flexContainer","hyphenateCharacter","breakWord","establishesBFC","containingBlockForAbsolute","breakAfter","clearSpacer","inheritedProps","vertical","direction","firstPseudo","repeatOnBreak","pluginProps","afterIfContinues","footnotePolicy","pageType","INLINE","resetView","cloneItem","np","create","modify","clone","npp","npc","toNodePositionStep","toNodePosition","nc","_nc$shadowContext","_nc$shadowContext$sty","_nc$shadowContext$sty2","_pseudos","isInsideBFC","getContainingBlockForAbsolute","walkUpBlocks","belongsTo","ChunkPosition","primary","floats","isSamePosition","FlowChunkPosition","chunkPosition","flowChunk","FlowPosition","positions","startSide","newfp","newarr","hasContent","LayoutPosition","flows","flowPositions","highestSeenOffset","highestSeenNode","lookupPositionOffset","newcp","thisFlowNames","otherFlowNames","flowPos","startSideOfFlow","firstFlowChunkOfFlow","flowChunkPosition","Container","marginLeft","marginRight","marginTop","marginBottom","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","originX","originY","exclusions","innerShape","computedBlockSize","snapWidth","snapHeight","snapOffsetX","snapOffsetY","getInsetTop","getInsetBottom","getInsetLeft","getInsetRight","getInsetBefore","getInsetAfter","getInsetStart","getInsetEnd","getBeforeEdge","getAfterEdge","getStartEdge","getEndEdge","getInlineSize","getBoxSize","getBoxDir","getInlineDir","copyFrom","setVerticalPosition","setHorizontalPosition","setBlockPosition","extent","setInlinePosition","lastChild","removeChild","getInnerShape","getInnerRect","getPaddingRect","paddingX","paddingY","getOuterShape","outerShapeProp","getOuterRect","outerX","outerY","outerWidth","outerHeight","ContentPropertyHandler","rootContentValue","visitStrInner","Text","createTextNode","appendChild","img","createElementNS","CssParser","nonTrivialContent","fill","hyphens","marker","orphans","quotes","stroke","widows","polyfilledInheritedProps","supportedNamespaces","coupledPatterns","coupledExtentPatterns","geomNames","sides","names","buildCouplingMap","sideMap","extentMap","pattern","extentPattern","couplingMapVert","couplingMapHor","couplingMapVertRtl","couplingMapHorRtl","CascadeValue","getBaseValue","filterValue","increaseSpecificity","specificity","ConditionalCascadeValue","cascadeValues","tv","av","SPECIALS","isPropName","isInherited","getProp","setProp","getStyleMap","getMutableStyleMap","getViewConditionalStyleMap","_viewConditionalStyles","getSpecial","getMutableSpecial","mergeIn","pseudoelement","regionId","viewConditionMatcher","styleKey","styleMap","styles","as","ts","prototype","chainActions","chain","chained","InheritanceVisitor","props","setPropName","getFontSize","cascval","parentFontSize","convertFontRelativeLengthToPx","baseFontSize","CascadeAction","mergeWith","CompoundAction","ConditionItemAction","conditionItem","pushConditionItem","fresh","ApplyRuleAction","viewConditionId","currentStyle","ChainedAction","makePrimary","cascade","CheckClassAction","className","currentClassNames","includes","insertInTable","CheckIdAction","currentId","currentXmlId","CheckLocalNameAction","currentLocalName","tags","CheckNSTagAction","currentNamespace","nsPrefix","nsCount","nstags","CheckTargetEpubTypeAction","epubTypePatt","currentElement","epubType","epub","CheckNamespaceAction","CheckAttributePresentAction","_this13","hasAttributeNS","CheckAttributeEqAction","_this14","epubtypes","CheckNamespaceSupportedAction","_this15","CheckAttributeRegExpAction","regexp","_this16","attr","CheckLangAction","langRegExp","_this17","IsFirstAction","isFirst","IsRootAction","IsNthAction","_this18","Matchers","IsNthSiblingAction","currentSiblingOrder","IsNthSiblingOfTypeAction","currentSiblingTypeCounts","IsNthLastSiblingAction","currentFollowingSiblingOrder","IsNthLastSiblingOfTypeAction","counts","currentFollowingSiblingTypeCounts","nsCounts","nextElementSibling","IsEmptyAction","Node","ELEMENT_NODE","TEXT_NODE","IsEnabledAction","disabled","IsDisabledAction","IsCheckedAction","selected","checked","CheckConditionAction","_this19","conditions","dependentConditions","CheckAppliedAction","_this20","applied","cloned","NegateActionsSet","_this21","checkAppliedAction","firstAction","AbstractConditionItem","decrement","DescendantConditionItem","ChildConditionItem","AdjacentSiblingConditionItem","_this22","fired","FollowingSiblingConditionItem","_this23","AfterPseudoelementItem","afterprop","processPseudoelementProps","RestoreLangItem","QuotesScopeItem","oldQuotes","AttrValueFilterVisitor","_this24","createValueFromString","defaultValue","attributeName","hasAttribute","getStringValueFromCssContentVal","ContentPropVisitor","counterResolver","_this25","maxDepth","quoteDepth","upper","lower","additiveNumbering","entries","alphabeticNumbering","alphabetStr","alphabet","digit","numbering","digits","negative","formal","markers","thousands","hundreds","tens","ones","chineseTradInformal","visitFuncCounter","numval","_this26","visitFuncCounters","numvals","_this27","visitFuncTargetCounter","targetUrlStr","targetUrl","_this28","visitFuncTargetCounters","_this29","visitFuncString","visitFuncContent","pseudos","_pseudos$pseudoName","content","_pseudos$pseudoName$c","roman","armenian","georgian","hebrew","latin","alpha","greek","russian","square","disc","circle","copyTable","dst","ParseState","Cascade","pagetypes","createInstance","counterListener","CascadeInstance","nextOrder","currentNSTag","currentEpubTypes","currentPageType","previousPageType","firstPageType","counterScoping","siblingOrderStack","siblingTypeCountsStack","followingSiblingOrderStack","followingSiblingTypeCountsStack","viewConditions","elementStack","filter","dependentConditionMatchers","conditionId","_this30","applyAction","pushRule","baseStyle","EMPTY","applyActions","defineCounter","scoping","pushCounters","displayVal","floatVal","float","setMap","set","setVal","_this$currentElement","_this$currentElement2","DOCUMENT_NODE","incrPropValue","_this$currentStyle$co","_incrPropValue$values","setCounterName","listItemCounts","popCounters","setNamedStrings","stringSet","pseudoprops","pushElement","types","currentNamespaceTypeCounts","applyAttrFilter","quotesCasc","itemToPushLast","quotesVal","_this31","pseudoNames","pseudoProps","_pseudoProps$content","applyAttrFilterInner","elementStyle","pseudoMap","popRule","popElement","uaBaseCascade","CascadeParserHandler","validatorSet","_this32","conditionCount","footnoteContent","insideSelectorRule","TOP","insertNonPrimary","processChain","isInsideSelectorRule","patt","RegExp","ActionClass","nthSelectorActionClasses","finishChain","SELECTOR","_CssParser$SlaveParse","makeApplyRuleAction","special","validatePropertyAndHandleShorthand","invalidPropertyValue","unknownProperty","simpleProperty","Plugin","hook","converted","notParserHandler","NotParameterParserHandler","_this33","parentChain","_CascadeParserHandler","DefineParserHandler","dim","PropSetParserHandler","_this34","PropertyParserHandler","_this35","forEachViewConditionalStyles","viewConditionalStyles","mergeViewConditionalStyles","cascMap","mergeStyle","isVertical","cascaded","writingModeCasc","writingMode","isRtl","directionCasc","flattenCascadedStyle","regionIds","isFootnote","forEachStylesInRegion","regionStyle","regions","footnoteRegion","to","newVal","convertToPhysical","dest","couplingMap","hasOwnProperty","cascVal","coupledName","targetName","coupledCascVal","createRegExpMap","valueMaps","toPhysical","physical","logical","convert","maps","maps2","replaced","toPhysicalMaps","toLogicalMaps","toLogical","Size","lineRelativeValues","getSize","sizes","original","maxWidth","minWidth","maxHeight","minHeight","getComputedValue","getElementComputedStyle","insertBefore","writingModeProperty","writingModeValue","inlineSizeName","blockSizeName","getFillAvailableInline","getMaxContentInline","getMinContentInline","getFitContentInline","fillAvailableInline","minContentInline","parsedFillAvailable","maxContentInline","getIdealBlock","getFillAvailableBlock","FILL_AVAILABLE_INLINE_SIZE","MAX_CONTENT_INLINE_SIZE","MIN_CONTENT_INLINE_SIZE","FIT_CONTENT_INLINE_SIZE","FILL_AVAILABLE_BLOCK_SIZE","MAX_CONTENT_BLOCK_SIZE","MIN_CONTENT_BLOCK_SIZE","FIT_CONTENT_BLOCK_SIZE","FILL_AVAILABLE_WIDTH","FILL_AVAILABLE_HEIGHT","MAX_CONTENT_WIDTH","MAX_CONTENT_HEIGHT","MIN_CONTENT_WIDTH","MIN_CONTENT_HEIGHT","FIT_CONTENT_WIDTH","FIT_CONTENT_HEIGHT","isPageFloat","COLUMN","REGION","PAGE","PageFloat","nodePosition","getOrder","isAllowedOnContext","pageFloatLayoutContext","isAnchorAlreadyAppeared","isAllowedToPrecede","PageFloatStore","nextPageFloatIndex","createPageFloatId","addPageFloat","VtreeImpl","findPageFloatByNodePosition","findPageFloatById","PageFloatFragment","continuations","area","continues","hasFloat","findNotAllowedFloat","shouldBeStashedBefore","addContinuations","getFlowName","PageFloatContinuation","PageFloatLayoutContext","generatingNodePosition","invalidated","floatStore","forbiddenFloats","floatFragments","stashedFloatFragments","floatAnchors","floatsDeferredToNext","floatsDeferredFromPrevious","layoutConstraints","locked","getPreviousSibling","getParent","getPreviousSiblingOf","getContainer","setContainer","reattachFloatFragments","getPageFloatLayoutContext","forbid","PageFloatLayoutStrategyResolver","findByFloat","isForbidden","addPageFloatFragment","floatFragment","dontInvalidate","fr1","fr2","invalidate","removePageFloatFragment","fragment","findPageFloatFragment","hasFloatFragments","hasContinuingFloatFragmentsInFlow","registerPageFloatAnchor","anchorViewNode","collectPageFloatAnchors","anchors","floatId","getDeferredPageFloatContinuations","cont","deferPageFloat","hasPrecedingFloatsDeferredToNext","ignoreReference","getLastFollowingFloatInFragments","lastFollowing","lastFollowingOfParent","c1","c2","getPageFloatContinuationsDeferredToNext","getFloatsDeferredToNextInChildContexts","checkAndForbidNotAllowedFloat","checkAndForbidFloatFollowingDeferredFloat","notAllowedFloat","removeEndFloatFragments","deferredFloats","floatsInFragments","fr","f1","f2","hasSameContainerAs","detachChildren","attachChildren","isInvalidated","validate","CssLogicalUtil","logicalFloatSide","stashEndFloatFragments","fragmentFloatSide","restoreStashedFragments","stashed","discardStashedFragments","getStashedFloatFragments","getLimitValue","layoutContext","logicalSide","physicalSide","limit","getLimitValueInner","parentLimit","limits","getLimitValuesInner","paddingRect","floatMinWrapBlockStart","floatMinWrapBlockEnd","resolveLengthPercentage","containerLength","convertLengthToPx","fragments","rootViewNodes","setFloatAreaDimensions","anchorEdge","init","force","blockSize","inlineSize","outerBlockSize","outerInlineSize","blockStart","blockEnd","inlineStart","inlineEnd","blockOffset","inlineOffset","limitBlockStartEndValueWithOpenRect","getRect","openRect","availableBlockSize","containerRect","Sizing","adjustContentRelativeSize","getContentInlineSize","getFloatFragmentExclusions","getMaxReachedAfterEdge","edge","Infinity","getBlockStartEdgeOfBlockEndFloats","getPageFloatClearEdge","isContinuationOfAlreadyAppearedFloat","isFragmentWithAlreadyAppearedFloat","columnRect","columnBlockEnd","blockStartLimit","getPageFloatPlacementCondition","logicalSides","logicalClearSide","floatOrder","isPrecedingFragment","hasPrecedingFragmentInChildren","hasPrecedingFragmentInParents","getLayoutConstraints","addLayoutConstraint","layoutConstraint","isColumnFullWithPageFloats","getMaxBlockSizeOfPageFloats","lock","unlock","isLocked","pageFloatLayoutStrategies","register","strategy","findByNodeContext","appliesToNodeContext","appliesToFloat","createPageFloat","resolveFloatReferenceFromColumnSpan","createPageFloatFragment","floatArea","adjustPageFloatArea","floatContainer","Footnote","FootnoteFragment","LineFootnotePolicyLayoutConstraint","regionContext","applyFootnoteStyle","convertPercentageSizesToPx","setComputedInsets","setComputedWidthAndHeight","constraint","forcedBreakValues","recto","verso","region","isForcedBreakValue","spreadBreakValues","isSpreadBreakValue","avoidBreakValues","isAvoidBreakValue","resolveEffectiveBreakValue","second","firstIsForcedBreakValue","secondIsForcedBreakValue","breakValueToStartSideValue","breakValue","startSideValueToBreakValue","startSideValue","blockify","blockifiedStr","displayStr","isAbsolutelyPositioned","getComputedDislayValue","isBlock","isInlineLevel","isRubyInternalDisplay","calculateEdge","extraOffset","parentElement","HTMLElement","cbox","range","createRange","setStart","setEnd","boxes","getRangeClientRects","getBoundingClientRect","fullRange","fullBoxes","fullBox","abs","getElementHeight","getComputedMargin","isOrphan","removeFollowingSiblings","isSpecial","isSpecialNodeContext","Element","AbstractBreakPosition","calculateOffset","getNodeContext","collectElementsOffset","breakPositionChosen","elementsOffsets","repetitiveElement","minimum","calculateMinimumOffset","EdgeBreakPosition","breakOnEdge","overflows","overflowIfRepetitiveElementsDropped","isEdgeUpdated","findAcceptableBreak","penalty","updateOverflows","getMinBreakPenalty","findEdgeBreakPosition","preferDropping","isFirstContentOfRepetitiveElementsOwner","Break","updateEdge","clonedPaddingBorder","calculateClonedPaddingBorder","LayoutHelper","isOverflown","isInstanceOfRepetitiveElementsOwnerFormattingContext","repetitiveElements","getRepetitiveElements","isFirstContentNode","LayoutProcessorResolver","find","RESOLVE_LAYOUT_PROCESSOR","processor","BlockLayoutProcessor","layout","leadingEdge","isFloatNodeContext","layoutFloatOrFootnote","isBreakable","layoutBreakableBlock","layoutUnbreakable","createEdgeBreakPosition","columnBlockSize","BreakPosition","startNonInlineElementNode","afterNonInlineElementNode","stopAtOverflow","clearOverflownViewNodes","parentNodeContext","removeSelf","finishBreak","forceRemoveSelf","endOfColumn","fixJustificationIfNeeded","processFragmentedBlockEdge","BlockFormattingContext","isFirstTime","firstTime","saveState","restoreState","blockLayoutProcessor","isInstanceOfBlockFormattingContext","RESOLVE_FORMATTING_CONTEXT","Display","AbstractLayoutRetryer","initialBreakPositions","initialStateOfFormattingContext","initialPosition","initialFragmentLayoutConstraints","prepareLayout","tryLayout","mode","resolveLayoutMode","doLayout","positionAfter","accepted","accept","postLayout","clearNodes","sibling","breakPositions","fragmentLayoutConstraints","LayoutIteratorStrategy","initialState","initialNodeContext","atUnforcedBreak","break","startNonDisplayableNode","afterNonDisplayableNode","startIgnoredTextNode","afterIgnoredTextNode","startNonElementNode","afterNonElementNode","startInlineElementNode","afterInlineElementNode","LayoutIterator","iterate","loopFrame","nextResult","nextInTree","nextNodeContext","EdgeSkipper","startNonInlineBox","endEmptyNonInlineBox","endNonInlineBox","breakAtTheEdge","onStartEdges","leadingEdgeContexts","lastAfterNodeContext","processForcedBreak","needForcedBreak","pageBreakType","saveEdgeAndProcessOverflow","checkOverflowAndSaveEdgeAndBreakPosition","processLayoutConstraint","violateConstraint","repetitiveElementsCache","HANGING_PUNCTUATION_NONE","allowEnd","hangingPunctuationFromPropertyValue","cssval","hangingPunctuation","isHangingPunctuationNone","TEXT_SPACING_NONE","trimStart","spaceFirst","trimEnd","trimAdjacent","ideographAlpha","ideographNumeric","TEXT_SPACING_NORMAL","TEXT_SPACING_AUTO","textSpacingFromPropertyValue","textSpacing","isTextSpacingNone","normalizeLang","embeddedContentTags","audio","canvas","embed","iframe","math","picture","svg","video","textPolyfill","getPolyfilledInheritedProps","preprocessSingleDocument","preprocessForTextSpacing","nodeIter","createNodeIterator","NodeFilter","SHOW_TEXT","nextNode","dataset","mathTypeset","textArr","lastIndex","processGeneratedContent","textSpacingVal","hangingPunctuationVal","whiteSpaceSave","whiteSpace","offsetHeight","offsetWidth","prevNode","isFirstInBlock","isFirstAfterForcedLineBreak","isLastBeforeForcedLineBreak","processTextSpacing","postLayoutBlock","checkPoints","isFirstFragment","isAfterForcedLineBreak","_p$sourceNode","checkIfFirstAfterForcedLineBreak","prevP","previousElementSibling","checkIfLastBeforeForcedLineBreak","nextP","_nodeContext$parent","isLastInBlock","textNode","currRange","prevRange","nextRange","isAtEndOfLine","selectNode","getClientRects","nextRect","tagName","punctProcessing","hangingFirst","hangingLast","hangingEnd","outerElem","innerElem","defaultView","getComputedStyle","isFullWidth","prevRects","prevRect","atEnd","atEndNoHang","checkUpright","_elem$ownerDocument$d","textOrientation","textCombineUpright","registerHooks","POLYFILLED_INHERITED_PROPS","PREPROCESS_SINGLE_DOCUMENT","POST_LAYOUT_BLOCK","DOMParser","parseFromString","SHADOW","getPseudoName","setPseudoName","PseudoelementStyler","contentProcessed","getStyle","deep","CssCascade","nest","processContent","contentVal","AfterIfContinues","viewRoot","pseudoColumn","PseudoColumn","initialPageBreakType","getColumn","createNodePositionForPseudoElement","pseudoElement","PseudoElement","createShadowContext","ROOTED","AfterIfContinuesLayoutConstraint","pseudoElementHeight","overflownNodeContext","nextCandidate","allowed","affectTo","AfterIfContinuesElementsOffset","equalsTo","getPriorityOfFinishBreak","processAfterIfContinuesOfNodeContext","processAfterIfContinues","mediaTags","AllLayoutConstraint","constraints","BoxBreakPosition","alreadyEvaluated","breakNodeContext","findBoxBreakPosition","Column","viewDocument","flowRootFormattingContext","isFloat","startEdge","endEdge","beforeEdge","afterEdge","footnoteEdge","chunkPositions","overflown","forceNonfitting","leftFloatEdge","rightFloatEdge","bottommostFloatTop","lastAfterPosition","pseudoParent","nodeContextOverflowingDueToRepetitiveElements","blockDistanceToBlockEndFloats","breakAtTheEdgeBeforeFloat","getTopEdge","getBottomEdge","getLeftEdge","getRightEdge","stopByOverflow","getExclusions","pageFloatExclusions","openAllViews","setViewRoot","stepIndex","calculateOffsetInNodeForNodeContext","setCurrent","maybePeelOff","firstLetterLength","firstLetterText","peelOff","buildViewToNextBlockEdge","bodyFrame","position1Param","positionParam","buildDeepElementView","position1","createFloat","killFloats","cssFloat","createFloats","parseComputedLength","insets","getComputedPaddingBorder","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","getComputedInsets","boxSizing","nodeContextIn","layoutFloat","lineRelativeValue","nodeContextAfter","floatBBox","floatBox","probe","parentBox","floatBoxMeasure","floatHorBox","dir","boxExtent","floatWidth","floatHeight","floatBottom","floatBoxEdge","floatBoxTop","floatBands","lastY","floatBand","updateMaxReachedAfterEdge","setupFloatArea","floatLayoutContext","containingBlockRect","fitWithinContainer","createPageFloatArea","floatAreaElement","parentPageFloatLayoutContext","parentContainer","PageFloatArea","layoutSinglePageFloatFragment","allowFragmented","pageFloatFragment","firstFloat","newPosition","failed","floatChunkPosition","newFragment","layoutPageFloatInner","cancelLayout","layoutStashedPageFloats","success","excluded","newFloatAreas","newFragments","stashedFragment","setFloatAnchorViewNode","anchor","applyPseudoelementStyle","columnContext","layoutPageFloat","createJustificationAdjustmentElement","insertionPoint","span","inner","textIndent","textAlign","leftPos","rightPos","inlineBlock","padding","paddingStr","addAndAdjustJustificationElement","insertAfter","hyphenChar","resolveHyphenateCharacter","prevSibling","prevText","compensateJustificationLineHeight","br","spanRect","brRect","parentElem","processLineStyling","resNodeContext","lastCheckPoints","totalLineCount","linePositions","findLinePositions","lineBreak","findAcceptableBreakInside","resNodeContextParam","isLoneImage","getTrailingMarginEdgeAdjustment","trailingEdgeContexts","maxPos","minNeg","checkPointIndex","saveBoxBreakPosition","findEndOfLine","linePosition","isUpdateMaxReachedAfterEdge","effectiveLinePosition","lowCP","low1","highCP","high1","mid1","edgePosition","resolveTextNodeBreaker","breakTextNode","RESOLVE_TEXT_NODE_BREAKER","TextNodeBreaker","getRangeBoxes","wentUp","lastGood","haveStart","endNotReached","seekRange","setStartBefore","setEndAfter","boxList","lineBefore","lineAfter","lineEnd","lineLength","overlap","boxSize","paddingBorders","getOffsetByRepetitiveElements","bp","repetitiveElementsOffset","firstOverflowing","findFirstOverflowingEdgeAndCheckPoint","lineIndex","forceCutBeforeOverflowing","checkPoint","blockEdge","getAfterEdgeOfBlockContainer","blockParent","cp","findAcceptableBreakPosition","nextPenalty","minPenalty","breakPosition","doFinishBreak","initialComputedBlockSize","skipTailEdges","flowPosition","zeroIndent","checkOverflowAndSaveEdge","marginEdge","saveEvenOverflown","saveEdgeBreakPosition","applyClearance","spacer","spacerBox","clearEdge","wAdj","hAdj","isBFC","skipEdges","forcedBreakValue","fc","_nodeContext$parent2","layoutProcessor","_nodeContext$parent3","nodeContextParam","resultNodeContext","layoutNext","initGeom","columnBBox","include","exclude","granularity","segment","segments","segmentCount","lowestIncludeIndex","segmentIndex","activeSegments","y2min","yn","bandIntersections","bi1","bi2","rw","breakAtEdge","isFullWithPageFloats","nextInTreeListener","retryer","ColumnLayoutRetryer","doFinishBreakOfFragmentLayoutConstraints","sortedFragmentLayoutConstraints","pending","redoLayout","isPseudoelement","saveDistanceToBlockEndFloats","blockStartEdgeOfBlockEndFloats","isFinite","isInstanceOfRepetitiveElementsOwnerLayoutConstraint","isInstanceOfAfterIfContinuesLayoutConstraint","getElementsOffsetsForTableCell","startNodeContexts","parentClonedPaddingBorder","allowBreakAtStartPosition","startNodeContext","isStartNodeContext","isLastAfterNodeContext","getColumnElement","checkpointIndex","viewIndex","data","breakAfterSoftHyphen","breakAfterOtherCharacter","updateNodeContext","replaceData","ch0","ch1","initialOverflown","DefaultLayoutMode","_LayoutRetryers$Abstr","LayoutRetryers","hasNextCandidate","floatMargins","fixFloatSizeAndPosition","refWidth","refHeight","convertPercentageToPx","refValue","valueString","percentageValue","rootViewNode","RepetitiveElementsOwnerFormattingContext","rootSourceNode","getRootViewNode","getRootNodeContext","initializeRepetitiveElements","Shared","elements","RepetitiveElements","ownerSourceNode","headerSourceNode","footerSourceNode","headerViewNode","footerViewNode","headerNodePosition","footerNodePosition","headerHeight","footerHeight","isSkipHeader","isSkipFooter","enableSkippingFooter","enableSkippingHeader","doneInitialLayout","firstContentSourceNode","lastContentSourceNode","affectedNodeCache","afterLastContentNodeCache","allowInsert","allowInsertRepeatitiveElements","setHeaderNodeContext","setFooterNodeContext","updateHeight","prepareLayoutFragment","appendHeaderToFragment","rootNodeContext","appendElementToFragment","appendFooterToFragment","Layout","moveChildren","isAfterLastContent","findResultFromCache","isAfterNodeContextOf","cache","calculator","cacheEntry","includeChildren","parentsOfNode","currentParent","isEnableToUpdateState","updateState","preventSkippingHeader","preventSkippingFooter","isHeaderRegistered","isFooterRegistered","isHeaderSourceNode","isFooterSourceNode","LayoutEntireBlock","LayoutFragmentedBlock","LayoutEntireOwnerBlock","doInitialLayout","LayoutFragmentedOwnerBlock","RepetitiveElementsOwnerLayoutConstraint","RepetitiveElementsOwnerLayoutRetryer","EntireBlockLayoutStrategy","LayoutUtil","appendHeaderToAncestors","repetitiveLayoutProcessor","layoutEntireBlock","TableRow","rowIndex","cells","addCell","cell","getMinimumHeight","TableCell","columnIndex","viewElement","colSpan","rowSpan","anchorSlot","setHeight","setAnchorSlot","slot","TableSlot","TableCellFragment","pseudoColumnContainer","cellNodeContext","TableCaptionView","BetweenTableRowBreakPosition","acceptableCellBreakPositions","getAcceptableCellBreakPositions","cellFragments","getCellFragments","cellFragment","getRowIndex","findRowIndexBySourceNode","getRowSpanningCellsOverflowingTheRow","getCellFragmentOfCell","InsideTableRowBreakPosition","beforeNodeContext","allCellsBreakable","row","getRowByIndex","isFreelyFragmentableRow","getCellsFallingOnRow","TableFormattingContext","tableSourceNode","columnCount","tableWidth","captions","colGroups","colWidths","rows","slots","lastRowViewNode","cellBreakPositions","cellNodePosition","finishFragment","addRow","getRowSlots","rowSlots","rowUpper","startColIndex","addCellFragment","uniqueCells","getColumnCount","sum","updateCellSizes","findCellFromColumn","tableCell","col","collectElementsOffsetOfUpperCells","collected","collectElementsOffsetFromColumn","collectElementsOffsetOfHighestColumn","elementsInColumn","ElementsOffsetOfTableCell","RepetitiveElementImpl","repeatitiveElementsInColumns","calculateMaxOffsetOfColumn","maxOffset","isValidParentOfTableRow","skipNestedTable","parentDisplay","isNestedInlineTable","EntireTableLayoutStrategy","inRow","inHeaderOrFooter","postLayoutBlockContents","captionView","computedStyle","registerCheckPoint","TableLayoutStrategy","currentRowIndex","currentColumnIndex","originalStopAtOverflow","inHeader","inFooter","resetColumn","getColSpanningCellWidth","layoutCell","startChunkPosition","cellViewNode","hasBrokenCellAtSlot","slotIndex","cellBreakPosition","extractRowSpanningCellBreakPositions","rowSpanningCellBreakPositions","layoutRowSpanningCellsFromPreviousFragment","rowCount","currentRow","spanningCellRowIndex","occupiedSlotIndices","rowCellBreakPositions","rowNodeContext","cont1","addDummyCellUntil","upperColumnIndex","dummy","breakChunkPosition","startTableRow","registerCellFragmentIndex","tdNodeStep","getElementOffset","startTableCell","afterNodeContext","startNodePosition","ignoreList","tableLayoutOptionCache","TableLayoutProcessor","layoutEntireTable","getColumnWidths","lastRow","dummyRow","dummyCells","getColGroupElements","tableElement","normalizeAndGetColElements","cols","colGroup","cloneNode","addMissingColElements","normalizeColGroups","createDocumentFragment","tableRootSourceNode","pair","tableLayoutOption","tableBBox","calculateBreakPositionsInside","EntireTableBreakPosition","addCaptions","caption","addColGroups","removeColGroups","iterator","LayoutRetryer","cellContentElement","cellElement","cellElementRect","tableFormattingContext","LayoutFragmentedTable","LayoutEntireTable","tableNodeContext","EntireTableLayoutConstraint","tableRootNode","TableRowLayoutConstraint","cellFragmentLayoutConstraints","collectCellFragmentLayoutConstraints","removeDummyRowNodes","_RepetitiveElementImp4","array","dummyNode","getCellFragemnts","tableLayoutProcessor","mean","ColumnBalancingTrialResult","layoutResult","getBlockSize","setBlockSize","ColumnBalancer","layoutContainer","columnGenerator","regionPageFloatLayoutContext","originalContainerBlockSize","balanceColumns","preBalance","savePageFloatLayoutContexts","candidates","createTrialResult","updateCondition","restoreContents","postBalance","calculatePenalty","columnPageFloatLayoutContexts","newLayoutResult","columns","canReduceContainerSize","lastCandidate","secondLastCandidate","reduceContainerSize","newEdge","BalanceLastColumnBalancer","originalPosition","foundUpperBound","totalBlockSize","checkPosition","isLastColumnLongerThanAnyOtherColumn","lastColumnBlockSize","BalanceNonLastColumnBalancer","meanValue","computedBlockSizes","SlipRange","endStuckFixed","endFixed","endSlipped","SlipMap","getMaxFixed","getMaxSlipped","addStuckRange","addSlippedRange","slippedByFixed","fixedBySlipped","slipped","Box","atBlockStart","atFlowStart","isParentBoxDisplayed","isBlockValue","hasBoxValue","styleValues","beforeBox","afterBox","hasBox","styleValue","getBreakValue","buildAfterPseudoElementBox","cv","displayValue","BoxStack","atStartStack","lastBox","lastFlowName","isCurrentBoxDisplayed","newFlowChunk","isAtFlowStart","encounteredTextNode","CDATA_SECTION_NODE","atStart","nearestBlockStartOffset","Styler","primaryFlows","cascadeHolder","rootStyle","flowChunks","flowListener","flowToReach","idToReach","offsetMap","primaryStack","rootBackgroundAssigned","rootLayoutAssigned","breakBeforeValues","boxStack","bodyReached","rootOffset","getAttrStyle","postprocessTopStyle","replayFlowElementsFromOffset","hasProp","transferPropsToRoot","srcStyle","pname","isBody","backgroundColor","backgroundProps","backgroundImage","columnProps","layoutProps","isRelativeFontSize","unitSize","getTopContainerStyle","styleUntil","CSSStyleDeclaration","styleAttrValue","getReachedOffset","flowNameStr","encounteredFlowElement","getNodeByOffset","nodeOffset","getNodeOffset","resetFlowChunkStream","encounteredFlowChunk","styleUntilFlowIsReached","optionsCV","options","static","lingerCV","priorityCV","flow","registerForcedBreakOffset","lookup","targetSlippedOffset","afterPseudoBreakBefore","blockStartOffset","pageCV","beforePseudoBreakAfter","validator","failure","markAsStartGroup","isStartGroup","markAsEndGroup","isEndGroup","markAsStartAlternate","isStartAlternate","markAsEndAlternate","isEndAlternate","getAlternate","Connection","where","what","ValidatingGroup","connections","nomatch","emptyHead","connect","nodeIndex","group","clonedNode","connection","groupConnection","addSpecialToArr","clause","ALWAYS_FAIL","endSpecialGroup","arrs","startSpecialGroup","endClause","startClause","addPrimitive","isSimple","isPrimitive","PrimitiveValidator","addGroup","how","ALTERNATE","combine","connectionIndex","REPEATED","OPTIONAL","successTerminal","failTerminal","PropertyValidator","validateForShorthand","rval","idents","units","NO_IDENTS","ListValidator","failureTerminal","validateList","startIndex","alternativeStack","alternatives","inval","outval","SpaceListValidator","CommaListValidator","validateSingle","hasCommaListValidator","FuncValidator","ShorthandSyntaxNode","tryParse","shorthandValidator","ShorthandSyntaxProperty","validators","rvals","len","ShorthandSyntaxPropertyN","ShorthandSyntaxCompound","index0","ShorthandValidator","syntax","propList","setOwner","syntaxNodeForProperty","receiver","defaultValues","propagateDefaultingValue","SimpleShorthandValidator","InsetsShorthandValidator","createSyntaxNode","InsetsSlashShorthandValidator","slashIndex","index1","CommaShorthandValidator","acc","FontShorthandValidator","_SimpleShorthandValid2","fontVariant","fontStretch","familyList","family","systemFonts","propsExcludedFromAll","shorthandValidators","SIMPLE","INSETS","INSETS_SLASH","FONT","ALL","_SimpleShorthandValid3","ValidatorSet","prefixes","namedValidators","shorthands","addReplacement","newGroup","vals","subgroup","FOLLOW","addCounts","primitive","newFunc","initBuiltInValidators","COLOR","IMAGE_FUNCTION","POS_INT","POS_NUM","POS_PERCENTAGE","NEGATIVE","ZERO","ZERO_PERCENTAGE","POS_LENGTH","vi","vb","vmin","vmax","pvi","pvb","pvmin","pvmax","POS_ANGLE","deg","grad","rad","turn","POS_TIME","ms","FREQUENCY","Hz","kHz","RESOLUTION","URI","STRING","stdfont","icon","menu","isBuiltIn","readNameAndPrefixes","section","rulePrefixes","parseValidators","expectval","setop","currop","builtIn","parseDefaults","parseShorthands","insetShorthand","compound","makePropSet","shorthand","pval","origName","rvalue","baseValidatorSet","traitProps","prepareProperties","properties","Face","fontTraitKey","blobURLs","blobs","traitsEqual","makeAtRule","fontBytes","blobURL","webkitURL","createObjectURL","DocumentFaces","deobfuscator","familyMap","registerFamily","srcFace","viewFace","srcFamily","viewFamilyFromSrc","viewFamilyFromView","filterFontFamily","newValues","rf","Mapper","opt_familyPrefix","srcURLMap","familyPrefix","familyCounter","getViewFontFamily","documentFaces","viewFamily","initFont","viewFontFace","loadFont","srcFamilySrc","viewFaceParam","BLOB","findOrLoadFonts","srcFaces","waitFontLoading","fonts","unloadedCount","fontFace","keyCount","PageBox","specified","pageMaster","_scope","parentInstance","param","copySpecified","destSpecified","cloneChildren","RootPageBox","PageMasterScope","self","keyMap","boxInstance","lookupInstance","resolveFunc","resolveName","PageMaster","PageMasterInstance","resetScope","PartitionGroup","PartitionGroupInstance","Partition","PartitionInstance","toExprAuto","toExprZero","toExprZeroAuto","toExprZeroBorder","styleVal","toExprBool","PageBoxInstance","pageBox","autoWidth","autoHeight","isAutoWidth","isAutoHeight","isTopDependentOnAutoHeight","isRightDependentOnAutoWidth","calculatedWidth","calculatedHeight","pageMasterInstance","namedValues","namedFuncs","suppressEmptyBoxGeneration","addNamedValues","altName","columnGap","initEnabled","minPageWidth","minPageHeight","boxSpecificEnabled","initHorizontal","parentWidth","leftBP","rightBP","extra","remains","initVertical","parentHeight","topBP","bottomBP","initColumns","depends","registerInstance","getActiveRegions","_context$styler","_rootStyle$name","getPropAsNumber","propagateProperty","docFaces","propagatePropertyToElement","propagateDelayedProperty","assignLeftPosition","assignRightPosition","xpos","assignTopPosition","ypos","assignBottomPosition","assignBeforePosition","assignAfterPosition","assignStartEndPosition","sizeWithMaxHeight","sizeWithMaxWidth","prepareContainer","passPreProperties","transferContentProps","passContentProperties","transferSinglUriContentProps","passSingleUriContentProperties","finishContainer","readHeight","readWidth","bbox","ruleWidth","ruleStyle","ruleColor","containerSize","border","rule","passPostProperties","delayedProperties","applyCascadeAndInit","docElementStyle","userAgentPageMasterPseudo","resolveAutoSizing","RootPageBoxInstance","_PageBoxInstance","adjustPageLayout","processPartitionList","listVal","conflicting","qname","term","required","pmEnabledVal","pmEnabled","_PageBoxInstance4","PageBoxParserHandler","PartitionParserHandler","PartitionGroupParserHandler","partition","partitionGroup","PageMasterParserHandler","resolvePageProgression","Constants","pageSizes","a10","a9","a8","a7","a6","a5","a4","a3","a2","a1","a0","b10","b9","b8","b7","b6","b5","b4","b3","b2","b1","b0","c10","c9","c8","c7","c6","c5","c4","c3","c0","letter","legal","ledger","defaultPrinterMarkLineWidth","CornerMarkPosition","CrossMarkPosition","defaultPrinterMarkLineLength","defaultBleedOffset","resolvePageSizeAndBleed","pageSizeAndBleed","bleed","bleedOffset","cropOffset","val1","marksCV","marks","bleedCV","cropOffsetCV","evaluatePageSizeAndBleed","evaluated","createPrinterMarkSvg","createPrinterMarkElement","lineWidth","elementType","MarginBoxPositionAlongVariableDimension","propertiesAppliedToPartition","outline","pageMarginBoxes","isInTopRow","isInBottomRow","isInLeftColumn","isInRightColumn","positionAlongVariableDimension","START","CENTER","pageMarginBoxNames","PageRuleMaster","bodyPartitionKey","pageSize","PageRulePartition","createPageMarginBoxes","applySpecified","marginBoxesMap","_marginBoxes","PageMarginBoxPartition","PageRuleMasterInstance","PageRulePartitionInstance","marginBoxName","ownStyle","ownVal","PageMarginBoxPartitionInstance","pageRuleMaster","pageAreaDimension","pageMarginBoxInstances","_PageMaster$PageMaste2","setPageAreaDimension","borderBoxWidth","borderBoxHeight","marginBoxContainers","horizontalDimensions","verticalDimensions","sizeMarginBoxesAlongVariableDimension","isHorizontal","containers","boxInstances","boxParams","boxInfo","boxParam","SingleBoxMarginBoxSizingParam","evaluatedDim","getSizesOfMarginBoxesAlongVariableDimension","needRecalculate","maxOuterSizes","maxSize","evaluatedMaxSize","FixedSizeMarginBoxSizingParam","getOuterSize","minOuterSizes","minSize","evaluatedMinSize","startEndSum","outerSize","availableSize","startBoxParam","centerBoxParam","endBoxParam","startEndBoxParam","MultipleBoxesMarginBoxSizingParam","centerSizes","distributeAutoMarginBoxSizes","xSize","startEndAutoSize","hasAutoSize","startEndSizes","ySize","xOuterMaxContentSize","getOuterMaxContentSize","yOuterMaxContentSize","maxContentSizeSum","xOuterMinContentSize","getOuterMinContentSize","minContentSizeSum","hasAutoSize_","fixedSize","pageRulePartition","_PageMaster$Partition3","resolvePageBoxDimensions","borderBoxExtent","marginStart","marginEnd","endSide","extentName","pageExtent","paddingStart","paddingEnd","borderStartWidth","borderEndWidth","pageMarginBoxPartition","applyVerticalAlign","_PageMaster$Partition4","flexAlign","align","availableExtent","outerExtent","positionAndSizeAlongFixedDimension","insideName","outsideName","outside","pageMargin","marginInside","marginOutside","paddingInside","paddingOutside","borderInsideWidth","borderOutsideWidth","getComputedValues","pageMarginValue","borderAndPadding","PageManager","rootPageBoxInstance","pageMasterCache","definePageProgression","styleInstance","isVersoFirstPage","isVersoPage","pageProgression","getCascadedPageStyle","getPageRulePageMaster","makeCacheKey","generatePageRuleMaster","generateCascadedPageMaster","propsStr","makeCascadeValueObjectKey","newPageMaster","pageMasterStyle","CheckPageTypeAction","IsFirstPageAction","IsBlankPageAction","IsLeftPageAction","IsRightPageAction","IsRectoPageAction","IsVersoPageAction","IsNthPageAction","layoutPositionAtPageStart","blankPageAtStart","ApplyPageRuleAction","targetMap","boxName","targetBox","PageParserHandler","pageProps","currentPageSelectors","currentNamedPageSelector","currentPseudoPageClassSelectors","finishSelector","selectors","_CssCascade$CascadePa","selector","noPageSelectorProps","prevCascVal","marginBoxMap","boxStyle","PageMarginBoxParserHandler","allowScripts","deferredScripts","sameScripts","getScriptsInOrNearHead","scriptsInBodyNotNearHead","script","loadScript","srcScriptElem","flags","inHead","scriptContent","isModule","async","defer","needDefer","forceDefer","hasScripts","onload","builtinMathJax2","MathJax","_window$MathJax","version","_window$MathJax$versi","startsWith","getElementsByTagName","scriptElem","attributes","transformURIs","attributeValue","m1","namespacePrefixMap","frontEdgeBlackListHor","frontEdgeBlackListVert","frontEdgeUnforcedBreakBlackListHor","frontEdgeUnforcedBreakBlackListVert","ViewFactory","footnoteStyle","stylerProducer","customRenderer","fallbackMap","createPseudoelementShadow","cascStyle","getPseudoMap","addedNames","att","shadowStyler","computedPseudoStyleMap","computedPseudoStyle","createRefShadow","refDocParam","refDoc","refElement","getElement","refStyler","getStylerForDoc","createShadows","templateURLVal","template","shadow","cont2","computeStyle","displayValues","inheritFromSourceParent","shadowRoot","nodeStyle","inheritanceVisitor","sname","inheritLangAttribute","transferPolyfilledInheritedProps","numericVal","resolveFormattingContext","createElementView","needToProcessChildren","inheritedValues","floatReferenceCV","Scripts","HTMLScriptElement","_this$nodeContext$par2","shadowParam","parentWritingMode","isFlowRoot","floating","listItem","breakInside","pageVal","isAtForcedBreak","borderCollapse","borderSpacing","processAfterIfcontinues","whitespaceValue","overflowWrap","processRepeatOnBreak","findAndProcessRepeatingElements","custom","tag","NCX","navParent","hp","behavior","contentWindow","navigator","epubReadingSystem","layoutStyle","hasFeature","imageResolution","images","cssWidth","cssHeight","attrWidth","attrHeight","hasAutoWidth","hasAutoHeight","attributeCount","delayedSrc","attribute","attributeNS","nodeValue","transformedValue","anchorElem","image","Image","isSVGUrlAttribute","Urls","attributePrefix","imageFetcher","listStyleImage","listStyleURL","preprocessElementStyle","applyComputedStyles","blackList","isParagraph","modifyElemDimensionWithImageResolution","textLevelElements","abbr","bdi","bdo","cite","del","dfn","ins","kbd","ruby","samp","small","strong","sup","time","u","var","childNode","SVG_URL_ATTRIBUTES","scaledWidth","scaledHeight","numericMaxHeight","numericMinWidth","numericMinHeight","PREPROCESS_ELEMENT_STYLE","createTextNodeView","preprocessTextContent","Diff","originl","PREPROCESS_TEXT_CONTENT","processedText","createNodeView","processChildren","processShadowContent","contentNode","contentShadowType","contentShadow","nextPositionInTree","shadowNode","sr","isTransclusion","transclusionType","proc","addImageFetchers","bg","isRelativePositioned","_this$viewRoot","propertiesNotPassedToDOM","fixRubyTextFontSize","userAgent","fontSizeInPx","_this$nodeContext2","_this$nodeContext2$pa","minFontSizeInPx","pn","childComputedStyle","boxDecorationBreak","step1","step2","elem2","nodePosition1","nodePosition2","DOMParserSupportedType","DefaultClientLayout","layoutBox","subtractOffsets","originRect","viewportLeft","viewportTop","rects","layoutBoxRect","Viewport","opt_root","opt_width","opt_height","outerZoomBox","contentContainer","innerWidth","innerHeight","isHeadlessBrowser","webdriver","resetZoom","XMLDocHolder","totalOffset","idMap","NodeList","offsetStr","srcNode","getTotalOffset","buildIdMap","xmlid","getElementsByName","parseAndReturnNullIfError","opt_parser","docElement","errorTagName","parseXMLResource","supportedKeys","APPLICATION_XML","TEXT_HTML","APPLICATION_XHTML_XML","IMAGE_SVG_XML","predicate","check","withAttribute","Predicate","withChild","opt_childPredicate","asArray","pr","forEachNode","forEachNonNull","uaStylesheetBaseFetcher","CssValidator","Style","rootBox","fontFaces","footnoteProps","flowProps","viewportProps","fontDeobfuscator","currentLayoutPosition","matchPageSide","lookupOffset","flowChunkIsAfterParentFlowForcedBreak","pageNumberOffset","sizeViewport","textZoom","scaleFactor","defaultFontSize","widthVal","heightVal","StyleInstance","defaultLang","fontMapper","stylerMap","faces","pageBoxInstances","pageManager","rootPageFloatLayoutContext","pageBreaks","pageSheetSize","pageSheetHeight","pageSheetWidth","Font","CssStyler","CssPage","matchStartPageSide","srcDocument","srcScripts","needPrepareForWebFonts","textContentDiv","fontFamilySet","findFontFamilyInStyle","_style$fontFamily","findAllFontFamily","arg","isArray","getAllFontFamilyList","savedDollar","$","classList","FontJSON","_window$ret","Event","isRectoStart","isLTR","getStyleForDoc","supported","supportsReceiver","getConsumedOffset","chunkOffset","getPosition","layoutPosition","noLookAhead","currentPosition","consumedOffset","dumpLocation","updateStartSide","flowChunkBreakBefore","flowBreakAfter","selectPageMaster","pageMasters","coeff","pageArea","initLingering","breakOffsetBeforeStartIndex","breakOffsetBeforeStart","parentFlowPosition","parentStartOffset","setFormattingContextToColumn","layoutDeferredPageFloats","pageStartPos","deferredFloatOffset","parentInvalidated","getLastAfterPositionIfDeferredFloatsExists","layoutColumn","repeatedIndices","removedIndices","alt","counterConstraint","createAndLayoutColumn","forceNonFitting","dontApplyExclusions","boxContainer","columnPageFloatLayoutContext","positionAtColumnStart","columnContainer","columnY","columnX","setPagePageFloatLayoutContextContainer","pagePageFloatLayoutContext","getRegionPageFloatLayoutContext","layoutFlowColumnsWithBalancing","positionAtContainerStart","layoutColumns","layoutFlowColumns","generatorResult","columnFill","columnBalancer","lastColumn","Vgen","dontExclude","forwardOrderInLayout","removed","innerContainerTag","innerContainer","outerShape","processLinger","noMorePrimaryFlows","layoutNextPage","_cp$flowPositions$bod","bleedBoxPaddingEdge","evaluatedPageSizeAndBleed","setPageSizeAndBleed","bgcolor","printerMarkOffset","cropMarkLineLength","bleedMarkLineLength","maxLineLength","svgWidth","points1","points2","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","line1","line2","longLineLength","BOTTOM","horizontalLine","verticalLine","opposite","LEFT","RIGHT","isLeftPage","getTriggersForDoc","BaseParserHandler","masterHandler","insideRegion","pageHandler","regionCount","regionHandler","processViewportMeta","meta","StyleParserHandler","cascadeParserHandler","parseOPSResource","OPSDocStore","styleByKey","styleFetcherByKey","styleByDocURL","triggersByDocURL","styleSheets","triggerSingleDocumentPreprocessing","authorStyleSheets","userStyleSheets","setStyleSheets","userAgentXML","clearStyleSheets","addAuthorStyleSheet","addUserStyleSheet","stylesheet","XmlDoc","triggerList","getElementsByTagNameNS","triggerElem","EV","sources","userAgentURL","title","rel","sph","source","encode32","decode32","bytes","bytesToSHA1Int32","appendCount","w","bi","TOCView","rendererFactory","setAutoHeight","makeCustomRenderer","renderer","srcElem","viewParent","replaceChild","createComment","adaptParentClass","button","toggleNodeExpansion","tabIndex","showTOC","tocBoxUrl","viewportSize","OPS","bodyChildElem","hideTOC","isTOCVisible","getTOC","exportTree","links","exportLink","hash","innerText","tocNodeElem","ce","adaptClass","elem1","stopPropagation","EPUBDocStore","plainXMLStore","jsonStore","opfByURL","primaryOPFByEPubURL","deobfuscators","documents","makeDeobfuscatorFactory","loadAsPlainXML","startLoadingAsPlainXML","loadAsJSON","startLoadingAsJSON","loadPubDoc","haveZipMetadata","loadEPUBDoc","opf","loadOPF","manifestObj","reportLoadError","OPFDoc","initWithWebPubManifest","loadWebPub","containerXML","pubURL","opfXML","encXML","zipMetadata","initWithXMLDoc","manifestLink","manifestUrl","xhtmlToc","addDocument","docURL","domain","removePath","OPFItem","mediaType","itemRefElement","compressedSize","compressed","epage","epageCount","skipPagesBefore","itemProperties","initWithElement","itemElem","opfURL","propStr","initWithParam","getOPFItemId","predefinedPrefixes","dcterms","marc","rendition","onix","xsd","defaultIRI","metaTerms","language","creator","titleType","displaySeq","alternateScript","role","getMetadataComparator","item1","item2","i1","_r1$metaTerms$display","i2","_r2$metaTerms$display","getMathJaxHub","Hub","PageViewMode","supportedMediaTypes","items","spine","itemMap","itemMapByPath","uid","bindings","prePaginated","epageIsRenderedPage","epageCountCallback","metadata","ncxToc","cover","createDocumentURLTransformer","MATHML","OPFDocumentURLTransformer","path","restoreURL","encoded","getMetadata","getPathFromURL","epubBaseURL","manifestURL","pkg","uidref","uidElem","srcToFallbackId","fallback","nav","fallbackSrc","tocAttr","pageProgressionAttr","idpfObfURLs","mediaTypeElems","handlerId","mroot","prefixMap","resolveProperty","iri","rawItems","refines","scheme","DC","rawItemsByTarget","rawItem","makeMetadata","entryMap","sortMetadata","sha1Sum","blob","webkitSlice","fileReader","FileReader","readAsArrayBuffer","dataView","DataView","byteLength","getUint8","setUint8","assignAutoPages","manifestText","obfuscations","obfuscationKey","sha1","encodedPath","obfuscation","DEFAULT","setEPageCountMode","countEPages","offsetPerEPage","initWithChapters","itemref","readingProgression","_manifestObj$metadata","author","_manifestObj$metadata2","inLanguage","_manifestObj$metadata3","primaryEntryPath","readingOrder","encodeURI","hrefNoFragment","itemCount","tocFound","readingOrderOrResources","itemObj","isInReadingOrder","encodingFormat","_this12$items","getCFI","offsetInItem","cfi","CFI","resolveFragment","opfNav","idref","nodeNav","resolveEPage","getEPageFromPosition","makePageAndPosition","OPFView","pageSheetSizeReporter","spineItems","spineItemLoadingContinuations","tocAutohide","tocView","Counters","getPage","viewItem","getCurrentPageProgression","finishPageContainer","oldPage","prevItem","newPage","insertPos","renderSinglePage","makePage","posParam","layoutPositions","prevPos","getPageViewItem","resultPosition","pageAndPosition","nextLayoutPosition","normalizeSeekPosition","seekOffset","seekOffsetPageIndex","complete","findPage","sync","resultPage","normalizedPosition","renderPage","renderAllPages","renderPagesUpto","notAllPages","lastResult","firstPage","lastPage","nextPage","nextViewItem","previousPage","isRectoPage","isLeft","getSpread","otherPageAndPosition","thisPage","otherPage","nextSpread","isRecto","next2","result2","previousSpread","oldPrevPageCont","navigateToEPage","navigateToFragment","navigateTo","restored","pageCont","matrix","cssMatrix","makeObjectView","handlerSrc","srcParam","typeParam","pvalue","makeMathJaxView","hub","clonedMath","importNode","resolveURLsInMathML","Push","newUrl","loadingContinuations","epubSpineProperties","pageCounterOffset","_this27$spineItems$","previousViewItem","pubTitles","removeRenderedPages","hasAutoSizedPages","hasPages","autohide","toc","Toc","tocWidth","tocHeight","ZoomType","AdaptiveViewer","viewportElement","instanceId","callbackFn","kick","sendCommand","resizeListener","hyperlinkListener","pageRuleStyleElement","pageSheetSizeAlreadySet","renderTask","packageURL","touchActive","touchX","touchY","needResize","needRefresh","currentSpread","pagePosition","fitToScreen","pageViewMode","waitForLoading","opfView","findOrCreateStyleElement","cssText","styleElement","pageReplacedListener","loadPublication","loadXML","configure","moveTo","addLogListeners","LOADING","SINGLE_PAGE","logLevel","setReadyState","command","Profile","zipmeta","authorStyleSheet","userStyleSheet","Epub","render","resolvedParams","cancelRenderingTask","resize","resolveLength","matched","autoresize","vp","userAgentRootURL","rootURL","configurePlugins","CONFIGURATION","showCurrent","forCurrentPages","removePageListeners","hidePages","showSinglePage","showPage","showSpread","leftWidth","rightWidth","reportPosition","sendLocationNotification","createViewport","vs","resolveSpreadView","SPREAD","updateSpreadView","sizeIsGood","spreadViewChanged","setPageSize","setPageSizePageRules","_this$pageSizes","_this$pageSizes2","convertSize","widthMax","heightMax","widthPt","heightPt","removePageSizePageRules","tocVisible","setSpreadZoom","setPageZoom","getAdjustedZoomFactor","getSpreadDimensions","pageDimension","calculateZoomFactorToFitInsideViewPort","queryZoomFactor","pageDim","FIT_INSIDE_VIEWPORT","RenderingCanceledError","resizeTask","INTERACTIVE","notification","COMPLETE","method","currentVisibility","changeAutohide","runCommand","actionName","initEmbed","cmd","maybeParse","viewer","hrefEvent","internal","frameInternal","adapt_command","setPrototypeOf","convertViewerOptions","Navigation","CoreViewer","settings","opt_options","initialized","adaptViewer_","eventTarget","dispatcher","autoResize","pageBorderWidth","AUTO_SPREAD","setOptions","defineProperty","removeListener","loadDocument","singleDocumentOptions","opt_documentOptions","opt_viewerOptions","loadDocumentOrPublication","pubUrl","documentOptions","convertStyleSheetArray","convertSingleDocumentOptions","documentObject","resolveNavigation","PREVIOUS","NEXT","navigateToPage","opt_epage","EPAGE","navigateToInternalUrl","opt_show","opt_autohide","getPageSizes","_this$adaptViewer_$op","_this$adaptViewer_$op2","getCover","toNumberOrNull","opt","VivliostylePrint","htmlDoc","printCallback","iframeWin","hideIframe","removeIframe","borderWidth","printInstance","srcdoc","runInIframe","preparePrint","browserPrint","cleanUp","docBlob","Viewer","Promise","config","html","css","printHTML"],"mappings":"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BACAA,oBACAA,sBACAA,0BACAA,0BACAA,wBAGAA,oBACAA,wBACAA,kBACAA,kBACAA,sBACAA,oBACAA,gBACAA,gBACAA,gBAGAA,0BACAA,8BACAA,wBACAA,wBACAA,4BACAA,0BACAA,sBACAA,sBACAA,sBACAA,0BACAA,0BACAA,oBArDF,CAAYA,KAAAA,YAuEA2I,GAfCC,GAOX,gBANA5mB,iBACA6mB,wBACAtY,IAAc,OACd9K,KAAe,QACfqjB,SAAmB,EAGjBjxB,KAAKmK,KAAOge,GAAU+I,cA6FVC,GAAYpK,EAAaqK,GACvC,IACIh5B,EADE8G,EAAchF,MAAM,KAE1B,IAAK9B,EAAI,EAAGA,EAAI,IAAKA,IACnB8G,EAAE9G,GAAK2uB,EAGT,IADA7nB,EAACmyB,IAAQtK,GAAO+J,GAAOQ,IAAMR,GAAOQ,IAAMR,GAAOS,QAC5Cn5B,EAAI,EAAGA,EAAIg5B,EAAKh7B,OAAQgC,GAAK,EAChC8G,EAAEkyB,EAAKh5B,IAAMg5B,EAAKh5B,EAAI,GAExB,OAAO8G,GAhGT,SAAY4xB,GACVA,qBACAA,iBACAA,qBACAA,mBACAA,mBACAA,uBACAA,yBACAA,iBACAA,sBACAA,sBACAA,oBACAA,oBACAA,sBACAA,sBACAA,kBACAA,sBACAA,sBACAA,0BACAA,gBACAA,gBACAA,gBACAA,sBACAA,gBACAA,sBACAA,sBACAA,sBACAA,sBACAA,wBACAA,kBACAA,kBACAA,sBACAA,oBACAA,oBACAA,kBACAA,wBACAA,wBACAA,wBACAA,oBACAA,oBACAA,wBACAA,wBACAA,0BACAA,0BACAA,0BAGAA,wBACAA,0BAGAA,0BACAA,0BACAA,0BACAA,0BACAA,oBACAA,wBACAA,0BACAA,wBACAA,0BACAA,wBACAA,sBACAA,sBACAA,0BACAA,wBACAA,sBACAA,sBACAA,kBACAA,oBACAA,oBACAA,wBACAA,0BACAA,wBACAA,sBACAA,0BACAA,0BACAA,0BACAA,0BACAA,wBACAA,wBACAA,0BACAA,0BACAA,sBACAA,kBAnFF,CAAYA,KAAAA,YAsGCU,GAA0B,CACrCV,GAAOS,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T,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOkD,QACPlD,GAAOmD,MACPnD,GAAOS,QACPT,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOS,QACPT,GAAOoD,OACPpD,GAAOS,QACPT,GAAOS,QACPT,GAAO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,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAO+D,OACP/D,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOiE,KA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zM,KAAKgjD,cAAczxC,EAAKzG,mBA7Dc8b,aAmE5B28B,GAAkBhyC,GAChC,aACEA,GACAA,IAAQqV,IACRrV,IAAQqV,GAAUtG,QAClB/O,IAAQqV,GAAUvG,OACjBuG,GAAsBrV,OC/zCdsqC,GAAiB,CAC5B,qBACA,oBACA,kBACA,eACAzgC,SACA,yBACA,qBACA9jB,UACAykD,aACA,iBACAyH,QACA,kBACA,eACA,kBACA,eACA,sBACA,iBACA,2BACA,gBACA,kBACA,4BACA,uBACA,0BACA,6BACA,iBACA,gCACA,yBACAC,WACA,yBACA,2BACA,0BACA,qBACA,sBACA,oBACA,gBACA,iBACA,sBACA,yBACA,qBACAC,UACA,gBACA,gBACA,kBACAC,WACA,mBACA,iBACA,oBACAC,UACA,gBACA,mBACA,qBACAC,UACA,sBACA,uBACA,oBACA,qBACA,uBACA,oBACA,kBACA,cACA,gBACA,qBACA,iBACA,0BACA,yBACA,4BACA,yBACA,0BACA,iBACA,kBACA,sBACA,oBACA,sBACA,kBACA,oBACA,6BACAlP,cACA,iBACAmP,UACA,gBACA,kBACA,mBAGWC,GAA2B,CACtC,uBAGA,mBACA,UACA,UAaWC,GAAsB,CACjC,kCACA,kCACA,iCAGWC,GAAkB,CAC7B,WACA,YACA,iBACA,iBACA,iBACA,KAGWC,GAAwB,CAAC,QAAS,QAAS,KAE3CC,GAAyC,WAUpD,IATA,IAAMC,EAAQ,CAAC,OAAQ,QAAS,MAAO,UACjCC,EAAQ,CACZj9B,SACAC,UACA,eACA,gBACA,eACA,iBAEOjvB,EAAI,EAAGA,EAAI6rD,GAAgB7tD,OAAQgC,IAC1C,IAAK,IAAI+E,EAAI,EAAGA,EAAIinD,EAAMhuD,OAAQ+G,IAEhCknD,EADaJ,GAAgB7rD,GAAGgN,QAAQ,IAAKg/C,EAAMjnD,QAIvD,OAAOknD,EAhB6C,YAmBtCC,GACdC,EACAC,GAGA,IADA,MAAM16C,EAAM,OACUm6C,mBAAiB,KAA5BQ,UACT,IAAK,IAAMzO,KAAQuO,EAAS,CAC1B,IAAMjiC,EAAQmiC,EAAQr/C,QAAQ,IAAK4wC,G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IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,SAAU,CACR,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,OAAQ,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,MAISnC,GAAsB,CACjCoC,MAAO,MACPC,MAAO,MACPC,MAAO,SACPC,QAAS,aAGEryC,GAAQ,CACnBsyC,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRrxC,KAAM,IAmEKwvC,GAAwC,CACnDN,UACAF,OAAQ,aACRG,QAAS,MACTF,SAAU,cA4DIqC,GAAUnxB,EAAkBoxB,GAC1C,IAAK,IAAMv0D,KAAKmjC,EACdoxB,EAAIv0D,GAAKmjC,EAAInjC,GAAGu/C,YAwqBRiV,GApqBCC,gCACX3I,QAAkB,OAClBD,SAAsC,QACtCH,KAAoB,QACpBK,OAAsB,QACtBY,UAAyB,QACzBvjB,QAAuB,QACvB5X,IAAmB,QACnBkjC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AC1E,kBAAmB,CACjBvhF,MAAO,EACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,WAAY,CACV5hF,MAAO,EACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCS,OAE5C,aAAc,CACZ7hF,MAAO,EACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,YAAa,CACX9hF,MAAO,EACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwC3rF,KAE1E,mBAAoB,CAClBuK,MAAO,EACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,YAAa,CACX5hF,MAAO,EACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCS,OAE5C,eAAgB,CACd7hF,MAAO,EACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,eAAgB,CACd9hF,MAAO,EACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwC3rF,KAE1E,sBAAuB,CACrBuK,MAAO,EACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,eAAgB,CACd5hF,MAAO,GACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwC3rF,KAE1E,gBAAiB,CACfuK,MAAO,GACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,cAAe,CACb9hF,MAAO,GACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCS,OAE5C,qBAAsB,CACpB7hF,MAAO,GACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,cAAe,CACb5hF,MAAO,GACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwC3rF,KAE1E,cAAe,CACbuK,MAAO,GACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,WAAY,CACV9hF,MAAO,GACPwhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCS,QAOjCE,IACLzyC,GAAQiyC,GACPz6G,OAAOC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"}