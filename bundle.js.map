{"version":3,"file":"bundle.js","sources":["../node_modules/fast-diff/diff.js","../node_modules/@vivliostyle/core/src/vivliostyle/constants.ts","../node_modules/@vivliostyle/core/src/vivliostyle/logging.ts","../node_modules/@vivliostyle/core/src/vivliostyle/plugin.ts","../node_modules/@vivliostyle/core/src/vivliostyle/profile.ts","../node_modules/@vivliostyle/core/src/vivliostyle/base.ts","../node_modules/@vivliostyle/core/src/vivliostyle/cfi.ts","../node_modules/@vivliostyle/core/src/vivliostyle/exprs.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css.ts","../node_modules/@vivliostyle/core/src/vivliostyle/geometry-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-prop.ts","../node_modules/@vivliostyle/core/src/vivliostyle/counters.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-tokenizer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/net.ts","../node_modules/@vivliostyle/core/src/vivliostyle/assets.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-parser.ts","../node_modules/@vivliostyle/core/src/vivliostyle/matchers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/types.ts","../node_modules/@vivliostyle/core/src/vivliostyle/diff.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vtree.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-cascade.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-logical-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sizing.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-floats.ts","../node_modules/@vivliostyle/core/src/vivliostyle/footnotes.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break.ts","../node_modules/@vivliostyle/core/src/vivliostyle/display.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-helper.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break-position.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-processor.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-retryers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/shared.ts","../node_modules/@vivliostyle/core/src/vivliostyle/text-polyfill.ts","../node_modules/@vivliostyle/core/src/vivliostyle/pseudo-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout.ts","../node_modules/@vivliostyle/core/src/vivliostyle/repetitive-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/table.ts","../node_modules/@vivliostyle/core/src/vivliostyle/math-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/columns.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-validator.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-styler.ts","../node_modules/@vivliostyle/core/src/vivliostyle/font.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-master.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-page.ts","../node_modules/@vivliostyle/core/src/vivliostyle/scripts.ts","../node_modules/@vivliostyle/core/src/vivliostyle/urls.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vgen.ts","../node_modules/@vivliostyle/core/src/vivliostyle/xml-doc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/ops.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sha1.ts","../node_modules/@vivliostyle/core/src/vivliostyle/toc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/epub.ts","../node_modules/@vivliostyle/core/src/vivliostyle/adaptive-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/core-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/print.ts","index.js"],"sourcesContent":["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 !== 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length && y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length && y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i), shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i), shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(\n          j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a, best_longtext_b,\n        best_shorttext_a, best_shorttext_b, best_common\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(0, -1);\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n        diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(0, diffs[pointer][1].length -\n            diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n};\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xD800 && charCode <= 0xDBFF;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xDC00 && charCode <= 0xDFFF;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after]\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange = typeof cursor_pos === 'number' ?\n    { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === 'number' ?\n    null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: ((p1: ErrorInfo) => void)[] } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listeners = this.listeners[level];\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(args);\n      });\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    let listeners = this.listeners[level];\n    if (!listeners) {\n      listeners = this.listeners[level] = [];\n    }\n    listeners.push(listener);\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (p1: Base.JSON) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Ident,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n */\nexport function registerHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    hooksForName.push(fn);\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming =\n      registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern =\n  /^[\\s\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:[\\s\\p{Zs}]*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  if (i < baseURL.length - 1) {\n    const j = baseURL.lastIndexOf(\".\");\n    if (j < i) {\n      // Assume the last part without '.' to be a directory name.\n      if (relURL == \"\") {\n        return baseURL;\n      }\n      baseURL += \"/\";\n      i = baseURL.length - 1;\n    }\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r =\n      /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n        url,\n      ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n  NCX = \"http://www.daisy.org/z3986/2005/ncx/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\n/**\n * @return ?string\n */\nexport function asString(v: any): any {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\n/**\n * @param prefix Prefix (containing leading and trailing hyphens)\n * @param cssPropName CSS property name\n * @return JavaScript property name\n */\nexport function cssToJSProp(prefix: string, cssPropName: string): string {\n  if (prefix) {\n    cssPropName = `-${cssPropName}`;\n    prefix = prefix.replace(/-/g, \"\");\n    if (prefix === \"moz\") {\n      prefix = \"Moz\";\n    }\n  }\n  return (\n    prefix +\n    cssPropName.replace(/-[a-z]/g, (txt) => txt.substr(1).toUpperCase())\n  );\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\"];\n\nexport const propNameMap = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  const style = document.documentElement.style;\n  return typeof style[cssToJSProp(prefix, prop)] === \"string\";\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"behavior\":\n      propNameMap[prop] = null;\n      return null;\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n    case \"filter\":\n      // Special case: prefer '-webkit-filter' to 'filter'\n      if (checkIfPropertySupported(\"-webkit-\", \"filter\")) {\n        propNameMap[prop] = [\"-webkit-filter\"];\n        return [\"-webkit-filter\"];\n      }\n      break;\n    case \"clip-path\":\n      // Special case for chrome.\n      if (checkIfPropertySupported(\"-webkit-\", \"clip-path\")) {\n        return (propNameMap[prop] = [\"-webkit-clip-path\", \"clip-path\"]);\n      }\n      break;\n    case \"margin-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-start\")) {\n        propNameMap[prop] = [\"-webkit-margin-start\"];\n        return [\"-webkit-margin-start\"];\n      }\n      break;\n    case \"margin-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-end\")) {\n        propNameMap[prop] = [\"-webkit-margin-end\"];\n        return [\"-webkit-margin-end\"];\n      }\n      break;\n    case \"padding-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-start\")) {\n        propNameMap[prop] = [\"-webkit-padding-start\"];\n        return [\"-webkit-padding-start\"];\n      }\n      break;\n    case \"padding-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-end\")) {\n        propNameMap[prop] = [\"-webkit-padding-end\"];\n        return [\"-webkit-padding-end\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = prefix + prop;\n      propNameMap[prop] = [prefixed];\n      return [prefixed];\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  try {\n    const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n    if (!prefixedPropertyNames) {\n      return;\n    }\n    const elemStyle = (elem as HTMLElement)?.style;\n    if (!elemStyle) {\n      return;\n    }\n    prefixedPropertyNames.forEach((prefixed) => {\n      switch (prefixed) {\n        case \"-webkit-text-combine\": // for Safari\n          switch (value) {\n            case \"all\":\n              value = \"horizontal\";\n              break;\n          }\n          break;\n        case \"text-combine-upright\":\n          switch (value) {\n            case \"all\":\n              // workaround for Chrome 93 bug https://crbug.com/1242755\n              elemStyle.setProperty(\"text-indent\", \"0\");\n              break;\n          }\n          break;\n      }\n      elemStyle.setProperty(prefixed, value);\n    });\n  } catch (err) {\n    Logging.logger.warn(err);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\nexport const base64Chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nexport function appendBase64(sb: StringBuffer, data: string): void {\n  const length = data.length;\n  const length3 = Math.floor(length / 3) * 3;\n  for (let i = 0; i < length3; i += 3) {\n    const c1 = data.charCodeAt(i) & 255;\n    const c2 = data.charCodeAt(i + 1) & 255;\n    const c3 = data.charCodeAt(i + 2) & 255;\n    sb.append(base64Chars.charAt(c1 >> 2));\n    sb.append(base64Chars.charAt(((c1 << 4) | (c2 >> 4)) & 63));\n    sb.append(base64Chars.charAt(((c2 << 2) | (c3 >> 6)) & 63));\n    sb.append(base64Chars.charAt(c3 & 63));\n  }\n  switch (length - length3) {\n    case 1: {\n      const p1 = data.charCodeAt(length3) & 255;\n      sb.append(base64Chars.charAt(p1 >> 2));\n      sb.append(base64Chars.charAt((p1 << 4) & 63));\n      sb.append(\"==\");\n      break;\n    }\n    case 2: {\n      const q1 = data.charCodeAt(length3) & 255;\n      const q2 = data.charCodeAt(length3 + 1) & 255;\n      sb.append(base64Chars.charAt(q1 >> 2));\n      sb.append(base64Chars.charAt(((q1 << 4) | (q2 >> 4)) & 63));\n      sb.append(base64Chars.charAt((q2 << 2) & 63));\n      sb.append(\"=\");\n      break;\n    }\n  }\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      list.push(listener);\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n\nexport let hasLShapeFloatBug: boolean | null = null;\n\n/**\n * Check if there is a bug with L-shape floats overlapping text.\n */\nexport function checkLShapeFloatBug(body: HTMLElement): boolean {\n  if (hasLShapeFloatBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    body.appendChild(container);\n    const f1 = doc.createElement(\"div\") as HTMLElement;\n    f1.style.width = \"0px\";\n    f1.style.height = \"14px\";\n    f1.style.cssFloat = \"left\";\n    container.appendChild(f1);\n    const f2 = doc.createElement(\"div\") as HTMLElement;\n    f2.style.width = \"50px\";\n    f2.style.height = \"50px\";\n    f2.style.cssFloat = \"left\";\n    f2.style.clear = \"left\";\n    container.appendChild(f2);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const leftEdge = range.getBoundingClientRect().left;\n    hasLShapeFloatBug = leftEdge < 40;\n    body.removeChild(container);\n  }\n  return hasLShapeFloatBug;\n}\n\nexport let hasVerticalBBoxBug: boolean | null = null;\n\n/**\n * Check if there is a bug with the bounding boxes of vertical text characters.\n * Though method used to be used check Chrome bug, it seems that the bug has\n * been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method to check Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function checkVerticalBBoxBug(body: HTMLElement): boolean {\n  if (hasVerticalBBoxBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    setCSSProperty(container, \"writing-mode\", \"vertical-rl\");\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const box = range.getBoundingClientRect();\n    hasVerticalBBoxBug = box.right - box.left < 10;\n    body.removeChild(container);\n  }\n  return hasVerticalBBoxBug;\n}\n\nexport let hasInlineBlockJustificationBug: boolean | null = null;\n\nexport function checkInlineBlockJustificationBug(body: HTMLElement): boolean {\n  if (hasInlineBlockJustificationBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"30px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a | \");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"30px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 3);\n    const box = range.getBoundingClientRect();\n    hasInlineBlockJustificationBug = box.right < 27;\n    body.removeChild(container);\n  }\n  return hasInlineBlockJustificationBug;\n}\n\nexport let hasSoftWrapOpportunityAfterHyphenBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityAfterHyphenBug(\n  body: HTMLElement,\n): boolean {\n  if (hasSoftWrapOpportunityAfterHyphenBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityAfterHyphenBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityAfterHyphenBug;\n}\n\nexport let hasSoftWrapOpportunityByWbrBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityByWbrBug(body: HTMLElement): boolean {\n  if (hasSoftWrapOpportunityByWbrBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    container.appendChild(doc.createElement(\"wbr\"));\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityByWbrBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityByWbrBug;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      const movedNode = elem.ownerDocument.getElementById(this.id);\n      if (movedNode) {\n        pos.node = movedNode;\n      } else {\n        Logging.logger.warn(\"E_CFI_ID_MISMATCH:\", this.id);\n      }\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  isRelativeRootFontSize: boolean | null = null;\n  fontSize: () => number;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return this.pageVertical ? vh : vw;\n        case \"vb\":\n          return this.pageVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return this.pageVertical ? pvh : pvw;\n        case \"pvb\":\n          return this.pageVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= req;\n        case \"max\":\n          return actual <= req;\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    context.storeVal(this.scope, this.key, result);\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(scope: LexicalScope, public val: Val) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(scope: LexicalScope, public lhs: Val, public rhs: Val) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class NotMedia extends Not {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"not \";\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"-\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"&&\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"||\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class Comma extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \", \";\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" or \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"==\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"+\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" - \";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"*\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"/\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"%\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(scope: LexicalScope, public num: number, unit: string) {\n    super(scope);\n    this.unit = unit.toLowerCase();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(scope: LexicalScope, public qualifiedName: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  constructor(scope: LexicalScope, public not: boolean, public name: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  /**\n   * @override\n   */\n  isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(scope: LexicalScope, public val: Result) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(scope: LexicalScope, public name: MediaName, public value: Val) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class SupportsTest extends Val {\n  constructor(\n    scope: LexicalScope,\n    public name: string,\n    public value: string,\n    public isFunc: boolean,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.isFunc) {\n      buf.append(this.name);\n    }\n    buf.append(\"(\");\n    if (!this.isFunc && this.name) {\n      buf.append(this.name);\n      buf.append(\":\");\n    }\n    buf.append(this.value);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalSupportsTest(this.name, this.value, this.isFunc);\n  }\n}\n\nexport class Param extends Val {\n  constructor(scope: LexicalScope, public index: number) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  /**\n   * @return void\n   */\n  visitValues(values: Val[]): any {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n  }\n\n  visitEmpty(empty: Val): Val {\n    throw new Error(\"E_CSS_EMPTY_NOT_ALLOWED\");\n  }\n\n  visitSlash(slash: Val): Val {\n    throw new Error(\"E_CSS_SLASH_NOT_ALLOWED\");\n  }\n\n  visitStr(str: Str): Val {\n    throw new Error(\"E_CSS_STR_NOT_ALLOWED\");\n  }\n\n  visitIdent(ident: Ident): Val {\n    throw new Error(\"E_CSS_IDENT_NOT_ALLOWED\");\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    throw new Error(\"E_CSS_NUMERIC_NOT_ALLOWED\");\n  }\n\n  visitNum(num: Num): Val {\n    throw new Error(\"E_CSS_NUM_NOT_ALLOWED\");\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitColor(color: Color): Val {\n    throw new Error(\"E_CSS_COLOR_NOT_ALLOWED\");\n  }\n\n  visitURL(url: URL): Val {\n    throw new Error(\"E_CSS_URL_NOT_ALLOWED\");\n  }\n\n  visitURange(urange: URange): Val {\n    throw new Error(\"E_CSS_URANGE_NOT_ALLOWED\");\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    throw new Error(\"E_CSS_LIST_NOT_ALLOWED\");\n  }\n\n  visitCommaList(list: CommaList): Val {\n    throw new Error(\"E_CSS_COMMA_NOT_ALLOWED\");\n  }\n\n  visitFunc(func: Func): Val {\n    throw new Error(\"E_CSS_FUNC_NOT_ALLOWED\");\n  }\n\n  visitExpr(expr: Expr): Val {\n    throw new Error(\"E_CSS_EXPR_NOT_ALLOWED\");\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  constructor() {\n    super();\n  }\n\n  visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Str): Val {\n    return str;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Num): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Int): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Color): Val {\n    return color;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: URL): Val {\n    return url;\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: URange): Val {\n    return urange;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: any): any {\n    throw new Error(\"F_ABSTRACT\");\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitIdent(this);\n  }\n\n  /**\n   * @override\n   */\n  isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(public num: number, unit: string) {\n    super();\n    this.unit = unit.toLowerCase(); // units are case-insensitive in CSS\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNumeric(this);\n  }\n\n  /**\n   * @override\n   */\n  isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNum(this);\n  }\n\n  /**\n   * @override\n   */\n  isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class Color extends Val {\n  constructor(public rgb: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    const str = this.rgb.toString(16);\n    buf.append(\"000000\".substr(str.length));\n    buf.append(str);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURL(this);\n  }\n}\n\nexport class URange extends Val {\n  constructor(public urangeText: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.urangeText);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURange(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0].appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i].appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSpaceList(this);\n  }\n\n  /**\n   * @override\n   */\n  isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(public name: string, public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"-epubx-expr(\");\n    this.expr.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitExpr(this);\n  }\n\n  /**\n   * @override\n   */\n  isExpr(): boolean {\n    return true;\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  anywhere: getName(\"anywhere\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const fullURange: URange = new URange(\"U+0-10FFFF\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  color: 2,\n};\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  /** @override */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  /** @override */\n  visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters and named strings\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(public readonly targetId: string, public resolved: boolean) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /**\n   * @override\n   */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedStringValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedStringValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /**\n   * @override\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr) => {\n      return format(arr[0]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /**\n   * @override\n   */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * @override\n   */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const stringValues = this.namedStringValues[name];\n        if (!stringValues) {\n          return \"\";\n        }\n        const offsets = Object.keys(stringValues)\n          .map((a) => parseInt(a, 10))\n          .sort(Base.numberCompare);\n\n        const currentPage = this.counterStore.currentPage;\n        const pageStartOffset = currentPage.isBlankPage\n          ? currentPage.offset - 1\n          : currentPage.offset;\n        const pageLastOffset = currentPage.isBlankPage\n          ? pageStartOffset\n          : Math.max(\n              pageStartOffset,\n              ...Array.from(\n                currentPage.container.querySelectorAll(\n                  `[${Base.ELEMENT_OFFSET_ATTR}]`,\n                ),\n              ).map((e) =>\n                parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10),\n              ),\n            );\n\n        let firstOffset = -1;\n        let startOffset = -1;\n        let lastOffset = -1;\n        let firstExceptOffset = -1;\n\n        for (let i = 0; i < offsets.length; i++) {\n          const offset = offsets[i];\n          const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n          const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n          if (offset > pageLastOffset) {\n            break;\n          }\n          if (offset >= pageStartOffset) {\n            if (firstOffset < 0) {\n              firstOffset = offset;\n              firstExceptOffset = -1;\n            }\n            if (startOffset < 0) {\n              if (offset === pageStartOffset) {\n                startOffset = offset;\n              } else {\n                if (offsetPrev < firstOffset) {\n                  startOffset = offsetPrev;\n                }\n                // Check if the element at the offset is at beginning of the page\n                const elementAtOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n                );\n                if (!elementAtOffset) {\n                  // title or meta elements are not output, but should be treated as start\n                  if (startOffset < 0) {\n                    startOffset = offset;\n                  }\n                } else {\n                  let elementAtPageStartOffset =\n                    currentPage.container.querySelector(\n                      `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                    );\n                  if (!elementAtPageStartOffset) {\n                    // The element at pageStartOffset is not found when page break occured\n                    // within an element, so use the ancestor element with offset 0 instead.\n                    elementAtPageStartOffset =\n                      currentPage.container.querySelector(\n                        `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                      );\n                  }\n                  if (elementAtPageStartOffset) {\n                    // Find if the element at the offset is (the first child of)* the element at page start\n                    for (\n                      let element = elementAtPageStartOffset;\n                      element;\n                      element = element.firstElementChild\n                    ) {\n                      if (element === elementAtOffset) {\n                        startOffset = offset;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            lastOffset = offset;\n          } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n            firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n          }\n        }\n\n        const stringValue =\n          stringValues[\n            {\n              first: firstOffset,\n              start: startOffset,\n              last: lastOffset,\n              \"first-except\": firstExceptOffset,\n            }[retrievePosition]\n          ] || \"\";\n\n        return stringValue;\n      },\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CssCascade.CascadeInstance,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[cascadeInstance.currentElementOffset] = stringValue;\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(page: Vtree.Page): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    }\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(expr, val, document) {\n    const found = this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    if (found) {\n      const node = document.createElement(\"span\");\n      node.textContent = val;\n      node.setAttribute(PAGES_COUNTER_ATTR, expr.key);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = this.currentPageCounters[\"page\"][0];\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"data-vivliostyle-id\") ||\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code <= 65535) {\n    return String.fromCharCode(code);\n  }\n  if (code <= 1114111) {\n    // non-BMP characters: convert to a surrogate pair\n    return String.fromCharCode(\n      55296 | ((code >> 10) & 1023),\n      56320 | (code & 1023),\n    );\n  }\n\n  // not a valid Unicode value\n  return \"\\ufffd\";\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{0,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n  URANGE,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  INVALID,\n  LAST = 51,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n}\n\nexport function makeActions(def: Action, spec: Action[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.ENDNOTK,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  9 /*tab*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  32 /*sp*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  head: number = -1; // saved, occupied if >= 0\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(public input: string, public readonly handler: TokenizerHandler) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  mark(): void {\n    if (this.head >= 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL mark\");\n    }\n    this.head = this.curr;\n  }\n\n  reset(): void {\n    if (this.head < 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL reset\");\n    }\n    this.curr = this.head;\n    this.head = -1;\n  }\n\n  unmark(): void {\n    this.head = -1;\n  }\n\n  hasMark(): boolean {\n    return this.head >= 0;\n  }\n\n  private reallocate(): void {\n    const newIndexMask = 2 * (this.indexMask + 1) - 1;\n    const newBuffer: Token[] = Array(newIndexMask + 1);\n    let oldIndex = this.head;\n    let newIndex = 0;\n    while (oldIndex != this.tail) {\n      newBuffer[newIndex] = this.buffer[oldIndex];\n      oldIndex = (oldIndex + 1) & this.indexMask;\n      newIndex++;\n    }\n    this.head = 0;\n    this.curr = newIndex;\n    this.tail = newIndex;\n    this.indexMask = newIndexMask;\n    this.buffer = newBuffer;\n    while (newIndex <= newIndexMask) {\n      newBuffer[newIndex++] = new Token();\n    }\n  }\n\n  private error(position, token, mnemonics) {\n    if (this.handler) {\n      this.handler.error(mnemonics, token);\n    }\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.head >= 0 ? this.head : this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      // only expect to get here when mark is in effect\n      if (this.head < 0) {\n        throw new Error(\"F_CSSTOK_INTERNAL\");\n      }\n      this.reallocate();\n      tail = this.tail;\n      indexMask = this.indexMask;\n      head = indexMask; // this.head is zero\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenType = TokenType.INVALID;\n          if (isNaN(charCode)) {\n            tokenText = \"E_CSS_UNEXPECTED_EOF\";\n          } else {\n            tokenText = \"E_CSS_UNEXPECTED_CHAR\";\n          }\n          actions = actionsNormal;\n          position++;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = input.substring(tokenPosition, position);\n\n          // unicode-range support\n          if (\n            (tokenType === TokenType.URANGE && charCode === 63) ||\n            (tokenType === TokenType.IDENT &&\n              tokenText.toLowerCase() === \"u\" &&\n              /^(\\bu\\+[?0-9a-f]+(-[?0-9a-f]+)?|,|\\s+|\\/\\*([^*]|\\*[^/])*\\*\\/)+[;}]/i.test(\n                input.substring(position - 1),\n              ))\n          ) {\n            tokenType = TokenType.URANGE;\n            position++;\n            continue;\n          }\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          continue;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   * @return.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err as Error, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /**\n   * @override\n   */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /**\n   * @override\n   */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /**\n   * @override\n   */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err as Error);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /**\n   * @override\n   */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(public scheduler: Scheduler, public name: string) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /**\n   * @override\n   */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /**\n   * @override\n   */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(public task: Task, public parent: Frame<T>, public name: string) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err as Error, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err as Error, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err as Error, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(public readonly fetch: () => Task.Result<T>, opt_name?: string) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(elem: Element, src?: string): Fetcher<string> {\n  const fetcher = new Fetcher(() => {\n    const frame: Task.Frame<string> = Task.newFrame(\"loadElement\");\n    const continuation = frame.suspend(elem);\n    let done = false;\n    const handler = (evt: Event) => {\n      if (done) {\n        return;\n      } else {\n        done = true;\n      }\n      continuation.schedule(evt ? evt.type : \"timeout\");\n    };\n    elem.addEventListener(\"load\", handler, false);\n    elem.addEventListener(\"error\", handler, false);\n    elem.addEventListener(\"abort\", handler, false);\n    if (elem.namespaceURI == Base.NS.SVG) {\n      if (src) {\n        elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n      }\n      // SVG handlers are not reliable\n      setTimeout(handler, 300);\n    } else if (elem.localName === \"script\") {\n      setTimeout(handler, 3000);\n    } else if (src) {\n      (elem as any).src = src;\n    }\n    return frame.result();\n  }, `loadElement ${src || elem.localName}`);\n  fetcher.start();\n  return fetcher;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum XMLHttpRequestResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type Response = Net.Response;\n\nexport function ajax(\n  url: string,\n  opt_type?: XMLHttpRequestResponseType,\n  opt_method?: string,\n  opt_data?: string,\n  opt_contentType?: string,\n): Task.Result<Response> {\n  const frame: Task.Frame<Response> = Task.newFrame(\"ajax\");\n  const request = new XMLHttpRequest();\n  const continuation = frame.suspend(request);\n  const response: Response = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n  request.open(opt_method || \"GET\", url, true);\n  if (opt_type) {\n    request.responseType = opt_type;\n  }\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      response.status = request.status;\n      response.statusText =\n        request.statusText || (request.status == 404 && \"Not Found\") || \"\";\n      if (response.status == 200 || response.status == 0) {\n        if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.responseXML &&\n          request.responseXML.documentElement.localName != \"parsererror\"\n        ) {\n          response.responseXML = request.responseXML;\n          response.contentType = (request.responseXML as any).contentType;\n        } else if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.response instanceof HTMLDocument\n        ) {\n          response.responseXML = request.response;\n          response.contentType = (request.response as any).contentType;\n        } else {\n          const text = request.response;\n          if (\n            (!opt_type || opt_type === XMLHttpRequestResponseType.TEXT) &&\n            typeof text == \"string\"\n          ) {\n            response.responseText = text;\n          } else if (!text) {\n            Logging.logger.warn(\"Unexpected empty success response for\", url);\n          } else {\n            if (typeof text == \"string\") {\n              response.responseBlob = makeBlob([text]);\n            } else {\n              response.responseBlob = text as Blob;\n            }\n          }\n          const contentTypeHeader = request.getResponseHeader(\"Content-Type\");\n          if (contentTypeHeader) {\n            response.contentType = contentTypeHeader.replace(/(.*);.*$/, \"$1\");\n          }\n        }\n      }\n      continuation.schedule(response);\n    }\n  };\n  try {\n    if (opt_data) {\n      request.setRequestHeader(\n        \"Content-Type\",\n        opt_contentType || \"text/plain; charset=UTF-8\",\n      );\n      request.send(opt_data);\n    } else {\n      if (\n        /^file:|^https?:\\/\\/[^/]+\\.githubusercontent\\.com|\\.(xhtml|xht|opf)$/i.test(\n          url,\n        )\n      ) {\n        // File or GitHub raw URL or .xht(ml) or .opf\n        if (\n          /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n        ) {\n          // Aozorabunko's (X)HTML support\n          request.overrideMimeType(\"text/html; charset=Shift_JIS\");\n        } else if (/\\.(html|htm)$/i.test(url)) {\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        } else if (/\\.(xhtml|xht|xml|opf)$/i.test(url)) {\n          request.overrideMimeType(\"application/xml; charset=UTF-8\");\n        } else if (/\\.(txt|css)$/i.test(url)) {\n          request.overrideMimeType(\"text/plain; charset=UTF-8\");\n        } else {\n          // fallback to HTML\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        }\n      } else if (/^data:,(<|%3c)/i.test(url)) {\n        request.overrideMimeType(\"text/html; charset=UTF-8\");\n      } else if (/^data:,/i.test(url)) {\n        request.overrideMimeType(\"text/plain; charset=UTF-8\");\n      }\n      request.send(null);\n    }\n  } catch (e) {\n    Logging.logger.warn(e, `Error fetching ${url}`);\n    continuation.schedule(response);\n  }\n  return frame.result();\n}\n\n/**\n * @return Blob\n */\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): any {\n  const type = opt_type || \"application/octet-stream\";\n  const builderCtr = window[\"WebKitBlobBuilder\"] || window[\"MSBlobBuilder\"]; // deprecated\n  if (builderCtr) {\n    const builder = new builderCtr();\n    for (let i = 0; i < parts.length; i++) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(type);\n  }\n  return new Blob(parts, { type });\n}\n\n/**\n * @return Task.Result.<ArrayBuffer>\n */\nexport function readBlob(blob: Blob): any {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  (window[\"URL\"] || window[\"webkitURL\"]).revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return (window[\"URL\"] || window[\"webkitURL\"]).createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: XMLHttpRequestResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    ajax(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: Response,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, XMLHttpRequestResponseType.TEXT);\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n// vivliostyle-viewport-screen.css\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: -webkit-flex;\n    display: flex;\n    flex: none;\n    justify-content: center;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n// vivliostyle-viewport.css\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n  overflow: hidden;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container],\n  [data-vivliostyle-page-container] {\n    transform: none !important;\n  }\n\n  [data-vivliostyle-page-container] {\n    display: block !important;\n    max-height: 100vh;\n    break-after: page;\n  }\n\n  [data-vivliostyle-bleed-box] > div > div::before {\n    display: block;\n    content: \"\";\n    padding-top: 0.015625px;\n    margin-bottom: -0.015625px;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document url-prefix()  {\n    [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n    /* Workaround Gecko problem on page break */\n    [data-vivliostyle-page-container] {\n      break-after: auto;\n      height: 100% !important;\n    }\n  }\n}\n`;\n\n// validation.txt\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO | NEGATIVE;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nMIN_MAX_FIT_CONTENT = min-content | max-content | fit-content;\nSCOLOR = HASHCOLOR | aliceblue: #F0F8FF | antiquewhite: #FAEBD7 | aqua: #00FFFF | aquamarine: #7FFFD4 | azure: #F0FFFF |\n    beige: #F5F5DC | bisque: #FFE4C4 | black: #000000 | blanchedalmond: #FFEBCD | blue: #0000FF | blueviolet: #8A2BE2 | brown: #A52A2A |\n    burlywood: #DEB887 | cadetblue: #5F9EA0 | chartreuse: #7FFF00 | chocolate: #D2691E | coral: #FF7F50 | cornflowerblue: #6495ED |\n    cornsilk: #FFF8DC | crimson: #DC143C | cyan: #00FFFF | darkblue: #00008B | darkcyan: #008B8B | darkgoldenrod: #B8860B |\n    darkgray: #A9A9A9 | darkgreen: #006400 | darkgrey: #A9A9A9 | darkkhaki: #BDB76B | darkmagenta: #8B008B | darkolivegreen: #556B2F |\n    darkorange: #FF8C00 | darkorchid: #9932CC | darkred: #8B0000 | darksalmon: #E9967A | darkseagreen: #8FBC8F | darkslateblue: #483D8B |\n    darkslategray: #2F4F4F | darkslategrey: #2F4F4F | darkturquoise: #00CED1 | darkviolet: #9400D3 | deeppink: #FF1493 |\n    deepskyblue: #00BFFF | dimgray: #696969 | dimgrey: #696969 | dodgerblue: #1E90FF | firebrick: #B22222 | floralwhite: #FFFAF0 |\n    forestgreen: #228B22 | fuchsia: #FF00FF | gainsboro: #DCDCDC | ghostwhite: #F8F8FF | gold: #FFD700 | goldenrod: #DAA520 |\n    gray: #808080 | green: #008000 | greenyellow: #ADFF2F | grey: #808080 | honeydew: #F0FFF0 | hotpink: #FF69B4 | indianred: #CD5C5C |\n    indigo: #4B0082 | ivory: #FFFFF0 | khaki: #F0E68C | lavender: #E6E6FA | lavenderblush: #FFF0F5 | lawngreen: #7CFC00 |\n    lemonchiffon: #FFFACD | lightblue: #ADD8E6 | lightcoral: #F08080 | lightcyan: #E0FFFF | lightgoldenrodyellow: #FAFAD2 |\n    lightgray: #D3D3D3 | lightgreen: #90EE90 | lightgrey: #D3D3D3 | lightpink: #FFB6C1 | lightsalmon: #FFA07A | lightseagreen: #20B2AA |\n    lightskyblue: #87CEFA | lightslategray: #778899 | lightslategrey: #778899 | lightsteelblue: #B0C4DE | lightyellow: #FFFFE0 |\n    lime: #00FF00 | limegreen: #32CD32 | linen: #FAF0E6 | magenta: #FF00FF | maroon: #800000 | mediumaquamarine: #66CDAA |\n    mediumblue: #0000CD | mediumorchid: #BA55D3 | mediumpurple: #9370DB | mediumseagreen: #3CB371 | mediumslateblue: #7B68EE |\n    mediumspringgreen: #00FA9A | mediumturquoise: #48D1CC | mediumvioletred: #C71585 | midnightblue: #191970 | mintcream: #F5FFFA |\n    mistyrose: #FFE4E1 | moccasin: #FFE4B5 | navajowhite: #FFDEAD | navy: #000080 | oldlace: #FDF5E6 | olive: #808000 |\n    olivedrab: #6B8E23 | orange: #FFA500 | orangered: #FF4500 | orchid: #DA70D6 | palegoldenrod: #EEE8AA | palegreen: #98FB98 |\n    paleturquoise: #AFEEEE | palevioletred: #DB7093 | papayawhip: #FFEFD5 | peachpuff: #FFDAB9 | peru: #CD853F | pink: #FFC0CB |\n    plum: #DDA0DD | powderblue: #B0E0E6 | purple: #800080 | rebeccapurple: #663399 | red: #FF0000 | rosybrown: #BC8F8F | royalblue: #4169E1 |\n    saddlebrown: #8B4513 | salmon: #FA8072 | sandybrown: #F4A460 | seagreen: #2E8B57 | seashell: #FFF5EE | sienna: #A0522D |\n    silver: #C0C0C0 | skyblue: #87CEEB | slateblue: #6A5ACD | slategray: #708090 | slategrey: #708090 | snow: #FFFAFA |\n    springgreen: #00FF7F | steelblue: #4682B4 | tan: #D2B48C | teal: #008080 | thistle: #D8BFD8 | tomato: #FF6347 |\n    turquoise: #40E0D0 | violet: #EE82EE | wheat: #F5DEB3 | white: #FFFFFF | whitesmoke: #F5F5F5 | yellow: #FFFF00 |\n    yellowgreen: #9ACD32 | transparent | currentcolor;\nRGBCOLOR = rgb(INT{3}) | rgb(STRICT_PERCENTAGE{3});\nRGBACOLOR = rgba(NUM{4}) | rgba(STRICT_PERCENTAGE{3} NUM);\nHSLCOLOR = hsl(NUM PERCENTAGE{2});\nHSLACOLOR = hsl(NUM PERCENTAGE{2} NUM);\nCOLOR = SCOLOR | RGBCOLOR | RGBACOLOR | HSLCOLOR | HSLACOLOR;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nSIDE_OR_CORNER =  [left | right] || [top | bottom];\nCOLOR_STOP = SPACE(COLOR [PERCENTAGE | LENGTH]?);\nLINEAR_GRADIENT = linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |\n                  repeating-linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |;\nGRADIENT_EXTENT = closest-corner | closest-side | farthest-corner | farthest-side;\nGRADIENT_POSITION = at BG_POSITION_TERM{1,4};\nGRADIENT_SHAPE = SPACE(circle LENGTH? GRADIENT_POSITION?) | SPACE(ellipse PLENGTH{2}? GRADIENT_POSITION?)| SPACE([circle | ellipse] GRADIENT_EXTENT? GRADIENT_POSITION?);\nRADIAL_GRADIENT = radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+) |\n                  repeating-radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+);\nURI_OR_NONE = URI | none;\nIMAGE =  URI | LINEAR_GRADIENT | RADIAL_GRADIENT | none;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = disc | circle | square | decimal | decimal-leading-zero | lower-roman |\n    upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha |\n    upper-alpha | russian | upper-russian | lower-russian | cjk-ideographic | trad-chinese-informal |\n    hebrew | none;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH | POS_NUM;\nfont-style = normal | italic | oblique;\nfont-weight = normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;\nheight = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-width = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-height = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-width = APLENGTH | MIN_MAX_FIT_CONTENT;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nposition = static | relative | absolute | fixed;\nquotes = [STRING STRING]+ | none;\nright = APLENGTH;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-decoration = none | [ underline || overline || line-through || blink ];\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line | break-spaces;\nwidows = POS_INT;\nwidth = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\ninline-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-block-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-inline-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-block-size = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-inline-size = APLENGTH | MIN_MAX_FIT_CONTENT;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub]transform = none | TRANSFORM_FUNCTION+;\n[epub]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto | IDENT; /* page: IDENT is for CSS Paged Media */\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nCOMMON_LIG_VALUES        = [ common-ligatures | no-common-ligatures ];\nDISCRETIONARY_LIG_VALUES = [ discretionary-ligatures | no-discretionary-ligatures ];\nHISTORICAL_LIG_VALUES    = [ historical-ligatures | no-historical-ligatures ];\nCONTEXTUAL_ALT_VALUES    = [ contextual | no-contextual ];\nfont-variant-ligatures = normal | none | [ COMMON_LIG_VALUES || DISCRETIONARY_LIG_VALUES || HISTORICAL_LIG_VALUES || CONTEXTUAL_ALT_VALUES ];\nfont-variant-caps = normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps;\nNUMERIC_FIGURE_VALUES   = [ lining-nums | oldstyle-nums ];\nNUMERIC_SPACING_VALUES  = [ proportional-nums | tabular-nums ];\nNUMERIC_FRACTION_VALUES = [ diagonal-fractions | stacked-fractions ];\nfont-variant-numeric = normal | [ NUMERIC_FIGURE_VALUES || NUMERIC_SPACING_VALUES || NUMERIC_FRACTION_VALUES || ordinal || slashed-zero ];\nEAST_ASIAN_VARIANT_VALUES = [ jis78 | jis83 | jis90 | jis04 | simplified | traditional ];\nEAST_ASIAN_WIDTH_VALUES   = [ full-width | proportional-width ];\nfont-variant-east-asian = normal | [ EAST_ASIAN_VARIANT_VALUES || EAST_ASIAN_WIDTH_VALUES || ruby ];\nfont-variant_css2 = normal | small-caps; /* for font shorthand */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nFONT_STRETCH_CSS3_VALUES = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\nfont-stretch = FONT_STRETCH_CSS3_VALUES | PERCENTAGE;\nfont-stretch_css3 = FONT_STRETCH_CSS3_VALUES; /* for font shorthand */\nfont-display = [ auto | block | swap | fallback | optional ];\nunicode-range = COMMA( URANGE+ );\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a10 | a9 | a8 | a7 | a6 | a5 | a4 | a3 | a2 | a1 | a0\n          | b10 | b9 | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0\n          | c10 | c9 | c8 | c7 | c6 | c5 | c4 | c3 | c2 | c1 | c0\n          | jis-b10 | jis-b9 | jis-b8 | jis-b7 | jis-b6 | jis-b5 | jis-b4 | jis-b3 | jis-b2 | jis-b1 | jis-b0\n          | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\ncrop-offset = auto | LENGTH;\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = block-start | block-end | inline-start | inline-end | snap-block | snap-inline | left | right | top | bottom | none | footnote;\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[webkit]line-break = auto | loose | normal | strict | anywhere;\noverflow-wrap = normal | break-word | anywhere;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz]text-align-last = auto | start | end | left | right | center | justify;\ntext-justify = auto | none | inter-word | inter-character;\nword-break = normal | keep-all | break-all | break-word;\ntext-spacing = normal | none | auto | [[ trim-start | space-start | space-first ] ||\n    [ trim-end | space-end | allow-end ] || [ trim-adjacent | space-adjacent ] ||\n    no-compress || ideograph-alpha || ideograph-numeric || punctuation];\nhanging-punctuation = none | [ first || [ force-end | allow-end ] || last ];\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\nbox-sizing = content-box | padding-box | border-box;\ntext-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[epub,webkit]text-combine = none | horizontal;\ntext-combine-upright = none | all; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\ntouch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-size-adjust: none;\nfont-kerning: auto;\nfont-feature-settings: normal;\nfont-variant-ligatures: normal;\nfont-variant-caps: normal;\nfont-variant-numeric: normal;\nfont-variant-east-asian: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-type list-style-position list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\nfont = FONT font-style font-variant_css2 font-weight font-stretch_css3 /* font-size line-height font-family are special-cased */;\nfont-variant = font-variant-ligatures font-variant-caps font-variant-numeric font-variant-east-asian;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\n\n/* old names  */\nword-wrap = overflow-wrap;\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n// user-agent.xml\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.footnote-content {\n  float: footnote;\n}\n\n.table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n// user-agent-page.css\nexport const UserAgentPageCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n// user-agent-base.css\nexport const UserAgentBaseCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\nhtml|html,\nhtml|address,\nhtml|blockquote,\nhtml|body,\nhtml|dd,\nhtml|div,\nhtml|dl,\nhtml|dt,\nhtml|fieldset,\nhtml|form,\nhtml|frame,\nhtml|frameset,\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|noframes,\nhtml|ol,\nhtml|p,\nhtml|ul,\nhtml|center,\nhtml|dir,\nhtml|hr,\nhtml|menu,\nhtml|pre,\nhtml|article,\nhtml|section,\nhtml|nav,\nhtml|aside,\nhtml|hgroup,\nhtml|footer,\nhtml|header,\nhtml|figure,\nhtml|figcaption,\nhtml|main {\n  display: block;\n  unicode-bidi: normal;\n}\nhtml|li {\n  display: list-item;\n}\nhtml|head {\n  display: none !important;\n}\nhtml|table {\n  display: table;\n}\nhtml|tr {\n  display: table-row;\n}\nhtml|thead {\n  display: table-header-group;\n  break-after: avoid;\n}\nhtml|tbody {\n  display: table-row-group;\n}\nhtml|tfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\nhtml|col {\n  display: table-column;\n}\nhtml|colgroup {\n  display: table-column-group;\n}\nhtml|td,\nhtml|th {\n  display: table-cell;\n}\nhtml|caption {\n  display: table-caption;\n  text-align: center;\n}\nhtml|th {\n  font-weight: bolder;\n  text-align: center;\n}\nhtml|*[hidden],\nhtml|link,\nhtml|style,\nhtml|script {\n  display: none;\n}\nhtml|h1 {\n  font-size: 2em;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h2 {\n  font-size: 1.5em;\n  margin-block-start: 0.75em;\n  margin-block-end: 0.75em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h3 {\n  font-size: 1.17em;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h4,\nhtml|p,\nhtml|blockquote,\nhtml|ul,\nhtml|fieldset,\nhtml|form,\nhtml|ol,\nhtml|dl,\nhtml|dir,\nhtml|menu,\nhtml|h5,\nhtml|h6 {\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h5 {\n  font-size: 0.83em;\n}\nhtml|h6 {\n  font-size: 0.75em;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|b,\nhtml|strong {\n  font-weight: bolder;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6 {\n  break-after: avoid;\n}\nhtml|blockquote {\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n}\nhtml|i,\nhtml|cite,\nhtml|em,\nhtml|var,\nhtml|address {\n  font-style: italic;\n}\nhtml|pre,\nhtml|tt,\nhtml|code,\nhtml|kbd,\nhtml|samp {\n  font-family: monospace;\n}\nhtml|pre {\n  white-space: pre;\n}\nhtml|button,\nhtml|textarea,\nhtml|input,\nhtml|select {\n  display: inline-block;\n}\nhtml|big {\n  font-size: 1.17em;\n}\nhtml|small,\nhtml|sub,\nhtml|sup {\n  font-size: 0.83em;\n}\nhtml|sub {\n  vertical-align: sub;\n}\nhtml|sup {\n  vertical-align: super;\n}\nhtml|table {\n  border-spacing: 2px;\n}\nhtml|thead,\nhtml|tbody,\nhtml|tfoot {\n  vertical-align: middle;\n}\n/* for XHTML tables without tbody */\nhtml|table > html|tr {\n  vertical-align: middle;\n}\nhtml|td,\nhtml|th {\n  vertical-align: inherit;\n}\nhtml|s,\nhtml|strike,\nhtml|del {\n  text-decoration: line-through;\n}\nhtml|hr {\n  border: 1px inset;\n}\nhtml|ol,\nhtml|ul,\nhtml|dir,\nhtml|menu,\nhtml|dd {\n  margin: 0px;\n  margin-inline-start: 40px;\n}\nhtml|ol html|ul,\nhtml|ul html|ol,\nhtml|ul html|ul,\nhtml|ol html|ol {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\nhtml|u,\nhtml|ins {\n  text-decoration: underline;\n}\nhtml|center {\n  text-align: center;\n}\nhtml|q:before {\n  content: open-quote;\n}\nhtml|q:after {\n  content: close-quote;\n}\n\nhtml|audio,\nhtml|video {\n  break-inside: avoid;\n}\n\nhtml|ruby {\n  display: ruby;\n}\nhtml|rp {\n  display: none;\n}\nhtml|rbc {\n  display: ruby-base-container;\n}\nhtml|rtc {\n  display: ruby-text-container;\n}\nhtml|rb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nhtml|rt {\n  display: ruby-text;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-variant-east-asian: ruby;\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\n\nhtml|rtc:lang(zh),\nhtml|rt:lang(zh) {\n  ruby-align: center;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-size: 50%;\n}\n\nhtml|rtc:lang(zh-TW),\nhtml|rt:lang(zh-TW) {\n  font-size: 30%;\n}\n\nhtml|rtc > html|rt,\nhtml|rtc > html|rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nhtml|bdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nhtml|bdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\nhtml|*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: embed;\n}\nhtml|*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: embed;\n}\n\n/*------------------ epub-specific ---------------------*/\n\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml|a[epub|type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\nhtml|a[epub|type=\"noteref\"]:href-epub-type(footnote) {\n  -adapt-template: url(user-agent.xml#footnote);\n  text-decoration: none;\n}\n\nhtml|aside[epub|type=\"footnote\"] {\n  display: none;\n}\n\nhtml|aside[epub|type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n\n/*--------------- ncx and toc ----------------------*/\n\n@namespace ncx \"http://www.daisy.org/z3986/2005/ncx/\";\n\nncx|ncx {\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nncx|content {\n  display: none;\n}\n\nbody > * {\n  -adapt-behavior: body-child;\n}\n\n[role=\"doc-toc\"],\n[role=\"directory\"],\nnav,\n.toc,\n#toc,\n#table-of-contents,\n#contents {\n  -adapt-behavior: toc-root;\n}\n\n[role=\"doc-toc\"] a,\n[role=\"directory\"] a,\nnav a,\n.toc a,\n#toc a,\nncx|navLabel {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[role=\"doc-toc\"] li,\n[role=\"directory\"] li,\nnav li,\n.toc li,\n#toc li,\nncx|navPoint {\n  -adapt-behavior: toc-node;\n}\n\n[role=\"doc-toc\"] li > *:first-child,\n[role=\"directory\"] li > *:first-child,\nnav li > *:first-child,\n.toc li > *:first-child,\n#toc li > *:first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[role=\"doc-toc\"] ol,\n[role=\"directory\"] ol,\nnav ol,\n.toc ol,\n#toc ol,\n[role=\"doc-toc\"] ul,\n[role=\"directory\"] ul,\nnav ul,\n.toc ul,\n#toc ul,\nol[role=\"doc-toc\"],\nol[role=\"directory\"],\nol.toc,\nol#toc,\nul[role=\"doc-toc\"],\nul[role=\"directory\"],\nul.toc,\nul#toc {\n  -adapt-behavior: toc-container;\n}\n`;\n\n// text-polyfill.css\nexport const TextPolyfillCss = `\nviv-ts-open.viv-ts-auto > viv-ts-inner,\nviv-ts-open.viv-ts-trim > viv-ts-inner {\n  margin-inline-start: -0.5em;\n}\nviv-ts-close.viv-ts-auto > viv-ts-inner,\nviv-ts-close.viv-ts-trim > viv-ts-inner {\n  letter-spacing: -0.5em;\n}\nviv-ts-close.viv-hang-end > viv-ts-inner,\nviv-ts-close.viv-hang-last > viv-ts-inner {\n  letter-spacing: -1em;\n}\nviv-ts-open.viv-ts-auto::before,\nviv-ts-close.viv-ts-auto::after,\nviv-ts-close.viv-hang-end::after {\n  content: \" \";\n  font-family: Courier, monospace;\n  word-spacing: normal;\n  letter-spacing: -0.11em;\n  line-height: 0;\n  text-orientation: mixed;\n  visibility: hidden;\n}\nviv-ts-close.viv-hang-end:not(.viv-hang-hw)::after {\n  letter-spacing: 0.4em;\n}\nviv-ts-close.viv-hang-hw > viv-ts-inner {\n  letter-spacing: -0.5em;\n}\nviv-ts-open.viv-hang-first > viv-ts-inner {\n  display: inline-block;\n  line-height: 1;\n  inline-size: 1em;\n  text-indent: 0;\n  text-align: end;\n  text-align-last: end;\n  margin-inline-start: -1em;\n}\nviv-ts-thin-sp::after {\n  content: \" \";\n  font-family: Times, serif;\n  font-size: 66.6%;\n  word-spacing: normal;\n  letter-spacing: normal;\n  line-height: 0;\n  text-orientation: mixed;\n  visibility: hidden;\n}\n`;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 16777216;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 33554432;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 50331648;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 67108864;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 83886080;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 100663296;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\n/**\n * CSS Color value from hash text (without '#' character).\n */\nexport function colorFromHash(text: string): Css.Color {\n  let num = parseInt(text, 16);\n  if (isNaN(num)) {\n    throw new Error(\"E_CSS_COLOR\");\n  }\n  if (text.length == 6) {\n    return new Css.Color(num);\n  }\n  if (text.length == 3) {\n    num =\n      (num & 15) |\n      ((num & 15) << 4) |\n      ((num & 240) << 4) |\n      ((num & 240) << 8) |\n      ((num & 3840) << 8) |\n      ((num & 3840) << 12);\n    return new Css.Color(num);\n  }\n  throw new Error(\"E_CSS_COLOR\");\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as an\n   *     argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    this.slave.endRule();\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    return this.owner.getCurrentToken();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner.errorMsg(mnemonics, token);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.depth++;\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  VAL_URANGE,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = CssTokenizer.TokenType.LAST + 1;\nexport const OP_MEDIA_OR: number = CssTokenizer.TokenType.LAST + 2;\nexport const OP_MEDIA_NOT: number = CssTokenizer.TokenType.LAST + 3;\n\n(() => {\n  actionsBase[CssTokenizer.TokenType.IDENT] = Action.IDENT;\n  actionsBase[CssTokenizer.TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.AT] = Action.AT;\n  actionsBase[CssTokenizer.TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[CssTokenizer.TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n\n  actionsSelector[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[CssTokenizer.TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[CssTokenizer.TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelector[CssTokenizer.TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelectorInFunc[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.C_PAR] = Action.DONE;\n  actionsSelectorInFunc[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COL_COL] =\n    Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[CssTokenizer.TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[CssTokenizer.TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[CssTokenizer.TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[CssTokenizer.TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[CssTokenizer.TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[CssTokenizer.TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[CssTokenizer.TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[CssTokenizer.TokenType.URANGE] = Action.VAL_URANGE;\n  actionsPropVal[CssTokenizer.TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[CssTokenizer.TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[CssTokenizer.TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[CssTokenizer.TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[CssTokenizer.TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[CssTokenizer.TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[CssTokenizer.TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[CssTokenizer.TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[CssTokenizer.TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[CssTokenizer.TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[CssTokenizer.TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[CssTokenizer.TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[CssTokenizer.TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[CssTokenizer.TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[CssTokenizer.TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[CssTokenizer.TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[CssTokenizer.TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[CssTokenizer.TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[CssTokenizer.TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsError[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  priority[CssTokenizer.TokenType.C_PAR] = 0;\n  priority[CssTokenizer.TokenType.COMMA] = 0;\n  priority[CssTokenizer.TokenType.QMARK] = 1;\n  priority[CssTokenizer.TokenType.COLON] = 1;\n  priority[CssTokenizer.TokenType.AMP_AMP] = 2;\n  priority[CssTokenizer.TokenType.BAR_BAR] = 2;\n  priority[CssTokenizer.TokenType.LT] = 3;\n  priority[CssTokenizer.TokenType.GT] = 3;\n  priority[CssTokenizer.TokenType.LT_EQ] = 3;\n  priority[CssTokenizer.TokenType.GT_EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ_EQ] = 3;\n  priority[CssTokenizer.TokenType.BANG_EQ] = 3;\n  priority[CssTokenizer.TokenType.PLUS] = 4;\n  priority[CssTokenizer.TokenType.MINUS] = 4;\n  priority[CssTokenizer.TokenType.STAR] = 5;\n  priority[CssTokenizer.TokenType.SLASH] = 5;\n  priority[CssTokenizer.TokenType.PERCENT] = 5;\n  priority[CssTokenizer.TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n  priority[OP_MEDIA_OR] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n  SUPPORTS,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index == valStack.length) {\n        break;\n      }\n      if (valStack[index++] != sep) {\n        throw new Error(\"Unexpected state\");\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let v;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n        this.actions = actionsErrorDecl;\n        return null;\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n      return null;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    return valStack[0] as Css.Val;\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    // this.handler.error(mnemonics, token);\n    // (should not throw error by expression syntax errors)\n    Logging.logger.warn(mnemonics);\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == CssTokenizer.TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == CssTokenizer.TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.Comma(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = CssTokenizer.TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == CssTokenizer.TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = CssTokenizer.TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -CssTokenizer.TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -CssTokenizer.TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else if (tok == -OP_MEDIA_NOT) {\n          // `not` operator in `@media` or `@supports`\n          val = new Exprs.NotMedia(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case CssTokenizer.TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            // `and` operator in `@media` or `@supports`\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_OR:\n            // `or` operator in `@media` or `@supports`\n            val = new Exprs.OrMedia(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.EQ:\n          case CssTokenizer.TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case CssTokenizer.TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case CssTokenizer.TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (op != CssTokenizer.TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case CssTokenizer.TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readSupportsTest(token: CssTokenizer.Token): Exprs.SupportsTest {\n    // `@supports (prop-name:...)`\n    // `@supports func-name(...)`\n    const isFunc = token.type === CssTokenizer.TokenType.FUNC;\n    const tokenizer = this.tokenizer;\n    let startPosition: number;\n    let name: string;\n    if (isFunc) {\n      name = token.text;\n      startPosition = token.position + name.length + 1;\n    } else if (token.type === CssTokenizer.TokenType.O_PAR) {\n      const token1 = tokenizer.nthToken(1);\n      const token2 = tokenizer.nthToken(2);\n      if (\n        token1.type === CssTokenizer.TokenType.IDENT &&\n        token2.type === CssTokenizer.TokenType.COLON\n      ) {\n        tokenizer.consume();\n        tokenizer.consume();\n        name = token1.text;\n        startPosition = token2.position + 1;\n      } else if (\n        token1.type === CssTokenizer.TokenType.O_PAR ||\n        token1.type === CssTokenizer.TokenType.FUNC ||\n        (token1.type === CssTokenizer.TokenType.IDENT &&\n          token1.text.toLowerCase() === \"not\" &&\n          (token2.type === CssTokenizer.TokenType.O_PAR ||\n            token2.type === CssTokenizer.TokenType.FUNC))\n      ) {\n        return null;\n      } else {\n        // Unknown `(...)` syntax, read until `)` and evaluate to false\n        startPosition = token.position + 1;\n      }\n    } else {\n      return null;\n    }\n    let parLevel = 0;\n    let tokenN: CssTokenizer.Token;\n    while (parLevel >= 0) {\n      tokenizer.consume();\n      tokenN = tokenizer.token();\n      switch (tokenN.type) {\n        case CssTokenizer.TokenType.C_PAR:\n          parLevel--;\n          break;\n        case CssTokenizer.TokenType.O_PAR:\n        case CssTokenizer.TokenType.FUNC:\n          parLevel++;\n          break;\n        case CssTokenizer.TokenType.INVALID:\n        case CssTokenizer.TokenType.EOF:\n          this.exprError(\"E_CSS_UNEXPECTED_EOF\", tokenN);\n          return null;\n      }\n    }\n    tokenizer.consume();\n    const endPosition = tokenN.position;\n    const value = tokenizer.input.substring(startPosition, endPosition).trim();\n    const supportsTest = new Exprs.SupportsTest(\n      this.handler.getScope(),\n      name,\n      value,\n      isFunc,\n    );\n    return supportsTest;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case CssTokenizer.TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case CssTokenizer.TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case CssTokenizer.TokenType.NUM:\n        case CssTokenizer.TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === CssTokenizer.TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === CssTokenizer.TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case CssTokenizer.TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case CssTokenizer.TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === CssTokenizer.TokenType.MINUS;\n          const hasSign =\n            token.type === CssTokenizer.TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === CssTokenizer.TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === CssTokenizer.TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === CssTokenizer.TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case CssTokenizer.TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue: boolean,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery: boolean,\n    parsingFunctionParam: boolean,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n    parserLoop: for (; count > 0; --count) {\n      token = tokenizer.token();\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          token1 = tokenizer.nthToken(2);\n          if (\n            token1.precededBySpace ||\n            (token1.type != CssTokenizer.TokenType.IDENT &&\n              token1.type != CssTokenizer.TokenType.FUNC)\n          ) {\n            // cannot be a selector\n          } else {\n            // can be either a selector or a property assignment\n            tokenizer.mark();\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case CssTokenizer.TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case CssTokenizer.TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case CssTokenizer.TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"not\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(\"not\");\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  break parserLoop;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === CssTokenizer.TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.BAR) {\n            ns = text ? this.namespacePrefixToURI[text] : text;\n            if (ns == null) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != CssTokenizer.TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.EQ:\n            case CssTokenizer.TokenType.TILDE_EQ:\n            case CssTokenizer.TokenType.BAR_EQ:\n            case CssTokenizer.TokenType.HAT_EQ:\n            case CssTokenizer.TokenType.DOLLAR_EQ:\n            case CssTokenizer.TokenType.STAR_EQ:\n            case CssTokenizer.TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case CssTokenizer.TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                CssTokenizer.TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n            case CssTokenizer.TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != CssTokenizer.TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          try {\n            valStack.push(colorFromHash(token.text));\n          } catch (err) {\n            if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n              tokenizer.reset();\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n              continue;\n            }\n            handler.error(\"E_CSS_COLOR\", token);\n            this.actions = actionsError;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          if (Exprs.isViewportRelativeLengthUnit(token.text)) {\n            // Treat numeric value with viewport unit as numeric in expr.\n            valStack.push(\n              new Css.Expr(\n                new Exprs.Numeric(handler.getScope(), token.num, token.text),\n              ),\n            );\n          } else {\n            valStack.push(new Css.Numeric(token.num, token.text));\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URANGE:\n          valStack.push(new Css.URange(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"calc\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == CssTokenizer.TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == CssTokenizer.TokenType.SEMICOL ||\n              token1.type == CssTokenizer.TokenType.EOF ||\n              token1.type == CssTokenizer.TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case CssTokenizer.TokenType.NUM:\n            case CssTokenizer.TokenType.NUMERIC:\n            case CssTokenizer.TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          } else {\n            this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n            continue;\n          }\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          if (parsingStyleAttr) {\n            return true;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == CssTokenizer.TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else if (\n              this.exprContext === ExprContext.SUPPORTS &&\n              token.text.toLowerCase() === \"not\" &&\n              valStack[valStack.length - 1] !== OP_MEDIA_AND &&\n              valStack[valStack.length - 1] !== OP_MEDIA_OR &&\n              (token1.type === CssTokenizer.TokenType.O_PAR ||\n                token1.type === CssTokenizer.TokenType.FUNC)\n            ) {\n              // for `@supports not (...)`\n              valStack.push(-OP_MEDIA_NOT);\n              tokenizer.consume();\n              continue;\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports selector(...)`\n            valStack.push(this.readSupportsTest(token));\n            this.actions = actionsExprOp;\n            continue;\n          }\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (\n            token.type != CssTokenizer.TokenType.INT ||\n            token.precededBySpace\n          ) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          // `and` or `or` operator in `@media` or `@supports`\n          if (\n            token.text.toLowerCase() === \"and\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_OR &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else if (\n            token.text.toLowerCase() === \"or\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_AND &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_OR, token);\n            valStack.push(OP_MEDIA_OR);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            this.actions = actionsPropVal;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n              // `@media ...;` and `@supports ...;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports (...)`\n            const supportsTest = this.readSupportsTest(token);\n            if (supportsTest) {\n              valStack.push(supportsTest);\n              this.actions = actionsExprOp;\n              continue;\n            }\n          }\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR ||\n                token.type == CssTokenizer.TokenType.URL\n              ) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == CssTokenizer.TokenType.SEMICOL ||\n                  token.type == CssTokenizer.TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == CssTokenizer.TokenType.STR ||\n                      token.type == CssTokenizer.TokenType.URL) &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case CssTokenizer.TokenType.STR:\n                case CssTokenizer.TokenType.URL:\n                  if (\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  continue;\n                case CssTokenizer.TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == CssTokenizer.TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"supports\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.SUPPORTS;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == CssTokenizer.TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == CssTokenizer.TokenType.COLON &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == CssTokenizer.TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (\n            this.errorBrackets.length == 0 &&\n            token.type == CssTokenizer.TokenType.C_BRC\n          ) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          if (parsingFunctionParam) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n          }\n          return true;\n        default:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            return false;\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else if (token.type === CssTokenizer.TokenType.O_BRC) {\n              // `@media {...}` and `@supports {...}` should be ok\n              handler.startMediaRule(valStack.pop() as Css.Expr);\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n              tokenizer.consume();\n              continue;\n            } else if (token.type === CssTokenizer.TokenType.SEMICOL) {\n              // `@media;` and `@supports;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    throw new Error(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.ajax(url).then((xhr) => {\n        if (!xhr.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            xhr.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n\n/**\n * @return val\n */\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName: string,\n): Css.Val {\n  if (val.isExpr()) {\n    try {\n      return evaluateExprToCSS(context, (val as Css.Expr).expr, propName);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return Css.empty;\n  }\n  return val;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export interface ElementStyle {}\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(element: Element, styles: { [key: string]: Css.Val });\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\" units or a number.\n     * @return value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string | number): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    createJustificationAdjustmentElement(\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n      vertical: boolean,\n    ): HTMLElement;\n    addAndAdjustJustificationElement(\n      nodeContext: Vtree.NodeContext,\n      insertAfter: boolean,\n      node: Node,\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n    ): HTMLElement;\n    compensateJustificationLineHeight(\n      span: Element,\n      br: Element,\n      nodeContext: Vtree.NodeContext,\n    ): void;\n    /**\n     * Fix justification of the last line of text broken across pages (if\n     * needed).\n     */\n    fixJustificationIfNeeded(\n      nodeContext: Vtree.NodeContext,\n      endOfColumn: boolean,\n    ): void;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n      edge: number;\n      checkPoint: Vtree.NodeContext | null;\n    };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type Response = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: object;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n    pageType: string | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    /**\n     * Walk up NodeContext tree (starting from itself) and call the callback for\n     * each block.\n     */\n    walkUpBlocks(callback: (p1: NodeContext) => any): void;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\n/**\n * @returns string\n */\nexport function restoreOriginalText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\n/**\n * @returns string\n */\nexport function restoreNewText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport {\n  CssStyler,\n  PageFloats,\n  PseudoElement,\n  Selectors,\n  Vtree,\n  XmlDoc,\n} from \"./types\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isBlankPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Zoom page.\n   * @param scale Factor to which the page will be scaled.\n   */\n  zoom(scale: number) {\n    Base.setCSSProperty(this.container, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Returns the page area element.\n   */\n  getPageAreaElement(): HTMLElement {\n    return this.pageAreaElement || this.container;\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n    case \"break-spaces\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace: Whitespace): boolean {\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.IGNORE:\n      return !!text.match(/^\\s*$/);\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t\\f]*$/);\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n  }\n  throw new Error(`Unexpected whitespace: ${whitespace}`);\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    (nps1.node === nps2.node ||\n      // Fix for issue #869\n      (!!nps1.shadowContext &&\n        !!nps2.shadowContext &&\n        nps1.shadowType === Vtree.ShadowType.ROOTLESS &&\n        nps2.shadowType === Vtree.ShadowType.ROOTLESS &&\n        (nps1.node as Element)?.outerHTML ===\n          (nps2.node as Element)?.outerHTML)) &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: CssStyler.AbstractStyler,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: Vtree.ShadowContext,\n  sc2: Vtree.ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: Vtree.ShadowContext;\n  nodeShadow: Vtree.ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n  pageType: string | null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n    this.pageType = parent ? parent.pageType : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      (nc.shadowContext?.styler as PseudoElement.PseudoelementStyler)?.style?.[\n        \"_pseudos\"\n      ]\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Walk up NodeContext tree (starting from itself) and call the callback for\n   * each block.\n   */\n  walkUpBlocks(callback: (p1: NodeContext) => any) {\n    let nodeContext: NodeContext = this;\n    while (nodeContext) {\n      if (!nodeContext.inline) {\n        callback(nodeContext);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startSide: string = \"any\";\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startSide = this.startSide;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n  isBlankPage: boolean = false;\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.isBlankPage = this.isBlankPage;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page\n      // Removed:\n      //   || this.highestSeenOffset !== other.highestSeenOffset\n      // to prevent unnecessary re-layout (Issue #681-case2)\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return \"any\";\n    }\n    return flowPos.startSide;\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical ? box.top : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical ? box.bottom : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      const outerExtent =\n        extent +\n        this.marginLeft +\n        this.marginRight +\n        this.paddingLeft +\n        this.paddingRight +\n        this.borderLeft +\n        this.borderRight;\n      this.setHorizontalPosition(\n        start + outerExtent * this.getBoxDir(),\n        extent,\n      );\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setVerticalPosition(start, extent);\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      if (this.elem.lastChild instanceof Text) {\n        this.elem.lastChild.textContent += str;\n        return;\n      }\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  /** @override */\n  visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /** @override */\n  visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.empty &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    val !== Css.ident.inherit\n  );\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssCascade } from \"./types\";\n\nexport interface ElementStyle extends CssCascade.ElementStyle {}\n\nexport const inheritedProps = {\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant-ligatures\": true,\n  \"font-variant-caps\": true,\n  \"font-variant-numeric\": true,\n  \"font-variant-east-asian\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  \"hanging-punctuation\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  quotes: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"shape-rendering\": true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-orientation\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-spacing\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"box-decoration-break\",\n  // TODO: box-decoration-block should not be inherited.\n  // https://github.com/vivliostyle/vivliostyle.js/issues/259\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(context: Exprs.Context, propName: string): Css.Val {\n    return CssParser.evaluateCSSToCSS(context, this.value, propName);\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  /**\n   * @override\n   */\n  getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  /**\n   * @override\n   */\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  /**\n   * @override\n   */\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    try {\n      return !!this.condition.evaluate(context);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return false;\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((tv == null || av.priority > tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) == \"_\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) != \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name];\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\n/**\n * @return void\n */\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): any {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyleMap }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyleMap;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target as ElementStyleMap,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const av = getProp(style, prop).increaseSpecificity(specificity);\n      const tv = getProp(target, prop);\n      setProp(target, prop, cascadeValues(context, tv, av));\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    if (!cascval.value.isNumeric()) {\n      // FIXME: cascval may be Ident value e.g. \"smaller\"\n      return Exprs.defaultUnitSizes[\"em\"];\n    }\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit == \"em\" ||\n      numeric.unit == \"ex\" ||\n      numeric.unit == \"rem\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    } else if (numeric.unit == \"%\") {\n      if (this.propName === \"line-height\") {\n        return numeric;\n      }\n      const unit = this.propName.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      return new Css.Numeric(numeric.num, unit);\n    }\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = CssParser.evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(public readonly epubTypePatt: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem && cascadeInstance.currentLocalName == \"a\") {\n      const href = elem.getAttribute(\"href\");\n      if (href && href.match(/^#/)) {\n        const id = href.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (target) {\n          const epubType = target.getAttributeNS(Base.NS.epub, \"type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.hasAttributeNS(this.ns, this.name)\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.getAttributeNS(this.ns, this.name) ==\n        this.value\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const ns = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (ns && supportedNamespaces[ns]) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const attr = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (attr && attr.match(this.regexp)) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(public readonly a: number, public readonly b: number) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\nexport class NegateActionsSet extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstAction: CascadeAction;\n\n  constructor(list: ChainedAction[]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    this.firstAction = chainActions(list, this.checkAppliedAction);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.firstAction.apply(cascadeInstance);\n    if (!this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return (this.firstAction as ChainedAction).getPriority();\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: any): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CascadeInstance,\n  ): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n    const c = new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n      case \"first-letter\":\n        stringValue = this.element.textContent.trim().replace(/\\s+/g, \" \");\n        if (pseudoName === \"first-letter\") {\n          const r = stringValue.match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val: Css.Val = pseudos?.[pseudoName]?.[\"content\"]?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n    }\n    Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return new Css.Str(\"\");\n  }\n}\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 1048576;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  previousPageType: string | null = null;\n  firstPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    if (this.counters[counterName]) {\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal = Css.ident.inline;\n    const display = props[\"display\"];\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    let floatVal = Css.ident.inline;\n    const float = props[\"float\"];\n    if (float) {\n      floatVal = float.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"];\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"ua-list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"ua-list-item\"] = 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!resetMap) {\n          resetMap = {};\n        }\n        resetMap[\"ua-list-item\"] = (this.currentElement as any).value - 1;\n      }\n    }\n    if (this.currentElement?.parentNode.nodeType === Node.DOCUMENT_NODE) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      // `counter-reset: footnote 0` is implicitly applied on the root element\n      if (resetMap[\"footnote\"] === undefined) {\n        resetMap[\"footnote\"] = 0;\n      }\n    }\n    if (floatVal === Css.ident.footnote) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      // `counter-increment: footnote 1` is implicitly applied on the\n      // element (or pseudo element) with `float: footnote`,\n      // unless `counter-increment: footnote` is explicitly specified\n      // on the element (parent element of the pseudo element).\n      if (incrementMap[\"footnote\"] === undefined) {\n        const incrPropValue = this.currentStyle[\"counter-increment\"]?.value;\n        if (\n          !incrPropValue ||\n          !(\n            incrPropValue === Css.ident.footnote ||\n            incrPropValue.values?.includes(Css.ident.footnote)\n          )\n        ) {\n          incrementMap[\"footnote\"] = 1;\n        }\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"ua-list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet: CascadeValue = props[\"string-set\"];\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(name, stringValue, this);\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    if (pseudoprops[\"content\"]) {\n      pseudoprops[\"content\"] = pseudoprops[\"content\"].filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack =\n      this.followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts =\n      (this.currentFollowingSiblingTypeCounts =\n        followingSiblingTypeCountsStack[\n          followingSiblingTypeCountsStack.length - 1\n        ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"];\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (\n            (pseudoName === \"before\" || pseudoName === \"after\") &&\n            !Vtree.nonTrivialContent(pseudoProps[\"content\"]?.value)\n          ) {\n            delete pseudos[pseudoName];\n          } else if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(visitor, elementStyle): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName)) {\n        elementStyle[propName] = elementStyle[propName].filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\", // content\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n      ? uaBaseCascade.clone()\n      : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    this.specificity += 1;\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by .${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by :${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|s)${Base.escapeRegExp(value)}(\\$|s)`);\n          this.chain.push(new CheckTargetEpubTypeAction(patt));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fais\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default:\n        Logging.logger.warn(`unknown pseudo-class selector: ${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 256;\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          Logging.logger.warn(\n            `Double pseudoelement ::${this.pseudoelement}::${name}`,\n          );\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              Logging.logger.warn(\n                `Double pseudoelement ::${this.pseudoelement}::${name}`,\n              );\n              this.chain.push(new CheckConditionAction(\"\")); // always fails\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(`Unrecognized pseudoelement: ::${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 1;\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case CssTokenizer.TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case CssTokenizer.TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case CssTokenizer.TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case CssTokenizer.TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          Logging.logger.warn(\"Unsupported :: attr selector op:\", value);\n          action = new CheckConditionAction(\"\"); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(\"Unsupported attr selector:\", op);\n        action = new CheckConditionAction(\"\"); // always fails\n    }\n    this.chain.push(action);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      const specificity: number = this.specificity + this.cascade.nextOrder();\n      this.processChain(this.makeApplyRuleAction(specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    switch (funcName) {\n      case \"not\": {\n        const notParserHandler = new NotParameterParserHandler(this);\n        notParserHandler.startSelectorRule();\n        this.owner.pushHandler(notParserHandler);\n        break;\n      }\n      default:\n        // TODO\n        break;\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\nexport class NotParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    if (funcName == \"not\") {\n      this.reportAndSkip(\"E_CSS_UNEXPECTED_NOT\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_NEXT_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    if (this.chain && this.chain.length > 0) {\n      this.parentChain.push(new NegateActionsSet(this.chain));\n    }\n    this.parent.specificity += this.specificity;\n    this.owner.popHandler();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.owner.popHandler();\n  }\n}\n\n/**\n * @override\n */\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const av = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, av);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver\n{\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (writingMode && writingMode !== Css.ident.inherit) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (direction && direction !== Css.ident.inherit) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n    ? couplingMapHorRtl\n    : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    return getComputedValue(inlineSizeName);\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition =\n  PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext\n{\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent =\n        this.parent.getLastFollowingFloatInFragments(float);\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const logicalFloatSide2 = this.toLogical(fragment.floatSide);\n        if (logicalFloatSide2 === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogical(float.floatSide);\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogical(fragment.floatSide);\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical ? limits.top : limits.left;\n      case \"inline-end\":\n        return this.container.vertical ? limits.bottom : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogical(f.floatSide);\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    let logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSide]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSide === \"block-start\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-start\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSide === \"block-end\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = inlineEnd - inlineStart;\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSide === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSide = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSide = \"block-start\";\n          } else {\n            logicalFloatSide = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSide]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSide = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSide === \"inline-start\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize = inlineEnd - inlineStart;\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n    switch (logicalFloatSide) {\n      case \"inline-start\":\n      case \"block-start\":\n      case \"snap-block\":\n        area.setInlinePosition(inlineStart, inlineSize);\n        area.setBlockPosition(blockStart, blockSize);\n        break;\n      case \"inline-end\":\n      case \"block-end\":\n        area.setInlinePosition(inlineEnd - outerInlineSize, inlineSize);\n        area.setBlockPosition(\n          blockEnd - outerBlockSize * area.getBoxDir(),\n          blockSize,\n        );\n        break;\n      default:\n        throw new Error(`unknown float direction: ${floatSide}`);\n    }\n    return logicalFloatSide;\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogical(floatSide);\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /**\n   * @override\n   */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  /**\n   * @override\n   */\n  isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  /**\n   * @override\n   */\n  getOrder(): number {\n    return Infinity;\n  }\n\n  /**\n   * @override\n   */\n  shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint\n{\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy\n{\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext =\n      pageFloatLayoutContext.getPageFloatLayoutContext(floatReference);\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /**\n   * @override\n   */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartSideValue(breakValue: string | null): string {\n  switch (breakValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return breakValue;\n    default:\n      return \"any\";\n  }\n}\n\nexport function startSideValueToBreakValue(\n  startSideValue: string,\n): string | null {\n  switch (startSideValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return startSideValue;\n    default:\n      return null;\n  }\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display.toString();\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Ident): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDislayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Ident } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if ((float && float !== Css.ident.none) || isRoot) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDislayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident | string): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident | string): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Display from \"./display\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Though method used to be used as a workaround for Chrome bug, it seems that\n * the bug has been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method as a workaround for Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function fixBoxesForNode(\n  clientLayout: Vtree.ClientLayout,\n  boxes: Vtree.ClientRect[],\n  node: Node,\n): Vtree.ClientRect[] {\n  const fullRange = node.ownerDocument.createRange();\n  fullRange.setStart(node, 0);\n  fullRange.setEnd(node, node.textContent.length);\n  const fullBoxes = clientLayout.getRangeClientRects(fullRange);\n  const result = [];\n  for (const box of boxes) {\n    let k: number;\n    for (k = 0; k < fullBoxes.length; k++) {\n      const fullBox = fullBoxes[k];\n      if (\n        box.top >= fullBox.top &&\n        box.bottom <= fullBox.bottom &&\n        Math.abs(box.left - fullBox.left) < 1\n      ) {\n        result.push({\n          top: box.top,\n          left: fullBox.left,\n          bottom: box.bottom,\n          right: fullBox.right,\n        });\n        break;\n      }\n    }\n    if (k == fullBoxes.length) {\n      Logging.logger.warn(\"Could not fix character box\");\n      result.push(box);\n    }\n  }\n  return result;\n}\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n  const element = node.nodeType == 1 ? (node as Element) : node.parentElement;\n  if (element && element instanceof HTMLElement) {\n    if (element.localName === \"rt\" && element.style[\"zoom\"]) {\n      // \"zoom\" is set in fixRubyTextFontSize() to fix the issue #673 for Chrome.\n      // when zoom is set, it is hard to get the edge value, so return NaN.\n      // (Fix for issues #804 and #808)\n      return NaN;\n    }\n    if (/^([\\d\\.]|super|(text-)?top)/.test(element.style.verticalAlign)) {\n      // (Fix for issue #811)\n      return NaN;\n    }\n  }\n  if (node.nodeType == 1) {\n    if (nodeContext.after || !nodeContext.inline) {\n      const cbox = clientLayout.getElementClientRect(node as Element);\n      if (\n        cbox.left === 0 &&\n        cbox.top === 0 &&\n        cbox.right === 0 &&\n        cbox.bottom === 0\n      ) {\n        // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n        // (Fix for issue #802)\n        return NaN;\n      }\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    if (vertical && Base.checkVerticalBBoxBug(document.body)) {\n      boxes = fixBoxesForNode(clientLayout, boxes, node);\n    }\n    boxes = boxes.filter((box) => box.right > box.left && box.bottom > box.top);\n    if (!boxes.length) {\n      return NaN;\n    }\n    if (vertical) {\n      edge = Math.min.apply(\n        null,\n        boxes.map((box) => box.left),\n      );\n    } else {\n      edge = Math.max.apply(\n        null,\n        boxes.map((box) => box.bottom),\n      );\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  let lastChild: Node;\n  while ((lastChild = parentNode.lastChild) != viewNode) {\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  const viewNode = nodeContext?.viewNode;\n  return viewNode instanceof Element && isSpecial(viewNode);\n}\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  return (\n    display !== \"inline\" &&\n    (Display.isInlineLevel(display) || Display.isRubyInternalDisplay(display))\n  );\n}\n\nexport function findAncestorSpecialInlineNodeContext(\n  nodeContext: Vtree.NodeContext,\n): Vtree.NodeContext | null {\n  for (let p = nodeContext.parent; p; p = p.parent) {\n    if (p.display !== \"inline\" && Display.isInlineLevel(p.display)) {\n      return p;\n    }\n  }\n  return null;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition\n{\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition\n{\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    // Fix for issue #740\n    if (\n      nodeContext.shadowType === Vtree.ShadowType.ROOTLESS &&\n      LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      return;\n    }\n    let node = nodeContext.viewNode;\n    if (node.parentElement?.localName === \"viv-ts-inner\") {\n      // special element for text-spacing\n      node = node.parentElement.parentElement;\n    }\n    const parentNode = node.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, node);\n    if (removeSelf) {\n      parentNode.removeChild(node);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.fixJustificationIfNeeded(nodeContext, true);\n      column.layoutContext.processFragmentedBlockEdge(\n        removeSelf ? nodeContext : nodeContext.parent,\n      );\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext =\n        nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"LayoutIterator\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  /**\n   * @override\n   */\n  startNonElementNode(state: LayoutIteratorState): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n","/**\n * Copyright 2021 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TextPolyfill - CSS text-spacing and hanging-punctuation support.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\n\ntype PropertyValue = string | number | Css.Val;\n\ntype HangingPunctuation = {\n  first: boolean;\n  end: boolean; // force-end or allow-end\n  allowEnd: boolean;\n  last: boolean;\n};\n\nconst HANGING_PUNCTUATION_NONE: HangingPunctuation = {\n  first: false,\n  end: false,\n  allowEnd: false,\n  last: false,\n};\n\nfunction hangingPunctuationFromPropertyValue(\n  value: PropertyValue,\n): HangingPunctuation {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n      ? Css.getName(value)\n      : Css.ident.none;\n\n  if (cssval === Css.ident.none) {\n    return HANGING_PUNCTUATION_NONE;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const hangingPunctuation: HangingPunctuation = Object.create(\n    HANGING_PUNCTUATION_NONE,\n  );\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"first\":\n          hangingPunctuation.first = true;\n          break;\n        case \"force-end\":\n          hangingPunctuation.end = true;\n          break;\n        case \"allow-end\":\n          hangingPunctuation.end = true;\n          hangingPunctuation.allowEnd = true;\n          break;\n        case \"last\":\n          hangingPunctuation.last = true;\n          break;\n      }\n    }\n  }\n  return hangingPunctuation;\n}\n\nfunction isHangingPunctuationNone(\n  hangingPunctuation: HangingPunctuation,\n): boolean {\n  return (\n    !hangingPunctuation.first &&\n    !hangingPunctuation.last &&\n    !hangingPunctuation.end\n  );\n}\n\ntype TextSpacing = {\n  trimStart: boolean; // trim-start or space-first (not space-start)\n  spaceFirst: boolean; // space-first (trim-start except at first line)\n  trimEnd: boolean; // trim-end or allow-end (not space-end)\n  allowEnd: boolean; // allow-end (not force-end)\n  trimAdjacent: boolean;\n  ideographAlpha: boolean;\n  ideographNumeric: boolean;\n};\n\n/**\n * text-spacing: none\n * none = space-start space-end space-adjacent\n */\nconst TEXT_SPACING_NONE: TextSpacing = {\n  trimStart: false,\n  spaceFirst: false,\n  trimEnd: false,\n  allowEnd: false,\n  trimAdjacent: false,\n  ideographAlpha: false,\n  ideographNumeric: false,\n};\n\n/**\n * text-spacing: normal\n * normal = space-first trim-end trim-adjacent\n */\nconst TEXT_SPACING_NORMAL: TextSpacing = {\n  trimStart: true,\n  spaceFirst: true,\n  trimEnd: true,\n  allowEnd: false,\n  trimAdjacent: true,\n  ideographAlpha: false,\n  ideographNumeric: false,\n};\n/**\n * text-spacing: auto\n * auto = trim-start trim-end trim-adjacent ideograph-alpha ideograph-numeric\n */\nconst TEXT_SPACING_AUTO: TextSpacing = {\n  trimStart: true,\n  spaceFirst: false,\n  trimEnd: true,\n  allowEnd: false,\n  trimAdjacent: true,\n  ideographAlpha: true,\n  ideographNumeric: true,\n};\n\nfunction textSpacingFromPropertyValue(value: PropertyValue): TextSpacing {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n      ? Css.getName(value)\n      : Css.ident.normal;\n\n  if (cssval === Css.ident.normal) {\n    return TEXT_SPACING_NORMAL;\n  }\n  if (cssval === Css.ident.none) {\n    return TEXT_SPACING_NONE;\n  }\n  if (cssval === Css.ident.auto) {\n    return TEXT_SPACING_AUTO;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const textSpacing: TextSpacing = Object.create(TEXT_SPACING_NORMAL);\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"trim-start\":\n          textSpacing.trimStart = true;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-start\":\n          textSpacing.trimStart = false;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-first\":\n          textSpacing.trimStart = true;\n          textSpacing.spaceFirst = true;\n          break;\n        case \"trim-end\":\n          textSpacing.trimEnd = true;\n          textSpacing.allowEnd = false;\n          break;\n        case \"space-end\":\n          textSpacing.trimEnd = false;\n          textSpacing.allowEnd = false;\n          break;\n        case \"allow-end\":\n          textSpacing.trimEnd = true;\n          textSpacing.allowEnd = true;\n          break;\n        case \"trim-adjacent\":\n          textSpacing.trimAdjacent = true;\n          break;\n        case \"space-adjacent\":\n          textSpacing.trimAdjacent = false;\n          break;\n        case \"ideograph-alpha\":\n          textSpacing.ideographAlpha = true;\n          break;\n        case \"ideograph-numeric\":\n          textSpacing.ideographNumeric = true;\n          break;\n      }\n    }\n  }\n\n  return textSpacing;\n}\n\nfunction isTextSpacingNone(textSpacing: TextSpacing): boolean {\n  return (\n    !textSpacing.trimStart &&\n    !textSpacing.trimEnd &&\n    !textSpacing.trimAdjacent &&\n    !textSpacing.ideographAlpha &&\n    !textSpacing.ideographNumeric\n  );\n}\n\nfunction normalizeLang(lang: string): string | null {\n  if (lang) {\n    // Normalize CJK lang\n    lang = lang.toLowerCase();\n    if (/^zh\\b.*-(hant|tw|hk)\\b/.test(lang)) {\n      return \"zh-hant\";\n    }\n    if (/^zh\\b/.test(lang)) {\n      return \"zh-hans\";\n    }\n    if (/^ja\\b/.test(lang)) {\n      return \"ja\";\n    }\n    if (/^ko\\b/.test(lang)) {\n      return \"ko\";\n    }\n    return lang;\n  }\n  return null;\n}\n\nconst embeddedContentTags = {\n  audio: true,\n  canvas: true,\n  embed: true,\n  iframe: true,\n  img: true,\n  math: true,\n  object: true,\n  picture: true,\n  svg: true,\n  video: true,\n};\n\nclass TextSpacingPolyfill {\n  getPolyfilledInheritedProps() {\n    return [\"hanging-punctuation\", \"text-spacing\"];\n  }\n\n  preprocessSingleDocument(document: Document): void {\n    if (!document.body) {\n      return;\n    }\n    this.preprocessForTextSpacing(document.body);\n  }\n\n  preprocessForTextSpacing(element: Element): void {\n    // Split text nodes by punctuations and ideograph/non-ideograph boundary\n    const nodeIter = element.ownerDocument.createNodeIterator(\n      element,\n      NodeFilter.SHOW_TEXT,\n    );\n    for (let node = nodeIter.nextNode(); node; node = nodeIter.nextNode()) {\n      if (\n        node.parentElement.namespaceURI !== Base.NS.XHTML ||\n        node.parentElement.dataset?.[\"mathTypeset\"] === \"true\"\n      ) {\n        continue;\n      }\n      const textArr = node.textContent\n        .replace(\n          /(?![()\\[\\]{}])[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}、。，．：；､｡]\\p{M}*(?=\\P{M})|.(?=(?![()\\[\\]{}])[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}、。，．：；､｡])|(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*(?=(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}])|(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}]\\p{M}*(?=(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF])/gsu,\n          \"$&\\x00\",\n        )\n        .split(\"\\x00\");\n\n      if (textArr.length > 1) {\n        const lastIndex = textArr.length - 1;\n        for (let i = 0; i < lastIndex; i++) {\n          node.parentNode.insertBefore(\n            document.createTextNode(textArr[i]),\n            node,\n          );\n        }\n        node.textContent = textArr[lastIndex];\n      }\n    }\n  }\n\n  processGeneratedContent(\n    element: HTMLElement,\n    textSpacingVal: Css.Val,\n    hangingPunctuationVal: Css.Val,\n    lang: string,\n    vertical: boolean,\n  ): void {\n    lang = normalizeLang(lang);\n    const textSpacing = textSpacingFromPropertyValue(textSpacingVal);\n    const hangingPunctuation = hangingPunctuationFromPropertyValue(\n      hangingPunctuationVal,\n    );\n\n    if (\n      isHangingPunctuationNone(hangingPunctuation) &&\n      isTextSpacingNone(textSpacing)\n    ) {\n      return;\n    }\n\n    this.preprocessForTextSpacing(element);\n\n    const whiteSpaceSave = element.style.whiteSpace;\n    if ((vertical ? element.offsetHeight : element.offsetWidth) === 0) {\n      // Prevent wrong line wrapping\n      element.style.whiteSpace = \"pre\";\n    }\n\n    const nodeIter = element.ownerDocument.createNodeIterator(\n      element,\n      NodeFilter.SHOW_TEXT,\n    );\n    let prevNode: Node = null;\n    let nextNode: Node = null;\n    for (let node = nodeIter.nextNode(); node; node = nextNode) {\n      nextNode = nodeIter.nextNode();\n      const isFirstInBlock = !prevNode;\n      const isFirstAfterForcedLineBreak =\n        !prevNode || /\\n$/.test(prevNode.textContent);\n      const isLastBeforeForcedLineBreak =\n        !nextNode || /^\\n/.test(nextNode.textContent);\n      const isLastInBlock = !nextNode;\n      this.processTextSpacing(\n        node,\n        isFirstInBlock,\n        isFirstAfterForcedLineBreak,\n        isLastBeforeForcedLineBreak,\n        isLastInBlock,\n        prevNode,\n        nextNode,\n        textSpacing,\n        hangingPunctuation,\n        lang,\n        vertical,\n      );\n      prevNode = node;\n    }\n\n    element.style.whiteSpace = whiteSpaceSave;\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): void {\n    const isFirstFragment = !nodeContext || nodeContext.fragmentIndex === 1;\n    const isAfterForcedLineBreak =\n      isFirstFragment || checkIfAfterForcedLineBreak();\n\n    function checkIfAfterForcedLineBreak(): boolean {\n      let p = checkPoints[0];\n      let prevNode: Node;\n      while (p && p.inline) {\n        prevNode = p.sourceNode?.previousSibling;\n        if (prevNode) {\n          if (\n            prevNode instanceof Text &&\n            /^\\s*$/.test(prevNode.textContent) &&\n            p.whitespace !== Vtree.Whitespace.PRESERVE\n          ) {\n            prevNode = prevNode.previousSibling;\n          }\n          if (prevNode) {\n            break;\n          }\n        }\n        p = p.parent;\n      }\n\n      while (prevNode) {\n        if (prevNode instanceof Element) {\n          if (prevNode.localName === \"br\") {\n            return true;\n          }\n        } else if (prevNode instanceof Text) {\n          if (p.whitespace === Vtree.Whitespace.PRESERVE) {\n            if (/\\n$/.test(prevNode.textContent)) {\n              return true;\n            }\n          } else if (p.whitespace === Vtree.Whitespace.NEWLINE) {\n            if (/\\n\\s*$/.test(prevNode.textContent)) {\n              return true;\n            }\n          }\n        }\n        prevNode = prevNode.lastChild;\n      }\n      return false;\n    }\n\n    for (let i = 0; i < checkPoints.length; i++) {\n      const p = checkPoints[i];\n      if (\n        !p.after &&\n        p.inline &&\n        !p.display &&\n        p.parent &&\n        p.viewNode.parentNode &&\n        p.viewNode.nodeType === Node.TEXT_NODE &&\n        p.viewNode.textContent.trimStart().length > 0\n      ) {\n        const lang = normalizeLang(\n          p.lang ??\n            p.parent.lang ??\n            nodeContext?.lang ??\n            nodeContext?.parent?.lang,\n        );\n        const textSpacing = textSpacingFromPropertyValue(\n          p.inheritedProps[\"text-spacing\"],\n        );\n        const hangingPunctuation = hangingPunctuationFromPropertyValue(\n          p.inheritedProps[\"hanging-punctuation\"],\n        );\n\n        if (\n          isHangingPunctuationNone(hangingPunctuation) &&\n          isTextSpacingNone(textSpacing)\n        ) {\n          continue;\n        }\n        if (/\\b(flex|grid)\\b/.test(p.parent.display)) {\n          // Cannot process if parent is flex or grid. (Issue #926)\n          continue;\n        }\n\n        let prevNode: Node = null;\n        let nextNode: Node = null;\n        let isFirstInBlock = i === 0 && isFirstFragment;\n        let isFirstAfterForcedLineBreak = i === 0 && isAfterForcedLineBreak;\n        let isLastBeforeForcedLineBreak = false;\n        let isLastInBlock = false;\n\n        function checkIfFirstAfterForcedLineBreak(\n          prevP: Vtree.NodeContext,\n        ): boolean {\n          if (prevP.viewNode instanceof Element) {\n            return prevP.viewNode.localName === \"br\";\n          }\n          if (prevP.viewNode instanceof Text) {\n            if (prevP.whitespace === Vtree.Whitespace.PRESERVE) {\n              if (/\\n$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            } else if (prevP.whitespace === Vtree.Whitespace.NEWLINE) {\n              if (/\\n\\s*$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            }\n            if (prevP.viewNode.previousElementSibling?.localName === \"br\") {\n              return Vtree.canIgnore(prevP.viewNode, prevP.whitespace);\n            }\n          }\n          return false;\n        }\n\n        function checkIfLastBeforeForcedLineBreak(\n          nextP: Vtree.NodeContext,\n        ): boolean {\n          if (nextP.viewNode instanceof Element) {\n            return nextP.viewNode.localName === \"br\";\n          }\n          if (nextP.viewNode instanceof Text) {\n            if (nextP.whitespace === Vtree.Whitespace.PRESERVE) {\n              if (/^\\n/.test(nextP.viewNode.textContent)) {\n                return true;\n              }\n            } else if (nextP.whitespace === Vtree.Whitespace.NEWLINE) {\n              if (/^\\s*\\n/.test(nextP.viewNode.textContent)) {\n                return true;\n              }\n            }\n            if (nextP.viewNode.nextElementSibling?.localName === \"br\") {\n              return Vtree.canIgnore(nextP.viewNode, nextP.whitespace);\n            }\n          }\n          return false;\n        }\n\n        for (let prev = i - 1; prev >= 0; prev--) {\n          const prevP = checkPoints[prev];\n          if (checkIfFirstAfterForcedLineBreak(prevP)) {\n            isFirstAfterForcedLineBreak = true;\n            break;\n          }\n          if (\n            !prevP.display &&\n            prevP.viewNode.nodeType === Node.TEXT_NODE &&\n            prevP.viewNode.textContent.length > 0\n          ) {\n            prevNode = prevP.viewNode;\n            break;\n          }\n          if (\n            (prevP.display && !/^(inline|ruby)\\b/.test(prevP.display)) ||\n            (prevP.viewNode instanceof Element &&\n              (prevP.viewNode.localName === \"br\" ||\n                embeddedContentTags[prevP.viewNode.localName]))\n          ) {\n            break;\n          }\n          if (prev === 0 && isFirstFragment) {\n            isFirstInBlock = true;\n            isFirstAfterForcedLineBreak = true;\n          }\n        }\n        for (let next = i + 1; next < checkPoints.length; next++) {\n          const nextP = checkPoints[next];\n          if (checkIfLastBeforeForcedLineBreak(nextP)) {\n            isLastBeforeForcedLineBreak = true;\n            break;\n          }\n          if (\n            nextP.viewNode !== p.viewNode &&\n            !nextP.display &&\n            nextP.viewNode.nodeType === Node.TEXT_NODE &&\n            nextP.viewNode.textContent.length > 0\n          ) {\n            nextNode = nextP.viewNode;\n            break;\n          }\n          if (\n            (nextP.display && !/^(inline|ruby)\\b/.test(nextP.display)) ||\n            (nextP.viewNode instanceof Element &&\n              (nextP.viewNode.localName === \"br\" ||\n                embeddedContentTags[nextP.viewNode.localName]))\n          ) {\n            break;\n          }\n          if (next === checkPoints.length - 1) {\n            isLastInBlock = true;\n            isLastBeforeForcedLineBreak = true;\n          }\n        }\n        this.processTextSpacing(\n          p.viewNode,\n          isFirstInBlock,\n          isFirstAfterForcedLineBreak,\n          isLastBeforeForcedLineBreak,\n          isLastInBlock,\n          prevNode,\n          nextNode,\n          textSpacing,\n          hangingPunctuation,\n          lang,\n          p.vertical,\n        );\n      }\n    }\n  }\n\n  private processTextSpacing(\n    textNode: Node,\n    isFirstInBlock: boolean,\n    isFirstAfterForcedLineBreak: boolean,\n    isLastBeforeForcedLineBreak: boolean,\n    isLastInBlock: boolean,\n    prevNode: Node,\n    nextNode: Node,\n    textSpacing: TextSpacing,\n    hangingPunctuation: HangingPunctuation,\n    lang: string,\n    vertical: boolean,\n  ): void {\n    const text = textNode.textContent;\n    const document = textNode.ownerDocument;\n    let currRange: Range;\n    let prevRange: Range;\n    let nextRange: Range;\n\n    function isAtStartOfLine(): boolean {\n      if (!prevNode) {\n        return false;\n      }\n      if (!currRange) {\n        currRange = document.createRange();\n        currRange.selectNode(textNode);\n      }\n      const rect = currRange.getClientRects()[0];\n      if (!prevRange) {\n        prevRange = document.createRange();\n        prevRange.selectNode(prevNode);\n      }\n      const prevRects = prevRange.getClientRects();\n      const prevRect = prevRects[prevRects.length - 1];\n      if (!rect || !prevRect) {\n        return false;\n      }\n      return vertical\n        ? rect.top < prevRect.top + prevRect.height - rect.width ||\n            rect.left + rect.width < prevRect.left + 1 ||\n            rect.left > prevRect.left + prevRect.width - 1\n        : rect.left < prevRect.left + prevRect.width - rect.height ||\n            rect.top > prevRect.top + prevRect.height - 1 ||\n            rect.top + rect.height < prevRect.top + 1;\n    }\n\n    function isAtEndOfLine(): boolean {\n      if (!nextNode) {\n        return false;\n      }\n      if (!currRange) {\n        currRange = document.createRange();\n        currRange.selectNode(textNode);\n      }\n      const rect = currRange.getClientRects()[0];\n      if (!nextRange) {\n        nextRange = document.createRange();\n        nextRange.selectNode(nextNode);\n      }\n      const nextRect = nextRange.getClientRects()[0];\n      if (!rect || !nextRect) {\n        return false;\n      }\n      return vertical\n        ? rect.top + rect.height > nextRect.top + rect.width ||\n            rect.left > nextRect.left + nextRect.width - 1 ||\n            rect.left + rect.width < nextRect.left + 1\n        : rect.left + rect.width > nextRect.left + rect.height ||\n            rect.top + rect.height < nextRect.top + 1 ||\n            rect.top > nextRect.top + nextRect.height - 1;\n    }\n\n    let punctProcessing = false;\n    let hangingFirst = false;\n    let hangingLast = false;\n    let hangingEnd = false;\n    let tagName: \"viv-ts-open\" | \"viv-ts-close\";\n\n    if (\n      isFirstInBlock &&\n      hangingPunctuation.first &&\n      /^[\\p{Ps}\\p{Pf}\\p{Pi}'\"]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: first\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n      hangingFirst = true;\n    } else if (\n      isLastInBlock &&\n      hangingPunctuation.last &&\n      /^[\\p{Pe}\\p{Pf}\\p{Pi}'\"]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: last\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hangingLast = true;\n    } else if (hangingPunctuation.end && /^[、。，．､｡]\\p{M}*$/u.test(text)) {\n      // hanging-punctuation: force-end | allow-end\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hangingEnd = true;\n    } else if (\n      (textSpacing.trimStart || textSpacing.trimAdjacent) &&\n      /^[‘“〝（［｛｟〈〈《「『【〔〖〘〚]\\p{M}*$/u.test(text)\n    ) {\n      // fullwidth opening punctuation\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n    } else if (\n      (textSpacing.trimEnd || textSpacing.trimAdjacent) &&\n      (/^[’”〞〟）］｝｠〉〉》」』】〕〗〙〛]\\p{M}*$/u.test(text) ||\n        (lang === \"zh-hans\" && /^[：；]\\p{M}*$/u.test(text)) ||\n        (lang !== \"zh-hant\" && /^[、。，．]\\p{M}*$/u.test(text)))\n    ) {\n      // fullwidth closing punctuation\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n    }\n\n    if (punctProcessing) {\n      if (textNode.parentElement.localName === \"viv-ts-inner\") {\n        // Already processed\n        return;\n      }\n      // Wrap the textNode as `<{tagName}><viv-ts-inner>{text}<viv-ts-inner></{tagName}>`\n      const outerElem = document.createElement(tagName);\n      const innerElem = document.createElement(\"viv-ts-inner\");\n      outerElem.appendChild(innerElem);\n      textNode.parentNode.insertBefore(outerElem, textNode);\n      innerElem.appendChild(textNode);\n\n      // Check if che punctuation is almost full width\n      const fontSize = parseFloat(\n        document.defaultView.getComputedStyle(outerElem).fontSize,\n      );\n      const isFullWidth =\n        (vertical ? innerElem.offsetHeight : innerElem.offsetWidth) >\n        fontSize * 0.7;\n\n      if (isFullWidth || hangingFirst || hangingLast || hangingEnd) {\n        if (tagName === \"viv-ts-open\") {\n          if (hangingFirst) {\n            outerElem.className = \"viv-hang-first\";\n          } else if (isFirstInBlock || isFirstAfterForcedLineBreak) {\n            if (textSpacing.trimStart && !textSpacing.spaceFirst) {\n              outerElem.className = \"viv-ts-trim\";\n            } else {\n              outerElem.className = \"viv-ts-space\";\n            }\n          } else if (!textSpacing.trimStart && isAtStartOfLine()) {\n            outerElem.className = \"viv-ts-space\";\n          } else if (\n            textSpacing.trimAdjacent &&\n            prevNode &&\n            /[\\p{Ps}\\p{Pi}\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000：；、。，．]\\p{M}*$/u.test(\n              prevNode.textContent,\n            )\n          ) {\n            outerElem.className = \"viv-ts-trim\";\n          } else {\n            outerElem.className = \"viv-ts-auto\";\n          }\n        } else if (tagName === \"viv-ts-close\") {\n          if (hangingLast) {\n            outerElem.className = isFullWidth\n              ? \"viv-hang-last\"\n              : \"viv-hang-last viv-hang-hw\";\n          } else if (isLastInBlock || isLastBeforeForcedLineBreak) {\n            if (hangingEnd) {\n              outerElem.className = isFullWidth\n                ? \"viv-hang-end\"\n                : \"viv-hang-end viv-hang-hw\";\n            } else if (textSpacing.trimEnd) {\n              outerElem.className = \"viv-ts-trim\";\n            } else {\n              outerElem.className = \"viv-ts-space\";\n            }\n          } else if (\n            nextNode &&\n            /^[\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000：；、。，．]/u.test(\n              nextNode.textContent,\n            )\n          ) {\n            if (isFullWidth && textSpacing.trimAdjacent) {\n              outerElem.className = \"viv-ts-trim\";\n            }\n          } else if (hangingEnd) {\n            const atEnd = isAtEndOfLine();\n            const atEndNoHang = atEnd && hangingPunctuation.allowEnd;\n            if (!atEndNoHang) {\n              outerElem.className = isFullWidth\n                ? \"viv-hang-end\"\n                : \"viv-hang-end viv-hang-hw\";\n            }\n            if (!isFullWidth) {\n              if (!atEnd && !isAtEndOfLine()) {\n                outerElem.className = \"\";\n              }\n            } else if (\n              atEndNoHang\n                ? textSpacing.trimEnd && !textSpacing.allowEnd\n                : !isAtEndOfLine()\n            ) {\n              outerElem.className = \"viv-ts-auto\";\n            } else if (!atEnd && hangingPunctuation.allowEnd) {\n              if (!textSpacing.trimEnd || textSpacing.allowEnd) {\n                outerElem.className = \"viv-ts-space\";\n                if (!isAtEndOfLine()) {\n                  if (textSpacing.trimEnd) {\n                    outerElem.className = \"viv-ts-auto\";\n                    if (!isAtEndOfLine()) {\n                      outerElem.className = \"viv-hang-end\";\n                    }\n                  } else {\n                    outerElem.className = \"viv-hang-end\";\n                  }\n                }\n              } else {\n                outerElem.className = \"viv-ts-auto\";\n                if (!isAtEndOfLine()) {\n                  outerElem.className = \"viv-hang-end\";\n                }\n              }\n            }\n          } else if (textSpacing.trimEnd) {\n            if (textSpacing.allowEnd && isAtEndOfLine()) {\n              outerElem.className = \"viv-ts-space\";\n            } else {\n              outerElem.className = \"viv-ts-auto\";\n            }\n          }\n        }\n      }\n    }\n\n    let spaceIdeoAlnumProcessing = false;\n\n    function checkUpright(elem: Element): boolean {\n      const style = elem?.ownerDocument.defaultView?.getComputedStyle(elem);\n      return (\n        !!style &&\n        (style.textOrientation === \"upright\" ||\n          style.textCombineUpright === \"all\" ||\n          style[\"-webkit-text-combine\"] === \"horizontal\")\n      );\n    }\n\n    if (textSpacing.ideographAlpha || textSpacing.ideographNumeric) {\n      if (\n        prevNode &&\n        /^(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]/u.test(text) &&\n        ((textSpacing.ideographAlpha &&\n          /(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}\\p{M}*$/u.test(\n            prevNode.textContent,\n          )) ||\n          (textSpacing.ideographNumeric &&\n            /(?![\\uFF01-\\uFF60])\\p{Nd}\\p{M}*$/u.test(prevNode.textContent))) &&\n        !(vertical && checkUpright(prevNode.parentElement))\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n      if (\n        nextNode &&\n        /(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*$/u.test(text) &&\n        ((textSpacing.ideographAlpha &&\n          /^(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}/u.test(\n            nextNode.textContent,\n          )) ||\n          (textSpacing.ideographNumeric &&\n            /^(?![\\uFF01-\\uFF60])\\p{Nd}/u.test(nextNode.textContent))) &&\n        !(vertical && checkUpright(nextNode.parentElement))\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode.nextSibling,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n    }\n  }\n\n  registerHooks() {\n    Plugin.registerHook(\n      Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n      this.getPolyfilledInheritedProps.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT,\n      this.preprocessSingleDocument.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n      this.postLayoutBlock.bind(this),\n    );\n  }\n}\n\nconst textPolyfill = new TextSpacingPolyfill();\ntextPolyfill.registerHooks();\n\nexport function preprocessForTextSpacing(element: Element): void {\n  textPolyfill.preprocessForTextSpacing(element);\n}\n\nexport function processGeneratedContent(\n  element: HTMLElement,\n  textSpacing: Css.Val,\n  hangingPunctuation: Css.Val,\n  lang: string,\n  vertical: boolean,\n): void {\n  textPolyfill.processGeneratedContent(\n    element,\n    textSpacing,\n    hangingPunctuation,\n    lang,\n    vertical,\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as TextPolyfill from \"./text-polyfill\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n          // text-spacing & hanging-punctuation support\n          TextPolyfill.preprocessForTextSpacing(element);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset\n{\n  constructor(public nodeContext, public pseudoElementHeight) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\nexport const mediaTags = {\n  img: true,\n  svg: true,\n  audio: true,\n  video: true,\n};\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition\n{\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated = true;\n    }\n    return this.breakNodeContext;\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null =\n    null;\n  blockDistanceToBlockEndFloats: number = NaN;\n  breakAtTheEdgeBeforeFloat: string | null = null;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical ? this.startEdge : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical ? this.endEdge : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical ? this.afterEdge : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical ? this.beforeEdge : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions =\n      this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode =\n              this.calculateOffsetInNodeForNodeContext(position);\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        let firstLetterLength = r ? r[0].length : 0;\n        if (\n          !r &&\n          position.sourceNode instanceof Text &&\n          position.sourceNode.nextSibling instanceof Text &&\n          text === position.sourceNode.textContent\n        ) {\n          // The text '“Foo' may be split to '“' and 'Foo'\n          const text2 = text + position.sourceNode.nextSibling.textContent;\n          const r2 = text2.match(Base.firstLetterPattern);\n          if (r2) {\n            const firstLetterText = r2[0];\n            firstLetterLength = firstLetterText.length;\n            position.sourceNode.textContent = firstLetterText;\n            position.viewNode.textContent = firstLetterText;\n            position.sourceNode.nextSibling.textContent =\n              text2.substr(firstLetterLength);\n          }\n        }\n        return this.layoutContext.peelOff(position, firstLetterLength);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (position.viewNode && !LayoutHelper.isSpecialNodeContext(position)) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (this.isFloatNodeContext(position) && !this.vertical) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\" units or a number.\n   * @return value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string | number): number {\n    if (typeof val == \"number\") {\n      return val;\n    }\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return parseFloat(r[0]);\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = PageFloats.resolveInlineFloatDirection(\n      nodeContext.floatSide,\n      nodeContext.vertical,\n      nodeContext.direction,\n    );\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.startEdge;\n      let x2 = this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(this.getStartEdge(parentBox), x1);\n        x2 = Math.min(this.getEndEdge(parentBox), x2);\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        if (!nodeContext.firstPseudo) {\n          // Unless float is specified on ::first-letter (Fix for issue #923)\n          parent.viewNode.appendChild(nodeContext.viewNode);\n        }\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe =\n          containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n            \"div\",\n          );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft =\n      area.paddingRight =\n      area.paddingTop =\n      area.paddingBottom =\n        0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext =\n      this.pageFloatLayoutContext.getPageFloatLayoutContext(\n        float.floatReference,\n      );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments =\n      context.getStashedFloatFragments(floatReference);\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n            stashedFragment.continuations[0].float,\n          );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy =\n      new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n        nodeContext,\n      );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  createJustificationAdjustmentElement(\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n    vertical: boolean,\n  ): HTMLElement {\n    const span = doc.createElement(\"span\") as HTMLElement;\n    span.style.visibility = \"hidden\";\n    span.style.verticalAlign = \"top\";\n    span.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    const inner = doc.createElement(\"span\") as HTMLElement;\n    inner.style.fontSize = \"0\";\n    inner.style.lineHeight = \"0\";\n    inner.textContent = \" #\";\n    span.appendChild(inner);\n\n    // Measure inline-start and inline-end edge positions of the line box,\n    // taking (exclusion) floats into consideration\n    span.style.display = \"block\";\n    span.style.textIndent = \"0\";\n    span.style.textAlign = \"left\";\n    parentNode.insertBefore(span, insertionPoint);\n    const leftPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"right\";\n    const rightPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"\";\n    if (Base.checkInlineBlockJustificationBug(document.body)) {\n      // For Chrome\n      span.style.display = \"inline\";\n    } else {\n      // For Firefox, Edge and IE\n      span.style.display = \"inline-block\";\n    }\n    const padding = vertical\n      ? rightPos.top - leftPos.top\n      : rightPos.left - leftPos.left;\n    const paddingStr = padding >= 1 ? `${padding - 1}px` : \"100%\";\n    if (vertical) {\n      span.style.paddingTop = paddingStr;\n    } else {\n      span.style.paddingLeft = paddingStr;\n    }\n    return span;\n  }\n\n  addAndAdjustJustificationElement(\n    nodeContext: Vtree.NodeContext,\n    insertAfter: boolean,\n    node: Node,\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n  ): HTMLElement {\n    fixJustificationOnHyphen(nodeContext, insertAfter, node, insertionPoint);\n    return this.createJustificationAdjustmentElement(\n      insertionPoint,\n      doc,\n      parentNode,\n      nodeContext.vertical,\n    );\n  }\n\n  compensateJustificationLineHeight(\n    span: Element,\n    br: Element,\n    nodeContext: Vtree.NodeContext,\n  ) {\n    const spanRect = this.clientLayout.getElementClientRect(span);\n    const brRect = this.clientLayout.getElementClientRect(br);\n    if (nodeContext.vertical) {\n      (br as HTMLElement).style.marginRight = `${\n        brRect.right - spanRect.right\n      }px`;\n      (br as HTMLElement).style.width = \"0px\";\n    } else {\n      (br as HTMLElement).style.marginTop = `${spanRect.top - brRect.top}px`;\n      (br as HTMLElement).style.height = \"0px\";\n    }\n    br.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n  }\n\n  /**\n   * Fix justification of the last line of text broken across pages (if\n   * needed).\n   */\n  fixJustificationIfNeeded(\n    nodeContext: Vtree.NodeContext,\n    endOfColumn: boolean,\n  ): void {\n    if (nodeContext.after && !nodeContext.inline) {\n      return;\n    }\n    if (endOfColumn) {\n      const parentElem = nodeContext.parent?.viewNode as Element;\n      const textAlign =\n        parentElem &&\n        this.clientLayout.getElementComputedStyle(parentElem).textAlign;\n      if (textAlign !== \"justify\") {\n        return;\n      }\n    }\n    let node = nodeContext.viewNode;\n    if (node.parentElement?.localName === \"viv-ts-inner\") {\n      // special element for text-spacing\n      node = node.parentElement.parentElement;\n    }\n    const doc = node.ownerDocument;\n    const insertAfter =\n      endOfColumn && (nodeContext.after || node.nodeType != 1);\n    let insertionPoint = insertAfter ? node.nextSibling : node;\n    if (insertionPoint && !insertionPoint.parentNode) {\n      // Possible if removeSelf = false in finishBreak()\n      insertionPoint = null;\n    }\n    const parentNode =\n      node.parentNode || (nodeContext.parent && nodeContext.parent.viewNode);\n    if (!parentNode) {\n      // Possible if nothing was added to the column\n      return;\n    }\n    const span = this.addAndAdjustJustificationElement(\n      nodeContext,\n      insertAfter,\n      node,\n      insertionPoint,\n      doc,\n      parentNode,\n    );\n    if (!endOfColumn) {\n      const br = doc.createElement(\"div\") as HTMLElement;\n      parentNode.insertBefore(br, insertionPoint);\n      this.compensateJustificationLineHeight(span, br, nodeContext);\n    }\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"processLineStyling\");\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              this.fixJustificationIfNeeded(nodeContext, false);\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos + minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Text-spacing etc. must be done before calculating edge. (Issue #898)\n        this.postLayoutBlock(nodeContext, checkPoints);\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          // Text-spacing etc. must be done before calculating edge. (Issue #898)\n          // this.postLayoutBlock(nodeContext, checkPoints);\n\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n    const viewNode = nodeContext.viewNode;\n    if (\n      viewNode.nodeType != 1 &&\n      viewNode.parentElement?.localName !== \"viv-ts-inner\"\n    ) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    } else {\n      // Fix for issue #821, #885\n      const p = LayoutHelper.findAncestorSpecialInlineNodeContext(nodeContext);\n      if (p) {\n        nodeContext = p;\n      }\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elments\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        if (node.nodeType != 1) {\n          if (!haveStart) {\n            if (node.parentNode == null) {\n              endNotReached = false;\n            } else {\n              range.setStartBefore(node);\n              haveStart = true;\n            }\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(node as Element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          /^r(uby|[bt]c?)$/.test((node as Element).localName) ||\n          LayoutHelper.isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(node as Element).display,\n          )\n        ) {\n          // ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    nodeContext.walkUpBlocks((block) => {\n      if (block.inheritedProps[\"box-decoration-break\"] === \"clone\") {\n        Asserts.assert(block.viewNode instanceof Element);\n        const paddingBorders = this.getComputedPaddingBorder(\n          block.viewNode as Element,\n        );\n        clonedPaddingBorder += block.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (block.display === \"table\") {\n          clonedPaddingBorder += block.blockBorderSpacing;\n        }\n      }\n    });\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    // Workaround for issue #816 (Text with ruby overflowed at column/page break)\n    const parentNode = this.element.parentNode;\n    const nextSibling = this.element.nextSibling;\n    parentNode.removeChild(this.element);\n    parentNode.insertBefore(this.element, nextSibling);\n\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing =\n      this.findFirstOverflowingEdgeAndCheckPoint(checkPoints);\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && blockEdge < edge) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n    edge: number;\n    checkPoint: Vtree.NodeContext | null;\n  } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch ((flowPosition.sourceNode as Element).namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    switch (clear) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (this.vertical) {\n        let wAdj = afterEdge + margin.right - clearEdge;\n        if (wAdj > 0 == margin.right >= 0) {\n          // In addition to collapsed portion\n          wAdj += margin.right;\n        }\n        spacer.style.marginLeft = `${wAdj}px`;\n      } else {\n        let hAdj = clearEdge - (afterEdge + margin.top);\n        if (hAdj > 0 == margin.top >= 0) {\n          // In addition to collapsed portion\n          hAdj += margin.top;\n        }\n        spacer.style.marginBottom = `${hAdj}px`;\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent?.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak() {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge && Break.isForcedBreakValue(breakAtTheEdge))\n      );\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              nodeContext.formattingContext,\n            );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (nodeContext.floatSide) {\n                // Save break-after:avoid* value at before the float\n                // (Fix for issue #904)\n                this.breakAtTheEdgeBeforeFloat = Break.isAvoidBreakValue(\n                  breakAtTheEdge,\n                )\n                  ? breakAtTheEdge\n                  : null;\n              }\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // new formatting context, or float or flex container\n                // (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              if (nodeContext.floatSide) {\n                // Restore break-after:avoid* value at before the float\n                // (Fix for issue #904)\n                breakAtTheEdge =\n                  breakAtTheEdge ?? this.breakAtTheEdgeBeforeFloat;\n                this.breakAtTheEdgeBeforeFloat = null;\n              }\n              const element = nodeContext.sourceNode as Element;\n              // Make breakable after svg and math elements\n              // (Fix for issue #750)\n              if (\n                element.localName === \"svg\" ||\n                element.localName === \"math\" ||\n                element.getAttribute(\"data-math-typeset\") === \"true\"\n              ) {\n                onStartEdges = false;\n                lastAfterNodeContext = nodeContext.copy();\n                trailingEdgeContexts.push(lastAfterNodeContext);\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  null,\n                  nodeContext.breakAfter,\n                );\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                break;\n              }\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (\n                (nodeContext.pageType != nodeContext.parent?.pageType || // Fix for issue #771\n                  !Break.isForcedBreakValue(breakAtTheEdge)) && // Fix for issue #722\n                !this.layoutConstraint.allowLayout(nodeContext)\n              ) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              formattingContext,\n            );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor =\n        new LayoutProcessor.LayoutProcessorResolver().find(formattingContext);\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.top\n        : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.bottom\n        : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    let penalty = checkPoints[0].breakPenalty;\n    if (penalty) {\n      // Fix for issue #546\n      let block = checkPoints[0];\n      while (block.parent && block.inline) {\n        block = block.parent;\n      }\n      penalty = block.breakPenalty;\n    }\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext =\n                  this.nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats =\n      this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder =\n      this.column.calculateClonedPaddingBorder(parentNodeContext);\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\nexport function fixJustificationOnHyphen(\n  nodeContext: Vtree.NodeContext,\n  insertAfter: boolean,\n  node: Node,\n  insertionPoint: Node,\n): void {\n  if (Base.checkSoftWrapOpportunityAfterHyphenBug(document.body)) {\n    const hyphenChar = resolveHyphenateCharacter(nodeContext);\n    const prevSibling = insertAfter ? node : node.previousSibling;\n    const prevText = prevSibling ? prevSibling.textContent : \"\";\n    if (prevText.charAt(prevText.length - 1) === hyphenChar) {\n      const doc = node.ownerDocument;\n      const parent = node.parentNode;\n      if (Base.checkSoftWrapOpportunityByWbrBug(document.body)) {\n        // For IE\n        parent.insertBefore(doc.createTextNode(\" \"), insertionPoint);\n      } else {\n        // For Edge\n        parent.insertBefore(doc.createElement(\"wbr\"), insertionPoint);\n      }\n    }\n  }\n}\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord ? resolveHyphenateCharacter(nodeContext) : \"\",\n    );\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  /**\n   * @override\n   */\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  /**\n   * @override\n   */\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  /**\n   * @override\n   */\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n{\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements\n{\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  /**\n   * @return\n   */\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (nodeContext && this.isAfterLastContent(nodeContext)) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode =\n          nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor\n{\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext =\n      getRepetitiveElementsOwnerFormattingContextOrNull(nodeContext);\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as Element;\n    const verticalAlign = this.cellNodeContext.verticalAlign;\n    if (verticalAlign === \"middle\" || verticalAlign === \"bottom\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext =\n      position.formattingContext as TableFormattingContext;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = 0;\n    if (!formattingContext.isFreelyFragmentableRow(row)) {\n      penalty += 10;\n    }\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  isFreelyFragmentableRow(row: TableRow): boolean {\n    return row.getMinimumHeight() > this.tableWidth / 2;\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  /** @override */\n  saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  /** @override */\n  restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset\n{\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode =\n              nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  /** @override */\n  startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer =\n      cellViewNode.ownerDocument.createElement(\"div\");\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions =\n      this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy =\n                  rowNodeContext.viewNode.ownerDocument.createElement(\"td\");\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext =\n                VtreeImpl.makeNodeContextFromNodePositionStep(\n                  cellNodePosition.steps[0],\n                  rowNodeContext,\n                );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(\n      this.currentRowIndex,\n    ).cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions[cell.columnIndex];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (\n          this.column.layoutContext as Vgen.ViewFactory\n        ).xmldoc.getElementOffset(tdNodeStep.node as Element);\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    if (!cell) {\n      // Fix for Issue #712\n      state.break = true;\n      return Task.newResult(true);\n    }\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      return vertical ? rect[\"height\"] : rect[\"width\"];\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells =\n          formattingContext.getRowSpanningCellsOverflowingTheRow(rowIndex);\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext =\n              cellFragment.findAcceptableBreakPosition().nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode =\n              cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (!repetitiveElements) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n  Base.setCSSProperty(cellContentElement, \"overflow\", \"hidden\");\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements =\n      this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode =\n      this.tableFormattingContext.getRootViewNode(initialPosition);\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /**\n   * @override\n   */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /**\n   * @override\n   */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /**\n   * @override\n   */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints =\n      this.collectCellFragmentLayoutConstraints(\n        positionAfter,\n        formattingContext,\n      );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints:\n          entry.fragment.pseudoColumn.getColumn().fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Ident,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n  return otherColumns.every((c) => lastColumnBlockSize > c.computedBlockSize);\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Logging from \"./logging\";\nimport { ValidationTxt } from \"./assets\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(public where: number, public success: boolean) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (\n        this.nodes[0].validator as PrimitiveValidator\n      ).combine(group.nodes[0].validator as PrimitiveValidator);\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 1;\n\nexport const ALLOW_STR = 2;\n\nexport const ALLOW_IDENT = 4;\n\nexport const ALLOW_POS_NUMERIC = 8;\n\nexport const ALLOW_POS_NUM = 16;\n\nexport const ALLOW_POS_INT = 32;\n\nexport const ALLOW_COLOR = 64;\n\nexport const ALLOW_URL = 128;\n\nexport const ALLOW_NEGATIVE = 256;\n\nexport const ALLOW_ZERO = 512;\n\nexport const ALLOW_ZERO_PERCENT = 1024;\n\nexport const ALLOW_SLASH = 2048;\n\nexport const ALLOW_URANGE = 4096;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      return color;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: Css.URange): Css.Val {\n    if (this.allowed & ALLOW_URANGE) {\n      return urange;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: Css.URange): Css.Val {\n    return this.validateSingle(urange);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(public readonly name: string, group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(validatorSet: ValidatorSet, public readonly name: string) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(validatorSet: ValidatorSet, public readonly names: string[]) {\n    super(validatorSet, names[0]);\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] || this.validatorSet.defaultValues[name],\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateInherit(important: boolean, receiver: PropertyReceiver): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, Css.ident.inherit, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    this.error = true;\n    return null;\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val = values[name] || this.validatorSet.defaultValues[name];\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\n      \"font-family\",\n      \"line-height\",\n      \"font-size\",\n      \"font-stretch\",\n      \"font-variant-ligatures\",\n      \"font-variant-caps\",\n      \"font-variant-numeric\",\n      \"font-variant-east-asian\",\n    );\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    const fontVariant = this.values[\"font-variant_css2\"];\n    if (fontVariant) {\n      delete this.values[\"font-variant_css2\"];\n      this.values[\"font-variant-caps\"] = fontVariant;\n    }\n    const fontStretch = this.values[\"font-stretch_css3\"];\n    if (fontStretch) {\n      delete this.values[\"font-stretch_css3\"];\n      this.values[\"font-stretch\"] = fontStretch;\n    }\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == CssTokenizer.TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == CssTokenizer.TokenType.HASH) {\n      cssval = CssParser.colorFromHash(token.text);\n    } else if (token.type == CssTokenizer.TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"HASHCOLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"URANGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URANGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == CssTokenizer.TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == CssTokenizer.TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != CssTokenizer.TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == CssTokenizer.TokenType.COMMA);\n      if (token.type != CssTokenizer.TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != CssTokenizer.TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != CssTokenizer.TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != CssTokenizer.TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case CssTokenizer.TokenType.INT: {\n            const idents = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.BAR:\n            setop(\"|\");\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case CssTokenizer.TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != CssTokenizer.TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == CssTokenizer.TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != CssTokenizer.TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != CssTokenizer.TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == CssTokenizer.TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case CssTokenizer.TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case CssTokenizer.TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case CssTokenizer.TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (\n        token.type == CssTokenizer.TokenType.IDENT &&\n        shorthandValidators[token.text]\n      ) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              // `font-variant_css2` and `font-stretch_css3` are not real properties\n              if (!token.text.includes(\"_\")) {\n                propList.push(token.text);\n              }\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        const pval = this.defaultValues[pname];\n        if (!pval) {\n          Logging.logger.warn(\"Unknown property in makePropSet:\", pname);\n        } else {\n          map[pname] = pval;\n        }\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      receiver.unknownProperty(origName, value);\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        value === Css.ident.inherit || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (value === Css.ident.inherit) {\n        shorthand.propagateInherit(important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  /**\n   * @return void\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv = this.style[name];\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed && this.displayValue() !== Css.ident.none;\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if (\n      (node.nodeType === Node.TEXT_NODE ||\n        node.nodeType === Node.CDATA_SECTION_NODE) &&\n      (this.atBlockStart || this.atFlowStart) &&\n      box.hasBox()\n    ) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      Asserts.assert(whitespace !== null);\n      if (!Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name];\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    const rootInheritedProps = isBody\n      ? [\"writing-mode\", \"direction\"]\n      : Object.keys(CssCascade.inheritedProps);\n    for (const propName of rootInheritedProps) {\n      if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n        // Copy it over, but keep it at the root element as well.\n        this.rootStyle[propName] = elemStyle[propName];\n      }\n    }\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? elemStyle[\"background-color\"].evaluate(this.context)\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? elemStyle[\"background-image\"].evaluate(this.context)\n        : (null as Css.Val);\n      if (\n        (backgroundColor && backgroundColor !== Css.ident.inherit) ||\n        (backgroundImage && backgroundImage !== Css.ident.inherit)\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      const fontSize = elemStyle[\"font-size\"];\n      let isRelativeFontSize = true;\n      if (fontSize) {\n        const val = fontSize.evaluate(this.context);\n        let px = val.num;\n        switch (val.unit) {\n          case \"em\":\n          case \"rem\":\n            px *= this.context.initialFontSize;\n            break;\n          case \"ex\":\n            px *=\n              (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n              Exprs.defaultUnitSizes[\"em\"];\n            break;\n          case \"%\":\n            px *= this.context.initialFontSize / 100;\n            break;\n          default: {\n            const unitSize = Exprs.defaultUnitSizes[val.unit];\n            if (unitSize) {\n              px *= unitSize;\n            }\n            isRelativeFontSize = false;\n          }\n        }\n        this.context.rootFontSize = px;\n        this.context.isRelativeRootFontSize = isRelativeFontSize;\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"];\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"];\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"];\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore =\n                box.afterBox.getBreakValue(\"before\");\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n\n        if (blockStartOffset === 0) {\n          // Named page type at first page\n          const pageType = style[\"page\"]?.value.toString();\n          if (pageType && pageType.toLowerCase() !== \"auto\") {\n            this.cascade.firstPageType = pageType;\n          }\n        }\n\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (this.bodyReached && blockStartOffset === 0) {\n          // body reached but the named page type at first page is not determined\n          // (Fix for issue #770)\n          continue;\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const traitProps: { [key: string]: Css.Val } = {\n  \"font-style\": Css.ident.normal,\n  \"font-stretch\": Css.ident.normal,\n  \"font-weight\": Css.ident.normal,\n  \"unicode-range\": Css.fullURange,\n};\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop in traitProps) {\n    sb.append(\" \");\n    sb.append(properties[prop].toString());\n  }\n  return sb.toString();\n}\n\nexport function fillDefaults(properties: { [key: string]: Css.Val }): void {\n  for (const prop in traitProps) {\n    if (!properties[prop]) {\n      properties[prop] = traitProps[prop];\n    }\n  }\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  fillDefaults(result);\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop in traitProps) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop in traitProps) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const style = this.head.ownerDocument.createElement(\"style\");\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    this.head.appendChild(style);\n    Logging.logger.debug(\"Load font:\", src);\n    frame.finish(viewFontFace);\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    const srcFamilySrc = srcFace.family + \";\" + src;\n    let fetcher = this.srcURLMap[srcFamilySrc];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.debug(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(src)\n          : null;\n        if (deobfuscator) {\n          Net.ajax(src, Net.XMLHttpRequestResponseType.BLOB).then((xhr) => {\n            if (!xhr.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(xhr.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[srcFamilySrc] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers).thenAsync(() =>\n      this.waitFontLoading(),\n    );\n  }\n\n  waitFontLoading(): Task.Result<boolean> {\n    const fonts = this.head.ownerDocument.fonts; // FontFaceSet\n    let unloadedCount = 0;\n    fonts.forEach((fontFace) => {\n      if (fontFace.status === \"unloaded\") {\n        unloadedCount++;\n        fontFace.load();\n      }\n    });\n    if (unloadedCount === 0) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"waitFontLoading\");\n    frame\n      .loop(() => {\n        return frame.sleep(20).thenAsync(() => {\n          if (fonts.status === \"loading\") {\n            return Task.newResult(true); // continue\n          }\n          return Task.newResult(false); // break\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>,\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(scope: Exprs.LexicalScope, public pageMaster: PageMaster) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>,\n> extends PageBox<I> {\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance,\n> extends PageBox<I> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (!val && CssCascade.inheritedProps[name]) {\n      // inherit from root style\n      const rootStyle = (\n        context as Exprs.Context & {\n          styler: { rootStyle: { [key: string]: CssCascade.CascadeValue } };\n        }\n      ).styler?.rootStyle;\n      val = rootStyle[name]?.value;\n    }\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSinglUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      this.propagatePropertyToElement(\n        context,\n        element,\n        passSingleUriContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos =\n            ((containerSize + columnGap) * i) / columnCount -\n            columnGap / 2 +\n            container.paddingLeft -\n            ruleWidth / 2;\n          const size =\n            container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    if (style[\"content\"]) {\n      style[\"content\"] = style[\"content\"].filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-ligatures\",\n  \"font-variant-caps\",\n  \"font-variant-numeric\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-orientation\",\n  \"text-shadow\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  let writingMode = style[\"writing-mode\"];\n  writingMode = writingMode && writingMode.value;\n  let direction = style[\"direction\"];\n  direction = direction && direction.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a10: { width: new Css.Numeric(26, \"mm\"), height: new Css.Numeric(37, \"mm\") },\n  a9: { width: new Css.Numeric(37, \"mm\"), height: new Css.Numeric(52, \"mm\") },\n  a8: { width: new Css.Numeric(52, \"mm\"), height: new Css.Numeric(74, \"mm\") },\n  a7: { width: new Css.Numeric(74, \"mm\"), height: new Css.Numeric(105, \"mm\") },\n  a6: { width: new Css.Numeric(105, \"mm\"), height: new Css.Numeric(148, \"mm\") },\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  a2: { width: new Css.Numeric(420, \"mm\"), height: new Css.Numeric(594, \"mm\") },\n  a1: { width: new Css.Numeric(594, \"mm\"), height: new Css.Numeric(841, \"mm\") },\n  a0: {\n    width: new Css.Numeric(841, \"mm\"),\n    height: new Css.Numeric(1189, \"mm\"),\n  },\n  b10: { width: new Css.Numeric(31, \"mm\"), height: new Css.Numeric(44, \"mm\") },\n  b9: { width: new Css.Numeric(44, \"mm\"), height: new Css.Numeric(62, \"mm\") },\n  b8: { width: new Css.Numeric(62, \"mm\"), height: new Css.Numeric(88, \"mm\") },\n  b7: { width: new Css.Numeric(88, \"mm\"), height: new Css.Numeric(125, \"mm\") },\n  b6: { width: new Css.Numeric(125, \"mm\"), height: new Css.Numeric(176, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  b3: { width: new Css.Numeric(353, \"mm\"), height: new Css.Numeric(500, \"mm\") },\n  b2: { width: new Css.Numeric(500, \"mm\"), height: new Css.Numeric(707, \"mm\") },\n  b1: {\n    width: new Css.Numeric(707, \"mm\"),\n    height: new Css.Numeric(1000, \"mm\"),\n  },\n  b0: {\n    width: new Css.Numeric(1000, \"mm\"),\n    height: new Css.Numeric(1414, \"mm\"),\n  },\n  c10: { width: new Css.Numeric(28, \"mm\"), height: new Css.Numeric(40, \"mm\") },\n  c9: { width: new Css.Numeric(40, \"mm\"), height: new Css.Numeric(57, \"mm\") },\n  c8: { width: new Css.Numeric(57, \"mm\"), height: new Css.Numeric(81, \"mm\") },\n  c7: { width: new Css.Numeric(81, \"mm\"), height: new Css.Numeric(114, \"mm\") },\n  c6: { width: new Css.Numeric(114, \"mm\"), height: new Css.Numeric(162, \"mm\") },\n  c5: { width: new Css.Numeric(162, \"mm\"), height: new Css.Numeric(229, \"mm\") },\n  c4: { width: new Css.Numeric(229, \"mm\"), height: new Css.Numeric(324, \"mm\") },\n  c3: { width: new Css.Numeric(324, \"mm\"), height: new Css.Numeric(458, \"mm\") },\n  c2: { width: new Css.Numeric(458, \"mm\"), height: new Css.Numeric(648, \"mm\") },\n  c1: { width: new Css.Numeric(648, \"mm\"), height: new Css.Numeric(917, \"mm\") },\n  c0: {\n    width: new Css.Numeric(917, \"mm\"),\n    height: new Css.Numeric(1297, \"mm\"),\n  },\n  \"jis-b10\": {\n    width: new Css.Numeric(32, \"mm\"),\n    height: new Css.Numeric(45, \"mm\"),\n  },\n  \"jis-b9\": {\n    width: new Css.Numeric(45, \"mm\"),\n    height: new Css.Numeric(64, \"mm\"),\n  },\n  \"jis-b8\": {\n    width: new Css.Numeric(64, \"mm\"),\n    height: new Css.Numeric(91, \"mm\"),\n  },\n  \"jis-b7\": {\n    width: new Css.Numeric(91, \"mm\"),\n    height: new Css.Numeric(128, \"mm\"),\n  },\n  \"jis-b6\": {\n    width: new Css.Numeric(128, \"mm\"),\n    height: new Css.Numeric(182, \"mm\"),\n  },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  \"jis-b3\": {\n    width: new Css.Numeric(364, \"mm\"),\n    height: new Css.Numeric(515, \"mm\"),\n  },\n  \"jis-b2\": {\n    width: new Css.Numeric(515, \"mm\"),\n    height: new Css.Numeric(728, \"mm\"),\n  },\n  \"jis-b1\": {\n    width: new Css.Numeric(728, \"mm\"),\n    height: new Css.Numeric(1030, \"mm\"),\n  },\n  \"jis-b0\": {\n    width: new Css.Numeric(1030, \"mm\"),\n    height: new Css.Numeric(1456, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n  cropOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n    cropOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marks = style[\"marks\"];\n  const bleed = style[\"bleed\"];\n  if (!bleed || bleed.value === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks) {\n      let hasCrop = false;\n      if (marks.value.isSpaceList()) {\n        hasCrop = (marks.value as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks.value === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.value && bleed.value.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed.value as Css.Numeric;\n  }\n\n  // crop-offset (Issue #913)\n  const cropOffset = style[\"crop-offset\"];\n  if (!cropOffset || cropOffset.value === Css.ident.auto) {\n    if (marks && marks.value !== Css.ident.none) {\n      pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n    }\n  } else if (cropOffset.value && cropOffset.value.isNumeric()) {\n    pageSizeAndBleed.cropOffset = cropOffset.value as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    Math.max(0, pageSizeAndBleed.bleed.num) *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    !pageSizeAndBleed.cropOffset.num && pageSizeAndBleed.bleedOffset.num\n      ? pageSizeAndBleed.bleedOffset.num *\n        context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false)\n      : pageSizeAndBleed.cropOffset.num *\n          context.queryUnitSize(pageSizeAndBleed.cropOffset.unit, false) -\n        bleed;\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\"stroke\", \"#010101\");\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"];\n  if (marks) {\n    const value = marks.value;\n    if (value.isSpaceList()) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  if (bleed) {\n    const bgcolor = cascadedPageStyle[\"background-color\"];\n    if (bgcolor && bgcolor.value) {\n      page.bleedBox.style.backgroundColor = bgcolor.value.stringValue();\n    }\n  }\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Math.max(\n    0,\n    evaluatedPageSizeAndBleed.bleedOffset -\n      Css.toNumber(defaultPrinterMarkLineLength, context),\n  );\n  const lineLength = evaluatedPageSizeAndBleed.bleedOffset - printerMarkOffset;\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (val && val.value !== Css.ident.inherit) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    this.hasAutoSize_ = !PageMaster.toExprAuto(\n      scope,\n      style[isHorizontal ? \"width\" : \"height\"],\n      new Exprs.Numeric(scope, 0, \"px\"),\n    );\n  }\n\n  /**\n   *  @override\n   */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /**\n   * @override\n   */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return false;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n    style[startSide] = new Css.Expr(marginStart);\n    style[endSide] = new Css.Expr(marginEnd);\n    style[`margin-${startSide}`] = Css.numericZero;\n    style[`margin-${endSide}`] = Css.numericZero;\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n    style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n    page.pageAreaElement = container.element as HTMLElement;\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(\n        element,\n        \"flex-flow\",\n        this.vertical ? \"row\" : \"column\",\n      );\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n      if (this.vertical) {\n        let align = \"center\";\n        if (this.boxInfo.isInTopRow || this.boxInfo.isInBottomRow) {\n          if (\n            this.boxInfo.isInLeftColumn ||\n            this.boxInfo.positionAlongVariableDimension ===\n              MarginBoxPositionAlongVariableDimension.END\n          ) {\n            align = \"start\";\n          } else if (\n            this.boxInfo.isInRightColumn ||\n            this.boxInfo.positionAlongVariableDimension ===\n              MarginBoxPositionAlongVariableDimension.START\n          ) {\n            align = \"end\";\n          }\n        }\n        Base.setCSSProperty(element, \"align-items\", align);\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(context: Exprs.Context): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(pageType: string): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], pageType, style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop];\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size = style[\"size\"];\n    if (size) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      pageMasterStyle[\"width\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"width\"],\n        new CssCascade.CascadeValue(pageSize.width, priority),\n      );\n      pageMasterStyle[\"height\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"height\"],\n        new CssCascade.CascadeValue(pageSize.height, priority),\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsBlankPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const blankPage = new Exprs.Named(this.scope, \"blank-page\");\n    if (blankPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, parent?.condition, parent, null, validatorSet, false);\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"blank\":\n          this.chain.push(new IsBlankPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        let result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(props, n, noPageSelectorProps[n]);\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          const prevCascVal = CssCascade.getProp(props, name);\n          result = prevCascVal\n            ? CssCascade.cascadeValues(null, result, prevCascVal)\n            : result;\n          CssCascade.setProp(props, name, result);\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  /**\n   * @override\n   */\n  makeApplyRuleAction(specificity: number): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n","/**\n * Copyright 2022 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Scripts - Supports JavaScript in source document.\n */\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Task from \"./task\";\nimport * as Logging from \"./logging\";\nimport * as TaskUtil from \"./task-util\";\n\n/**\n * Enable or disable JavaScript in html support\n */\nexport let allowScripts = true;\nexport function setAllowScripts(value: boolean): void {\n  allowScripts = value;\n}\n\nconst deferredScripts: HTMLScriptElement[] = [];\n\nfunction sameScripts(s1: HTMLScriptElement, s2: HTMLScriptElement): boolean {\n  return (\n    s1 === s2 ||\n    (s1.src || s2.src ? s1.src === s2.src : s1.textContent === s2.textContent)\n  );\n}\n\nfunction getScriptsInOrNearHead(document: Document): HTMLScriptElement[] {\n  // To support Chrome < 88 and Firefox < 84, we cannot use\n  // the selector \"body > script:not(:not(script, link, style) ~ *)\".\n  // (Issue #919)\n  const scriptsInBodyNotNearHead = Array.from(\n    document.querySelectorAll(\n      \"body > :not(script):not(link):not(style) ~ script\",\n    ),\n  ) as HTMLScriptElement[];\n  return (\n    Array.from(\n      document.querySelectorAll(\"head > script, body > script\"),\n    ) as HTMLScriptElement[]\n  ).filter((script) => !scriptsInBodyNotNearHead.includes(script));\n}\n\nexport function loadScript(\n  srcScriptElem: HTMLScriptElement,\n  window: Window,\n  flags?: { inHead?: boolean; atEnd?: boolean; forceDefer?: boolean },\n): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  if (\n    !flags?.inHead &&\n    !flags?.atEnd &&\n    getScriptsInOrNearHead(srcScriptElem.ownerDocument).includes(srcScriptElem)\n  ) {\n    // The script elements at beginning of body have already been processed.\n    return Task.newResult(false);\n  }\n\n  const scriptContent = srcScriptElem.textContent;\n  const src = srcScriptElem.src;\n  const isModule = srcScriptElem.type === \"module\";\n  const async = (isModule || src) && srcScriptElem.async;\n  const defer = (isModule && !async) || (src && srcScriptElem.defer);\n  const needDefer = !flags?.atEnd && (flags?.forceDefer || defer || async);\n\n  if (!hasScripts(window)) {\n    // `window.onload = startViewer`, which was set by vivliostyle-viewer,\n    // has to be unset to prevent `startViewer` restarting because of\n    // `window.dispatchEvent(new Event(\"load\"))` in `loadScriptsAtEnd()`.\n    window.onload = null;\n  }\n\n  if (needDefer) {\n    if (!deferredScripts.some((s) => sameScripts(s, srcScriptElem))) {\n      deferredScripts.push(srcScriptElem);\n    }\n    return Task.newResult(true);\n  }\n\n  if (src.includes(\"/mathjax\")) {\n    const builtinMathJax2 = window.document.head.querySelector(\n      \"script[src*='MathJax.js']:not([data-vivliostyle-scripting])\",\n    );\n    if (builtinMathJax2) {\n      if (src.includes(\"/mathjax@3\")) {\n        // Remove the builtin MathJax 2 when MathJax 3 is specified\n        window.document.head.removeChild(builtinMathJax2);\n        if (window[\"MathJax\"]?.version?.startsWith(\"2.\")) {\n          delete window[\"MathJax\"];\n        }\n      } else if (src.includes(\"/MathJax.js\")) {\n        // Ignore the specified MathJax 2, and use the builtin MathJax 2\n        return Task.newResult(true);\n      }\n    }\n  }\n\n  for (const s of window.document.head.getElementsByTagName(\"script\")) {\n    if (\n      s.hasAttribute(\"data-vivliostyle-scripting\") &&\n      sameScripts(s, srcScriptElem)\n    ) {\n      // If same script is already loaded, remove the already loaded one before load the new one.\n      window.document.head.removeChild(s);\n    }\n  }\n\n  const scriptElem = window.document.createElement(\"script\");\n  scriptElem.textContent = scriptContent;\n  if (src) {\n    scriptElem.src = src;\n  }\n  scriptElem.async = async;\n  scriptElem.defer = defer;\n  scriptElem.setAttribute(\"data-vivliostyle-scripting\", \"true\");\n\n  for (const attr of srcScriptElem.attributes) {\n    if (![\"src\", \"async\", \"defer\"].includes(attr.name)) {\n      scriptElem.setAttribute(attr.name, attr.value);\n    }\n  }\n  Logging.logger.debug(\"script:\", src);\n  if (!src) {\n    window.document.head.appendChild(scriptElem);\n    return Task.newResult(true);\n  } else {\n    const fetcher = TaskUtil.loadElement(scriptElem);\n    window.document.head.appendChild(scriptElem);\n    return TaskUtil.waitForFetchers([fetcher]);\n  }\n}\n\nfunction getAllFontFamilyList(\n  srcDocument: Document,\n  styler: CssStyler.Styler,\n): string {\n  const fontFamilySet = {};\n  const findFontFamilyInStyle = (style: any): void => {\n    const fontFamily = style[\"font-family\"]?.value;\n    if (fontFamily) {\n      if (fontFamily.values) {\n        for (const family1 of fontFamily.values) {\n          fontFamilySet[family1.stringValue()] = true;\n        }\n      } else {\n        fontFamilySet[fontFamily.stringValue()] = true;\n      }\n    }\n    const marginBoxes = style[\"_marginBoxes\"];\n    if (marginBoxes) {\n      for (const marginBoxStyle of Object.values(marginBoxes)) {\n        findFontFamilyInStyle(marginBoxStyle);\n      }\n    }\n  };\n  const findAllFontFamily = (arg: any): void => {\n    if (arg instanceof CssCascade.ApplyRuleAction) {\n      findFontFamilyInStyle(arg.style);\n    } else if (arg instanceof CssCascade.CascadeAction || Array.isArray(arg)) {\n      for (const v of Object.values(arg)) {\n        findAllFontFamily(v);\n      }\n    }\n  };\n  // Find all font-family values in stylesheets.\n  for (const obj of Object.values(styler.cascade.code)) {\n    for (const arg of Object.values(obj ?? {})) {\n      findAllFontFamily(arg);\n    }\n  }\n  // Find all font-family values in inline style.\n  for (const elem of srcDocument.querySelectorAll(\"[style]\")) {\n    if (elem instanceof HTMLElement && elem.style.fontFamily) {\n      fontFamilySet[elem.style.fontFamily] = true;\n    }\n  }\n  return Object.keys(fontFamilySet).join(\",\");\n}\n\nfunction prepareTextContentForWebFonts(\n  srcDocument: Document,\n  window: Window,\n  styler: CssStyler.Styler,\n): HTMLElement {\n  const textContentDiv: HTMLElement =\n    window.document.querySelector(\"[data-vivliostyle-textcontent]\") ??\n    window.document.createElement(\"div\");\n  textContentDiv.style.position = \"fixed\";\n  textContentDiv.style.fontSize = \"0\";\n  textContentDiv.setAttribute(\"data-vivliostyle-textcontent\", \"true\");\n  textContentDiv.setAttribute(\"aria-hidden\", \"true\");\n  textContentDiv.style.fontFamily = getAllFontFamilyList(srcDocument, styler);\n  textContentDiv.textContent = srcDocument.documentElement.textContent;\n  window.document.body.appendChild(textContentDiv);\n  return textContentDiv;\n}\n\nexport function loadScriptsInHead(\n  srcDocument: Document,\n  window: Window,\n  styler: CssStyler.Styler,\n): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  // Process script elements in head and also beginning of body\n  const srcScripts: HTMLScriptElement[] = getScriptsInOrNearHead(srcDocument);\n  if (srcScripts.length === 0) {\n    return Task.newResult(false);\n  }\n  const needPrepareForWebFonts = srcScripts.some(\n    (s) => !(s.async || s.defer || s.type === \"module\"),\n  );\n\n  // Web fonts needs text content of the document\n  const textContentDiv = needPrepareForWebFonts\n    ? prepareTextContentForWebFonts(srcDocument, window, styler)\n    : null;\n  const fonts = window.document.fonts; // FontFaceSet\n  const savedDollar = window[\"$\"];\n  let forceDefer = false;\n  const frame: Task.Frame<boolean> = Task.newFrame(\"loadScripts\");\n  frame\n    .loop(() => {\n      if (srcScripts.length === 0) {\n        if (!needPrepareForWebFonts) {\n          return Task.newResult(false); // break\n        }\n        return frame.sleep(20).thenAsync(() => {\n          if (\n            fonts.status === \"loading\" ||\n            // for Typekit Web Font Loader (Adobe Fonts)\n            window.document.documentElement.classList.contains(\"wf-loading\") ||\n            // For DynaFont\n            // FIXME: checking the global variable `ret` set in https://dfo.dynacw.co.jp/JSDynaFont/DynaFont.js\n            // would be not very good, because it seems to have been made global by mistake.\n            (window[\"FontJSON\"]?.Font &&\n              window[\"ret\"]?.readyState &&\n              window[\"ret\"].readyState < 4)\n          ) {\n            return Task.newResult(true); // continue\n          }\n          return Task.newResult(false); // break\n        });\n      }\n      const srcScriptElem = srcScripts.shift();\n      return loadScript(srcScriptElem, window, {\n        inHead: true,\n        forceDefer,\n      }).thenAsync(() => {\n        if (!forceDefer && window[\"$\"] !== savedDollar) {\n          // jQuery `$(…)` does not work before document is loaded, so need to defer\n          deferredScripts.push(srcScriptElem);\n          forceDefer = true;\n        }\n        if (srcScripts.length === 0) {\n          if (needPrepareForWebFonts) {\n            // Some web font loaders (DynaFont, FONTPLUS) need DOMContentLoaded event\n            Logging.logger.debug(\"dispatchEvent: DOMContentLoaded (document)\");\n            window.document.dispatchEvent(new Event(\"DOMContentLoaded\"));\n          }\n        }\n        return Task.newResult(true); // continue\n      });\n    })\n    .then(() => {\n      if (textContentDiv) {\n        textContentDiv.remove();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function loadScriptsAtEnd(window: Window): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  const frame: Task.Frame<boolean> = Task.newFrame(\"loadScripts\");\n  frame\n    .loop(() => {\n      if (deferredScripts.length === 0) {\n        return Task.newResult(false);\n      }\n      return loadScript(deferredScripts.shift(), window, {\n        atEnd: true,\n      }).thenReturn(deferredScripts.length > 0);\n    })\n    .then(() => {\n      Logging.logger.debug(\"dispatchEvent: DOMContentLoaded (window)\");\n      window.dispatchEvent(new Event(\"DOMContentLoaded\"));\n      Logging.logger.debug(\"dispatchEvent: load (window)\");\n      window.dispatchEvent(new Event(\"load\"));\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function hasScripts(window: Window) {\n  if (!allowScripts) {\n    return false;\n  }\n  return (\n    deferredScripts.length > 0 ||\n    !!window.document.head.querySelector(\"script[data-vivliostyle-scripting]\")\n  );\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap = {};\n\nexport const frontEdgeBlackListHor: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-top\": \"0px\",\n  \"padding-top\": \"0px\",\n  \"border-top-width\": \"0px\",\n  \"border-top-style\": \"none\",\n  \"border-top-color\": \"transparent\",\n  \"border-top-left-radius\": \"0px\",\n  \"border-top-right-radius\": \"0px\",\n};\n\nexport const frontEdgeBlackListVert: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-right\": \"0px\",\n  \"padding-right\": \"0px\",\n  \"border-right-width\": \"0px\",\n  \"border-right-style\": \"none\",\n  \"border-right-color\": \"transparent\",\n  \"border-top-right-radius\": \"0px\",\n  \"border-bottom-right-radius\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListHor: { [key: string]: string } = {\n  \"margin-top\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListVert: { [key: string]: string } = {\n  \"margin-right\": \"0px\",\n};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext\n{\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /**\n   * @override\n   */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"];\n          if (\n            !content ||\n            content === Css.ident.normal ||\n            content === Css.ident.none\n          ) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle = (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createRefShadow\");\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createShadows\");\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (templateURLVal instanceof Css.URL) {\n      const url = (templateURLVal as Css.URL).url;\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n      });\n      cont2.then((shadow) => {\n        shadow = this.createPseudoelementShadow(\n          element,\n          isRoot,\n          cascStyle,\n          computedStyle,\n          styler,\n          context,\n          shadowContext,\n          shadow,\n        );\n        frame.finish(shadow);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      (name, cascVal) => {\n        let value = cascVal.evaluate(context, name);\n        if (name == \"font-family\") {\n          value = this.docFaces.filterFontFamily(value);\n        }\n        return value;\n      },\n    );\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"] as Css.Ident;\n    const displayValues = Display.getComputedDislayValue(\n      (computedStyle[\"display\"] as Css.Ident) || Css.ident.inline,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(elementStyle: CssCascade.ElementStyle): {\n    lang: string | null;\n    elementStyle: CssCascade.ElementStyle;\n  } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.isRelativeRootFontSize\n      ? this.context.initialFontSize // Fix for issue #549\n      : this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const value = CssCascade.getProp(style, name);\n        if (value.value !== Css.ident.inherit) {\n          props[name] = value.filterValue(inheritanceVisitor);\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps =\n      CssCascade.getPolyfilledInheritedProps().filter(\n        (name) => computedStyle[name],\n      );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n            }\n          } else {\n            props[name] = value;\n          }\n          delete computedStyle[name];\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Ident,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? (this.nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const floatReference =\n      elementStyle[\"float-reference\"] &&\n      PageFloats.floatReferenceOf(\n        elementStyle[\"float-reference\"].value.toString(),\n      );\n    if (\n      this.nodeContext.parent &&\n      floatReference &&\n      PageFloats.isPageFloat(floatReference)\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    styler.processContent(element, computedStyle);\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    if (Scripts.allowScripts && element instanceof HTMLScriptElement) {\n      Scripts.loadScript(element, this.viewport.window).thenFinish(frame);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"];\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext as Vtree.ShadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"];\n      let floatSide = computedStyle[\"float\"];\n      let clearSide = computedStyle[\"clear\"];\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"],\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute =\n        Display.establishesCBForAbsolute(position);\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      if (\n        floating ||\n        (computedStyle[\"break-inside\"] &&\n          computedStyle[\"break-inside\"] !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      this.nodeContext.floatMinWrapBlock =\n        computedStyle[\"float-min-wrap-block\"] || null;\n      this.nodeContext.columnSpan = computedStyle[\"column-span\"];\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (breakAfter) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (breakBefore) {\n          this.nodeContext.breakBefore = breakBefore.toString();\n        }\n        // Named page type\n        let pageType = computedStyle[\"page\"]?.toString() || null;\n        if (!pageType || pageType.toLowerCase() === \"auto\") {\n          pageType = this.nodeContext.pageType;\n        } else {\n          this.nodeContext.pageType = pageType;\n        }\n        if (this.styler.cascade.currentPageType !== pageType) {\n          if (!this.isAtForcedBreak()) {\n            this.nodeContext.breakBefore = \"page\";\n          }\n          this.styler.cascade.previousPageType =\n            this.styler.cascade.currentPageType;\n          this.styler.cascade.currentPageType = pageType;\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing;\n        let blockBorderSpacing;\n        if (borderSpacing) {\n          if (borderSpacing.isSpaceList()) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      this.nodeContext.footnotePolicy = computedStyle[\"footnote-policy\"];\n      const firstPseudo = computedStyle[\"x-first-pseudo\"];\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter !== Css.ident.auto) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const lineBreak = computedStyle[\"line-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"];\n      this.nodeContext.breakWord =\n        wordBreak === Css.ident.break_all ||\n        lineBreak === Css.ident.anywhere ||\n        overflowWrap === Css.ident.break_word ||\n        overflowWrap === Css.ident.anywhere;\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak =\n          this.processRepeatOnBreak(computedStyle);\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (\n            elementStyle[\"content\"] &&\n            elementStyle[\"content\"].value &&\n            elementStyle[\"content\"].value.url\n          ) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.NCX) {\n        ns = Base.NS.XHTML;\n        if (tag == \"ncx\" || tag == \"navPoint\") {\n          tag = \"div\";\n        } else if (tag == \"navLabel\") {\n          // Cheat here. Translate source to HTML, so it will plug\n          // in into the rest of the pipeline.\n          tag = \"span\";\n          const navParent = element.parentNode;\n          if (navParent) {\n            // find the content element\n            let href: string | null = null;\n            for (let c: Node = navParent.firstChild; c; c = c.nextSibling) {\n              if (c.nodeType != 1) {\n                continue;\n              }\n              const childElement = c as Element;\n              if (\n                childElement.namespaceURI == Base.NS.NCX &&\n                childElement.localName == \"content\"\n              ) {\n                href = childElement.getAttribute(\"src\");\n                break;\n              }\n            }\n            if (href) {\n              tag = \"a\";\n              element = element.ownerDocument.createElementNS(ns, \"a\");\n              element.setAttribute(\"href\", href);\n            }\n          }\n        } else {\n          tag = \"span\";\n        }\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else if (computedStyle[\"display\"] === Css.ident.none) {\n          // No element should be created if display:none is set.\n          // (Fix issue #924)\n          frame.finish(false);\n          return;\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (!Scripts.allowScripts && attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                const transformedValue =\n                  this.documentURLTransformer.transformFragment(\n                    attributeValue,\n                    this.xmldoc.url,\n                  );\n                if (\n                  Scripts.allowScripts &&\n                  !(\n                    result.namespaceURI === Base.NS.SVG &&\n                    result.localName !== \"svg\"\n                  ) &&\n                  !result.ownerDocument.getElementById(attributeValue)\n                ) {\n                  // Keep original id value so that JavaScript can manipulate it\n                  result.setAttribute(attributeName, attributeValue);\n                  result.setAttribute(\"data-vivliostyle-id\", transformedValue);\n\n                  // Create an anchor element with transformed id, necessary for internal links in output PDF\n                  // (issue #877)\n                  const anchorElem = result.ownerDocument.createElement(\"a\");\n                  anchorElem.setAttribute(attributeName, transformedValue);\n                  anchorElem.style.position = \"absolute\";\n                  result.appendChild(anchorElem);\n                } else {\n                  result.setAttribute(attributeName, transformedValue);\n                }\n                this.page.registerElementWithId(result, transformedValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = TaskUtil.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.resolveURL(attributeValue);\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(\n              TaskUtil.loadElement(result, attributeValue),\n            );\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              try {\n                result.setAttribute(attributeName, attributeValue);\n              } catch (err) {\n                Logging.logger.warn(err);\n              }\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = TaskUtil.loadElement(image, delayedSrc);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          if (!hasAutoWidth && !hasAutoHeight) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(TaskUtil.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n        if (!this.nodeContext.inline) {\n          let blackList: { [key: string]: string } = null;\n          if (!firstTime) {\n            if (\n              this.nodeContext.inheritedProps[\"box-decoration-break\"] !==\n              \"clone\"\n            ) {\n              blackList = this.nodeContext.vertical\n                ? frontEdgeBlackListVert\n                : frontEdgeBlackListHor;\n            } else {\n              // When box-decoration-break: clone, cloned margins are always\n              // truncated to zero.\n              blackList = this.nodeContext.vertical\n                ? frontEdgeUnforcedBreakBlackListVert\n                : frontEdgeUnforcedBreakBlackListHor;\n            }\n          } else if (atUnforcedBreak && !this.isAtForcedBreak()) {\n            blackList = this.nodeContext.vertical\n              ? frontEdgeUnforcedBreakBlackListVert\n              : frontEdgeUnforcedBreakBlackListHor;\n          }\n          if (blackList) {\n            for (const propName in blackList) {\n              // Fix for issue #737\n              if (propName === \"text-indent\" && !this.isParagraph(element)) {\n                continue;\n              }\n              Base.setCSSProperty(result, propName, blackList[propName]);\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  private isParagraph(element: Element): boolean {\n    switch (element.localName) {\n      case \"p\":\n        return true;\n      case \"html\":\n      case \"body\":\n      case \"main\":\n      case \"article\":\n      case \"section\":\n        return false;\n    }\n    const textLevelElements = {\n      a: true,\n      abbr: true,\n      b: true,\n      bdi: true,\n      bdo: true,\n      cite: true,\n      code: true,\n      data: true,\n      del: true,\n      dfn: true,\n      em: true,\n      i: true,\n      ins: true,\n      kbd: true,\n      mark: true,\n      q: true,\n      ruby: true,\n      s: true,\n      samp: true,\n      small: true,\n      span: true,\n      strong: true,\n      sub: true,\n      sup: true,\n      time: true,\n      u: true,\n      var: true,\n    };\n    for (\n      let childNode = element.firstChild;\n      childNode;\n      childNode = childNode.nextSibling\n    ) {\n      switch (childNode.nodeType) {\n        case Node.TEXT_NODE:\n          if (childNode.nodeValue.trim().length > 0) {\n            return true;\n          }\n          break;\n        case Node.ELEMENT_NODE:\n          if (textLevelElements[(childNode as Element).localName]) {\n            return true;\n          }\n          break;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the current position is at a forced break\n   * (Fix for Issue #690)\n   */\n  private isAtForcedBreak(): boolean {\n    for (\n      let nodeContext = this.nodeContext;\n      nodeContext && !nodeContext.after;\n      nodeContext = nodeContext.parent\n    ) {\n      if (Break.isForcedBreakValue(nodeContext.breakBefore)) {\n        return true;\n      }\n      if (\n        nodeContext.parent &&\n        (nodeContext.parent.sourceNode as Element).firstElementChild !==\n          nodeContext.sourceNode\n      ) {\n        break;\n      }\n    }\n    return false;\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  /**\n   * @return isSVGUrlAttribute\n   */\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext =\n        new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n          parentFormattingContext,\n          this.nodeContext.sourceNode as Element,\n        );\n      (\n        this.nodeContext\n          .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n      ).initializeRepetitiveElements(this.nodeContext.vertical);\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (repeatOnBreak === Css.ident.auto) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const parent = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : this.viewRoot;\n        if (parent) {\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      (pos.sourceNode as Element).namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    const contentShadow = shadow.subShadow || shadow.parentShadow;\n    if (shadow.subShadow) {\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /**\n   * @override\n   */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(TaskUtil.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    const isRoot =\n      this.nodeContext?.parent === null &&\n      this.sourceNode?.parentElement === null &&\n      !!this.viewRoot?.parentElement;\n\n    for (const propName in computedStyle) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      if (!value || value === Css.empty) {\n        continue;\n      }\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value.isNumeric() &&\n        Exprs.needUnitConversion((value as Css.Numeric).unit)\n      ) {\n        // font-size for the root element is already converted to px\n        value = Css.convertNumericToPx(value, this.context);\n      }\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      if (target.localName === \"rt\" && propName === \"font-size\") {\n        // Fix for Issue #673\n        if (this.fixRubyTextFontSize(target, value)) {\n          continue;\n        }\n      }\n      if (\n        isRoot &&\n        this.page.pageAreaElement &&\n        CssCascade.isInherited(propName)\n      ) {\n        // Fix for Issue #568\n        Base.setCSSProperty(\n          this.page.pageAreaElement.parentElement,\n          propName,\n          value.toString(),\n        );\n      } else {\n        Base.setCSSProperty(target, propName, value.toString());\n      }\n    }\n  }\n\n  /**\n   * Fix ruby text font size.\n   * Issue #673: Minimum font size setting in Chrome causes ruby font size problem\n   * @param target the rt element\n   * @param value the font-size value\n   * @returns true if the font-size fix is done\n   */\n  fixRubyTextFontSize(target: Element, value: Css.Val): boolean {\n    if (!/Chrome/.test(navigator.userAgent)) {\n      // Do nothing if the browser engine is not \"Chrome\"\n      return false;\n    }\n    if (!value.isNumeric()) {\n      return false;\n    }\n    const numeric = value as Css.Numeric;\n    let fontSizeInPx: number;\n    if (numeric.unit === \"%\" || numeric.unit === \"em\") {\n      const parentElem = this.nodeContext?.parent?.viewNode as Element;\n      const parentFontSize =\n        parentElem &&\n        parseFloat(this.viewport.window.getComputedStyle(parentElem).fontSize);\n      fontSizeInPx =\n        (parentFontSize * numeric.num) / (numeric.unit === \"%\" ? 100 : 1);\n    } else {\n      fontSizeInPx = Css.convertNumericToPx(numeric, this.context).num;\n    }\n    if (!fontSizeInPx) {\n      return false;\n    }\n    const minFontSizeInPx = 10; // Default minimum font size setting in Chrome\n    if (fontSizeInPx >= minFontSizeInPx) {\n      return false;\n    }\n    if (!(target instanceof HTMLElement && \"zoom\" in target.style)) {\n      return false;\n    }\n    const zoom = fontSizeInPx / minFontSizeInPx;\n    Base.setCSSProperty(target, \"font-size\", `${minFontSizeInPx}px`);\n    Base.setCSSProperty(target, \"zoom\", `${zoom}`);\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /**\n   * @override\n   */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /**\n   * @override\n   */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /**\n   * @override\n   */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    if (nodeContext) {\n      nodeContext.walkUpBlocks((block) => {\n        const boxDecorationBreak = block.inheritedProps[\"box-decoration-break\"];\n        if (!boxDecorationBreak || boxDecorationBreak === \"slice\") {\n          const elem = block.viewNode as Element;\n          Asserts.assert(elem instanceof Element);\n          if (block.vertical) {\n            Base.setCSSProperty(elem, \"padding-left\", \"0\");\n            Base.setCSSProperty(elem, \"border-left\", \"none\");\n            Base.setCSSProperty(elem, \"border-top-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n          } else {\n            Base.setCSSProperty(elem, \"padding-bottom\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom\", \"none\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-right-radius\", \"0\");\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /**\n   * @override\n   */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"box-decoration-break\": true,\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  page: true,\n};\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /**\n   * @override\n   */\n  getRangeClientRects(range: Range): Vtree.ClientRect[] {\n    const rects = range.getClientRects();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.subtractOffsets(rect, layoutBoxRect),\n    );\n  }\n\n  /**\n   * @override\n   */\n  getElementClientRect(element: Element): Vtree.ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    if (\n      rect.left === 0 &&\n      rect.top === 0 &&\n      rect.right === 0 &&\n      rect.bottom === 0\n    ) {\n      // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n      // (Fix for issue #802)\n      return rect;\n    }\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.subtractOffsets(rect, layoutBoxRect);\n  }\n\n  /**\n   * @override\n   */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: Element;\n  width: number;\n  height: number;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n    let outerZoomBox = this.root.firstElementChild;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n    let layoutBox = outerZoomBox.nextElementSibling;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox as HTMLElement;\n    this.contentContainer = contentContainer as HTMLElement;\n    this.layoutBox = layoutBox as HTMLElement;\n    const clientLayout = new DefaultClientLayout(this);\n    const computedStyle = clientLayout.getElementComputedStyle(this.root);\n    this.width =\n      opt_width || parseFloat(computedStyle[\"width\"]) || window.innerWidth;\n    this.height =\n      opt_height || parseFloat(computedStyle[\"height\"]) || window.innerHeight;\n\n    // Use the fallbackPageSize if window size is 0 or browser is in headless mode.\n    const fallbackPageSize = {\n      // compromise between A4 (210mm 297mm) and letter (8.5in 11in)\n      width: 794, // 210mm (8.27in)\n      height: 1056, // 279.4mm (11in)\n    };\n    const isHeadlessBrowser =\n      (!window.outerWidth && !window.outerHeight) ||\n      /Headless/.test(navigator.userAgent) ||\n      (navigator.webdriver &&\n        window.innerWidth === 800 &&\n        window.innerHeight === 600);\n\n    if (!this.width || (!opt_width && isHeadlessBrowser)) {\n      this.width = fallbackPageSize.width;\n    }\n    if (!this.height || (!opt_height && isHeadlessBrowser)) {\n      this.height = fallbackPageSize.height;\n    }\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n    Base.setCSSProperty(this.contentContainer, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.Response): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.Response,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.XMLHttpRequestResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as TextPolyfill from \"./text-polyfill\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> =\n  new TaskUtil.Fetcher(() => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  }, \"uaStylesheetBaseFetcher\");\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n    this.pageScope.defineName(\n      \"blank-page\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          const cp = styleInstance.currentLayoutPosition;\n          return cp?.isBlankPage;\n        },\n        \"blank-page\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"];\n      const height = viewportProps[\"height\"];\n      const textZoom = viewportProps[\"text-zoom\"];\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer\n{\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n\n    // Named page type at first page\n    this.styler.cascade.currentPageType = this.styler.cascade.firstPageType;\n\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).then(() => {\n      // JavaScript in HTML documents support\n      Scripts.loadScriptsInHead(\n        this.xmldoc.document,\n        this.viewport.window,\n        this.styler,\n      ).thenFinish(frame);\n    });\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    if (!pageProps[\"\"]) {\n      pageProps[\"\"] = {};\n    }\n    Object.keys(pageProps).forEach((selector) => {\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageProps[selector] as any),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /**\n   * @override\n   */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /**\n   * @override\n   */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /**\n   * @override\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  /**\n   * @override\n   */\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    if (isFunc) {\n      if (name === \"selector\") {\n        // TODO: `@supports selector(...)`\n      }\n      return false;\n    }\n    if (!name) {\n      // `(...)` without `name:`\n      return false;\n    }\n\n    let supported = true;\n\n    class SupportsReceiver implements CssValidator.PropertyReceiver {\n      unknownProperty(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      invalidPropertyValue(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      simpleProperty(name: string, value: Css.Val, important): void {}\n    }\n\n    const supportsReceiver = new SupportsReceiver();\n    const val = CssParser.parseValue(\n      this.style.rootScope,\n      new CssTokenizer.Tokenizer(value, null),\n      \"\",\n    );\n    if (!val) {\n      return false;\n    }\n    const validatorSet = (this.xmldoc.store as OPSDocStore).validatorSet;\n    validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      val,\n      false,\n      supportsReceiver,\n    );\n    return supported;\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = Break.startSideValueToBreakValue(\n            flowPos.startSide,\n          );\n          flowPos.startSide = Break.breakValueToStartSideValue(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          const size = cascadedPageStyle[\"size\"];\n          cascadedPageStyle = {}; // clear margin boxes\n          if (size) {\n            // Restore page size (fix for issue #743)\n            cascadedPageStyle[\"size\"] = size;\n          }\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition =\n        this.layoutPositionAtPageStart.flowPositions[parentFlowName];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startSide);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats. (Issue #681)\n    const checkPageFloatForLaterPage = (\n      float: PageFloats.PageFloat,\n    ): boolean => {\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      const deferredFloatOffset = this.xmldoc.getNodeOffset(\n        float.nodePosition.steps[0].node,\n        0,\n        false,\n      );\n      return (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      );\n    };\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n\n        // Prevent deferred page floats from appearing in the preceding pages\n        // (Issue #681)\n        if (checkPageFloatForLaterPage(float)) {\n          loopFrame.breakLoop();\n          return;\n        }\n\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(float);\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated =\n              pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startSide)) {\n      return Task.newResult(true);\n    }\n    flowPosition.startSide = \"any\";\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition =\n                    this.getLastAfterPositionIfDeferredFloatsExists(\n                      column,\n                      newPosition,\n                    );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    if (column.pageBreakType) {\n                      // forced break\n                      flowPosition.startSide = Break.breakValueToStartSideValue(\n                        column.pageBreakType,\n                      );\n                    }\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint =\n      this.counterStore.createLayoutConstraint(pageIndex);\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            const outerWidth = parseFloat(\n              (boxContainer as HTMLElement).style.width,\n            );\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft + outerWidth - layoutContainer.width,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if (column.width >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition =\n        this.currentLayoutPosition.flowPositions[flowNameStr];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> =\n      Task.newFrame(\"layoutFlowColumns\");\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n\n    if (\n      boxInstance instanceof CssPage.PageRuleMasterInstance &&\n      (layoutContainer.width <= 0 || layoutContainer.height <= 0)\n    ) {\n      throw new Error(\"Negative or zero page area size\");\n    }\n\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer =\n          this.viewport.document.createElement(innerContainerTag);\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSinglUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n        if (innerContainerTag == \"span\") {\n          // text-spacing & hanging-punctuation on margin boxes\n          TextPolyfill.processGeneratedContent(\n            innerContainer,\n            boxInstance.getProp(this, \"text-spacing\"),\n            boxInstance.getProp(this, \"hanging-punctuation\"),\n            this.lang,\n            boxInstance.vertical,\n          );\n        }\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition =\n            this.currentLayoutPosition.flowPositions[flowNameStr];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n\n          // Though it seems that LShapeFloatBug still exists in Firefox, it\n          // apparently does not occur on exclusion floats. See the test file:\n          // test/files/column-break-bug.html\n          // if (Base.checkLShapeFloatBug(this.viewport.root)) {\n          // \t// Simplistic bug workaround: add a copy of the shape translated up.\n          //     exclusions.push(outerShape.withOffset(0, -1.25 * this.queryUnitSize(\"em\", false)));\n          // }\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n\n    // Limit number of pages to prevent endless page generation\n    const LIMIT_PAGES = 10000;\n    if (cp.page > LIMIT_PAGES) {\n      throw new Error(`Too many pages generated (over ${LIMIT_PAGES} pages)`);\n    }\n    cp.page++;\n\n    const startSide = cp.flowPositions[\"body\"]?.startSide;\n    cp.isBlankPage =\n      startSide && startSide !== \"any\" && this.matchPageSide(startSide);\n    page.isBlankPage = cp.isBlankPage;\n\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle(\n          (page.isBlankPage\n            ? this.styler.cascade.previousPageType\n            : this.styler.cascade.currentPageType) ?? \"\",\n        );\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        pageMaster.pageBox.specified[\"width\"].value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        pageMaster.pageBox.specified[\"height\"].value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> =\n      Task.newFrame(\"layoutNextPage\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {}\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\n// override, so we don't register an error\nexport function processViewportMeta(meta: Element): string {\n  let content = meta.getAttribute(\"content\");\n  if (!content) {\n    return \"\";\n  }\n  const vals = {};\n  let r: RegExpMatchArray;\n  while (\n    (r = content.match(\n      /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n    )) != null\n  ) {\n    content = content.substr(r[0].length);\n    vals[r[1]] = r[2];\n  }\n  const width = vals[\"width\"] - 0;\n  const height = vals[\"height\"] - 0;\n  if (width && height) {\n    return `@-epubx-viewport{width:${width}px;height:${height}px;}`;\n  }\n  return \"\";\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(\"CSS parser:\", mnemonics);\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.Response,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.XMLHttpRequestResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const userAgentXML = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.load(userAgentXML).then(() => {\n        this.triggerSingleDocumentPreprocessing = true;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(response: Net.Response): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> =\n      Task.newFrame(\"OPSDocStore.load\");\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] =\n            Plugin.getHooksForName(Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT);\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        const userAgentURL = Base.resolveURL(\n          \"user-agent-page.css\",\n          Base.resourceBaseURL,\n        );\n        sources.push({\n          url: userAgentURL,\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (!isTocBox) {\n          const elemList =\n            xmldoc.document.querySelectorAll(\"style, link, meta\");\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const rel = elem.getAttribute(\"rel\");\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  rel == \"stylesheet\" ||\n                  (rel == \"alternate stylesheet\" && classes)\n                ) {\n                  let src = elem.getAttribute(\"href\");\n                  src = Base.resolveURL(src, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> =\n              Task.newFrame(\"fetchStylesheet\");\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sha1 - Calculate SHA1 hash of the given content.\n */\nimport * as Base from \"./base\";\n\n/**\n * @return big-endian byte sequence\n */\nexport function encode32(n: number): string {\n  return String.fromCharCode(\n    (n >>> 24) & 255,\n    (n >>> 16) & 255,\n    (n >>> 8) & 255,\n    n & 255,\n  );\n}\n\n/**\n * @param bytes big-endian byte sequence\n */\nexport function decode32(bytes: string): number {\n  // Important facts: \"\".charCodeAt(0) == NaN, NaN & 0xFF == 0\n  const b0 = bytes.charCodeAt(0) & 255;\n  const b1 = bytes.charCodeAt(1) & 255;\n  const b2 = bytes.charCodeAt(2) & 255;\n  const b3 = bytes.charCodeAt(3) & 255;\n  return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return big-endian uint32 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int32(bytes: string): number[] {\n  const sb = new Base.StringBuffer();\n  sb.append(bytes);\n  let appendCount = (55 - bytes.length) & 63;\n  sb.append(\"\\u0080\");\n  while (appendCount > 0) {\n    appendCount--;\n    sb.append(\"\\x00\");\n  }\n  sb.append(\"\\x00\\x00\\x00\\x00\");\n  sb.append(encode32(bytes.length * 8));\n  bytes = sb.toString();\n  const h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  const w =\n    /** @type Array.<number> */\n    [] as number[];\n  let i: number;\n  for (let bi = 0; bi < bytes.length; bi += 64) {\n    for (i = 0; i < 16; i++) {\n      w[i] = decode32(bytes.substr(bi + 4 * i, 4));\n    }\n    for (; i < 80; i++) {\n      const q = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n      w[i] = (q << 1) | (q >>> 31);\n    }\n    let a = h[0];\n    let b = h[1];\n    let c = h[2];\n    let d = h[3];\n    let e = h[4];\n    let f: number;\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = ((b & c) | (~b & d)) + 1518500249;\n      } else if (i < 40) {\n        f = (b ^ c ^ d) + 1859775393;\n      } else if (i < 60) {\n        f = ((b & c) | (b & d) | (c & d)) + 2400959708;\n      } else {\n        f = (b ^ c ^ d) + 3395469782;\n      }\n      f += ((a << 5) | (a >>> 27)) + e + w[i];\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = f;\n    }\n    h[0] = (h[0] + a) | 0;\n    h[1] = (h[1] + b) | 0;\n    h[2] = (h[2] + c) | 0;\n    h[3] = (h[3] + d) | 0;\n    h[4] = (h[4] + e) | 0;\n  }\n  return h;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return uint8 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int8(bytes: string): number[] {\n  const h = bytesToSHA1Int32(bytes);\n  const res = [];\n  for (const n of h) {\n    res.push((n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, n & 255);\n  }\n  return res;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return chars with codes 0 - 255 equal to SHA1 hash of the input\n */\nexport function bytesToSHA1Bytes(bytes: string): string {\n  const h = bytesToSHA1Int32(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < h.length; i++) {\n    sb.append(encode32(h[i]));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return hex-encoded SHA1 hash\n */\nexport function bytesToSHA1Hex(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < sha1.length; i++) {\n    sb.append((sha1.charCodeAt(i) | 256).toString(16).substr(1));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return base64-encoded SHA1 hash of the input\n */\nexport function bytesToSHA1Base64(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  Base.appendBase64(sb, sha1);\n  return sb.toString();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"body-child\":\n            if (\n              !srcElem.querySelector(\n                \"[role=doc-toc], [role=directory], nav li a, .toc, #toc\",\n              )\n            ) {\n              // hide elements not containing TOC.\n              computedStyle[\"display\"] = Css.ident.none;\n            }\n            break;\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        firstChild.textContent.trim() === \"\"\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = Base.stripFragment(this.url) + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      // Mark if this doc is the primary entry page.\n      const nonTocBoxDoc = this.store.resources[this.url];\n\n      // Make hidden TOC visible in TOC box\n      for (const elem of xmldoc.document.querySelectorAll(\n        \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n      )) {\n        if (elem.hasAttribute(\"hidden\")) {\n          elem.removeAttribute(\"hidden\");\n        }\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          Array.from(\n            page.container.querySelectorAll(\n              \"[data-vivliostyle-toc-box]>*>*>*>*>*[style*='display: none']\",\n            ),\n          ).forEach((bodyChildElem) => {\n            bodyChildElem.setAttribute(\"aria-hidden\", \"true\");\n            bodyChildElem.setAttribute(\"hidden\", \"hidden\");\n          });\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#?(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as SHA1 from \"./sha1\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  startLoadingAsJSON(url: string): void {\n    this.jsonStore.fetch(url);\n  }\n\n  loadPubDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.ajax(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root, haveZipMetadata).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    if (haveZipMetadata) {\n      this.startLoadingAsJSON(url + \"?r=list\");\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root, haveZipMetadata).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(\n    pubURL: string,\n    root: string,\n    haveZipMetadata: boolean,\n  ): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              const zipMetadataResult = haveZipMetadata\n                ? this.loadAsJSON(`${pubURL}?r=list`)\n                : Task.newResult(null);\n              zipMetadataResult.then((zipMetadata) => {\n                opf = new OPFDoc(this, pubURL);\n                opf\n                  .initWithXMLDoc(\n                    opfXML,\n                    encXML,\n                    zipMetadata,\n                    `${pubURL}?r=manifest`,\n                  )\n                  .then(() => {\n                    this.opfByURL[url] = opf;\n                    this.primaryOPFByEPubURL[pubURL] = opf;\n                    frame.finish(opf);\n                  });\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        if (doc.body) {\n          doc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n        }\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(\n              manifestUrl,\n              true,\n              `Failed to fetch Publication Manifest ${manifestUrl}`,\n            ).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.xhtmlToc && opf.xhtmlToc.src === xmldoc.url) {\n              // xhtmlToc is the primari entry (X)HTML\n              if (\n                !doc.querySelector(\n                  \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n                )\n              ) {\n                // TOC is not found in the primari entry (X)HTML\n                opf.xhtmlToc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  // TODO: use UTF8 of uid\n  const sha1Sum = SHA1.bytesToSHA1Int8(uid);\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    let head: Blob;\n    let tail: Blob;\n    if (blob.slice) {\n      head = blob.slice(0, 1040);\n      tail = blob.slice(1040, blob.size);\n    } else {\n      head = blob[\"webkitSlice\"](0, 1040);\n      tail = blob[\"webkitSlice\"](1040, blob.size - 1040);\n    }\n    Net.readBlob(head).then((buf) => {\n      const dataView = new DataView(buf);\n      for (let k = 0; k < dataView.byteLength; k++) {\n        let b = dataView.getUint8(k);\n        b ^= sha1Sum[k % 20];\n        dataView.setUint8(k, b);\n      }\n      frame.finish(Net.makeBlob([dataView, tail]));\n    });\n    return frame.result();\n  };\n}\n\nexport function makeObfuscationKey(uid: string): string {\n  return `1040:${SHA1.bytesToSHA1Hex(uid)}`;\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport function checkMathJax(): void {\n  if (getMathJaxHub()) {\n    CssCascade.supportedNamespaces[Base.NS.MATHML] = true;\n  }\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  ncxToc: OPFItem = null;\n  xhtmlToc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n    checkMathJax();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /**\n       * @override\n       */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /**\n       * @override\n       */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.items.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /**\n       * @override\n       */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURIComponent(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n    zipMetadata: Base.JSON,\n    manifestURL: string,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.xhtmlToc && item.itemProperties[\"nav\"]) {\n          this.xhtmlToc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const tocAttr = pkg.child(\"spine\").attribute(\"toc\")[0];\n    if (tocAttr) {\n      this.ncxToc = this.itemMap[tocAttr];\n    }\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (!zipMetadata) {\n      if (idpfObfURLs.length > 0 && this.uid) {\n        // Have to deobfuscate in JavaScript\n        const deobfuscator = makeDeobfuscator(this.uid);\n        for (let i = 0; i < idpfObfURLs.length; i++) {\n          this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n        }\n      }\n      if (this.prePaginated) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n    const manifestText = new Base.StringBuffer();\n    const obfuscations = {};\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Deobfuscate in the server.\n      const obfuscationKey = makeObfuscationKey(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        obfuscations[idpfObfURLs[i]] = obfuscationKey;\n      }\n    }\n    for (let i = 0; i < zipMetadata.length; i++) {\n      const entry = zipMetadata[i];\n      const encodedPath = entry[\"n\"];\n      if (encodedPath) {\n        const path = decodeURIComponent(encodedPath);\n        const item = this.itemMapByPath[path];\n        let mediaType: string | null = null;\n        if (item) {\n          item.compressed = entry[\"m\"] != 0;\n          item.compressedSize = entry[\"c\"];\n          if (item.mediaType) {\n            mediaType = item.mediaType.replace(/\\s+/g, \"\");\n          }\n        }\n        const obfuscation = obfuscations[path];\n        if (mediaType || obfuscation) {\n          manifestText.append(encodedPath);\n          manifestText.append(\" \");\n          manifestText.append(mediaType || \"application/octet-stream\");\n          if (obfuscation) {\n            manifestText.append(\" \");\n            manifestText.append(obfuscation);\n          }\n          manifestText.append(\"\\n\");\n        }\n      }\n    }\n    this.assignAutoPages();\n    return Net.ajax(\n      manifestURL,\n      Net.XMLHttpRequestResponseType.DEFAULT,\n      \"POST\",\n      manifestText.toString(),\n      \"text/plain\",\n    );\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      manifestObj[\"name\"] || manifestObj[\"metadata\"]?.[\"title\"] || doc?.title;\n    if (title) {\n      this.metadata[metaTerms.title] = (\n        Array.isArray(title) ? title : [title]\n      ).map((item) => ({ v: item.value ?? item }));\n    }\n    const author =\n      manifestObj[\"author\"] ||\n      manifestObj[\"creator\"] ||\n      manifestObj[\"metadata\"]?.[\"author\"] ||\n      Array.from(\n        doc?.querySelectorAll(\"meta[name='author'], meta[name='DC.Creator']\") ??\n          [],\n      ).map((meta: HTMLMetaElement) => meta.content);\n    if (author && author.length !== 0) {\n      this.metadata[metaTerms.creator] = (\n        Array.isArray(author) ? author : [author]\n      ).map((item) => ({ v: item.name ?? item }));\n    }\n    const language =\n      manifestObj[\"inLanguage\"] ||\n      manifestObj[\"metadata\"]?.[\"language\"] ||\n      doc?.documentElement.lang ||\n      doc?.documentElement.getAttribute(\"xml:lang\");\n    if (language) {\n      this.metadata[metaTerms.language] = (\n        Array.isArray(language) ? language : [language]\n      ).map((item) => ({ v: item }));\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      const selector =\n        \"[role=doc-toc] a[href],\" +\n        \"[role=directory] a[href],\" +\n        \"nav li a[href],\" +\n        \".toc a[href],\" +\n        \"#toc a[href]\";\n      for (const anchorElem of doc.querySelectorAll(selector)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        if (/\\.(jpe?g|png|gif|pdf|svg|mml)([#?]|$)/.test(href)) {\n          // Avoid link to non-HTML resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder =\n              manifestObj[\"readingOrder\"].includes(itemObj);\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url)\n            ) {\n              const baseUrl = manifestUrl\n                ? manifestUrl.replace(/\\/[^/]+$/, \"/\")\n                : this.pubURL;\n              const param = {\n                url: Base.resolveURL(Base.convertSpecialURL(url), baseUrl),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n\n              //TODO: items not in readingOrder should be excluded from linear reading but available with internal link navigation.\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.xhtmlToc = this.items[tocFound];\n      }\n\n      if (!this.xhtmlToc) {\n        this.xhtmlToc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> =\n      Task.newFrame(\"renderSinglePage\");\n    let page = this.makePage(viewItem, pos);\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  private findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    return this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    );\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPagesUpto\");\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult({ left: null, right: null });\n    }\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getSpread\");\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToEPage\");\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToCFI\");\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateTo\");\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      this.findPage(\n        {\n          spineIndex: item.spineIndex,\n          pageIndex: -1,\n          offsetInItem: target ? viewItem.xmldoc.getElementOffset(target) : 0,\n        },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (\n      page.offset === 0 &&\n      !(viewItem.instance.blankPageAtStart && viewItem.pages.length === 0)\n    ) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"span\");\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[spineIndex] =\n        [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties =\n        item.itemRefElement.getAttribute(\"properties\");\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.xhtmlToc || opf.ncxToc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(350, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    pageCont.style.visibility = \"hidden\";\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 10}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport {\n  TextPolyfillCss,\n  VivliostyleViewportCss,\n  VivliostyleViewportScreenCss,\n} from \"./assets\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  haveZipMetadata: boolean;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    const document = viewportElement.ownerDocument;\n    const findOrCreateStyleElement = (\n      id: string,\n      cssText?: string,\n    ): HTMLElement => {\n      let styleElement = document.getElementById(id);\n      if (!styleElement) {\n        styleElement = document.createElement(\"style\");\n        styleElement.id = id;\n        if (cssText) {\n          styleElement.textContent = cssText;\n        }\n        document.head.appendChild(styleElement);\n      }\n      return styleElement;\n    };\n    findOrCreateStyleElement(\n      \"vivliostyle-viewport-screen-css\",\n      VivliostyleViewportScreenCss,\n    );\n    findOrCreateStyleElement(\n      \"vivliostyle-viewport-css\",\n      VivliostyleViewportCss,\n    );\n    findOrCreateStyleElement(\"vivliostyle-text-polyfill-css\", TextPolyfillCss);\n\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = findOrCreateStyleElement(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.haveZipMetadata = false;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const haveZipMetadata = !!command[\"zipmeta\"];\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL, haveZipMetadata).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    // JavaScript in HTML documents support\n    if (\n      typeof command[\"allowScripts\"] == \"boolean\" &&\n      command[\"allowScripts\"] !== Scripts.allowScripts\n    ) {\n      Scripts.setAllowScripts(command[\"allowScripts\"]);\n      this.needRefresh = true;\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(this.window, this.fontSize, viewportElement);\n    }\n  }\n\n  private resolveSpreadView(viewport: Vgen.Viewport): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        // wide enough for a pair of pages of A/B paper sizes, but not too\n        // narrow\n        return viewport.width / viewport.height >= 1.45 && viewport.width > 800;\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const spreadView = this.resolveSpreadView(viewport);\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n    if (\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (\n      this.opfView &&\n      this.opfView.hasPages() &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    // In this implementation, it generates one page rule with the largest\n    // page size both in width and height in the multiple page sizes.\n    // (Resolve issue #751)\n    if (\n      this.pageRuleStyleElement &&\n      (!this.pageSheetSizeAlreadySet ||\n        this.pageSizes[pageIndex].width !==\n          this.pageSizes[pageIndex - 1]?.width ||\n        this.pageSizes[pageIndex].height !==\n          this.pageSizes[pageIndex - 1]?.height)\n    ) {\n      const widthMax = Math.max(...this.pageSizes.map((p) => p.width));\n      const heightMax = Math.max(...this.pageSizes.map((p) => p.height));\n\n      function convertSize(px: number): number {\n        const pt = px * 0.75;\n        const ptFloor = Math.floor(pt);\n        const ptFrac = pt - ptFloor;\n        if (ptFrac > 0 && ptFrac < 0.5) {\n          // Adjustment needed for Chromium's rounded page size problem.\n          // (Fix for issue #934 and #936)\n          return ptFloor + 0.5;\n        }\n        return pt;\n      }\n\n      const widthPt = convertSize(widthMax);\n      const heightPt = convertSize(heightMax);\n      const styleText = `@page {margin:0;size:${widthPt}pt ${heightPt}pt;}`;\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.isTOCVisible();\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.hideTOC();\n      this.opfView.removeRenderedPages();\n    }\n    this.pageSizes = [];\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n    if (this.pref.spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          if (!spread.left && !spread.right) {\n            return Task.newResult(null);\n          }\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage =\n            page.side === Constants.PageSide.LEFT ? spread.left : spread.right;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle:\n                          this.opf.spine[this.pagePosition.spineIndex].title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] =\n                          this.opf.spine[this.pagePosition.spineIndex].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          // JavaScript in HTML documents support\n                          if (\n                            Scripts.allowScripts &&\n                            Scripts.hasScripts(this.window)\n                          ) {\n                            Scripts.loadScriptsAtEnd(this.window).then(() => {\n                              if (this.renderAllPages) {\n                                this.setReadyState(\n                                  Constants.ReadyState.COMPLETE,\n                                );\n                              }\n                              this.callback({ t: \"loaded\" });\n                              frame.finish(p);\n                            });\n                          } else {\n                            if (this.renderAllPages) {\n                              this.setReadyState(Constants.ReadyState.COMPLETE);\n                            }\n                            this.callback({ t: \"loaded\" });\n                            frame.finish(p);\n                          }\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> =\n          Task.newFrame(\"moveTo.showCurrent\");\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer\n                .showCurrent(viewer.currentPage, !this.renderAllPages)\n                .then(() => {\n                  loopFrame.continueLoop();\n                });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> =\n              Task.newFrame(\"waitForCommand\");\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: string;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n  allowScripts?: boolean;\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n    allowScripts: true,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!singleDocumentOptions) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      (this.adaptViewer_.opfView.opf.xhtmlToc ||\n        this.adaptViewer_.opfView.opf.ncxToc)\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n","// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer({\n        viewportElement: this.iframeWin.document.body\n          .firstElementChild as HTMLElement,\n        window: this.iframeWin,\n        debug: true,\n      });\n    return new Promise<void>((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n","import {\n    printHTML\n} from \"../src\"\n\n\ndocument.getElementById('print').addEventListener('click', () => {\n    const html = document.getElementById('html').value,\n        css = document.getElementById('css').value,\n        title = document.getElementById('title').value,\n        htmlDoc = `\n        <!doctype html>\n        <html>\n            <head>\n                <meta charset=\"UTF-8\">\n                <title>${title}</title>\n                <style>${css}</style>\n            <head>\n            <body>${html}</body>\n        </html>`,\n        printCallback = iframeWin => {\n            const pageCount = iframeWin.document.querySelectorAll('[data-vivliostyle-page-container]').length\n            console.log(`page count: ${pageCount}`)\n            iframeWin.print()\n        }\n\n    printHTML(htmlDoc, {\n        title,\n        printCallback,\n        hideIframe: true, // Whether to use a hidden iframe (default: true)\n        removeIframe: true // Whether to remove the iframe after use (default: true)\n    })\n})\n"],"names":["DIFF_DELETE","diff_main","text1","text2","cursor_pos","_fix_unicode","editdiff","oldText","newText","oldRange","index","length","newRange","oldLength","newLength","oldCursor","oldBefore","slice","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","Math","min","oldPrefix","newPrefix","make_edit_splice","cursor","suffixLength","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","i","indexOf","hm","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","j","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","mid_common","diff_halfMatch_","diffs_a","diffs_b","concat","text1_length","text2_length","max_d","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","unshift","push","diff_cleanupMerge","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","pointerend","is_surrogate_pair_end","fix_unicode","pointer","count_delete","count_insert","text_delete","text_insert","splice","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","n","pop","changes","charCode","str","before","oldMiddle","newMiddle","after","tuples","ret","remove_empty_tuples","diff","INSERT","DELETE","EQUAL","PageSide","ReadyState","LogLevel","setDebug","value","isDebug","pageProgressionOf","PageProgression","LTR","RTL","Error","argumentsToErrorInfo","args","a","from","e","shift","error","messages","buildMessageAndStackTrace","stack","frameTrace","toString","HOOKS","logger","opt_console","listeners","this","consoleDebug","msg","debug","log","console","consoleInfo","info","consoleWarn","warn","consoleError","triggerListeners","level","forEach","listener","addListener","arguments","DEBUG","INFO","WARN","ERROR","hooks","registerHook","name","fn","hooksForName","Logging","removeHook","getHooksForName","plugin","Profiler","performanceInstance","timestamps","registerTiming","registerStartTiming","registerEndTiming","noop","forceRegisterStartTiming","timestamp","call","forceRegisterEndTiming","printTimings","st","Object","keys","stamps","l","t","start","end","disable","enable","isEnabled","startEnd","now","fallbackPerformanceInstance","Date","profiler","window","performance","profile","firstLetterPattern","emptyObj","stringToJSON","JSON","parse","stripFragment","url","r","match","baseURL","location","href","setBaseURL","NS","resourceBaseURL","setResourceBaseURL","resolveURL","relURL","test","toLowerCase","substr","lastIndexOf","urlOption","replace","convertSpecialURL","exec","asString","v","PriorityQueue","queue","add","item","parentIndex","parent","compare","peek","remove","result","curr","size","childIndex","knownPrefixes","propNameMap","checkIfPropertySupported","prefix","prop","document","documentElement","style","cssPropName","txt","toUpperCase","getPrefixedPropertyNames","prefixed","setCSSProperty","elem","prefixedPropertyNames","elemStyle","setProperty","err","getCSSProperty","opt_value","propertyNames","getPropertyValue","getLangAttribute","element","lang","getAttributeNS","XML","namespaceURI","XHTML","getAttribute","StringBuffer","list","append","clear","join","escapeChar","escapeCSSIdent","escapeCSSStr","lightURLEncode","encodeURIComponent","isLetter","ch","escapeNameStrToHex","s","escapeRegExp","binarySearch","high","good","h","m","numberCompare","b","indexArray","arr","key","map","multiIndexArray","SimpleEventTarget","dispatchEvent","evt","type","target","currentTarget","addEventListener","capture","removeEventListener","hasVerticalBBoxBug","hasInlineBlockJustificationBug","hasSoftWrapOpportunityAfterHyphenBug","hasSoftWrapOpportunityByWbrBug","getId","node","nodeType","idtxt","escape","unescapeChar","unescape","parseExtVal","extstr","p","parseExt","ext","RefStep","appendTo","sb","applyTo","pos","ChildStep","id","sideBias","child","childElements","children","childElementCount","firstChild","next","nextSibling","movedNode","ownerDocument","getElementById","OffsetStep","offset","textBefore","textAfter","textLength","textContent","Fragment","steps","fromString","fragstr","decodeURIComponent","parseInt","Base","navigate","doc","ref","trim","text","prependPathFromNode","parentNode","previousSibling","reverse","clonePreferences","pref","fontFamily","lineHeight","margin","hyphenate","columnWidth","horizontal","nightMode","spreadView","pageBorder","enabledMediaTypes","assign","defaultPaperSize","defaultPreferencesInstance","vivliostyle","print","Special","letterbox","viewW","viewH","objW","objH","scale","cssString","cssIdent","makeQualifiedName","objName","memberName","nextKeyIndex","LexicalScope","resolver","scopeKey","zero","one","_true","_false","values","funcs","builtIns","Const","round","sqrt","max","typeof","defineBuiltInName","pageWidth","pageHeight","fontSize","pubTitle","docTitle","Native","defineName","qualifiedName","val","defineFunc","defineBuiltIn","isViewportRelativeLengthUnit","unit","defaultUnitSizes","px","in","pt","pc","cm","mm","q","em","rem","ex","dppx","dpi","dpcm","needUnitConversion","Context","rootScope","viewportWidth","viewportHeight","actualPageWidth","actualPageHeight","initialFontSize","rootFontSize","isRelativeRootFontSize","scopes","pageAreaWidth","pageAreaHeight","pageVertical","getScopeContext","scope","clearScope","queryUnitSize","isRoot","pvw","pvh","vw","vh","evalName","evalCall","params","noBuiltInEval","body","evaluate","apply","evalMediaName","not","enabled","evalMediaTest","feature","req","actual","screen","availWidth","availHeight","pixelDepth","evalSupportsTest","isFunc","queryVal","storeVal","Val","buf","priority","evaluateCore","context","expand","dependCore","other","dependencyCache","dependOuter","cached","depend","isMediaName","Prefix","_this","getOp","evalPrefix","constructor","Infix","lhs","rhs","_this2","getPriority","evalInfix","thisPriority","Logical","Comparison","Additive","Multiplicative","Not","NotMedia","Negate","And","AndMedia","Or","Comma","OrMedia","Lt","Le","Gt","Ge","Eq","Ne","Add","Subtract","Multiply","Divide","Modulo","Numeric","num","_this3","Named","_this4","MediaName","_this5","_this6","Call","_this7","expandedParams","expanded","Cond","cond","ifTrue","ifFalse","_this8","_this9","MediaTest","_this10","SupportsTest","_this11","Param","_this12","and","sub","mul","div","Visitor","visitValues","visit","visitEmpty","empty","visitSlash","slash","visitStr","visitIdent","ident","visitNumeric","numeric","visitNum","visitInt","visitColor","color","visitURL","visitURange","urange","visitSpaceList","visitCommaList","visitFunc","func","visitExpr","expr","FilterVisitor","SpaceList","CommaList","Func","stringValue","toExpr","isExpr","isNumeric","isNum","isIdent","isSpaceList","visitor","Empty","Exprs","instance","Slash","Str","nameTable","Ident","getName","Num","Int","Color","rgb","URL","URange","urangeText","appendList","separator","Expr","toNumber","convertNumericToPx","absolute","all","always","anywhere","auto","avoid","balance","balance_all","block","block_end","block_start","both","bottom","border_box","break_all","break_word","crop","cross","column","exclusive","fixed","flex","footnote","footer","header","hidden","horizontal_tb","inherit","inline","inline_block","inline_end","inline_start","landscape","left","line","list_item","ltr","manual","none","normal","oeb_page_foot","oeb_page_head","page","relative","right","same","snap_block","spread","_static","rtl","table","table_caption","table_cell","table_footer_group","table_header_group","table_row","top","transparent","vertical_lr","vertical_rl","visible","hundredPercent","fullWidth","fullHeight","numericZero","fullURange","processingOrder","processingOrderFn","name1","name2","Number","MAX_VALUE","Rect","Point","Insets","Segment","low","winding","shapeId","Band","segmentCompare","s1","s2","Shape","points","addSegments","prev","withOffset","offsetX","offsetY","shapeForEllipse","cx","cy","rx","ry","PI","sin","cos","shapeForRect","BandIntersection","lowOrHigh","intersectY","isNaN","addBandIntersections","intersections","w1","w2","mergeIntersections","includeCount","excludeCount","shapeCount","windings1","windings2","xranges","inside","intersectionCount","intersection","stillInside","rotateBox","box","unrotateBox","rotateShape","shape","point","normalize","bands","currBand","prevBand","findBand","mid","findUppermostFullyOpenRect","rect","band","topEdge","bottomEdge","findBottommostFullyOpenRect","SetVisitor","propSet","Css","IntVisitor","toInt","def","ShapeVisitor","collect","coords","getShape","width","height","numbers","coord","GeometryUtil","toShape","CountersVisitor","reset","counters","toCounters","UrlTransformVisitor","baseUrl","transformer","transformURL","cloneCounterValues","TokenType","TargetCounterReference","targetId","resolved","pageCounters","spineIndex","pageIndex","equals","isResolved","resolve","unresolve","CounterListener","counterStore","countersOfId","documentURLTransformer","transformFragment","countersById","getExprContentListener","CounterResolver","pageScope","styler","namedStringValues","setStyler","getFragment","getTransformedId","transformedId","getPageCounterVal","format","currentPageCounters","registerPageCounterExpr","getPageCountersVal","getTargetCounters","lookForElement","targetCounters","styleUntilIdIsReached","getTargetPageCounters","currentPage","elementsById","pageCountersById","getTargetCounterVal","countersOfName","resolveReference","pageCountersOfName","saveReferenceOfCurrentPage","getTargetCountersVal","elementCounters","getNamedStringVal","retrievePosition","stringValues","offsets","sort","pageStartOffset","isBlankPage","pageLastOffset","container","querySelectorAll","firstOffset","startOffset","lastOffset","firstExceptOffset","offsetPrev","offsetNext","elementAtOffset","querySelector","elementAtPageStartOffset","firstElementChild","first","last","setNamedString","cascadeInstance","currentElementOffset","CounterStore","previousPageCounters","currentPageCountersStack","pageIndicesById","newReferencesOfCurrentPage","referencesToSolve","referencesToSolveStack","unresolvedReferences","resolvedReferences","pagesCounterExprs","createCounterListener","createCounterResolver","setCurrentPage","definePageCounter","counterName","forceSetPageCounter","pageNumber","updatePageCounters","cascadedPageStyle","resetMap","incrementMap","resetVal","CssProp","resetCounterName","increment","incrementVal","incrementCounterName","counterValues","pushPageCounters","popPageCounters","unresolvedRefs","resolvedRefs","pushed","some","finishPage","ids","oldPageIndex","prevPageCounters","every","getUnresolvedRefsToPage","refs","idRefs","r1","r2","o","pushReferencesToSolve","popReferencesToSolve","exprContentListener","bind","findIndex","createElement","setAttribute","PAGES_COUNTER_ATTR","finishLastPage","viewport","nodes","root","pages","createLayoutConstraint","LayoutConstraint","allowLayout","nodeContext","viewNode","escapeParseSingle","code","String","fromCharCode","escapeParse","Action","Token","precededBySpace","position","EOF","makeActions","spec","NaN","END","INVALID","actionsNormal","SPACE","BANG","STR2","HASH","DOLLAR","PERCENT","AMP","STR1","O_PAR","C_PAR","STAR","PLUS","COMMA","MINUS","DOT","SLASH","INT","COLON","SEMICOL","LT","EQ","GT","QMARK","AT","IDENT","O_BRK","BSLASH","C_BRK","HAT","O_BRC","BAR","C_BRC","TILDE","actionsIdent","ENDIDNT","FUNC","CONT","IDNTESC","actionsNumOrClass","TOCLASS","TONUM","TOIDES","actionsMinus","MINMIN","TOINT","TOIDENT","actionsIdentEsc","ENDIDES","CHKPOSS","FUNCES","actionsInt","ENDINT","PCUNIT","NUMBER","UNIT","actionsNumber","ENDNUM","FrameState","actionsCheckEq","EQTAIL","actionsColon","COL_COL","actionsBar","BAR_BAR","actionsAmp","AMP_AMP","actionsSlash","COMMENT","actionsComment","COMMST","actionsCommentStar","ENDNOTK","actionsMinusMinus","KILL1","actionsLt","LT_BG","actionsLtBang","LT_BG_M","actionsLtBangMinus","KILL2","actionsIdentEscChr","IDESCH","actionsStr1","ENDSTR","STR1ESC","actionsStr2","STR2ESC","actionsStr1Esc","ENDESTR","CHKPOSN","actionsStr2Esc","actionsURL","URL2","URL1","actionsURLInside","ENDURL","CHKSP","URLESC","actionsURLInside1","TERMURL","actionsURLInside2","actionsURLTail","FINURL","Tokenizer","input","handler","indexMask","buffer","head","tail","token","fillBuffer","nthToken","consume","mark","unmark","hasMark","reallocate","newIndexMask","newBuffer","oldIndex","newIndex","mnemonics","actions","tokenType","tokenPosition","tokenText","tokenNum","seenSpace","backslashPos","STR","CLASS","BANG_EQ","NUM","parseFloat","NUMERIC","URANGE","privateCurrentTask","primaryScheduler","currentTask","newFrame","task","frame","Frame","state","ACTIVE","newResult","SyncResultImpl","handle","onErr","raise","TimerImpl","currentTime","valueOf","setTimeout","delay","clearTimeout","Scheduler","timer","timeout","sliceOverTime","wakeupTime","timeoutToken","inTimeSlice","order","setSlice","isTimeSliceOver","arm","newTime","scheduledTime","doTimeSlice","schedule","continuation","opt_delay","c","canceled","resumeInternal","run","opt_name","Task","then","done","running","callbacks","callback","savedTask","suspend","Continuation","otherComp","getTask","scheduler","finish","cancel","exception","waitTarget","interrupt","getScheduler","isRunning","whenDone","unwind","opt_frame","fillStack","f","out","thenAsync","thenReturn","thenFinish","isPending","get","ResultImpl","res1","res2","res","INIT","checkEnvironment","FINISHED","DEAD","timeSlice","sleep","loop","step","more","loopWithFrame","LoopBodyFrame","opt_waitTarget","continueLoop","breakLoop","Fetcher","fetch","arrived","resource","piggybacks","piggibacks","piggyback","hasArrived","waitForFetchers","fetchers","fetcher","loadElement","src","SVG","setAttributeNS","XLINK","localName","XMLHttpRequestResponseType","VivliostyleViewportScreenCss","VivliostyleViewportCss","ValidationTxt","UserAgentXml","UserAgentPageCss","UserAgentBaseCss","TextPolyfillCss","ajax","opt_type","opt_method","opt_data","opt_contentType","request","XMLHttpRequest","response","status","statusText","contentType","responseText","responseXML","responseBlob","open","responseType","onreadystatechange","readyState","DOCUMENT","HTMLDocument","TEXT","makeBlob","contentTypeHeader","getResponseHeader","setRequestHeader","send","overrideMimeType","parts","builderCtr","WebKitBlobBuilder","MSBlobBuilder","builder","getBlob","Blob","StylesheetFlavor","ResourceStore","parser","resources","load","opt_required","opt_message","fetchInner","isTocBox","endsWith","userAgentXmlUrl","isUserAgentXml","TaskUtil","parseJSONResource","store","colorFromHash","ParserHandler","flavor","AUTHOR","getCurrentToken","getScope","startStylesheet","tagSelector","ns","classSelector","pseudoclassSelector","pseudoelementSelector","idSelector","attributeSelector","op","descendantSelector","childSelector","adjacentSiblingSelector","followingSiblingSelector","nextSelector","startSelectorRule","startFontFaceRule","startFootnoteRule","pseudoelem","startViewportRule","startDefineRule","startRegionRule","startPageRule","startPageMarginBoxRule","startWhenRule","startMediaRule","startFlowRule","flowName","startPageTemplateRule","startPageMasterRule","pseudoName","classes","startPartitionRule","startPartitionGroupRule","startRuleBody","property","important","endRule","startFuncWithSelector","funcName","endFuncWithSelector","getImportantSpecificity","USER_AGENT","USER","getBaseSpecificity","DispatchParserHandler","tokenizer","slave","pushHandler","popHandler","errorMsg","_ParserHandler","SkippingParserHandler","owner","topLevel","depth","SlaveParserHandler","report","message","reportAndSkip","actionsBase","actionsStyleAttribute","actionsSelector","actionsSelectorInFunc","actionsSelectorCont","actionsSelectorStart","actionsPropVal","actionsExprVal","actionsExprOp","actionsError","actionsErrorDecl","actionsErrorSelector","ExprContext","OP_MEDIA_AND","CssTokenizer","LAST","OP_MEDIA_OR","OP_MEDIA_NOT","SELECTOR_START","RULE_END","DONE","PROP","SELECTOR_NAME","SELECTOR_ANY","SELECTOR_ID","SELECTOR_CLASS","SELECTOR_ATTR","SELECTOR_PSEUDOCLASS","SELECTOR_CHILD","SELECTOR_SIBLING","SELECTOR_FOLLOWING_SIBLING","SELECTOR_NAME_1","SELECTOR_ANY_1","SELECTOR_ID_1","SELECTOR_CLASS_1","SELECTOR_ATTR_1","SELECTOR_BODY","SELECTOR_PSEUDOCLASS_1","SELECTOR_PSEUDOELEM","SELECTOR_NEXT","VAL_IDENT","VAL_HASH","VAL_NUM","VAL_INT","VAL_NUMERIC","VAL_STR","VAL_URL","VAL_URANGE","VAL_COMMA","VAL_SLASH","VAL_FUNC","VAL_C_PAR","VAL_END","VAL_BRC","VAL_BANG","VAL_PLUS","VAL_FINISH","EXPR_IDENT","EXPR_NUM","EXPR_NUMERIC","EXPR_STR","EXPR_O_PAR","EXPR_FUNC","EXPR_PREFIX","EXPR_PARAM","EXPR_INFIX_NAME","EXPR_INFIX","GT_EQ","LT_EQ","EQ_EQ","EXPR_C_PAR","EXPR_O_BRC","EXPR_SEMICOL","ERROR_PUSH","ERROR_POP","ERROR_SEMICOL","ERROR_POP_DECL","Parser","valStack","namespacePrefixToURI","defaultNamespaceURI","propName","propImportant","exprContext","importReady","importURL","importCondition","errorBrackets","ruleStack","regionRule","pageRule","MEDIA","extractVals","sep","valStackReduce","count","exprError","exprStackReduce","val2","tok","e1","e2","er","readSupportsTest","startPosition","token1","token2","tokenN","parLevel","readPseudoParams","readNthPseudoParams","hasLeadingPlus","hasMinusSign","hasSign","makeCondition","condition","split","isInsidePropertyOnlyRule","runParser","parsingValue","parsingStyleAttr","parsingMediaQuery","parsingFunctionParam","parserLoop","pseudoclassType","POSITIVE_INFINITY","TILDE_EQ","BAR_EQ","HAT_EQ","DOLLAR_EQ","STAR_EQ","IMPORT","SUPPORTS","WHEN","supportsTest","ruleName","rulePseudoName","ErrorHandler","parseStylesheetFromText","media","resolvedURL","innerFrame","parseStylesheetFromURL","Net","xhr","parseValue","numProp","opacity","utilization","evaluateCSSToCSS","matchANPlusB","AnyMatcher","matchers","matches","matcher","AllMatcher","NthFragmentMatcher","elementOffset","registerFragmentIndex","fragmentIndex","indices","fragmentIndices","clearFragmentIndices","entry","LayoutProcessor","PageFloats","Selectors","RepetitiveElement","Table","Vtree","MatcherBuilder","buildViewConditionMatcher","viewCondition","strs","buildAllMatcher","buildAnyMatcher","restoreNewText","reduce","fastdiff","resolveIndex","coef","current","change","object","formattingContextType","FloatReference","flagmentLayoutConstraintType","isInstanceOfTableFormattingContext","isInstanceOfTableRowLayoutConstraint","Whitespace","ShadowType","delayedProps","transform","delayedPropsIfRelativePositioned","DelayedItem","show","obj","visibility","hide","play","pause","resume","mute","muted","unmute","makeListener","action","actionFn","Page","bleedBox","pageAreaElement","delayedItems","hrefHandler","dimensions","isFirstPage","isLastPage","isAutoPageWidth","isAutoPageHeight","side","marginBoxes","anchorElement","preventDefault","setAutoPageWidth","isAuto","AUTO_PAGE_WIDTH_ATTRIBUTE","removeAttribute","setAutoPageHeight","AUTO_PAGE_HEIGHT_ATTRIBUTE","registerElementWithId","triggers","clientLayout","elems","contains","getElementClientRect","trigger","observers","observer","event","zoom","getPageAreaElement","whitespaceFromPropertyValue","whitespace","IGNORE","NEWLINE","PRESERVE","canIgnore","Flow","parentFlowName","forcedBreakOffsets","formattingContext","FlowChunk","linger","repeated","breakBefore","startPage","isBetter","clientrectIncreasingTop","clientrectDecreasingRight","isSameNodePositionStep","nps1","nps2","shadowContext","shadowType","ROOTLESS","outerHTML","_nps2$node","isSameShadowContext","nodeShadow","shadowSibling","isSameNodePosition","np1","np2","offsetInNode","newNodePositionFromNodeContext","initialFragmentIndex","sourceNode","NONE","preprocessedTextContent","makeNodeContextFromNodePositionStep","NodeContext","copy","ShadowContext","xmldoc","parentShadow","superShadow","subShadow","sc1","sc2","FirstPseudo","outer","boxOffset","shared","overflow","breakPenalty","display","floatReference","floatSide","clearSide","floatMinWrapBlock","columnSpan","verticalAlign","captionSide","inlineBorderSpacing","blockBorderSpacing","flexContainer","hyphenateCharacter","breakWord","establishesBFC","containingBlockForAbsolute","breakAfter","clearSpacer","inheritedProps","vertical","direction","firstPseudo","repeatOnBreak","pluginProps","afterIfContinues","footnotePolicy","pageType","INLINE","resetView","cloneItem","np","create","modify","clone","npp","npc","toNodePositionStep","toNodePosition","nc","_nc$shadowContext","_nc$shadowContext$sty","_nc$shadowContext$sty2","_pseudos","isInsideBFC","getContainingBlockForAbsolute","walkUpBlocks","belongsTo","ChunkPosition","primary","floats","isSamePosition","FlowChunkPosition","chunkPosition","flowChunk","FlowPosition","positions","startSide","newfp","newarr","hasContent","LayoutPosition","flows","flowPositions","highestSeenOffset","highestSeenNode","lookupPositionOffset","newcp","thisFlowNames","otherFlowNames","flowPos","startSideOfFlow","firstFlowChunkOfFlow","flowChunkPosition","Container","marginLeft","marginRight","marginTop","marginBottom","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","originX","originY","exclusions","innerShape","computedBlockSize","snapWidth","snapHeight","snapOffsetX","snapOffsetY","getInsetTop","getInsetBottom","getInsetLeft","getInsetRight","getInsetBefore","getInsetAfter","getInsetStart","getInsetEnd","getBeforeEdge","getAfterEdge","getStartEdge","getEndEdge","getInlineSize","getBoxSize","getBoxDir","getInlineDir","copyFrom","setVerticalPosition","setHorizontalPosition","setBlockPosition","extent","setInlinePosition","lastChild","removeChild","getInnerShape","getInnerRect","getPaddingRect","paddingX","paddingY","getOuterShape","outerShapeProp","getOuterRect","outerX","outerY","outerWidth","outerHeight","ContentPropertyHandler","rootContentValue","visitStrInner","Text","createTextNode","appendChild","img","createElementNS","CssParser","nonTrivialContent","fill","hyphens","marker","orphans","quotes","stroke","widows","polyfilledInheritedProps","supportedNamespaces","coupledPatterns","coupledExtentPatterns","geomNames","sides","names","buildCouplingMap","sideMap","extentMap","pattern","extentPattern","couplingMapVert","couplingMapHor","couplingMapVertRtl","couplingMapHorRtl","CascadeValue","getBaseValue","filterValue","increaseSpecificity","specificity","ConditionalCascadeValue","cascadeValues","tv","av","SPECIALS","isPropName","isInherited","getProp","setProp","getStyleMap","getMutableStyleMap","getViewConditionalStyleMap","_viewConditionalStyles","getSpecial","getMutableSpecial","mergeIn","pseudoelement","regionId","viewConditionMatcher","styleKey","styleMap","styles","as","ts","prototype","chainActions","chain","chained","InheritanceVisitor","props","setPropName","getFontSize","cascval","parentFontSize","convertFontRelativeLengthToPx","baseFontSize","CascadeAction","mergeWith","CompoundAction","ConditionItemAction","conditionItem","pushConditionItem","fresh","ApplyRuleAction","viewConditionId","currentStyle","ChainedAction","makePrimary","cascade","CheckClassAction","className","currentClassNames","includes","insertInTable","CheckIdAction","currentId","currentXmlId","CheckLocalNameAction","currentLocalName","tags","CheckNSTagAction","currentNamespace","nsPrefix","nsCount","nstags","CheckTargetEpubTypeAction","epubTypePatt","currentElement","epubType","epub","CheckNamespaceAction","CheckAttributePresentAction","_this13","hasAttributeNS","CheckAttributeEqAction","_this14","epubtypes","CheckNamespaceSupportedAction","_this15","CheckAttributeRegExpAction","regexp","_this16","attr","CheckLangAction","langRegExp","_this17","IsFirstAction","isFirst","IsRootAction","IsNthAction","_this18","Matchers","IsNthSiblingAction","currentSiblingOrder","IsNthSiblingOfTypeAction","currentSiblingTypeCounts","IsNthLastSiblingAction","currentFollowingSiblingOrder","IsNthLastSiblingOfTypeAction","counts","currentFollowingSiblingTypeCounts","nsCounts","nextElementSibling","IsEmptyAction","Node","ELEMENT_NODE","TEXT_NODE","IsEnabledAction","disabled","IsDisabledAction","IsCheckedAction","selected","checked","CheckConditionAction","_this19","conditions","dependentConditions","CheckAppliedAction","_this20","applied","cloned","NegateActionsSet","_this21","checkAppliedAction","firstAction","AbstractConditionItem","decrement","DescendantConditionItem","ChildConditionItem","AdjacentSiblingConditionItem","_this22","fired","FollowingSiblingConditionItem","_this23","AfterPseudoelementItem","afterprop","processPseudoelementProps","RestoreLangItem","QuotesScopeItem","oldQuotes","AttrValueFilterVisitor","_this24","createValueFromString","defaultValue","attributeName","hasAttribute","getStringValueFromCssContentVal","ContentPropVisitor","counterResolver","_this25","maxDepth","quoteDepth","upper","lower","additiveNumbering","entries","alphabeticNumbering","alphabetStr","alphabet","digit","numbering","digits","negative","formal","markers","thousands","hundreds","tens","ones","chineseTradInformal","visitFuncCounter","numval","_this26","visitFuncCounters","numvals","_this27","visitFuncTargetCounter","targetUrlStr","targetUrl","_this28","visitFuncTargetCounters","_this29","visitFuncString","visitFuncContent","pseudos","_pseudos$pseudoName","content","_pseudos$pseudoName$c","roman","armenian","georgian","hebrew","latin","alpha","greek","russian","square","disc","circle","copyTable","dst","ParseState","Cascade","pagetypes","createInstance","counterListener","CascadeInstance","nextOrder","currentNSTag","currentEpubTypes","currentPageType","previousPageType","firstPageType","counterScoping","siblingOrderStack","siblingTypeCountsStack","followingSiblingOrderStack","followingSiblingTypeCountsStack","viewConditions","elementStack","filter","dependentConditionMatchers","conditionId","_this30","applyAction","pushRule","baseStyle","EMPTY","applyActions","defineCounter","scoping","pushCounters","displayVal","floatVal","float","setMap","set","setVal","_this$currentElement","_this$currentElement2","DOCUMENT_NODE","incrPropValue","_this$currentStyle$co","_incrPropValue$values","setCounterName","listItemCounts","popCounters","setNamedStrings","stringSet","pseudoprops","pushElement","types","currentNamespaceTypeCounts","applyAttrFilter","quotesCasc","itemToPushLast","quotesVal","_this31","pseudoNames","pseudoProps","_pseudoProps$content","applyAttrFilterInner","elementStyle","pseudoMap","popRule","popElement","uaBaseCascade","CascadeParserHandler","validatorSet","_this32","conditionCount","footnoteContent","insideSelectorRule","TOP","insertNonPrimary","processChain","isInsideSelectorRule","patt","RegExp","ActionClass","nthSelectorActionClasses","finishChain","SELECTOR","_CssParser$SlaveParse","makeApplyRuleAction","special","validatePropertyAndHandleShorthand","invalidPropertyValue","unknownProperty","simpleProperty","Plugin","hook","converted","notParserHandler","NotParameterParserHandler","_this33","parentChain","_CascadeParserHandler","DefineParserHandler","dim","PropSetParserHandler","_this34","PropertyParserHandler","_this35","forEachViewConditionalStyles","viewConditionalStyles","mergeViewConditionalStyles","cascMap","mergeStyle","isVertical","cascaded","writingModeCasc","writingMode","isRtl","directionCasc","flattenCascadedStyle","regionIds","isFootnote","forEachStylesInRegion","regionStyle","regions","footnoteRegion","to","newVal","convertToPhysical","dest","couplingMap","hasOwnProperty","cascVal","coupledName","targetName","coupledCascVal","createRegExpMap","valueMaps","toPhysical","physical","logical","convert","maps","maps2","replaced","toPhysicalMaps","toLogicalMaps","toLogical","Size","lineRelativeValues","getSize","sizes","original","maxWidth","minWidth","maxHeight","minHeight","getComputedValue","getElementComputedStyle","insertBefore","writingModeProperty","writingModeValue","inlineSizeName","blockSizeName","getFillAvailableInline","getMaxContentInline","getMinContentInline","getFitContentInline","fillAvailableInline","minContentInline","parsedFillAvailable","maxContentInline","getIdealBlock","getFillAvailableBlock","FILL_AVAILABLE_INLINE_SIZE","MAX_CONTENT_INLINE_SIZE","MIN_CONTENT_INLINE_SIZE","FIT_CONTENT_INLINE_SIZE","FILL_AVAILABLE_BLOCK_SIZE","MAX_CONTENT_BLOCK_SIZE","MIN_CONTENT_BLOCK_SIZE","FIT_CONTENT_BLOCK_SIZE","FILL_AVAILABLE_WIDTH","FILL_AVAILABLE_HEIGHT","MAX_CONTENT_WIDTH","MAX_CONTENT_HEIGHT","MIN_CONTENT_WIDTH","MIN_CONTENT_HEIGHT","FIT_CONTENT_WIDTH","FIT_CONTENT_HEIGHT","isPageFloat","COLUMN","REGION","PAGE","PageFloat","nodePosition","getOrder","isAllowedOnContext","pageFloatLayoutContext","isAnchorAlreadyAppeared","isAllowedToPrecede","PageFloatStore","nextPageFloatIndex","createPageFloatId","addPageFloat","VtreeImpl","findPageFloatByNodePosition","findPageFloatById","PageFloatFragment","continuations","area","continues","hasFloat","findNotAllowedFloat","shouldBeStashedBefore","addContinuations","getFlowName","PageFloatContinuation","PageFloatLayoutContext","generatingNodePosition","invalidated","floatStore","forbiddenFloats","floatFragments","stashedFloatFragments","floatAnchors","floatsDeferredToNext","floatsDeferredFromPrevious","layoutConstraints","locked","getPreviousSibling","getParent","getPreviousSiblingOf","getContainer","setContainer","reattachFloatFragments","getPageFloatLayoutContext","forbid","PageFloatLayoutStrategyResolver","findByFloat","isForbidden","addPageFloatFragment","floatFragment","dontInvalidate","fr1","fr2","invalidate","removePageFloatFragment","fragment","findPageFloatFragment","hasFloatFragments","hasContinuingFloatFragmentsInFlow","registerPageFloatAnchor","anchorViewNode","collectPageFloatAnchors","anchors","floatId","getDeferredPageFloatContinuations","cont","deferPageFloat","hasPrecedingFloatsDeferredToNext","ignoreReference","getLastFollowingFloatInFragments","lastFollowing","lastFollowingOfParent","c1","c2","getPageFloatContinuationsDeferredToNext","getFloatsDeferredToNextInChildContexts","checkAndForbidNotAllowedFloat","checkAndForbidFloatFollowingDeferredFloat","notAllowedFloat","removeEndFloatFragments","deferredFloats","floatsInFragments","fr","f1","f2","hasSameContainerAs","detachChildren","attachChildren","isInvalidated","validate","CssLogicalUtil","logicalFloatSide","stashEndFloatFragments","fragmentFloatSide","restoreStashedFragments","stashed","discardStashedFragments","getStashedFloatFragments","getLimitValue","layoutContext","logicalSide","physicalSide","limit","getLimitValueInner","parentLimit","limits","getLimitValuesInner","paddingRect","floatMinWrapBlockStart","floatMinWrapBlockEnd","resolveLengthPercentage","containerLength","convertLengthToPx","fragments","rootViewNodes","setFloatAreaDimensions","anchorEdge","init","force","blockSize","inlineSize","outerBlockSize","outerInlineSize","blockStart","blockEnd","inlineStart","inlineEnd","blockOffset","inlineOffset","limitBlockStartEndValueWithOpenRect","getRect","openRect","availableBlockSize","containerRect","Sizing","adjustContentRelativeSize","getContentInlineSize","getFloatFragmentExclusions","getMaxReachedAfterEdge","edge","Infinity","getBlockStartEdgeOfBlockEndFloats","getPageFloatClearEdge","isContinuationOfAlreadyAppearedFloat","isFragmentWithAlreadyAppearedFloat","columnRect","columnBlockEnd","blockStartLimit","getPageFloatPlacementCondition","logicalSides","logicalClearSide","floatOrder","isPrecedingFragment","hasPrecedingFragmentInChildren","hasPrecedingFragmentInParents","getLayoutConstraints","addLayoutConstraint","layoutConstraint","isColumnFullWithPageFloats","getMaxBlockSizeOfPageFloats","lock","unlock","isLocked","pageFloatLayoutStrategies","register","strategy","findByNodeContext","appliesToNodeContext","appliesToFloat","createPageFloat","resolveFloatReferenceFromColumnSpan","createPageFloatFragment","floatArea","adjustPageFloatArea","floatContainer","Footnote","FootnoteFragment","LineFootnotePolicyLayoutConstraint","regionContext","applyFootnoteStyle","convertPercentageSizesToPx","setComputedInsets","setComputedWidthAndHeight","constraint","forcedBreakValues","recto","verso","region","isForcedBreakValue","spreadBreakValues","isSpreadBreakValue","avoidBreakValues","isAvoidBreakValue","resolveEffectiveBreakValue","second","firstIsForcedBreakValue","secondIsForcedBreakValue","breakValueToStartSideValue","breakValue","startSideValueToBreakValue","startSideValue","blockify","blockifiedStr","displayStr","isAbsolutelyPositioned","getComputedDislayValue","isBlock","isInlineLevel","isRubyInternalDisplay","calculateEdge","extraOffset","parentElement","HTMLElement","cbox","range","createRange","setStart","setEnd","boxes","getRangeClientRects","getBoundingClientRect","fullRange","fullBoxes","fullBox","abs","getElementHeight","getComputedMargin","isOrphan","removeFollowingSiblings","isSpecial","isSpecialNodeContext","Element","AbstractBreakPosition","calculateOffset","getNodeContext","collectElementsOffset","breakPositionChosen","elementsOffsets","repetitiveElement","minimum","calculateMinimumOffset","EdgeBreakPosition","breakOnEdge","overflows","overflowIfRepetitiveElementsDropped","isEdgeUpdated","findAcceptableBreak","penalty","updateOverflows","getMinBreakPenalty","findEdgeBreakPosition","preferDropping","isFirstContentOfRepetitiveElementsOwner","Break","updateEdge","clonedPaddingBorder","calculateClonedPaddingBorder","LayoutHelper","isOverflown","isInstanceOfRepetitiveElementsOwnerFormattingContext","repetitiveElements","getRepetitiveElements","isFirstContentNode","LayoutProcessorResolver","find","RESOLVE_LAYOUT_PROCESSOR","processor","BlockLayoutProcessor","layout","leadingEdge","isFloatNodeContext","layoutFloatOrFootnote","isBreakable","layoutBreakableBlock","layoutUnbreakable","createEdgeBreakPosition","columnBlockSize","BreakPosition","startNonInlineElementNode","afterNonInlineElementNode","stopAtOverflow","clearOverflownViewNodes","parentNodeContext","removeSelf","finishBreak","forceRemoveSelf","endOfColumn","fixJustificationIfNeeded","processFragmentedBlockEdge","BlockFormattingContext","isFirstTime","firstTime","saveState","restoreState","blockLayoutProcessor","isInstanceOfBlockFormattingContext","RESOLVE_FORMATTING_CONTEXT","Display","AbstractLayoutRetryer","initialBreakPositions","initialStateOfFormattingContext","initialPosition","initialFragmentLayoutConstraints","prepareLayout","tryLayout","mode","resolveLayoutMode","doLayout","positionAfter","accepted","accept","postLayout","clearNodes","sibling","breakPositions","fragmentLayoutConstraints","LayoutIteratorStrategy","initialState","initialNodeContext","atUnforcedBreak","break","startNonDisplayableNode","afterNonDisplayableNode","startIgnoredTextNode","afterIgnoredTextNode","startNonElementNode","afterNonElementNode","startInlineElementNode","afterInlineElementNode","LayoutIterator","iterate","loopFrame","nextResult","nextInTree","nextNodeContext","EdgeSkipper","startNonInlineBox","endEmptyNonInlineBox","endNonInlineBox","breakAtTheEdge","onStartEdges","leadingEdgeContexts","lastAfterNodeContext","processForcedBreak","needForcedBreak","pageBreakType","saveEdgeAndProcessOverflow","checkOverflowAndSaveEdgeAndBreakPosition","processLayoutConstraint","violateConstraint","repetitiveElementsCache","HANGING_PUNCTUATION_NONE","allowEnd","hangingPunctuationFromPropertyValue","cssval","hangingPunctuation","isHangingPunctuationNone","TEXT_SPACING_NONE","trimStart","spaceFirst","trimEnd","trimAdjacent","ideographAlpha","ideographNumeric","TEXT_SPACING_NORMAL","TEXT_SPACING_AUTO","textSpacingFromPropertyValue","textSpacing","isTextSpacingNone","normalizeLang","embeddedContentTags","audio","canvas","embed","iframe","math","picture","svg","video","textPolyfill","getPolyfilledInheritedProps","preprocessSingleDocument","preprocessForTextSpacing","nodeIter","createNodeIterator","NodeFilter","SHOW_TEXT","nextNode","dataset","mathTypeset","textArr","lastIndex","processGeneratedContent","textSpacingVal","hangingPunctuationVal","whiteSpaceSave","whiteSpace","offsetHeight","offsetWidth","prevNode","isFirstInBlock","isFirstAfterForcedLineBreak","isLastBeforeForcedLineBreak","processTextSpacing","postLayoutBlock","checkPoints","isFirstFragment","isAfterForcedLineBreak","_p$sourceNode","checkIfFirstAfterForcedLineBreak","prevP","previousElementSibling","checkIfLastBeforeForcedLineBreak","nextP","_nodeContext$parent","isLastInBlock","textNode","currRange","prevRange","nextRange","isAtEndOfLine","selectNode","getClientRects","nextRect","tagName","punctProcessing","hangingFirst","hangingLast","hangingEnd","outerElem","innerElem","defaultView","getComputedStyle","isFullWidth","prevRects","prevRect","atEnd","atEndNoHang","checkUpright","_elem$ownerDocument$d","textOrientation","textCombineUpright","registerHooks","POLYFILLED_INHERITED_PROPS","PREPROCESS_SINGLE_DOCUMENT","POST_LAYOUT_BLOCK","DOMParser","parseFromString","SHADOW","getPseudoName","setPseudoName","PseudoelementStyler","contentProcessed","getStyle","deep","CssCascade","nest","processContent","contentVal","AfterIfContinues","viewRoot","pseudoColumn","PseudoColumn","initialPageBreakType","getColumn","createNodePositionForPseudoElement","pseudoElement","PseudoElement","createShadowContext","ROOTED","AfterIfContinuesLayoutConstraint","pseudoElementHeight","overflownNodeContext","nextCandidate","allowed","affectTo","AfterIfContinuesElementsOffset","equalsTo","getPriorityOfFinishBreak","processAfterIfContinuesOfNodeContext","processAfterIfContinues","mediaTags","AllLayoutConstraint","constraints","BoxBreakPosition","alreadyEvaluated","breakNodeContext","findBoxBreakPosition","Column","viewDocument","flowRootFormattingContext","isFloat","startEdge","endEdge","beforeEdge","afterEdge","footnoteEdge","chunkPositions","overflown","forceNonfitting","leftFloatEdge","rightFloatEdge","bottommostFloatTop","lastAfterPosition","pseudoParent","nodeContextOverflowingDueToRepetitiveElements","blockDistanceToBlockEndFloats","breakAtTheEdgeBeforeFloat","getTopEdge","getBottomEdge","getLeftEdge","getRightEdge","stopByOverflow","getExclusions","pageFloatExclusions","openAllViews","setViewRoot","stepIndex","calculateOffsetInNodeForNodeContext","setCurrent","maybePeelOff","firstLetterLength","firstLetterText","peelOff","buildViewToNextBlockEdge","bodyFrame","position1Param","positionParam","buildDeepElementView","position1","createFloat","killFloats","cssFloat","createFloats","parseComputedLength","insets","getComputedPaddingBorder","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","getComputedInsets","boxSizing","nodeContextIn","layoutFloat","lineRelativeValue","nodeContextAfter","floatBBox","floatBox","probe","parentBox","floatBoxMeasure","floatHorBox","dir","boxExtent","floatWidth","floatHeight","floatBottom","floatBoxEdge","floatBoxTop","floatBands","lastY","floatBand","updateMaxReachedAfterEdge","setupFloatArea","floatLayoutContext","containingBlockRect","fitWithinContainer","createPageFloatArea","floatAreaElement","parentPageFloatLayoutContext","parentContainer","PageFloatArea","layoutSinglePageFloatFragment","allowFragmented","pageFloatFragment","firstFloat","newPosition","failed","floatChunkPosition","newFragment","layoutPageFloatInner","cancelLayout","layoutStashedPageFloats","success","excluded","newFloatAreas","newFragments","stashedFragment","setFloatAnchorViewNode","anchor","applyPseudoelementStyle","columnContext","layoutPageFloat","createJustificationAdjustmentElement","insertionPoint","span","inner","textIndent","textAlign","leftPos","rightPos","inlineBlock","padding","paddingStr","addAndAdjustJustificationElement","insertAfter","hyphenChar","resolveHyphenateCharacter","prevSibling","prevText","compensateJustificationLineHeight","br","spanRect","brRect","parentElem","processLineStyling","resNodeContext","lastCheckPoints","totalLineCount","linePositions","findLinePositions","lineBreak","findAcceptableBreakInside","resNodeContextParam","isLoneImage","getTrailingMarginEdgeAdjustment","trailingEdgeContexts","maxPos","minNeg","checkPointIndex","saveBoxBreakPosition","findEndOfLine","linePosition","isUpdateMaxReachedAfterEdge","effectiveLinePosition","lowCP","low1","highCP","high1","mid1","edgePosition","resolveTextNodeBreaker","breakTextNode","RESOLVE_TEXT_NODE_BREAKER","TextNodeBreaker","getRangeBoxes","wentUp","lastGood","haveStart","endNotReached","seekRange","setStartBefore","setEndAfter","boxList","lineBefore","lineAfter","lineEnd","lineLength","overlap","boxSize","paddingBorders","getOffsetByRepetitiveElements","bp","repetitiveElementsOffset","firstOverflowing","findFirstOverflowingEdgeAndCheckPoint","lineIndex","forceCutBeforeOverflowing","checkPoint","blockEdge","getAfterEdgeOfBlockContainer","blockParent","cp","findAcceptableBreakPosition","nextPenalty","minPenalty","breakPosition","doFinishBreak","initialComputedBlockSize","skipTailEdges","flowPosition","zeroIndent","checkOverflowAndSaveEdge","marginEdge","saveEvenOverflown","saveEdgeBreakPosition","applyClearance","spacer","spacerBox","clearEdge","wAdj","hAdj","isBFC","skipEdges","forcedBreakValue","fc","_nodeContext$parent2","layoutProcessor","_nodeContext$parent3","nodeContextParam","resultNodeContext","layoutNext","initGeom","columnBBox","include","exclude","granularity","segment","segments","segmentCount","lowestIncludeIndex","segmentIndex","activeSegments","y2min","yn","bandIntersections","bi1","bi2","rw","breakAtEdge","isFullWithPageFloats","nextInTreeListener","retryer","ColumnLayoutRetryer","doFinishBreakOfFragmentLayoutConstraints","sortedFragmentLayoutConstraints","pending","redoLayout","isPseudoelement","saveDistanceToBlockEndFloats","blockStartEdgeOfBlockEndFloats","isFinite","isInstanceOfRepetitiveElementsOwnerLayoutConstraint","isInstanceOfAfterIfContinuesLayoutConstraint","getElementsOffsetsForTableCell","startNodeContexts","parentClonedPaddingBorder","allowBreakAtStartPosition","startNodeContext","isStartNodeContext","isLastAfterNodeContext","getColumnElement","checkpointIndex","viewIndex","data","breakAfterSoftHyphen","breakAfterOtherCharacter","updateNodeContext","replaceData","ch0","ch1","initialOverflown","DefaultLayoutMode","_LayoutRetryers$Abstr","LayoutRetryers","hasNextCandidate","floatMargins","fixFloatSizeAndPosition","refWidth","refHeight","convertPercentageToPx","refValue","valueString","percentageValue","rootViewNode","RepetitiveElementsOwnerFormattingContext","rootSourceNode","getRootViewNode","getRootNodeContext","initializeRepetitiveElements","Shared","elements","RepetitiveElements","ownerSourceNode","headerSourceNode","footerSourceNode","headerViewNode","footerViewNode","headerNodePosition","footerNodePosition","headerHeight","footerHeight","isSkipHeader","isSkipFooter","enableSkippingFooter","enableSkippingHeader","doneInitialLayout","firstContentSourceNode","lastContentSourceNode","affectedNodeCache","afterLastContentNodeCache","allowInsert","allowInsertRepeatitiveElements","setHeaderNodeContext","setFooterNodeContext","updateHeight","prepareLayoutFragment","appendHeaderToFragment","rootNodeContext","appendElementToFragment","appendFooterToFragment","Layout","moveChildren","isAfterLastContent","findResultFromCache","isAfterNodeContextOf","cache","calculator","cacheEntry","includeChildren","parentsOfNode","currentParent","isEnableToUpdateState","updateState","preventSkippingHeader","preventSkippingFooter","isHeaderRegistered","isFooterRegistered","isHeaderSourceNode","isFooterSourceNode","LayoutEntireBlock","LayoutFragmentedBlock","LayoutEntireOwnerBlock","doInitialLayout","LayoutFragmentedOwnerBlock","RepetitiveElementsOwnerLayoutConstraint","RepetitiveElementsOwnerLayoutRetryer","EntireBlockLayoutStrategy","LayoutUtil","appendHeaderToAncestors","repetitiveLayoutProcessor","layoutEntireBlock","TableRow","rowIndex","cells","addCell","cell","getMinimumHeight","TableCell","columnIndex","viewElement","colSpan","rowSpan","anchorSlot","setHeight","setAnchorSlot","slot","TableSlot","TableCellFragment","pseudoColumnContainer","cellNodeContext","TableCaptionView","BetweenTableRowBreakPosition","acceptableCellBreakPositions","getAcceptableCellBreakPositions","cellFragments","getCellFragments","cellFragment","getRowIndex","findRowIndexBySourceNode","getRowSpanningCellsOverflowingTheRow","getCellFragmentOfCell","InsideTableRowBreakPosition","beforeNodeContext","allCellsBreakable","row","getRowByIndex","isFreelyFragmentableRow","getCellsFallingOnRow","TableFormattingContext","tableSourceNode","columnCount","tableWidth","captions","colGroups","colWidths","rows","slots","lastRowViewNode","cellBreakPositions","cellNodePosition","finishFragment","addRow","getRowSlots","rowSlots","rowUpper","startColIndex","addCellFragment","uniqueCells","getColumnCount","sum","updateCellSizes","findCellFromColumn","tableCell","col","collectElementsOffsetOfUpperCells","collected","collectElementsOffsetFromColumn","collectElementsOffsetOfHighestColumn","elementsInColumn","ElementsOffsetOfTableCell","RepetitiveElementImpl","repeatitiveElementsInColumns","calculateMaxOffsetOfColumn","maxOffset","isValidParentOfTableRow","skipNestedTable","parentDisplay","isNestedInlineTable","EntireTableLayoutStrategy","inRow","inHeaderOrFooter","postLayoutBlockContents","captionView","computedStyle","registerCheckPoint","TableLayoutStrategy","currentRowIndex","currentColumnIndex","originalStopAtOverflow","inHeader","inFooter","resetColumn","getColSpanningCellWidth","layoutCell","startChunkPosition","cellViewNode","hasBrokenCellAtSlot","slotIndex","cellBreakPosition","extractRowSpanningCellBreakPositions","rowSpanningCellBreakPositions","layoutRowSpanningCellsFromPreviousFragment","rowCount","currentRow","spanningCellRowIndex","occupiedSlotIndices","rowCellBreakPositions","rowNodeContext","cont1","addDummyCellUntil","upperColumnIndex","dummy","breakChunkPosition","startTableRow","registerCellFragmentIndex","tdNodeStep","getElementOffset","startTableCell","afterNodeContext","startNodePosition","ignoreList","tableLayoutOptionCache","TableLayoutProcessor","layoutEntireTable","getColumnWidths","lastRow","dummyRow","dummyCells","getColGroupElements","tableElement","normalizeAndGetColElements","cols","colGroup","cloneNode","addMissingColElements","normalizeColGroups","createDocumentFragment","tableRootSourceNode","pair","tableLayoutOption","tableBBox","calculateBreakPositionsInside","EntireTableBreakPosition","addCaptions","caption","addColGroups","removeColGroups","iterator","LayoutRetryer","cellContentElement","cellElement","cellElementRect","tableFormattingContext","LayoutFragmentedTable","LayoutEntireTable","tableNodeContext","EntireTableLayoutConstraint","tableRootNode","TableRowLayoutConstraint","cellFragmentLayoutConstraints","collectCellFragmentLayoutConstraints","removeDummyRowNodes","_RepetitiveElementImp4","array","dummyNode","getCellFragemnts","tableLayoutProcessor","mean","ColumnBalancingTrialResult","layoutResult","getBlockSize","setBlockSize","ColumnBalancer","layoutContainer","columnGenerator","regionPageFloatLayoutContext","originalContainerBlockSize","balanceColumns","preBalance","savePageFloatLayoutContexts","candidates","createTrialResult","updateCondition","restoreContents","postBalance","calculatePenalty","columnPageFloatLayoutContexts","newLayoutResult","columns","canReduceContainerSize","lastCandidate","secondLastCandidate","reduceContainerSize","newEdge","BalanceLastColumnBalancer","originalPosition","foundUpperBound","totalBlockSize","checkPosition","isLastColumnLongerThanAnyOtherColumn","lastColumnBlockSize","BalanceNonLastColumnBalancer","meanValue","computedBlockSizes","SlipRange","endStuckFixed","endFixed","endSlipped","SlipMap","getMaxFixed","getMaxSlipped","addStuckRange","addSlippedRange","slippedByFixed","fixedBySlipped","slipped","Box","atBlockStart","atFlowStart","isParentBoxDisplayed","isBlockValue","hasBoxValue","styleValues","beforeBox","afterBox","hasBox","styleValue","getBreakValue","buildAfterPseudoElementBox","cv","displayValue","BoxStack","atStartStack","lastBox","lastFlowName","isCurrentBoxDisplayed","newFlowChunk","isAtFlowStart","encounteredTextNode","CDATA_SECTION_NODE","atStart","nearestBlockStartOffset","Styler","primaryFlows","cascadeHolder","rootStyle","flowChunks","flowListener","flowToReach","idToReach","offsetMap","primaryStack","rootBackgroundAssigned","rootLayoutAssigned","breakBeforeValues","boxStack","bodyReached","rootOffset","getAttrStyle","postprocessTopStyle","replayFlowElementsFromOffset","hasProp","transferPropsToRoot","srcStyle","pname","isBody","backgroundColor","backgroundProps","backgroundImage","columnProps","layoutProps","isRelativeFontSize","unitSize","getTopContainerStyle","styleUntil","CSSStyleDeclaration","styleAttrValue","getReachedOffset","flowNameStr","encounteredFlowElement","getNodeByOffset","nodeOffset","getNodeOffset","resetFlowChunkStream","encounteredFlowChunk","styleUntilFlowIsReached","optionsCV","options","static","lingerCV","priorityCV","flow","registerForcedBreakOffset","lookup","targetSlippedOffset","afterPseudoBreakBefore","blockStartOffset","_style$page","beforePseudoBreakAfter","validator","failure","markAsStartGroup","isStartGroup","markAsEndGroup","isEndGroup","markAsStartAlternate","isStartAlternate","markAsEndAlternate","isEndAlternate","getAlternate","Connection","where","what","ValidatingGroup","connections","nomatch","emptyHead","connect","nodeIndex","group","clonedNode","connection","groupConnection","addSpecialToArr","clause","ALWAYS_FAIL","endSpecialGroup","arrs","startSpecialGroup","endClause","startClause","addPrimitive","isSimple","isPrimitive","PrimitiveValidator","addGroup","how","ALTERNATE","combine","connectionIndex","REPEATED","OPTIONAL","successTerminal","failTerminal","PropertyValidator","validateForShorthand","rval","idents","units","NO_IDENTS","ListValidator","failureTerminal","validateList","startIndex","alternativeStack","alternatives","inval","outval","SpaceListValidator","CommaListValidator","validateSingle","hasCommaListValidator","FuncValidator","ShorthandSyntaxNode","tryParse","shorthandValidator","ShorthandSyntaxProperty","validators","rvals","len","ShorthandSyntaxPropertyN","ShorthandSyntaxCompound","index0","ShorthandValidator","syntax","propList","setOwner","syntaxNodeForProperty","receiver","defaultValues","propagateInherit","SimpleShorthandValidator","InsetsShorthandValidator","createSyntaxNode","InsetsSlashShorthandValidator","slashIndex","index1","CommaShorthandValidator","acc","FontShorthandValidator","_SimpleShorthandValid2","fontVariant","fontStretch","familyList","family","systemFonts","shorthandValidators","SIMPLE","INSETS","INSETS_SLASH","FONT","ValidatorSet","prefixes","namedValidators","shorthands","addReplacement","newGroup","vals","subgroup","FOLLOW","addCounts","primitive","newFunc","initBuiltInValidators","HASHCOLOR","POS_INT","POS_NUM","POS_PERCENTAGE","NEGATIVE","ZERO","ZERO_PERCENTAGE","POS_LENGTH","vi","vb","vmin","vmax","pvi","pvb","pvmin","pvmax","POS_ANGLE","deg","grad","rad","turn","POS_TIME","ms","FREQUENCY","Hz","kHz","RESOLUTION","URI","STRING","stdfont","icon","menu","isBuiltIn","readNameAndPrefixes","section","rulePrefixes","parseValidators","expectval","setop","currop","builtIn","parseDefaults","parseShorthands","insetShorthand","compound","makePropSet","shorthand","pval","origName","rvalue","baseValidatorSet","traitProps","prepareProperties","properties","Face","fontTraitKey","blobURLs","blobs","traitsEqual","makeAtRule","fontBytes","blobURL","webkitURL","createObjectURL","DocumentFaces","deobfuscator","familyMap","registerFamily","srcFace","viewFace","srcFamily","viewFamilyFromSrc","viewFamilyFromView","filterFontFamily","newValues","rf","Mapper","opt_familyPrefix","srcURLMap","familyPrefix","familyCounter","getViewFontFamily","documentFaces","viewFamily","initFont","viewFontFace","loadFont","srcFamilySrc","viewFaceParam","BLOB","findOrLoadFonts","srcFaces","waitFontLoading","fonts","unloadedCount","fontFace","keyCount","PageBox","specified","pageMaster","_scope","parentInstance","param","copySpecified","destSpecified","cloneChildren","RootPageBox","PageMasterScope","self","keyMap","boxInstance","lookupInstance","resolveFunc","resolveName","PageMaster","PageMasterInstance","resetScope","PartitionGroup","PartitionGroupInstance","Partition","PartitionInstance","toExprAuto","toExprZero","toExprZeroAuto","toExprZeroBorder","styleVal","toExprBool","PageBoxInstance","pageBox","autoWidth","autoHeight","isAutoWidth","isAutoHeight","isTopDependentOnAutoHeight","isRightDependentOnAutoWidth","calculatedWidth","calculatedHeight","pageMasterInstance","namedValues","namedFuncs","suppressEmptyBoxGeneration","addNamedValues","altName","columnGap","initEnabled","minPageWidth","minPageHeight","boxSpecificEnabled","initHorizontal","parentWidth","leftBP","rightBP","extra","remains","initVertical","parentHeight","topBP","bottomBP","initColumns","depends","registerInstance","getActiveRegions","_context$styler","_rootStyle$name","getPropAsNumber","propagateProperty","docFaces","propagatePropertyToElement","propagateDelayedProperty","assignLeftPosition","assignRightPosition","xpos","assignTopPosition","ypos","assignBottomPosition","assignBeforePosition","assignAfterPosition","assignStartEndPosition","sizeWithMaxHeight","sizeWithMaxWidth","prepareContainer","passPreProperties","transferContentProps","passContentProperties","transferSinglUriContentProps","passSingleUriContentProperties","finishContainer","readHeight","readWidth","bbox","ruleWidth","ruleStyle","ruleColor","containerSize","border","rule","passPostProperties","delayedProperties","applyCascadeAndInit","docElementStyle","userAgentPageMasterPseudo","resolveAutoSizing","RootPageBoxInstance","_PageBoxInstance","adjustPageLayout","processPartitionList","listVal","conflicting","qname","term","required","pmEnabledVal","pmEnabled","_PageBoxInstance4","PageBoxParserHandler","PartitionParserHandler","PartitionGroupParserHandler","partition","partitionGroup","PageMasterParserHandler","resolvePageProgression","Constants","pageSizes","a10","a9","a8","a7","a6","a5","a4","a3","a2","a1","a0","b10","b9","b8","b7","b6","b5","b4","b3","b2","b1","b0","c10","c9","c8","c7","c6","c5","c4","c3","c0","letter","legal","ledger","defaultPrinterMarkLineWidth","CornerMarkPosition","CrossMarkPosition","defaultPrinterMarkLineLength","defaultBleedOffset","resolvePageSizeAndBleed","pageSizeAndBleed","bleed","bleedOffset","cropOffset","val1","marks","evaluatePageSizeAndBleed","evaluated","createPrinterMarkSvg","createPrinterMarkElement","lineWidth","elementType","MarginBoxPositionAlongVariableDimension","propertiesAppliedToPartition","outline","pageMarginBoxes","isInTopRow","isInBottomRow","isInLeftColumn","isInRightColumn","positionAlongVariableDimension","START","CENTER","pageMarginBoxNames","PageRuleMaster","bodyPartitionKey","pageSize","PageRulePartition","createPageMarginBoxes","applySpecified","marginBoxesMap","_marginBoxes","PageMarginBoxPartition","PageRuleMasterInstance","PageRulePartitionInstance","marginBoxName","ownStyle","ownVal","PageMarginBoxPartitionInstance","pageRuleMaster","pageAreaDimension","pageMarginBoxInstances","_PageMaster$PageMaste2","setPageAreaDimension","borderBoxWidth","borderBoxHeight","marginBoxContainers","horizontalDimensions","verticalDimensions","sizeMarginBoxesAlongVariableDimension","isHorizontal","containers","boxInstances","boxParams","boxInfo","boxParam","SingleBoxMarginBoxSizingParam","evaluatedDim","getSizesOfMarginBoxesAlongVariableDimension","needRecalculate","maxOuterSizes","maxSize","evaluatedMaxSize","FixedSizeMarginBoxSizingParam","getOuterSize","minOuterSizes","minSize","evaluatedMinSize","startEndSum","outerSize","availableSize","startBoxParam","centerBoxParam","endBoxParam","startEndBoxParam","MultipleBoxesMarginBoxSizingParam","centerSizes","distributeAutoMarginBoxSizes","xSize","startEndAutoSize","hasAutoSize","startEndSizes","ySize","xOuterMaxContentSize","getOuterMaxContentSize","yOuterMaxContentSize","maxContentSizeSum","xOuterMinContentSize","getOuterMinContentSize","minContentSizeSum","hasAutoSize_","fixedSize","pageRulePartition","_PageMaster$Partition3","resolvePageBoxDimensions","borderBoxExtent","marginStart","marginEnd","endSide","extentName","pageExtent","paddingStart","paddingEnd","borderStartWidth","borderEndWidth","pageMarginBoxPartition","applyVerticalAlign","_PageMaster$Partition4","flexAlign","align","availableExtent","outerExtent","positionAndSizeAlongFixedDimension","insideName","outsideName","outside","pageMargin","marginInside","marginOutside","paddingInside","paddingOutside","borderInsideWidth","borderOutsideWidth","getComputedValues","pageMarginValue","borderAndPadding","PageManager","rootPageBoxInstance","pageMasterCache","definePageProgression","styleInstance","isVersoFirstPage","isVersoPage","pageProgression","getCascadedPageStyle","getPageRulePageMaster","makeCacheKey","generatePageRuleMaster","generateCascadedPageMaster","propsStr","makeCascadeValueObjectKey","newPageMaster","pageMasterStyle","CheckPageTypeAction","IsFirstPageAction","IsBlankPageAction","IsLeftPageAction","IsRightPageAction","IsRectoPageAction","IsVersoPageAction","IsNthPageAction","layoutPositionAtPageStart","blankPageAtStart","ApplyPageRuleAction","targetMap","boxName","targetBox","PageParserHandler","pageProps","currentPageSelectors","currentNamedPageSelector","currentPseudoPageClassSelectors","finishSelector","selectors","_CssCascade$CascadePa","selector","noPageSelectorProps","prevCascVal","marginBoxMap","boxStyle","PageMarginBoxParserHandler","allowScripts","deferredScripts","sameScripts","getScriptsInOrNearHead","scriptsInBodyNotNearHead","script","loadScript","srcScriptElem","flags","inHead","scriptContent","isModule","async","defer","needDefer","forceDefer","hasScripts","onload","builtinMathJax2","MathJax","_window$MathJax","version","_window$MathJax$versi","startsWith","getElementsByTagName","scriptElem","attributes","transformURIs","attributeValue","m1","namespacePrefixMap","frontEdgeBlackListHor","frontEdgeBlackListVert","frontEdgeUnforcedBreakBlackListHor","frontEdgeUnforcedBreakBlackListVert","ViewFactory","footnoteStyle","stylerProducer","customRenderer","fallbackMap","createPseudoelementShadow","cascStyle","getPseudoMap","addedNames","att","shadowStyler","computedPseudoStyleMap","computedPseudoStyle","createRefShadow","refDocParam","refDoc","refElement","getElement","refStyler","getStylerForDoc","createShadows","templateURLVal","template","shadow","cont2","computeStyle","displayValues","inheritFromSourceParent","shadowRoot","nodeStyle","inheritanceVisitor","sname","inheritLangAttribute","transferPolyfilledInheritedProps","numericVal","resolveFormattingContext","createElementView","needToProcessChildren","inheritedValues","Scripts","HTMLScriptElement","shadowParam","parentWritingMode","isFlowRoot","floating","listItem","isAtForcedBreak","borderCollapse","borderSpacing","processAfterIfcontinues","whitespaceValue","overflowWrap","processRepeatOnBreak","findAndProcessRepeatingElements","custom","tag","NCX","navParent","hp","behavior","contentWindow","navigator","epubReadingSystem","layoutStyle","hasFeature","imageResolution","images","cssWidth","cssHeight","attrWidth","attrHeight","hasAutoWidth","hasAutoHeight","attributeCount","delayedSrc","attribute","attributeNS","nodeValue","transformedValue","anchorElem","image","Image","isSVGUrlAttribute","Urls","attributePrefix","imageFetcher","listStyleImage","listStyleURL","preprocessElementStyle","applyComputedStyles","blackList","isParagraph","modifyElemDimensionWithImageResolution","textLevelElements","abbr","bdi","bdo","cite","del","dfn","ins","kbd","ruby","samp","small","strong","sup","time","u","var","childNode","SVG_URL_ATTRIBUTES","scaledWidth","scaledHeight","numericMaxHeight","numericMinWidth","numericMinHeight","PREPROCESS_ELEMENT_STYLE","createTextNodeView","preprocessTextContent","Diff","originl","PREPROCESS_TEXT_CONTENT","processedText","createNodeView","processChildren","processShadowContent","contentNode","contentShadowType","contentShadow","nextPositionInTree","shadowNode","sr","isTransclusion","transclusionType","proc","addImageFetchers","bg","isRelativePositioned","_this$viewRoot","propertiesNotPassedToDOM","fixRubyTextFontSize","userAgent","fontSizeInPx","_this$nodeContext2","_this$nodeContext2$pa","minFontSizeInPx","pn","childComputedStyle","boxDecorationBreak","step1","step2","elem2","nodePosition1","nodePosition2","DOMParserSupportedType","DefaultClientLayout","layoutBox","subtractOffsets","originRect","viewportLeft","viewportTop","rects","layoutBoxRect","Viewport","opt_root","opt_width","opt_height","outerZoomBox","contentContainer","innerWidth","innerHeight","isHeadlessBrowser","webdriver","resetZoom","XMLDocHolder","totalOffset","idMap","NodeList","offsetStr","srcNode","getTotalOffset","buildIdMap","xmlid","getElementsByName","parseAndReturnNullIfError","opt_parser","docElement","errorTagName","parseXMLResource","supportedKeys","APPLICATION_XML","TEXT_HTML","APPLICATION_XHTML_XML","IMAGE_SVG_XML","predicate","check","withAttribute","Predicate","withChild","opt_childPredicate","asArray","pr","forEachNode","forEachNonNull","uaStylesheetBaseFetcher","CssValidator","Style","rootBox","fontFaces","footnoteProps","flowProps","viewportProps","fontDeobfuscator","currentLayoutPosition","matchPageSide","lookupOffset","flowChunkIsAfterParentFlowForcedBreak","pageNumberOffset","sizeViewport","textZoom","scaleFactor","defaultFontSize","widthVal","heightVal","StyleInstance","defaultLang","fontMapper","stylerMap","faces","pageBoxInstances","pageManager","rootPageFloatLayoutContext","pageBreaks","pageSheetSize","pageSheetHeight","pageSheetWidth","Font","CssStyler","CssPage","matchStartPageSide","srcDocument","srcScripts","needPrepareForWebFonts","textContentDiv","fontFamilySet","findFontFamilyInStyle","_style$fontFamily","findAllFontFamily","arg","isArray","getAllFontFamilyList","savedDollar","$","classList","FontJSON","_window$ret","Event","isRectoStart","isLTR","getStyleForDoc","supported","supportsReceiver","getConsumedOffset","chunkOffset","getPosition","layoutPosition","noLookAhead","currentPosition","consumedOffset","dumpLocation","updateStartSide","flowChunkBreakBefore","flowBreakAfter","selectPageMaster","pageMasters","coeff","pageArea","initLingering","breakOffsetBeforeStartIndex","breakOffsetBeforeStart","parentFlowPosition","parentStartOffset","setFormattingContextToColumn","layoutDeferredPageFloats","pageStartPos","deferredFloatOffset","parentInvalidated","getLastAfterPositionIfDeferredFloatsExists","layoutColumn","repeatedIndices","removedIndices","alt","counterConstraint","createAndLayoutColumn","forceNonFitting","dontApplyExclusions","boxContainer","columnPageFloatLayoutContext","positionAtColumnStart","columnContainer","columnY","columnX","setPagePageFloatLayoutContextContainer","pagePageFloatLayoutContext","getRegionPageFloatLayoutContext","layoutFlowColumnsWithBalancing","positionAtContainerStart","layoutColumns","layoutFlowColumns","generatorResult","columnFill","columnBalancer","lastColumn","Vgen","dontExclude","forwardOrderInLayout","removed","innerContainerTag","innerContainer","outerShape","processLinger","noMorePrimaryFlows","layoutNextPage","_cp$flowPositions$bod","bleedBoxPaddingEdge","evaluatedPageSizeAndBleed","setPageSizeAndBleed","bgcolor","printerMarkOffset","cropMarkLineLength","bleedMarkLineLength","maxLineLength","svgWidth","points1","points2","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","line1","line2","longLineLength","BOTTOM","horizontalLine","verticalLine","opposite","LEFT","RIGHT","isLeftPage","getTriggersForDoc","BaseParserHandler","masterHandler","insideRegion","pageHandler","regionCount","regionHandler","processViewportMeta","meta","StyleParserHandler","cascadeParserHandler","parseOPSResource","OPSDocStore","styleByKey","styleFetcherByKey","styleByDocURL","triggersByDocURL","styleSheets","triggerSingleDocumentPreprocessing","authorStyleSheets","userStyleSheets","setStyleSheets","userAgentXML","clearStyleSheets","addAuthorStyleSheet","addUserStyleSheet","stylesheet","XmlDoc","triggerList","getElementsByTagNameNS","triggerElem","EV","sources","userAgentURL","title","rel","sph","source","encode32","decode32","bytes","bytesToSHA1Int32","appendCount","w","bi","TOCView","rendererFactory","setAutoHeight","makeCustomRenderer","renderer","srcElem","viewParent","replaceChild","createComment","adaptParentClass","button","toggleNodeExpansion","tabIndex","showTOC","tocBoxUrl","viewportSize","OPS","bodyChildElem","hideTOC","isTOCVisible","getTOC","exportTree","links","exportLink","hash","innerText","tocNodeElem","ce","adaptClass","elem1","stopPropagation","EPUBDocStore","plainXMLStore","jsonStore","opfByURL","primaryOPFByEPubURL","deobfuscators","documents","makeDeobfuscatorFactory","loadAsPlainXML","startLoadingAsPlainXML","loadAsJSON","startLoadingAsJSON","loadPubDoc","haveZipMetadata","loadEPUBDoc","opf","loadOPF","manifestObj","reportLoadError","OPFDoc","initWithWebPubManifest","loadWebPub","containerXML","pubURL","opfXML","encXML","zipMetadata","initWithXMLDoc","manifestLink","manifestUrl","xhtmlToc","addDocument","docURL","domain","removePath","OPFItem","mediaType","itemRefElement","compressedSize","compressed","epage","epageCount","skipPagesBefore","itemProperties","initWithElement","itemElem","opfURL","propStr","initWithParam","getOPFItemId","predefinedPrefixes","dcterms","marc","rendition","onix","xsd","defaultIRI","metaTerms","language","creator","titleType","displaySeq","alternateScript","role","getMetadataComparator","item1","item2","i1","_r1$metaTerms$display","i2","_r2$metaTerms$display","getMathJaxHub","Hub","PageViewMode","supportedMediaTypes","items","spine","itemMap","itemMapByPath","uid","bindings","prePaginated","epageIsRenderedPage","epageCountCallback","metadata","ncxToc","cover","createDocumentURLTransformer","MATHML","OPFDocumentURLTransformer","path","restoreURL","encoded","getMetadata","getPathFromURL","epubBaseURL","manifestURL","pkg","uidref","uidElem","srcToFallbackId","fallback","nav","fallbackSrc","tocAttr","pageProgressionAttr","idpfObfURLs","mediaTypeElems","handlerId","mroot","prefixMap","resolveProperty","iri","rawItems","refines","scheme","DC","rawItemsByTarget","rawItem","makeMetadata","entryMap","sortMetadata","sha1Sum","blob","webkitSlice","fileReader","FileReader","readAsArrayBuffer","dataView","DataView","byteLength","getUint8","setUint8","assignAutoPages","manifestText","obfuscations","obfuscationKey","sha1","encodedPath","obfuscation","DEFAULT","setEPageCountMode","countEPages","offsetPerEPage","initWithChapters","itemref","readingProgression","_manifestObj$metadata","author","_manifestObj$metadata2","inLanguage","_manifestObj$metadata3","primaryEntryPath","readingOrder","encodeURI","hrefNoFragment","itemCount","tocFound","readingOrderOrResources","itemObj","isInReadingOrder","encodingFormat","_this12$items","getCFI","offsetInItem","cfi","CFI","resolveFragment","opfNav","idref","nodeNav","resolveEPage","getEPageFromPosition","makePageAndPosition","OPFView","pageSheetSizeReporter","spineItems","spineItemLoadingContinuations","tocAutohide","tocView","Counters","getPage","viewItem","getCurrentPageProgression","finishPageContainer","oldPage","prevItem","newPage","insertPos","renderSinglePage","makePage","posParam","layoutPositions","prevPos","getPageViewItem","resultPosition","pageAndPosition","nextLayoutPosition","normalizeSeekPosition","seekOffset","seekOffsetPageIndex","complete","findPage","sync","resultPage","normalizedPosition","renderPage","renderAllPages","renderPagesUpto","notAllPages","lastResult","firstPage","lastPage","nextPage","nextViewItem","previousPage","isRectoPage","isLeft","getSpread","otherPageAndPosition","thisPage","otherPage","nextSpread","isRecto","next2","result2","previousSpread","oldPrevPageCont","navigateToEPage","navigateToFragment","navigateTo","restored","pageCont","matrix","cssMatrix","makeObjectView","handlerSrc","srcParam","typeParam","pvalue","makeMathJaxView","hub","clonedMath","importNode","resolveURLsInMathML","Push","newUrl","loadingContinuations","epubSpineProperties","pageCounterOffset","_this27$spineItems$","previousViewItem","pubTitles","removeRenderedPages","hasAutoSizedPages","hasPages","autohide","toc","Toc","tocWidth","tocHeight","ZoomType","AdaptiveViewer","viewportElement","instanceId","callbackFn","kick","sendCommand","resizeListener","hyperlinkListener","pageRuleStyleElement","pageSheetSizeAlreadySet","renderTask","packageURL","touchActive","touchX","touchY","needResize","needRefresh","currentSpread","pagePosition","fitToScreen","pageViewMode","waitForLoading","opfView","findOrCreateStyleElement","cssText","styleElement","pageReplacedListener","loadPublication","loadXML","configure","moveTo","addLogListeners","LOADING","SINGLE_PAGE","logLevel","setReadyState","command","Profile","zipmeta","authorStyleSheet","userStyleSheet","Epub","render","resolvedParams","cancelRenderingTask","resize","resolveLength","matched","autoresize","vp","userAgentRootURL","rootURL","configurePlugins","CONFIGURATION","showCurrent","forCurrentPages","removePageListeners","hidePages","showSinglePage","showPage","showSpread","leftWidth","rightWidth","reportPosition","sendLocationNotification","createViewport","vs","resolveSpreadView","SPREAD","updateSpreadView","sizeIsGood","spreadViewChanged","setPageSize","setPageSizePageRules","_this$pageSizes","_this$pageSizes2","convertSize","ptFloor","ptFrac","widthMax","heightMax","widthPt","heightPt","removePageSizePageRules","tocVisible","setSpreadZoom","setPageZoom","getAdjustedZoomFactor","getSpreadDimensions","pageDimension","calculateZoomFactorToFitInsideViewPort","queryZoomFactor","pageDim","FIT_INSIDE_VIEWPORT","RenderingCanceledError","resizeTask","INTERACTIVE","notification","COMPLETE","method","currentVisibility","changeAutohide","runCommand","actionName","initEmbed","cmd","maybeParse","viewer","hrefEvent","internal","frameInternal","adapt_command","setPrototypeOf","convertViewerOptions","Navigation","CoreViewer","settings","opt_options","initialized","adaptViewer_","eventTarget","dispatcher","autoResize","pageBorderWidth","AUTO_SPREAD","setOptions","defineProperty","removeListener","loadDocument","singleDocumentOptions","opt_documentOptions","opt_viewerOptions","loadDocumentOrPublication","pubUrl","documentOptions","convertStyleSheetArray","convertSingleDocumentOptions","documentObject","resolveNavigation","PREVIOUS","NEXT","navigateToPage","opt_epage","EPAGE","navigateToInternalUrl","opt_show","opt_autohide","getPageSizes","_this$adaptViewer_$op","_this$adaptViewer_$op2","getCover","toNumberOrNull","opt","VivliostylePrint","htmlDoc","printCallback","iframeWin","hideIframe","removeIframe","borderWidth","printInstance","srcdoc","runInIframe","preparePrint","browserPrint","cleanUp","docBlob","Viewer","Promise","config","html","css","printHTML"],"mappings":"yBA+BA,IAAIA,GAAe,EAanB,SAASC,EAAUC,EAAOC,EAAOC,EAAYC,MAEvCH,IAAUC,SACRD,EACK,CAAC,CAfG,EAeUA,IAEhB,MAGS,MAAdE,EAAoB,KAClBE,EA6mBR,SAA+BC,EAASC,EAASJ,OAE3CK,EAAiC,iBAAfL,EACpB,CAAEM,MAAON,EAAYO,OAAQ,GAAMP,EAAWK,SAC5CG,EAAiC,iBAAfR,EACpB,KAAOA,EAAWQ,SAKhBC,EAAYN,EAAQI,OACpBG,EAAYN,EAAQG,UACA,IAApBF,EAASE,SAA8B,OAAbC,GAAyC,IAApBA,EAASD,QAAe,KAErEI,EAAYN,EAASC,MACrBM,EAAYT,EAAQU,MAAM,EAAGF,GAC7BG,EAAWX,EAAQU,MAAMF,GACzBI,EAAiBP,EAAWA,EAASF,MAAQ,KAG3CU,EAAYL,EAAYD,EAAYD,MACjB,OAAnBM,GAA2BA,IAAmBC,MAG9CA,EAAY,GAAKA,EAAYN,QAG7BO,EAAYb,EAAQS,MAAM,EAAGG,OAC7BE,EAAWd,EAAQS,MAAMG,MACZF,OAGbK,EAAeC,KAAKC,IAAIV,EAAWK,OACnCM,EAAYV,EAAUC,MAAM,EAAGM,OAC/BI,EAAYN,EAAUJ,MAAM,EAAGM,WAM5BK,EAAiBF,EAFRV,EAAUC,MAAMM,GAChBF,EAAUJ,MAAMM,GACyBL,OAIlC,OAAnBC,GAA2BA,IAAmBJ,OAG9Cc,EAASd,EAETO,GADAD,EAAYb,EAAQS,MAAM,EAAGY,GAClBrB,EAAQS,MAAMY,OACzBR,IAAcL,OAGdc,EAAeN,KAAKC,IAAIZ,EAAYgB,EAAQf,EAAYe,OACxDE,EAAYb,EAASD,MAAMC,EAASP,OAASmB,OAC7CE,EAAYV,EAASL,MAAMK,EAASX,OAASmB,WAM1CF,EAAiBZ,EAFRE,EAASD,MAAM,EAAGC,EAASP,OAASmB,GACpCR,EAASL,MAAM,EAAGK,EAASX,OAASmB,GACKC,QAGzDtB,EAASE,OAAS,GAAKC,GAAgC,IAApBA,EAASD,OAAc,KAGtDe,EAAYnB,EAAQU,MAAM,EAAGR,EAASC,OACtCqB,EAAYxB,EAAQU,MAAMR,EAASC,MAAQD,EAASE,aAGpDG,GAFAS,EAAeG,EAAUf,SACzBmB,EAAeC,EAAUpB,cAIzBgB,EAAYnB,EAAQS,MAAM,EAAGM,GAC7BS,EAAYxB,EAAQS,MAAMH,EAAYgB,MACtCJ,IAAcC,GAAaI,IAAcC,SAKtCJ,EAAiBF,EAFRnB,EAAQU,MAAMM,EAAcV,EAAYiB,GACxCtB,EAAQS,MAAMM,EAAcT,EAAYgB,GACCC,WAItD,KAlsBUE,CAAsB/B,EAAOC,EAAOC,MAC/CE,SACKA,MAKP4B,EAAeC,EAAkBjC,EAAOC,GACxCiC,EAAelC,EAAMmC,UAAU,EAAGH,GAKtCA,EAAeI,EAJfpC,EAAQA,EAAMmC,UAAUH,GACxB/B,EAAQA,EAAMkC,UAAUH,QAIpBK,EAAerC,EAAMmC,UAAUnC,EAAMS,OAASuB,GAK9CM,EAqBN,SAAuBtC,EAAOC,OACxBqC,MAECtC,QAEI,CAAC,CAnEM,EAmEQC,QAGnBA,QAEI,CAAC,CAACH,EAAaE,QAGpBuC,EAAWvC,EAAMS,OAASR,EAAMQ,OAAST,EAAQC,EACjDuC,EAAYxC,EAAMS,OAASR,EAAMQ,OAASR,EAAQD,EAClDyC,EAAIF,EAASG,QAAQF,OACd,IAAPC,SAEFH,EAAQ,CACN,CAjFY,EAiFEC,EAASJ,UAAU,EAAGM,IACpC,CAjFW,EAiFED,GACb,CAnFY,EAmFED,EAASJ,UAAUM,EAAID,EAAU/B,UAG7CT,EAAMS,OAASR,EAAMQ,SACvB6B,EAAM,GAAG,GAAKA,EAAM,GAAG,GAAKxC,GAEvBwC,KAGgB,IAArBE,EAAU/B,aAGL,CAAC,CAACX,EAAaE,GAAQ,CA/FhB,EA+F8BC,QAI1C0C,EAwPN,SAAyB3C,EAAOC,OAC1BsC,EAAWvC,EAAMS,OAASR,EAAMQ,OAAST,EAAQC,EACjDuC,EAAYxC,EAAMS,OAASR,EAAMQ,OAASR,EAAQD,KAClDuC,EAAS9B,OAAS,GAAwB,EAAnB+B,EAAU/B,OAAa8B,EAAS9B,cAClD,cAeAmC,EAAiBL,EAAUC,EAAWC,WAKzCI,EAAiBC,EAAiBC,EAAkBC,EAHpDC,EAAOV,EAASJ,UAAUM,EAAGA,EAAInB,KAAK4B,MAAMX,EAAS9B,OAAS,IAC9D0C,GAAK,EACLC,EAAc,IAE+B,KAAzCD,EAAIX,EAAUE,QAAQO,EAAME,EAAI,KAAY,KAC9C9B,EAAeY,EACjBM,EAASJ,UAAUM,GAAID,EAAUL,UAAUgB,IACzCvB,EAAeQ,EACjBG,EAASJ,UAAU,EAAGM,GAAID,EAAUL,UAAU,EAAGgB,IAC/CC,EAAY3C,OAASmB,EAAeP,IACtC+B,EAAcZ,EAAUL,UACtBgB,EAAIvB,EAAcuB,GAAKX,EAAUL,UAAUgB,EAAGA,EAAI9B,GACpDwB,EAAkBN,EAASJ,UAAU,EAAGM,EAAIb,GAC5CkB,EAAkBP,EAASJ,UAAUM,EAAIpB,GACzC0B,EAAmBP,EAAUL,UAAU,EAAGgB,EAAIvB,GAC9CoB,EAAmBR,EAAUL,UAAUgB,EAAI9B,WAGtB,EAArB+B,EAAY3C,QAAc8B,EAAS9B,OAC9B,CACLoC,EAAiBC,EACjBC,EAAkBC,EAAkBI,GAG/B,SAQPT,EAaAU,EAASC,EAASC,EAASC,EAhB3BC,EAAMb,EAAiBL,EAAUC,EAAWlB,KAAKoC,KAAKnB,EAAS9B,OAAS,IAExEkD,EAAMf,EAAiBL,EAAUC,EAAWlB,KAAKoC,KAAKnB,EAAS9B,OAAS,QAEvEgD,IAAQE,SACJ,KAOPhB,EANUgB,EAEAF,GAILA,EAAI,GAAGhD,OAASkD,EAAI,GAAGlD,OAASgD,EAHhCE,EAFAF,EAUHzD,EAAMS,OAASR,EAAMQ,QACvB4C,EAAUV,EAAG,GACbW,EAAUX,EAAG,GACbY,EAAUZ,EAAG,GACba,EAAUb,EAAG,KAEbY,EAAUZ,EAAG,GACba,EAAUb,EAAG,GACbU,EAAUV,EAAG,GACbW,EAAUX,EAAG,QAEXiB,EAAajB,EAAG,SACb,CAACU,EAASC,EAASC,EAASC,EAASI,GAvUnCC,CAAgB7D,EAAOC,MAC5B0C,EAAI,KAEFU,EAAUV,EAAG,GACbW,EAAUX,EAAG,GACbY,EAAUZ,EAAG,GACba,EAAUb,EAAG,GACbiB,EAAajB,EAAG,GAEhBmB,EAAU/D,EAAUsD,EAASE,GAC7BQ,EAAUhE,EAAUuD,EAASE,UAE1BM,EAAQE,OAAO,CAAC,CA9GV,EA8GuBJ,IAAcG,UAgBtD,SAAsB/D,EAAOC,WAEvBgE,EAAejE,EAAMS,OACrByD,EAAejE,EAAMQ,OACrB0D,EAAQ7C,KAAKoC,MAAMO,EAAeC,GAAgB,GAClDE,EAAWD,EACXE,EAAW,EAAIF,EACfG,EAAK,IAAIC,MAAMF,GACfG,EAAK,IAAID,MAAMF,GAGVI,EAAI,EAAGA,EAAIJ,EAAUI,IAC5BH,EAAGG,IAAM,EACTD,EAAGC,IAAM,EAEXH,EAAGF,EAAW,GAAK,EACnBI,EAAGJ,EAAW,GAAK,UACfM,EAAQT,EAAeC,EAGvBS,EAASD,EAAQ,GAAM,EAGvBE,EAAU,EACVC,EAAQ,EACRC,EAAU,EACVC,EAAQ,EACHC,EAAI,EAAGA,EAAIb,EAAOa,IAAK,KAEzB,IAAIC,GAAMD,EAAIJ,EAASK,GAAMD,EAAIH,EAAOI,GAAM,EAAG,SAChDC,EAAYd,EAAWa,EAOvBE,GAJFC,EADEH,KAAQD,GAAMC,IAAOD,GAAKV,EAAGY,EAAY,GAAKZ,EAAGY,EAAY,GAC1DZ,EAAGY,EAAY,GAEfZ,EAAGY,EAAY,GAAK,GAEbD,EAEZG,EAAKnB,GAAgBkB,EAAKjB,GAC1BlE,EAAMqF,OAAOD,KAAQnF,EAAMoF,OAAOF,IAElCC,IACAD,OAEFb,EAAGY,GAAaE,EACZA,EAAKnB,EAEPY,GAAS,OACJ,GAAIM,EAAKjB,EAEdU,GAAW,OACN,GAAID,EAAO,KACZW,EAAYlB,EAAWM,EAAQO,IAClB,GAAKK,EAAYjB,IAA+B,IAAnBG,EAAGc,MAG3CF,IADAG,EAAKtB,EAAeO,EAAGc,WAGlBE,EAAkBxF,EAAOC,EAAOmF,EAAID,QAO9C,IAAIM,GAAMT,EAAIF,EAASW,GAAMT,EAAID,EAAOU,GAAM,EAAG,SAEhDF,EADAD,EAAYlB,EAAWqB,EAOvBC,GAJFH,EADEE,KAAQT,GAAMS,IAAOT,GAAKR,EAAGc,EAAY,GAAKd,EAAGc,EAAY,GAC1Dd,EAAGc,EAAY,GAEfd,EAAGc,EAAY,GAAK,GAEbG,EAEZF,EAAKtB,GAAgByB,EAAKxB,GAC1BlE,EAAMqF,OAAOpB,EAAesB,EAAK,KAAOtF,EAAMoF,OAAOnB,EAAewB,EAAK,IAEzEH,IACAG,OAEFlB,EAAGc,GAAaC,EACZA,EAAKtB,EAEPc,GAAS,OACJ,GAAIW,EAAKxB,EAEdY,GAAW,OACN,IAAKH,EAAO,KACbO,EAAYd,EAAWM,EAAQe,IAClB,GAAKP,EAAYb,IAA+B,IAAnBC,EAAGY,GAAmB,KAC9DE,EACAD,EAAKf,GADLgB,EAAKd,EAAGY,IACaA,KAGrBE,IADJG,EAAKtB,EAAesB,UAGXC,EAAkBxF,EAAOC,EAAOmF,EAAID,YAQ9C,CAAC,CAACrF,EAAaE,GAAQ,CAzOd,EAyO4BC,IAvHrC0F,CAAa3F,EAAOC,GAzEf2F,CAJZ5F,EAAQA,EAAMmC,UAAU,EAAGnC,EAAMS,OAASuB,GAC1C/B,EAAQA,EAAMkC,UAAU,EAAGlC,EAAMQ,OAASuB,WAMtCE,GACFI,EAAMuD,QAAQ,CA5CD,EA4Cc3D,IAEzBG,GACFC,EAAMwD,KAAK,CA/CE,EA+CWzD,IAE1B0D,EAAkBzD,EAAOnC,GAClBmC,EAmMT,SAASkD,EAAkBxF,EAAOC,EAAOwE,EAAGuB,OACtCC,EAASjG,EAAMmC,UAAU,EAAGsC,GAC5ByB,EAASjG,EAAMkC,UAAU,EAAG6D,GAC5BG,EAASnG,EAAMmC,UAAUsC,GACzB2B,EAASnG,EAAMkC,UAAU6D,GAGzB1D,EAAQvC,EAAUkG,EAAQC,GAC1BG,EAAStG,EAAUoG,EAAQC,UAExB9D,EAAM0B,OAAOqC,GAWtB,SAASpE,EAAkBjC,EAAOC,OAE3BD,IAAUC,GAASD,EAAMqF,OAAO,KAAOpF,EAAMoF,OAAO,UAChD,UAILiB,EAAa,EACbC,EAAajF,KAAKC,IAAIvB,EAAMS,OAAQR,EAAMQ,QAC1C+F,EAAaD,EACbE,EAAe,EACZH,EAAaE,GAEhBxG,EAAMmC,UAAUsE,EAAcD,IAC9BvG,EAAMkC,UAAUsE,EAAcD,GAG9BC,EADAH,EAAaE,EAGbD,EAAaC,EAEfA,EAAalF,KAAK4B,OAAOqD,EAAaD,GAAc,EAAIA,UAGtDI,EAAwB1G,EAAM2G,WAAWH,EAAa,KACxDA,IAGKA,EAUT,SAASpE,EAAkBpC,EAAOC,OAE3BD,IAAUC,GAASD,EAAMe,OAAO,KAAOd,EAAMc,OAAO,UAChD,UAILuF,EAAa,EACbC,EAAajF,KAAKC,IAAIvB,EAAMS,OAAQR,EAAMQ,QAC1C+F,EAAaD,EACbK,EAAa,EACVN,EAAaE,GAEhBxG,EAAMmC,UAAUnC,EAAMS,OAAS+F,EAAYxG,EAAMS,OAASmG,IAC1D3G,EAAMkC,UAAUlC,EAAMQ,OAAS+F,EAAYvG,EAAMQ,OAASmG,GAG1DA,EADAN,EAAaE,EAGbD,EAAaC,EAEfA,EAAalF,KAAK4B,OAAOqD,EAAaD,GAAc,EAAIA,UAGtDO,EAAsB7G,EAAM2G,WAAW3G,EAAMS,OAAS+F,KACxDA,IAGKA,EAuGT,SAAST,EAAkBzD,EAAOwE,GAChCxE,EAAMwD,KAAK,CApbI,EAobS,aAMpB9D,EALA+E,EAAU,EACVC,EAAe,EACfC,EAAe,EACfC,EAAc,GACdC,EAAc,GAEXJ,EAAUzE,EAAM7B,WACjBsG,EAAUzE,EAAM7B,OAAS,IAAM6B,EAAMyE,GAAS,GAChDzE,EAAM8E,OAAOL,EAAS,eAGhBzE,EAAMyE,GAAS,SAjcT,EAocVE,IACAE,GAAe7E,EAAMyE,GAAS,GAC9BA,eAEGjH,EACHkH,IACAE,GAAe5E,EAAMyE,GAAS,GAC9BA,eA1cS,MA6cLM,EAAoBN,EAAUE,EAAeD,EAAe,KAC5DF,EAAa,IAWXO,GAAqB,GAAKC,EAAqBhF,EAAM+E,GAAmB,IAAK,KAC3EE,EAAQjF,EAAM+E,GAAmB,GAAGtG,OAAO,MAC/CuB,EAAM+E,GAAmB,GAAK/E,EAAM+E,GAAmB,GAAGtG,MAAM,GAAI,GACpEmG,EAAcK,EAAQL,EACtBC,EAAcI,EAAQJ,GACjB7E,EAAM+E,GAAmB,GAAI,CAEhC/E,EAAM8E,OAAOC,EAAmB,GAChCN,QACIS,EAAIH,EAAoB,EACxB/E,EAAMkF,IApeN,IAoeYlF,EAAMkF,GAAG,KACvBP,IACAE,EAAc7E,EAAMkF,GAAG,GAAKL,EAC5BK,KAEElF,EAAMkF,IAAMlF,EAAMkF,GAAG,KAAO1H,IAC9BkH,IACAE,EAAc5E,EAAMkF,GAAG,GAAKN,EAC5BM,KAEFH,EAAoBG,MAGpBC,EAAqBnF,EAAMyE,GAAS,IAAK,CACvCQ,EAAQjF,EAAMyE,GAAS,GAAG1B,OAAO,GACrC/C,EAAMyE,GAAS,GAAKzE,EAAMyE,GAAS,GAAGhG,MAAM,GAC5CmG,GAAeK,EACfJ,GAAeI,MAGfR,EAAUzE,EAAM7B,OAAS,IAAM6B,EAAMyE,GAAS,GAAI,CAEpDzE,EAAM8E,OAAOL,EAAS,YAGpBG,EAAYzG,OAAS,GAAK0G,EAAY1G,OAAS,EAAG,CAEhDyG,EAAYzG,OAAS,GAAK0G,EAAY1G,OAAS,IAG5B,KADrBuB,EAAeC,EAAkBkF,EAAaD,MAExCG,GAAqB,EACvB/E,EAAM+E,GAAmB,IAAMF,EAAYhF,UAAU,EAAGH,IAExDM,EAAM8E,OAAO,EAAG,EAAG,CArgBlB,EAqgB+BD,EAAYhF,UAAU,EAAGH,KACzD+E,KAEFI,EAAcA,EAAYhF,UAAUH,GACpCkF,EAAcA,EAAY/E,UAAUH,IAIjB,KADrBA,EAAeI,EAAkB+E,EAAaD,MAE5C5E,EAAMyE,GAAS,GACbI,EAAYhF,UAAUgF,EAAY1G,OAASuB,GAAgBM,EAAMyE,GAAS,GAC5EI,EAAcA,EAAYhF,UAAU,EAAGgF,EAAY1G,OAASuB,GAC5DkF,EAAcA,EAAY/E,UAAU,EAAG+E,EAAYzG,OAASuB,SAI5D0F,EAAIT,EAAeD,EACI,IAAvBE,EAAYzG,QAAuC,IAAvB0G,EAAY1G,QAC1C6B,EAAM8E,OAAOL,EAAUW,EAAGA,GAC1BX,GAAoBW,GACY,IAAvBR,EAAYzG,QACrB6B,EAAM8E,OAAOL,EAAUW,EAAGA,EAAG,CA3hBvB,EA2hBqCP,IAC3CJ,EAAUA,EAAUW,EAAI,GACQ,IAAvBP,EAAY1G,QACrB6B,EAAM8E,OAAOL,EAAUW,EAAGA,EAAG,CAAC5H,EAAaoH,IAC3CH,EAAUA,EAAUW,EAAI,IAExBpF,EAAM8E,OAAOL,EAAUW,EAAGA,EAAG,CAAC5H,EAAaoH,GAAc,CAjiBnD,EAiiBiEC,IACvEJ,EAAUA,EAAUW,EAAI,GAGZ,IAAZX,GApiBK,IAoiBYzE,EAAMyE,EAAU,GAAG,IAEtCzE,EAAMyE,EAAU,GAAG,IAAMzE,EAAMyE,GAAS,GACxCzE,EAAM8E,OAAOL,EAAS,IAEtBA,IAEFE,EAAe,EACfD,EAAe,EACfE,EAAc,GACdC,EAAc,GAIe,KAA/B7E,EAAMA,EAAM7B,OAAS,GAAG,IAC1B6B,EAAMqF,UAMJC,GAAU,MACdb,EAAU,EAEHA,EAAUzE,EAAM7B,OAAS,GA5jBjB,IA6jBT6B,EAAMyE,EAAU,GAAG,IA7jBV,IA8jBXzE,EAAMyE,EAAU,GAAG,KAEfzE,EAAMyE,GAAS,GAAG5E,UAAUG,EAAMyE,GAAS,GAAGtG,OAChD6B,EAAMyE,EAAU,GAAG,GAAGtG,UAAY6B,EAAMyE,EAAU,GAAG,IAErDzE,EAAMyE,GAAS,GAAKzE,EAAMyE,EAAU,GAAG,GACrCzE,EAAMyE,GAAS,GAAG5E,UAAU,EAAGG,EAAMyE,GAAS,GAAGtG,OAC/C6B,EAAMyE,EAAU,GAAG,GAAGtG,QAC1B6B,EAAMyE,EAAU,GAAG,GAAKzE,EAAMyE,EAAU,GAAG,GAAKzE,EAAMyE,EAAU,GAAG,GACnEzE,EAAM8E,OAAOL,EAAU,EAAG,GAC1Ba,GAAU,GACDtF,EAAMyE,GAAS,GAAG5E,UAAU,EAAGG,EAAMyE,EAAU,GAAG,GAAGtG,SAC9D6B,EAAMyE,EAAU,GAAG,KAEnBzE,EAAMyE,EAAU,GAAG,IAAMzE,EAAMyE,EAAU,GAAG,GAC5CzE,EAAMyE,GAAS,GACbzE,EAAMyE,GAAS,GAAG5E,UAAUG,EAAMyE,EAAU,GAAG,GAAGtG,QAClD6B,EAAMyE,EAAU,GAAG,GACrBzE,EAAM8E,OAAOL,EAAU,EAAG,GAC1Ba,GAAU,IAGdb,IAGEa,GACF7B,EAAkBzD,EAAOwE,GAI7B,SAASJ,EAAwBmB,UACxBA,GAAY,OAAUA,GAAY,MAG3C,SAAShB,EAAsBgB,UACtBA,GAAY,OAAUA,GAAY,MAG3C,SAASJ,EAAqBK,UACrBjB,EAAsBiB,EAAInB,WAAW,IAG9C,SAASW,EAAqBQ,UACrBpB,EAAwBoB,EAAInB,WAAWmB,EAAIrH,OAAS,IAa7D,SAASiB,EAAiBqG,EAAQC,EAAWC,EAAWC,UAClDZ,EAAqBS,IAAWN,EAAqBS,GAChD,KAZX,SAA6BC,WACvBC,EAAM,GACD3F,EAAI,EAAGA,EAAI0F,EAAO1H,OAAQgC,IAC7B0F,EAAO1F,GAAG,GAAGhC,OAAS,GACxB2H,EAAItC,KAAKqC,EAAO1F,WAGb2F,EAOAC,CAAoB,CACzB,CA3nBa,EA2nBAN,GACb,CAACjI,EAAakI,GACd,CA9nBc,EA8nBAC,GACd,CA9nBa,EA8nBAC,KA4FjB,SAASI,EAAKtI,EAAOC,EAAOC,UAGnBH,EAAUC,EAAOC,EAAOC,GAAY,GAG7CoI,EAAKC,OAjuBa,EAkuBlBD,EAAKE,OAAS1I,EACdwI,EAAKG,MAluBY,EAouBjB,UAAiBH,iGC9sBLI,EASAC,ECxCAC,kBDAIC,EAASC,GACvBC,UAAUD,WAeIE,EAAkBlB,GAChC,OAAQA,GACN,IAAK,MACH,OAAOmB,kBAAgBC,IACzB,IAAK,MACH,OAAOD,kBAAgBE,IACzB,QACE,UAAUC,kCAAkCtB,aC8FzCuB,EAAqBC,GAC5B,IAAMC,EAAIhF,MAAMiF,KAAKF,GACjBG,EAAW,KAIf,OAHIF,EAAE,aAAcH,QAClBK,EAAIF,EAAEG,SAED,CAAEC,MAAOF,EAAGG,SAAUL,YAGtBM,EAA0BP,GACjC,IAAMG,EAAIH,EAAKK,MACTG,EAAQL,IAAMA,EAACM,YAAkBN,EAACK,OACpCF,EAAW,GAAG5F,OAAOsF,EAAIM,UAU7B,OATIH,IACEG,EAASnJ,OAAS,IACpBmJ,EAAWA,EAAS5F,OAAO,CAAC,QAE9B4F,EAAWA,EAAS5F,OAAO,CAACyF,EAACO,aACzBF,IACFF,EAAWA,EAAS5F,OAAO,CAAC,OAAOA,OAAO8F,KAGvCF,ED5IEb,aASCE,yBAAZ,SAAYA,GACVA,YACAA,YAFF,CAAYA,oBAAAA,uBAuBAP,mBAAAA,EAAAA,aAAAA,4BAEVA,gBAOUC,qBAAAA,EAAAA,eAAAA,oCAEVA,4BACAA,sBC3CF,SAAYC,GACVA,qBACAA,mBACAA,mBACAA,qBAJF,CAAYA,IAAAA,WCMAqB,EDwICC,EAAS,eA5HpB,WAAoBC,QAAAA,wBAFZC,UAAiE,GAErDC,iBAAAF,6BAEZG,aAAA,SAAaC,aACfF,KAAKF,YACHE,KAAKF,YAAYK,cACdL,aAAYK,cAASD,WAErBJ,aAAYM,YAAOF,MAG1BG,SAAQF,cAASD,MAIbI,YAAA,SAAYJ,aACdF,KAAKF,YACHE,KAAKF,YAAYS,aACdT,aAAYS,aAAQL,WAEpBJ,aAAYM,YAAOF,MAG1BG,SAAQE,aAAQL,MAIZM,YAAA,SAAYN,aACdF,KAAKF,YACHE,KAAKF,YAAYW,aACdX,aAAYW,aAAQP,WAEpBJ,aAAYM,YAAOF,MAG1BG,SAAQI,aAAQP,MAIZQ,aAAA,SAAaR,aACfF,KAAKF,YACHE,KAAKF,YAAYR,cACdQ,aAAYR,cAASY,WAErBJ,aAAYM,YAAOF,MAG1BG,SAAQf,cAASY,MAIbS,iBAAA,SAAiBC,EAAiB3B,GACxC,IAAMc,EAAYC,KAAKD,UAAUa,GAC7Bb,GACFA,EAAUc,SAAQ,SAACC,GACjBA,EAAS7B,SASf8B,YAAA,SAAYH,EAAiBE,GAC3B,IAAIf,EAAYC,KAAKD,UAAUa,GAC1Bb,IACHA,EAAYC,KAAKD,UAAUa,GAAS,IAEtCb,EAAUtE,KAAKqF,MAGjBX,MAAA,WACE,IAAMlB,EAAOD,EAAqBgC,WAClChB,KAAKC,aAAaT,EAA0BP,IAC5Ce,KAAKW,iBAAiBpC,EAAS0C,MAAOhC,MAGxCsB,KAAA,WACE,IAAMtB,EAAOD,EAAqBgC,WAClChB,KAAKM,YAAYd,EAA0BP,IAC3Ce,KAAKW,iBAAiBpC,EAAS2C,KAAMjC,MAGvCwB,KAAA,WACE,IAAMxB,EAAOD,EAAqBgC,WAClChB,KAAKQ,YAAYhB,EAA0BP,IAC3Ce,KAAKW,iBAAiBpC,EAAS4C,KAAMlC,MAGvCK,MAAA,WACE,IAAML,EAAOD,EAAqBgC,WAClChB,KAAKU,aAAalB,EAA0BP,IAC5Ce,KAAKW,iBAAiBpC,EAAS6C,MAAOnC,UCxG9BW,gBAAAA,EAAAA,UAAAA,+CAwBVA,0DAaAA,oDASAA,sDAOAA,0DAQAA,gCAYAA,wDAeAA,0DAUAA,sDAUAA,wCA6CF,IAAMyB,EAAQ,YAWEC,EAAaC,EAAcC,GACzC,GAAK5B,QAAM2B,GAEJ,CACL,IAAIE,EAAeJ,EAAME,GACpBE,IACHA,EAAeJ,EAAME,GAAQ,IAE/BE,EAAahG,KAAK+F,QANlBE,EAAejB,KAAK,IAAI1B,uCAAuCwC,kBAiBnDI,EAAWJ,EAAcC,GACvC,GAAK5B,QAAM2B,GAEJ,CACL,IAAME,EAAeJ,EAAME,GAC3B,GAAIE,EAAc,CAChB,IAAMtL,EAAQsL,EAAapJ,QAAQmJ,GAC/BrL,GAAS,GACXsL,EAAa1E,OAAO5G,EAAO,SAN/BuL,EAAejB,KAAK,IAAI1B,uCAAuCwC,kBAgBnDK,EAAgBL,GAE9B,OADqBF,EAAME,IACJ,OAMZM,EAAS,CACpBP,aAAAA,EACAK,WAAAA,GCzNWG,aAMX,WAA4BC,QAAAA,gCAL5BC,WAA2D,QACnDC,2BACRC,gCACAC,yBAE4BnC,yBAAA+B,EAC1B/B,KAAKiC,eAAiBG,EAGtBpC,KAAAkC,oBAA8BlC,KAAKkC,oBAAsBE,EACzDpC,KAAAmC,kBAA4BnC,KAAKmC,kBAAoBC,6BASvDC,yBAAA,SAAyBd,EAAce,GACrCL,EAAeM,KAAKvC,KAAMuB,EAAM,QAASe,MAS3CE,uBAAA,SAAuBjB,EAAce,GACnCL,EAAeM,KAAKvC,KAAMuB,EAAM,MAAOe,MAOzCG,aAAA,WACE,IAAMT,EAAahC,KAAKgC,WACpBU,EAAK,GACTC,OAAOC,KAAKZ,GAAYnB,SAAQ,SAACU,GAG/B,IAFA,IAAMsB,EAASb,EAAWT,GACpBuB,EAAID,EAAOzM,OACRgC,EAAI,EAAGA,EAAI0K,EAAG1K,IAAK,CAC1B,IAAM2K,EAAIF,EAAOzK,GACjBsK,GAAMnB,EACFuB,EAAI,IACNJ,OAAUtK,OAEZsK,iBAAoBK,EAACC,gBAAmBD,EAACE,oBACvCF,EAACE,IAAUF,EAACC,gBAIlBtB,EAAenB,KAAKmC,MAMtBQ,QAAA,WACElD,KAAKiC,eAAiBG,EAGtBpC,KAAAkC,oBAA8BlC,KAAKkC,oBAAsBE,EACzDpC,KAAAmC,kBAA4BnC,KAAKmC,kBAAoBC,KAMvDe,OAAA,WACEnD,KAAKiC,eAAiBA,EAGtBjC,KAAAkC,oBAA8BlC,KAAKkC,oBACjCA,EACFlC,KAAAmC,kBAA4BnC,KAAKmC,kBAAoBA,KAMvDiB,UAAA,WACE,YAAYlB,sBAAwBA,QAIxC,SAASE,cAUAH,EACPV,EACA8B,EACAf,GAEKA,IACHA,EAAYtC,KAAK+B,oBAAoBuB,OAEvC,IAIIP,EAJAf,EAAahC,KAAKgC,WAAWT,GAC5BS,IACHA,EAAahC,KAAKgC,WAAWT,GAAQ,IAIvC,IADA,IACSnJ,EADC4J,EAAW5L,OACJ,EAAGgC,GAAK,MACvB2K,EAAIf,EAAW5J,KACL2K,EAAEM,IAFcjL,IAK1B2K,EAAI,KAEDA,GAEHf,EAAWvG,KADXsH,EAAI,IAGNA,EAAEM,GAAYf,WAUPJ,EAAoBX,EAAce,GACzCtC,KAAKiC,eAAeV,EAAM,QAASe,YAU5BH,EAAkBZ,EAAce,GACvCtC,KAAKiC,eAAeV,EAAM,MAAOe,OAE7BiB,EAA8B,CAAED,IAAKE,KAAKF,KAEnCG,EAAW,IAAI3B,EADA4B,QAAUA,OAAOC,aAEpBJ,GAEzBE,EAASpB,yBAAyB,oBAKrBuB,IAAAA,EAAU,CACrBH,SAAU,CACRvB,oBAAqBuB,EAASvB,oBAC9BC,kBAAmBsB,EAAStB,kBAC5BM,aAAcgB,EAAShB,aACvBS,QAASO,EAASP,QAClBC,OAAQM,EAASN,y6ECjKRU,EACX,u/tBAMSC,EAAW,YAQNC,EAAatG,GAC3B,OAAOuG,KAAKC,MAAMxG,YAGJyG,EAAcC,GAC5B,IAAMC,EAAID,EAAIE,MAAM,YACpB,OAAID,EACKA,EAAE,GAEJD,MAcEG,EAAUZ,OAAOa,SAASC,cACrBC,EAAWhG,GACzB6F,EAAU7F,MAmJAiG,EA5IDC,EAAkBjB,OAAOa,SAASC,cAC7BI,EAAmBnG,GACjCkG,EAAkBlG,WAQJoG,EAAWC,EAAgBR,GACzC,GAAI,UAAUS,KAAKT,GACjB,OAAOQ,GAAUR,EAEnB,IAAKA,GAAWQ,EAAOT,MAAM,YAC3B,OAAIS,EAAOE,cAAcX,MAAM,gBACtB,KAELS,EAAOT,MAAM,yBACfS,QAEKA,GAKT,IAAIV,EACJ,GAJIE,EAAQD,MAAM,yBAChBC,QAGEQ,EAAOT,MAAM,SAEf,OADAD,EAAIE,EAAQD,MAAM,mBAETD,EAAE,GAAKU,EAETA,EAET,GAAIA,EAAOT,MAAM,OAEf,OADAD,EAAIE,EAAQD,MAAM,2BAETD,EAAE,GAAKU,EAETA,EAMT,GAJIA,EAAOT,MAAM,eACfS,EAASA,EAAOG,OAAO,IAEzBX,WAhEoCH,GACpC,IAAMC,EAAID,EAAIE,MAAM,aACpB,OAAID,EACKA,EAAE,GAEJD,GA2DyBG,GAC5BQ,EAAOT,MAAM,MACf,OAAOC,EAAUQ,EAEnB,IAAI1M,EAAIkM,EAAQY,YAAY,KAC5B,GAAI9M,EAAI,EACN,OAAO0M,EAET,GAAI1M,EAAIkM,EAAQlO,OAAS,GACbkO,EAAQY,YAAY,KACtB9M,EAAG,CAET,GAAc,IAAV0M,EACF,OAAOR,EAGTlM,GADAkM,GAAW,KACClO,OAAS,MAGrB+N,EAAMG,EAAQW,OAAO,EAAG7M,EAAI,GAAK0M,EACjCK,EAAY,GAOhB,KANAf,EAAID,EAAIE,MAAM,yBAEZF,EAAMC,EAAE,GACRe,EAAYf,EAAE,OAIdhM,EAAI+L,EAAI9L,QAAQ,UACP,IAFE,CAKX,IAAMS,EAAIqL,EAAIe,YAAY,IAAK9M,EAAI,GACnC,GAAIU,GAAK,EACP,MAEFqL,EAAMA,EAAIc,OAAO,EAAGnM,GAAKqL,EAAIc,OAAO7M,EAAI,UAEnC+L,EAAIiB,QAAQ,aAAc,KAAOD,WAM1BE,EAAkBlB,GAChC,IAAIC,EAoCJ,OAlCGA,EACC,yEAAyEkB,KACvEnB,IAIJA,EAASC,EAAE,kCAAiCA,EAAE,QAAMA,EAAE,GAAK,GAAK,WAC9DA,EAAE,IAGHA,EACC,0EAA0EkB,KACxEnB,IAIJA,EAASC,EAAE,iEAAgEA,EAAE,IAE5EA,EACC,uEAAuEkB,KACrEnB,IAIJA,EAASC,EAAE,mCAAkCA,EAAE,WAAUA,EAAE,IAE1DA,EACC,+EAA+EkB,KAC7EnB,MAIJA,EAASC,EAAE,yBAAwBA,EAAE,GAAKA,EAAE,QAEvCD,WAkEOoB,EAASC,GACvB,aAAIA,EACKA,EAEFA,EAAE7F,YAvDX,SAAY+E,GACVA,sCACAA,yCACAA,8CACAA,6CACAA,uCACAA,uCACAA,2CACAA,mCACAA,wCACAA,6CAVF,CAAYA,IAAAA,WAoECe,+BACXC,MAAsB,CAAC,iCAEvBtP,OAAA,WACE,YAAYsP,MAAMtP,OAAS,KAG7BuP,IAAA,SAAIC,GAEF,IADA,IAAIzP,EAAQ6J,KAAK0F,MAAMtP,OAChBD,EAAQ,GAAG,CAChB,IAAM0P,EAAc5O,KAAK4B,MAAM1C,EAAQ,GACjC2P,EAAS9F,KAAK0F,MAAMG,GAC1B,GAAIC,EAAOC,QAAQH,GAAQ,EAEzB,YADA5F,KAAK0F,MAAMvP,GAASyP,GAGtB5F,KAAK0F,MAAMvP,GAAS2P,EACpB3P,EAAQ0P,OAELH,MAAM,GAAKE,KAMlBI,KAAA,WACE,YAAYN,MAAM,MAOpBO,OAAA,WACE,IAAMC,EAASlG,KAAK0F,MAAM,GACpBS,EAAOnG,KAAK0F,MAAMpI,MAClB8I,EAAOpG,KAAK0F,MAAMtP,OACxB,GAAIgQ,EAAO,EAAG,CAEZ,IADA,IAAIjQ,EAAQ,IACC,CACX,IAAIkQ,EAAqB,EAARlQ,EACjB,GAAIkQ,GAAcD,EAChB,MAEF,GAAIpG,KAAK0F,MAAMW,GAAYN,QAAQI,GAAQ,EAEvCE,EAAa,EAAID,GACjBpG,KAAK0F,MAAMW,EAAa,GAAGN,QACzB/F,KAAK0F,MAAMW,IACT,GAEJA,cAGFA,EAAa,EAAID,GACjBpG,KAAK0F,MAAMW,EAAa,GAAGN,QAAQI,GAAQ,GAI3C,MAFAE,SAIGX,MAAMvP,GAAS6J,KAAK0F,MAAMW,GAC/BlQ,EAAQkQ,OAELX,MAAMvP,GAASgQ,SAEfD,QAuBEI,EAAgB,CAAC,GAAI,WAAY,SAEjCC,EAAc,YAEXC,EACdC,EACAC,GAGA,MAAmD,iBADrCC,SAASC,gBAAgBC,eAtBbJ,EAAgBK,GAQ1C,OAPIL,IACFK,MAAkBA,EAEH,SADfL,EAASA,EAAOrB,QAAQ,KAAM,OAE5BqB,EAAS,QAIXA,EACAK,EAAY1B,QAAQ,WAAW,SAAC2B,UAAQA,EAAI9B,OAAO,GAAG+B,kBAaxBP,EAAQC,aAG1BO,GAAyBP,GACvC,IAAIQ,EAAWX,EAAYG,GAC3B,GAAIQ,GAAyB,OAAbA,EAEd,OAAOA,EAET,OAAQR,GACN,IAAK,WAEH,OADAH,EAAYG,GAAQ,UAEtB,IAAK,uBAEH,GACEF,EAAyB,WAAY,kBACpCA,EAAyB,GAAI,wBAG9B,OADAD,EAAYG,GAAQ,CAAC,wBACd,CAAC,wBAEV,MACF,IAAK,SAEH,GAAIF,EAAyB,WAAY,UAEvC,OADAD,EAAYG,GAAQ,CAAC,kBACd,CAAC,kBAEV,MACF,IAAK,YAEH,GAAIF,EAAyB,WAAY,aACvC,OAAQD,EAAYG,GAAQ,CAAC,oBAAqB,aAEpD,MACF,IAAK,sBACH,GAAIF,EAAyB,WAAY,gBAEvC,OADAD,EAAYG,GAAQ,CAAC,wBACd,CAAC,wBAEV,MACF,IAAK,oBACH,GAAIF,EAAyB,WAAY,cAEvC,OADAD,EAAYG,GAAQ,CAAC,sBACd,CAAC,sBAEV,MACF,IAAK,uBACH,GAAIF,EAAyB,WAAY,iBAEvC,OADAD,EAAYG,GAAQ,CAAC,yBACd,CAAC,yBAEV,MACF,IAAK,qBACH,GAAIF,EAAyB,WAAY,eAEvC,OADAD,EAAYG,GAAQ,CAAC,uBACd,CAAC,uBAId,cAAqBJ,kBAAe,KAAzBG,UACT,GAAID,EAAyBC,EAAQC,GAGnC,OADAH,EAAYG,GAAQ,CADpBQ,EAAWT,EAASC,GAEb,CAACQ,UAKZxF,EAAejB,KAAK,0CAA2CiG,GAC/DH,EAAYG,GAAQ,mBAINS,GACdC,EACAV,EACAjI,GAEA,IACE,IAAM4I,EAAwBJ,GAAyBP,GACvD,IAAKW,EACH,OAEF,IAAMC,QAAaF,SAAAA,EAAsBP,MACzC,IAAKS,EACH,OAEFD,EAAsBxG,SAAQ,SAACqG,GAC7B,OAAQA,GACN,IAAK,uBAEI,QADCzI,IAEJA,EAAQ,cAGZ,MACF,IAAK,uBAEI,QADCA,GAGJ6I,EAAUC,YAAY,cAAe,KAK7CD,EAAUC,YAAYL,EAAUzI,YAE3B+I,GACP9F,EAAejB,KAAK+G,aAIRC,GACdL,EACAV,EACAgB,GAEA,IACE,IAAMC,EAAgBpB,EAAYG,GAClC,OAAQU,EAAqBP,MAAMe,iBACjCD,EAAgBA,EAAc,GAAKjB,SAE9Bc,WACFE,GAAa,YAGNG,GAAiBC,GAC/B,IAAIC,EAAOD,EAAQE,eAAetD,EAAGuD,IAAK,QAI1C,OAHKF,GAAQD,EAAQI,cAAgBxD,EAAGyD,QACtCJ,EAAOD,EAAQM,aAAa,SAEvBL,MAGIM,gCACXC,KAAiB,8BAEjBC,OAAA,SAAO9K,GAEL,YADK6K,KAAK7M,KAAKgC,WAIjB+K,MAAA,WACExI,KAAKsI,KAAO,MAMd3I,SAAA,WACE,IAAMlC,EAAMuC,KAAKsI,KAAKG,KAAK,IAE3B,YADKH,KAAO,CAAC7K,GACNA,iBAIKiL,GAAWjL,GAEzB,WAAYA,EAAInB,WAAW,GAAGqD,SAAS,iBAGzBgJ,GAAepH,GAC7B,OAAOA,EAAK6D,QAAQ,+BAAgCsD,aAGtCE,GAAanL,GAC3B,OAAOA,EAAI2H,QAAQ,sBAAuBsD,aAG5BG,GAAepL,GAC7B,OAAOA,EAAI2H,QAAQ,2BAA4B0D,6BAGjCC,GAASC,GACvB,QAASA,EAAG3E,MACV,uHASY4E,GAAmBxL,EAAagJ,GAI9C,OAAOhJ,EAAI2H,QAAQ,mBAHnB,SAAoB8D,GAClB,gBAP4BzL,EAAagJ,GAE3C,OADAA,EAA2B,iBAAXA,EAAsBA,EAAS,QAC9B,MAAQhJ,EAAInB,WAAW,IAAIqD,SAAS,IAAIsF,OAAO,IAKvCiE,EAAGzC,eAKd0C,GAAa1L,GAC3B,OAAOwL,GAAmBxL,YA6BZ2L,GACdC,EACAC,GAIA,IAFA,IAAIxG,EAAI,EACJyG,EAAIF,IACK,CAIX,GAFoB,GAALvG,GAAWwG,EAAKxG,EAAI,GACpByG,GAAKF,GAAQC,EAAKC,GAC7BzG,GAAKyG,EACP,OAAOzG,EAET,IAAM0G,EAAK1G,EAAIyG,GAAM,EACjBD,EAAKE,GACPD,EAAIC,EAEJ1G,EAAI0G,EAAI,YAQEC,GAAcvK,EAAWwK,GACvC,OAAOxK,EAAIwK,WA0CGC,GACdC,EACAC,GAGA,IADA,MAAMC,EAA4B,OAClBF,kBAAK,KAAVpE,UACHrI,EAAmB0M,EAAIrE,GACzBrI,IAAM2M,EAAI3M,KACZ2M,EAAI3M,GAAKqI,UAGNsE,WAoBOC,GACdH,EACAC,GAGA,IADA,MAAMC,EAA8B,OACpBF,kBAAK,KAAVpE,UACHrI,EAAI0M,EAAIrE,GACVrI,IACE2M,EAAI3M,GACN2M,EAAI3M,GAAG1B,KAAK+J,GAEZsE,EAAI3M,GAAK,CAACqI,WAITsE,MA2CIE,gCACXjK,UAAgD,8BAEhDkK,cAAA,SAAcC,GACZ,IAAM5B,EAAOtI,KAAKD,UAAUmK,EAAIC,MAChC,GAAI7B,EAAM,CACR4B,EAAIE,OAASpK,KACbkK,EAAIG,cAAgBrK,KACpB,IAAK,IAAI5H,EAAI,EAAGA,EAAIkQ,EAAKlS,OAAQgC,IAC/BkQ,EAAKlQ,GAAG8R,OAKdI,iBAAA,SACEH,EACArJ,EACAyJ,GAEA,IAAIA,EAAJ,CAGA,IAAMjC,EAAOtI,KAAKD,UAAUoK,GACxB7B,EACFA,EAAK7M,KAAKqF,GAEVd,KAAKD,UAAUoK,GAAQ,CAACrJ,OAI5B0J,oBAAA,SACEL,EACArJ,EACAyJ,GAEA,IAAIA,EAAJ,CAGA,IAAMjC,EAAOtI,KAAKD,UAAUoK,GAC5B,GAAI7B,EAAM,CACR,IAAMnS,EAAQmS,EAAKjQ,QAAQyI,GACvB3K,GAAS,GACXmS,EAAKvL,OAAO5G,EAAO,WAgDhBsU,GAAqC,KAoCrCC,GAAiD,KA+BjDC,GAAuD,KAiCvDC,GAAiD,cCv5B5CC,GAAMC,GACpB,GAAqB,GAAjBA,EAAKC,SAAe,CACtB,IAAMC,EAASF,EAAiB1C,aAAa,MAC7C,GAAI4C,EACF,OAAOA,uBAMGtC,GAAWM,GACzB,UAAWA,WAGGiC,GAAOxN,GACrB,OAAOA,EAAI2H,QAAQ,kBAAmBsD,aAGxBwC,GAAazN,GAC3B,OAAOA,EAAIwH,OAAO,YAGJkG,GAAS1N,GACvB,OAAKA,EAGEA,EAAI2H,QAAQ,oBAAqB8F,IAF/BzN,WAKK2N,GAAYC,GAC1B,IAAMnF,EAAS,GACf,EAAG,CACD,IAAM9B,EAAIiH,EAAOhH,MAAM,gBACjBiH,EAAIH,GAAS/G,EAAE,IAErB,KADAiH,EAASA,EAAOpG,OAAOb,EAAE,GAAGhO,OAAS,MACrB8P,EAAO9P,OACrB,OAAOkV,EAETpF,EAAOzK,KAAK6P,SACLD,GACT,OAAOnF,WAGOqF,GAASF,GAEvB,IADA,IAAMG,EAAM,GACLH,GAAQ,CACb,IAAMjH,EAAIiH,EAAOhH,MAAM,4BACvB,IAAKD,EACH,OAAOoH,EAETA,EAAIpH,EAAE,IAAMgH,GAAYhH,EAAE,IAC1BiH,EAASA,EAAOpG,OAAOb,EAAE,GAAGhO,eAEvBoV,MASIC,uDACXC,SAAA,SAASC,GACPA,EAAGpD,OAAO,QAMZqD,QAAA,SAAQC,GACN,eAISC,cACX,WACkB3V,EACA4V,EACAC,QAFA7V,kBACA4V,eACAC,gBAFAhM,WAAA7J,EACA6J,QAAA+L,EACA/L,cAAAgM,6BAMlBN,SAAA,SAASC,GACPA,EAAGpD,OAAO,KACVoD,EAAGpD,OAAOvI,KAAK7J,MAAMwJ,aACjBK,KAAK+L,IAAM/L,KAAKgM,YAClBL,EAAGpD,OAAO,KACNvI,KAAK+L,IACPJ,EAAGpD,OAAOvI,KAAK+L,IAEb/L,KAAKgM,WACPL,EAAGpD,OAAO,OACVoD,EAAGpD,OAAOvI,KAAKgM,WAEjBL,EAAGpD,OAAO,SAOdqD,QAAA,SAAQC,GACN,GAAyB,GAArBA,EAAIf,KAAKC,SACX,UAAUhM,MAAM,qBAElB,IAGIkN,EAHE7E,EAAOyE,EAAIf,KACXoB,EAAgB9E,EAAK+E,SACrBC,EAAoBF,EAAc9V,OAElCiQ,EAAapP,KAAK4B,MAAMmH,KAAK7J,MAAQ,GAAK,EAChD,GAAIkQ,EAAa,GAA0B,GAArB+F,EAEpBP,EAAIf,MADJmB,EAAQ7E,EAAKiF,aACOjF,MACf,CAEL,GADA6E,EAAQC,EAAcjV,KAAKC,IAAImP,EAAY+F,EAAoB,IAC9C,EAAbpM,KAAK7J,MAAW,CAClB,IAAMmW,EAAOL,EAAMM,YACdD,GAAyB,GAAjBA,EAAKvB,SAGhBkB,EAAQK,EAFRT,EAAIhO,SAKRgO,EAAIf,KAAOmB,KAETjM,KAAK+L,KAAOF,EAAIhO,OAASmC,KAAK+L,IAAMlB,GAAMgB,EAAIf,OAAQ,CACxD,IAAM0B,EAAYpF,EAAKqF,cAAcC,eAAe1M,KAAK+L,IACrDS,EACFX,EAAIf,KAAO0B,EAEX9K,EAAejB,KAAK,qBAAsBT,KAAK+L,WAGnDF,EAAIG,SAAWhM,KAAKgM,kBAKXW,cACX,WACkBC,EACAC,EACAC,EACAd,QAHAY,mBACAC,uBACAC,sBACAd,gBAHAhM,YAAA4M,EACA5M,gBAAA6M,EACA7M,eAAA8M,EACA9M,cAAAgM,6BAGlBJ,QAAA,SAAQC,GACN,GAAI7L,KAAK4M,OAAS,IAAMf,EAAIhO,MAAO,CAGjC,IAFA,IAAI+O,EAAS5M,KAAK4M,OACd9B,EAAOe,EAAIf,OACF,CACX,IAAMC,EAAWD,EAAKC,SACtB,GAAgB,GAAZA,EACF,MAEF,IAAMuB,EAAOxB,EAAKyB,YAClB,GAAI,GAAKxB,GAAYA,GAAY,EAAG,CAClC,IAAMgC,EAAajC,EAAKkC,YAAY5W,OACpC,GAAIwW,GAAUG,EACZ,MAEF,IAAKT,EAAM,CACTM,EAASG,EACT,MAEFH,GAAUG,MAEPT,EAAM,CACTM,EAAS,EACT,MAEF9B,EAAOwB,EAETT,EAAIf,KAAOA,EACXe,EAAIe,OAASA,SAEff,EAAIG,SAAWhM,KAAKgM,eAOtBN,SAAA,SAASC,GACPA,EAAGpD,OAAO,KACVoD,EAAGpD,OAAOvI,KAAK4M,OAAOjN,aAClBK,KAAK6M,YAAc7M,KAAK8M,WAAa9M,KAAKgM,YAC5CL,EAAGpD,OAAO,MACNvI,KAAK6M,YAAc7M,KAAK8M,aACtB9M,KAAK6M,YACPlB,EAAGpD,OAAO0C,GAAOjL,KAAK6M,aAExBlB,EAAGpD,OAAO,KACNvI,KAAK8M,WACPnB,EAAGpD,OAAO0C,GAAOjL,KAAK8M,aAGtB9M,KAAKgM,WACPL,EAAGpD,OAAO,OACVoD,EAAGpD,OAAOvI,KAAKgM,WAEjBL,EAAGpD,OAAO,YAKH0E,gCACXC,MAAgB,gCAEhBC,WAAA,SAAWC,GACT,IAAIhJ,EAAIgJ,EAAQ/I,MAAM,uBACtB,IAAKD,EACH,UAAUrF,MAAM,iBAKlB,IAHA,IAAMtB,EAAM4P,mBAAmBjJ,EAAE,IAC7BhM,EAAI,EACF8U,EAAQ,KACD,CACX,IAAI1B,SAGJ,OAAQ/N,EAAIzC,OAAO5C,IACjB,IAAK,IAKH,GAJAA,MACAgM,EAAI3G,EACDwH,OAAO7M,GACPiM,MAAM,kDAEP,UAAUtF,MAAM,yBAElB3G,GAAKgM,EAAE,GAAGhO,OACV,IAAMD,EAAQmX,SAASlJ,EAAE,GAAI,IACvB2H,EAAK3H,EAAE,GACboH,EAAMD,GAASnH,EAAE,IACjB8I,EAAMzR,KAAK,IAAIqQ,GAAU3V,EAAO4V,EAAIwB,EAAc/B,EAAGtC,KACrD,MAEF,IAAK,IAOH,GANA9Q,MACAgM,EAAI3G,EACDwH,OAAO7M,GACPiM,MACC,4FAGF,UAAUtF,MAAM,yBAElB3G,GAAKgM,EAAE,GAAGhO,OACV,IAAMwW,EAASU,SAASlJ,EAAE,GAAI,IAC1ByI,EAAazI,EAAE,GACfyI,IACFA,EAAa1B,GAAS0B,IAExB,IAAIC,EAAY1I,EAAE,GACd0I,IACFA,EAAY3B,GAAS2B,IAEvBtB,EAAMD,GAASnH,EAAE,KACjB8I,EAAMzR,KACJ,IAAIkR,GACFC,EACAC,EACAC,EACAS,EAAc/B,EAAGtC,KAGrB,MAEF,IAAK,IACH9Q,IACA8U,EAAMzR,KAAK,IAAIgQ,IACf,MACF,IAAK,IACL,IAAK,IAIL,IAAK,GAEH,YADAzL,KAAKkN,MAAQA,GAEf,QACE,UAAUnO,MAAM,0BAKxByO,SAAA,SAASC,GAQP,IAPA,IAAM5B,EAAM,CACVf,KAAM2C,EAAI7G,gBACVgG,OAAQ,EACR/O,SACAmO,SAAU,KACV0B,IAAK,MAEEtV,EAAI,EAAGA,EAAI4H,KAAKkN,MAAM9W,OAAQgC,IACrC,IAAK4H,KAAKkN,MAAM9U,GAAGwT,QAAQC,GAAM,CAC/BA,EAAI6B,IAAM,IAAIT,EACdpB,EAAI6B,IAAIR,MAAQlN,KAAKkN,MAAMxW,MAAM0B,EAAI,GACrC,aAGGyT,KAGT8B,KAAA,SAAKC,EAAc/P,GACjB,OAAO+P,EACJxI,QAAQ,OAAQ,KAChBf,MACCxG,EACI,gCACA,iCACJ,GACDuH,QAAQ,MAAO,IACfA,QAAQ,MAAO,OAMpByI,oBAAA,SACE/C,EACA8B,EACA/O,EACAmO,GAMA,IAJA,IAAMkB,EAAQ,GACVpH,EAASgF,EAAKgD,WACdjB,EAAa,GACbC,EAAY,GACThC,GAAM,CACX,OAAQA,EAAKC,UACX,OACA,OACA,OACE,IAAM6C,EAAO9C,EAAKkC,YACZD,EAAaa,EAAKxX,OACpByH,GACF+O,GAAUG,EACLF,IACHA,EAAae,KAGXhB,EAASG,IACXH,EAASG,GAEXlP,KACAgP,EAAae,EAAK3I,OAAO,EAAG2H,GAC5BE,EAAYc,EAAK3I,OAAO2H,IAE1B9B,EAAOA,EAAKiD,gBACZ,SAEF,OACEjD,EAAOA,EAAKiD,gBACZ,SAEJ,WAEEnB,EAAS,GAAKC,GAAcC,KAC9BD,EAAa7M,KAAK2N,KAAKd,MACvBC,EAAY9M,KAAK2N,KAAKb,MACtBI,EAAMzR,KAAK,IAAIkR,GAAWC,EAAQC,EAAYC,EAAWd,IACzDA,EAAW,MAENlG,GACAA,GAA6B,GAAnBA,EAAOiF,UADT,CAMb,IAFA,IAAMgB,EAAKlO,EAAQ,KAAOgN,GAAMC,GAC5B3U,EAAQ0H,EAAQ,EAAI,EACjBiN,GACgB,GAAjBA,EAAKC,WACP5U,GAAS,GAEX2U,EAAOA,EAAKiD,gBAEdb,EAAMzR,KAAK,IAAIqQ,GAAU3V,EAAO4V,EAAIC,IACpCA,EAAW,KACXlB,EAAOhF,EACPA,EAASA,EAAOgI,WAChBjQ,KAEFqP,EAAMc,UACFhO,KAAKkN,OACPA,EAAMzR,KAAK,IAAIgQ,IACfzL,KAAKkN,MAAQA,EAAMvT,OAAOqG,KAAKkN,QAE/BlN,KAAKkN,MAAQA,KAIjBvN,SAAA,WACE,IAAKK,KAAKkN,MACR,MAAO,GAET,IAAMvB,EAAK,IAAI4B,GACf5B,EAAGpD,OAAO,YACV,IAAK,IAAInQ,EAAI,EAAGA,EAAI4H,KAAKkN,MAAM9W,OAAQgC,IACrC4H,KAAKkN,MAAM9U,GAAGsT,SAASC,GAGzB,OADAA,EAAGpD,OAAO,KACHoD,EAAGhM,WAAWyF,QAAQ,KAAM,sBC/XvB6I,GAAiBC,GAC/B,MAAO,CACLC,WAAYD,EAAKC,WACjBC,WAAYF,EAAKE,WACjBC,OAAQH,EAAKG,OACbC,UAAWJ,EAAKI,UAChBC,YAAaL,EAAKK,YAClBC,WAAYN,EAAKM,WACjBC,UAAWP,EAAKO,UAChBC,WAAYR,EAAKQ,WACjBC,WAAYT,EAAKS,WACjBC,kBAAmBjM,OAAOkM,OAAO,GAAIX,EAAKU,mBAC1CE,iBAAkBZ,EAAKY,iBACnBnM,OAAOkM,OAAO,GAAIX,EAAKY,8BAKlBC,GAjCJ,CACLZ,WAAY,QACZC,WAAY,KACZC,OAAQ,EACRC,aACAC,YAAa,GACbC,cACAC,aACAC,cACAC,WAAY,EACZC,kBAAmB,CAAEI,eAAmBC,UACxCH,yBAgCSI,GACF,YAOKC,GACdC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAQvY,KAAKC,KAAKkY,EAAQ,GAAKE,GAAOD,EAAQ,GAAKE,GACzD,gBAAiBC,UAAaA,mBAMhBC,GAAUhS,GACxB,UAAW8P,MAAqB9P,gBAMlBiS,GAASnO,GACvB,OAAOgM,MAAuBhM,YAGhBoO,GACdC,EACAC,GAEA,OAAID,EACQrC,GAAoBqC,OAAYrC,GAAoBsC,GAEzDtC,GAAoBsC,OAGlBC,GAAuB,EAKrBC,cAWX,WACSjK,EACAkK,GAUP,QAXOlK,mBACAkK,qBAZTC,qBACA9D,SAA2B,QAC3B+D,iBACAC,gBACAC,kBACAC,mBACAC,OAAiC,QACjCC,MAAgC,QAChCC,SAA2D,GAGlDxQ,YAAA8F,EACA9F,cAAAgQ,EAEPhQ,KAAKiQ,aAAeH,KACpB9P,KAAKkQ,KAAO,IAAIO,GAAMzQ,KAAM,GAC5BA,KAAKmQ,IAAM,IAAIM,GAAMzQ,KAAM,GAC3BA,KAAKoQ,MAAQ,IAAIK,GAAMzQ,SACvBA,KAAKqQ,OAAS,IAAII,GAAMzQ,SACpB8F,GACFA,EAAOqG,SAAS1Q,KAAKuE,OAElB8F,EAAQ,CAEX,IAAM0K,EAAWxQ,KAAKwQ,SACtBA,EAAQ3X,MAAY5B,KAAK4B,MACzB2X,EAAQnX,KAAWpC,KAAKoC,KACxBmX,EAAQE,MAAYzZ,KAAKyZ,MACzBF,EAAQG,KAAW1Z,KAAK0Z,KACxBH,EAAQtZ,IAAUD,KAAKC,IACvBsZ,EAAQI,IAAU3Z,KAAK2Z,IACvBJ,EAAQrB,UAAgBA,GACxBqB,EAAS,cAAgBf,GACzBe,EAAS,YAAcd,GACvBc,EAAQK,OAAa,SAACzW,iBAAaA,GACnC4F,KAAK8Q,kBAAkB,cAAc,WACnC,YAAYC,eAEd/Q,KAAK8Q,kBAAkB,eAAe,WACpC,YAAYE,gBAEdhR,KAAK8Q,kBAAkB,oBAAoB,WACzC,YAAY5C,KAAKC,cAEnBnO,KAAK8Q,kBAAkB,mBAAmB,WACxC,YAAY5C,KAAKO,aAEnBzO,KAAK8Q,kBAAkB,kBAAkB,WACvC,YAAY5C,KAAKI,aAEnBtO,KAAK8Q,kBAAkB,eAAe,WACpC,YAAY5C,KAAKG,UAEnBrO,KAAK8Q,kBAAkB,oBAAoB,WACzC,YAAY5C,KAAKE,cAEnBpO,KAAK8Q,kBAAkB,qBAAqB,WAC1C,YAAY5C,KAAKK,YAAcvO,KAAKiR,YAEtCjR,KAAK8Q,kBAAkB,mBAAmB,WACxC,YAAY5C,KAAKM,cAEnBxO,KAAK8Q,kBAAkB,oBAAoB,WACzC,YAAY5C,KAAKQ,cAInB1O,KAAK8Q,kBAAkB,aAAa,WAClC,OAAOrB,GAAUzP,KAAKkR,SAAWlR,KAAKkR,SAAW,OAEnDlR,KAAK8Q,kBAAkB,aAAa,WAClC,OAAOrB,GAAUzP,KAAKmR,SAAWnR,KAAKmR,SAAW,mCAKvDL,kBAAA,SAAkBvP,EAAcC,GAC9BxB,KAAKsQ,OAAO/O,GAAQ,IAAI6P,GAAOpR,KAAMwB,EAAID,MAG3C8P,WAAA,SAAWC,EAAuBC,GAChCvR,KAAKsQ,OAAOgB,GAAiBC,KAG/BC,WAAA,SAAWF,EAAuBC,GAChCvR,KAAKuQ,MAAMe,GAAiBC,KAG9BE,cAAA,SAAcH,EAAuB9P,GACnCxB,KAAKwQ,SAASc,GAAiB9P,iBAmBnBkQ,GAA6BC,GAC3C,OAAQA,EAAK3M,eACX,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,SACF,QACE,cAeO4M,GAA8C,CACzDC,GAAI,EACJC,GAAI,GACJC,GAAI,EAAI,EACRC,GAAI,GACJC,GAAI,GAAK,KACTC,GAAI,GAAK,KACTC,EAAG,GAAK,KAAO,GACfC,GAAI,GACJC,IAAK,GACLC,GAAI,EAEJC,KAAM,EACNC,IAAK,EAAI,GACTC,KAAM,KAAO,aAMCC,GAAmBf,GACjC,OAAQA,GACN,IAAK,IACL,IAAK,MACH,SACF,QACE,cAWOgB,cAiBX,WACkBC,EACAC,EACAC,EAChB7B,QAHgB2B,sBACAC,0BACAC,2BAnBRC,gBAAiC,UAC3ChC,sBACUiC,iBAAkC,UAC5ChC,uBACAiC,4BACAC,aAA8B,UAC9BC,uBAAyC,UACzClC,qBACA/C,iBACAkF,OAA0C,QAC1CC,cAA+B,UAC/BC,eAAgC,UAChCC,aAA+B,UAC/BrC,SAA0B,UAC1BC,SAA0B,KAGRnR,eAAA4S,EACA5S,mBAAA6S,EACA7S,oBAAA8S,EAGhB9S,KAAK+Q,UAAY,WACf,YAASgC,qBACKA,qBAEA7E,KAAKQ,WACbzX,KAAK4B,MAAMga,EAAgB,GAAK7S,KAAKkO,KAAKS,WAC1CkE,GAGR7S,KAAKgR,WAAa,WAChB,YAASgC,sBACKA,iBAELF,GAGX9S,KAAKiT,gBAAkBhC,EACvBjR,KAAKiR,SAAW,WACd,YAASiC,kBACKA,aAELjC,GAGXjR,KAAKkO,KAAOa,8BAGNyE,gBAAA,SAAgBC,GACtB,IAAIvK,EAAIlJ,KAAKoT,OAAOK,EAAMxD,UAK1B,OAJK/G,IAEHlJ,KAAKoT,OAAOK,EAAMxD,UADlB/G,EAAI,IAGCA,KAGTwK,WAAA,SAAWD,GACTzT,KAAKoT,OAAOK,EAAMxD,UAAY,GAC9B,IAAK,IAAI9S,EAAI,EAAGA,EAAIsW,EAAMtH,SAAS/V,OAAQ+G,IACzC6C,KAAK0T,WAAWD,EAAMtH,SAAShP,OAInCwW,cAAA,SAAchC,EAAciC,GAC1B,GAAIlC,GAA6BC,GAAO,CACtC,IAAMkC,EAAM7T,KAAK+Q,YAAc,IACzB+C,EAAM9T,KAAKgR,aAAe,IAC1B+C,EAA2B,MAAtB/T,KAAKqT,cAAwBrT,KAAKqT,cAAgB,IAAMQ,EAC7DG,EAA4B,MAAvBhU,KAAKsT,eAAyBtT,KAAKsT,eAAiB,IAAMQ,EAErE,OAAQnC,GACN,IAAK,KACH,OAAOoC,EACT,IAAK,KACH,OAAOC,EACT,IAAK,KACH,YAAYT,aAAeS,EAAKD,EAClC,IAAK,KACH,YAAYR,aAAeQ,EAAKC,EAClC,IAAK,OACH,OAAOD,EAAKC,EAAKD,EAAKC,EACxB,IAAK,OACH,OAAOD,EAAKC,EAAKD,EAAKC,EACxB,IAAK,MACH,OAAOH,EACT,IAAK,MACH,OAAOC,EACT,IAAK,MACH,YAAYP,aAAeO,EAAMD,EACnC,IAAK,MACH,YAAYN,aAAeM,EAAMC,EACnC,IAAK,QACH,OAAOD,EAAMC,EAAMD,EAAMC,EAC3B,IAAK,QACH,OAAOD,EAAMC,EAAMD,EAAMC,SAGnB,MAARnC,GAAwB,OAARA,EACXiC,EAAS5T,KAAKiT,gBAAkBjT,KAAKiR,WAElC,MAARU,EAECC,GAAgBU,IACdsB,EAAS5T,KAAKiT,gBAAkBjT,KAAKiR,YACxCW,GAAgBQ,GAGbR,GAAiBD,MAG1BsC,SAAA,SAASR,EAAqBnC,GAC5B,EAAG,CACD,IAAIC,EAAMkC,EAAMnD,OAAOgB,GACvB,GAAIC,EACF,OAAOA,EAET,GAAIkC,EAAMzD,WACRuB,EAAMkC,EAAMzD,SAASzN,KAAKvC,KAAMsR,OAE9B,OAAOC,EAGXkC,EAAQA,EAAM3N,aACP2N,GACT,UAAU1U,eAAeuS,uBAM3B4C,SAAA,SACET,EACAnC,EACA6C,EACAC,GAEA,EAAG,CACD,IAAIC,EAAOZ,EAAMlD,MAAMe,GACvB,GAAI+C,EACF,OAAOA,EAET,GAAIZ,EAAMzD,WACRqE,EAAOZ,EAAMzD,SAASzN,KAAKvC,KAAMsR,OAE/B,OAAO+C,EAGX,IAAM7S,EAAKiS,EAAMjD,SAASc,GAC1B,GAAI9P,EAAI,CACN,GAAI4S,EACF,OAAOX,EAAMvD,KAGf,IADA,IAAMjR,EAAO/E,MAAMia,EAAO/d,QACjBgC,EAAI,EAAGA,EAAI+b,EAAO/d,OAAQgC,IACjC6G,EAAK7G,GAAK+b,EAAO/b,GAAGkc,SAAStU,MAE/B,WAAWyQ,GAAMgD,EAAOjS,EAAG+S,MAAMvU,KAAMf,IAEzCwU,EAAQA,EAAM3N,aACP2N,GACT,UAAU1U,mBAAmBuS,uBAG/BkD,cAAA,SAAcjT,EAAckT,GAC1B,IAAMC,EAAmB,QAATnT,KAAoBvB,KAAKkO,KAAKU,kBAAkBrN,GAChE,OAAOkT,GAAOC,EAAUA,KAG1BC,cAAA,SAAcC,EAAiBnW,GAC7B,IAAIgI,EAAS,GACPrC,EAAIwQ,EAAQvQ,MAAM,oBACpBD,IACFqC,EAASrC,EAAE,GACXwQ,EAAUxQ,EAAE,IAEd,IAAIyQ,EAAqB,KACrBC,EAAwB,KAC5B,OAAQF,GACN,IAAK,QACL,IAAK,SACL,IAAK,eACL,IAAK,gBACL,IAAK,QACCnW,IACFoW,EAAMpW,EAAM6V,SAAStU,OAI3B,OAAQ4U,GACN,IAAK,QACHE,EAAS9U,KAAK+Q,YACd,MACF,IAAK,SACH+D,EAAS9U,KAAKgR,aACd,MACF,IAAK,eACH8D,EAASpR,OAAOqR,OAAOC,WACvB,MACF,IAAK,gBACHF,EAASpR,OAAOqR,OAAOE,YACvB,MACF,IAAK,QACHH,EAASpR,OAAOqR,OAAOG,WAG3B,GAAc,MAAVJ,GAAyB,MAAPD,EACpB,OAAQpO,GACN,IAAK,MACH,OAAOqO,GAAUD,EACnB,IAAK,MACH,OAAOC,GAAUD,EACnB,QACE,OAAOC,GAAUD,UAEF,MAAVC,GAA2B,MAATrW,EAC3B,WAAOqW,EAET,YAGFK,iBAAA,SAAiB5T,EAAc9C,EAAe2W,GAC5C,YAGFC,SAAA,SAAS5B,EAAqB5J,GAC5B,IAAMX,EAAIlJ,KAAKoT,OAAOK,EAAMxD,UAC5B,OAAO/G,EAAIA,EAAEW,aAGfyL,SAAA,SAAS7B,EAAqB5J,EAAa0H,GACzCvR,KAAKwT,gBAAgBC,GAAO5J,GAAO0H,QAS1BgE,cAGX,WAAmB9B,QAAAA,kBAFnB5J,WAEmB7J,WAAAyT,EACjBzT,KAAKyT,MAAQA,EACbzT,KAAK6J,QAAUiG,gCAMjBnQ,SAAA,WACE,IAAM6V,EAAM,IAAIjI,GAEhB,YADK7B,SAAS8J,EAAK,GACZA,EAAI7V,cAGb+L,SAAA,SAAS8J,EAAwBC,GAC/B,UAAU1W,MAAM,iBAGR2W,aAAA,SAAaC,GACrB,UAAU5W,MAAM,iBAGlB6W,OAAA,SAAOD,EAAkBxB,GACvB,eAGF0B,WAAA,SACEC,EACAH,EACAI,GAEA,OAAOD,IAAU9V,QAGnBgW,YAAA,SACEF,EACAH,EACAI,GAEA,IAAME,EAASF,EAAgB/V,KAAK6J,KACpC,GAAc,MAAVoM,EACF,OAAIA,IAAW/G,IAGR+G,EAEPF,EAAgB/V,KAAK6J,KAAOqF,GAC5B,IAAMhJ,EAASlG,KAAK6V,WAAWC,EAAOH,EAASI,GAE/C,OADAA,EAAgB/V,KAAK6J,KAAO3D,EACrBA,KAIXgQ,OAAA,SAAOJ,EAAYH,GACjB,YAAYK,YAAYF,EAAOH,EAAS,OAG1CrB,SAAA,SAASqB,GACP,IAAIzP,EAASyP,EAAQN,SAASrV,KAAKyT,MAAOzT,KAAK6J,KAC/C,gBAAW3D,IAGXA,EAASlG,KAAK0V,aAAaC,GAC3BA,EAAQL,SAAStV,KAAKyT,MAAOzT,KAAK6J,IAAK3D,IAH9BA,KAOXiQ,YAAA,WACE,eAISC,eACX,WAAY3C,EAA4BlC,gBACtC8E,cAAM5C,UADgClC,WAAA8E,MAAA9E,WAD1C,2BAKY+E,MAAA,WACR,UAAUvX,MAAM,iBAGlBwX,WAAA,SAAWhF,GACT,UAAUxS,MAAM,iBAMlB2W,aAAA,SAAaC,GACX,IAAMpE,EAAMvR,KAAKuR,IAAI+C,SAASqB,GAC9B,YAAYY,WAAWhF,MAMzBsE,WAAA,SACEC,EACAH,EACAI,GAEA,OACED,IAAU9V,MAAQA,KAAKuR,IAAIyE,YAAYF,EAAOH,EAASI,MAO3DrK,SAAA,SAAS8J,EAAwBC,GAC3B,GAAKA,GACPD,EAAIjN,OAAO,KAEbiN,EAAIjN,OAAOvI,KAAKsW,SAChBtW,KAAKuR,IAAI7F,SAAS8J,EAAK,IACnB,GAAKC,GACPD,EAAIjN,OAAO,QAOfqN,OAAA,SAAOD,EAAkBxB,GACvB,IAAM5C,EAAMvR,KAAKuR,IAAIqE,OAAOD,EAASxB,GACrC,OAAI5C,IAAQvR,KAAKuR,SAGP,SAAUiF,YAAoBxW,KAAKyT,MAAOlC,OAxD5BgE,IA6DfkB,eACX,WAAYhD,EAA4BiD,EAAiBC,gBACvDC,cAAMnD,UADgCiD,aAAiBC,WAAjBC,MAAAF,EAAiBE,MAAAD,WAD3D,2BAKEE,YAAA,WACE,UAAU9X,MAAM,iBAGlBuX,MAAA,WACE,UAAUvX,MAAM,iBAGlB+X,UAAA,SAAUJ,EAAaC,GACrB,UAAU5X,MAAM,iBAMlB2W,aAAA,SAAaC,GACX,IAAMe,EAAM1W,KAAK0W,IAAIpC,SAASqB,GACxBgB,EAAM3W,KAAK2W,IAAIrC,SAASqB,GAC9B,YAAYmB,UAAUJ,EAAKC,MAM7Bd,WAAA,SACEC,EACAH,EACAI,GAEA,OACED,IAAU9V,MACVA,KAAK0W,IAAIV,YAAYF,EAAOH,EAASI,IACrC/V,KAAK2W,IAAIX,YAAYF,EAAOH,EAASI,MAOzCrK,SAAA,SAAS8J,EAAwBC,GAC/B,IAAMsB,EAAe/W,KAAK6W,cACtBE,GAAgBtB,GAClBD,EAAIjN,OAAO,KAEbvI,KAAK0W,IAAIhL,SAAS8J,EAAKuB,GACvBvB,EAAIjN,OAAOvI,KAAKsW,SAChBtW,KAAK2W,IAAIjL,SAAS8J,EAAKuB,GACnBA,GAAgBtB,GAClBD,EAAIjN,OAAO,QAOfqN,OAAA,SAAOD,EAAkBxB,GACvB,IAAMuC,EAAM1W,KAAK0W,IAAId,OAAOD,EAASxB,GAC/BwC,EAAM3W,KAAK2W,IAAIf,OAAOD,EAASxB,GACrC,OAAIuC,IAAQ1W,KAAK0W,KAAOC,IAAQ3W,KAAK2W,SAG3B,SAAUH,YAAoBxW,KAAKyT,MAAOiD,EAAKC,OAlElCpB,IAuEdyB,eACX,WAAYvD,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,mCAMpBE,YAAA,WACE,aATyBJ,IAahBQ,eACX,WAAYxD,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,mCAMpBE,YAAA,WACE,aAT4BJ,IAanBS,eACX,WAAYzD,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,mCAMpBE,YAAA,WACE,aAT0BJ,IAajBU,eACX,WAAY1D,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,mCAMpBE,YAAA,WACE,aATgCJ,IAavBW,eACX,WAAY3D,EAAqBlC,sBACzBkC,EAAOlC,gBAFjB,2BAQE+E,MAAA,WACE,MAAO,OAMTC,WAAA,SAAWhF,GACT,OAAQA,MAhBa6E,IAoBZiB,eACX,WAAY5D,EAAqBlC,sBACzBkC,EAAOlC,mCAMf+E,MAAA,WACE,MAAO,WATmBc,IAajBE,eACX,WAAY7D,EAAqBlC,sBACzBkC,EAAOlC,gBAFjB,2BAQE+E,MAAA,WACE,MAAO,OAMTC,WAAA,SAAWhF,GACT,OAAQA,MAhBgB6E,IAoBfmB,eACX,WAAY9D,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,gBAFtB,2BAQEL,MAAA,WACE,MAAO,QAMTZ,aAAA,SAAaC,GACX,YAAYe,IAAIpC,SAASqB,IAAY3V,KAAK2W,IAAIrC,SAASqB,OAhBlCqB,IAoBZQ,eACX,WAAY/D,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,mCAMpBL,MAAA,WACE,MAAO,YATmBiB,IAajBE,eACX,WAAYhE,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,gBAFtB,2BAQEL,MAAA,WACE,MAAO,QAMTZ,aAAA,SAAaC,GACX,YAAYe,IAAIpC,SAASqB,IAAY3V,KAAK2W,IAAIrC,SAASqB,OAhBnCqB,IAoBXU,eACX,WAAYjE,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,mCAMpBL,MAAA,WACE,MAAO,SATgBmB,IAadE,eACX,WAAYlE,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,mCAMpBL,MAAA,WACE,MAAO,WATkBmB,IAahBG,eACX,WAAYnE,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,gBAFtB,2BAQEL,MAAA,WACE,MAAO,OAMTQ,UAAA,SAAUJ,EAAaC,GACrB,OAAOD,EAAMC,MAhBOM,IAoBXY,eACX,WAAYpE,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,gBAFtB,2BAQEL,MAAA,WACE,MAAO,QAMTQ,UAAA,SAAUJ,EAAaC,GACrB,OAAOD,GAAOC,MAhBMM,IAoBXa,eACX,WAAYrE,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,gBAFtB,2BAQEL,MAAA,WACE,MAAO,OAMTQ,UAAA,SAAUJ,EAAaC,GACrB,OAAOD,EAAMC,MAhBOM,IAoBXc,eACX,WAAYtE,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,gBAFtB,2BAQEL,MAAA,WACE,MAAO,QAMTQ,UAAA,SAAUJ,EAAaC,GACrB,OAAOD,GAAOC,MAhBMM,IAoBXe,eACX,WAAYvE,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,gBAFtB,2BAQEL,MAAA,WACE,MAAO,QAMTQ,UAAA,SAAUJ,EAAaC,GACrB,OAAOD,GAAOC,MAhBMM,IAoBXgB,eACX,WAAYxE,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,gBAFtB,2BAQEL,MAAA,WACE,MAAO,QAMTQ,UAAA,SAAUJ,EAAaC,GACrB,OAAOD,GAAOC,MAhBMM,IAoBXiB,eACX,WAAYzE,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,gBAFtB,2BAQEL,MAAA,WACE,MAAO,OAMTQ,UAAA,SAAUJ,EAAaC,GACrB,OAAQD,EAAcC,MAhBDO,IAoBZiB,eACX,WAAY1E,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,gBAFtB,2BAQEL,MAAA,WACE,MAAO,SAMTQ,UAAA,SAAUJ,EAAaC,GACrB,OAAQD,EAAeC,MAhBGO,IAoBjBkB,eACX,WAAY3E,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,gBAFtB,2BAQEL,MAAA,WACE,MAAO,OAMTQ,UAAA,SAAUJ,EAAaC,GACrB,OAAQD,EAAeC,MAhBGQ,IAoBjBkB,eACX,WAAY5E,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,gBAFtB,2BAQEL,MAAA,WACE,MAAO,OAMTQ,UAAA,SAAUJ,EAAaC,GACrB,OAAQD,EAAeC,MAhBCQ,IAoBfmB,eACX,WAAY7E,EAAqBiD,EAAUC,sBACnClD,EAAOiD,EAAKC,gBAFtB,2BAQEL,MAAA,WACE,MAAO,OAMTQ,UAAA,SAAUJ,EAAaC,GACrB,OAAQD,EAAeC,MAhBCQ,IAuBfoB,eAGX,WAAY9E,EAA4B+E,EAAa7G,gBACnD8G,cAAMhF,UADgC+E,aAFxC7G,YAEwC8G,MAAAD,EAEtCC,EAAK9G,KAAOA,EAAK3M,uBALrB,2BAWE0G,SAAA,SAAS8J,EAAwBC,GAC/BD,EAAIjN,OAAOvI,KAAKwY,IAAI7Y,YACpB6V,EAAIjN,OAAOgF,GAAoBvN,KAAK2R,UAMtC+D,aAAA,SAAaC,GACX,YAAY6C,IAAM7C,EAAQhC,cAAc3T,KAAK2R,aApBpB4D,IA4BhBmD,eACX,WAAYjF,EAA4BnC,gBACtCqH,cAAMlF,UADgCnC,qBAAAqH,gBAAArH,WAD1C,2BAQE5F,SAAA,SAAS8J,EAAwBC,GAC/BD,EAAIjN,OAAOvI,KAAKsR,kBAMlBoE,aAAA,SAAaC,GACX,OAAOA,EAAQ1B,SAASjU,KAAKyT,MAAOzT,KAAKsR,eAAegD,SAASqB,MAMnEE,WAAA,SACEC,EACAH,EACAI,GAEA,OACED,IAAU9V,MACV2V,EACG1B,SAASjU,KAAKyT,MAAOzT,KAAKsR,eAC1B0E,YAAYF,EAAOH,EAASI,OA/BVR,IAuCdqD,eACX,WAAYnF,EAA4BgB,EAAqBlT,gBAC3DsX,cAAMpF,UADgCgB,aAAqBlT,YAArBsX,MAAApE,EAAqBoE,OAAAtX,WAD/D,2BAQEmK,SAAA,SAAS8J,EAAwBC,GAC3BzV,KAAKyU,KACPe,EAAIjN,OAAO,QAEbiN,EAAIjN,OAAOgF,GAAoBvN,KAAKuB,UAMtCmU,aAAA,SAAaC,GACX,OAAOA,EAAQnB,cAAcxU,KAAKuB,KAAMvB,KAAKyU,QAM/C0B,YAAA,WACE,aA1B2BZ,IAqClBnE,eACX,WACEqC,EACOjS,EACA/D,gBAEPqb,cAAMrF,UAHCjS,YACA/D,WADAqb,KAAAtX,EACAsX,MAAArb,WAJX,2BAYEiO,SAAA,SAAS8J,EAAwBC,GAC/BD,EAAIjN,OAAOvI,KAAKvC,QAMlBiY,aAAA,SAAaC,GACX,YAAYnU,GAAGe,KAAKoT,OApBIJ,IAgEfwD,eACX,WACEtF,EACOnC,EACA6C,gBAEP6E,cAAMvF,UAHCnC,uBACA6C,cADA6E,gBAAA1H,EACA0H,SAAA7E,WAJX,2BAYEzI,SAAA,SAAS8J,EAAwBC,GAC/BD,EAAIjN,OAAOvI,KAAKsR,wBArDWkE,EAAwB5L,GACrD4L,EAAIjN,OAAO,KACX,IAAK,IAAInQ,EAAI,EAAGA,EAAIwR,EAAIxT,OAAQgC,IAC1BA,GACFod,EAAIjN,OAAO,KAEbqB,EAAIxR,GAAGsT,SAAS8J,EAAK,GAEvBA,EAAIjN,OAAO,MA8CMiN,EAAKxV,KAAKmU,WAM3BuB,aAAA,SAAaC,GAOX,OANaA,EAAQzB,SACnBlU,KAAKyT,MACLzT,KAAKsR,cACLtR,KAAKmU,WAGKyB,OAAOD,EAAS3V,KAAKmU,QAAQG,SAASqB,MAMpDE,WAAA,SACEC,EACAH,EACAI,GAEA,GAAID,IAAU9V,KACZ,SAEF,IAAK,IAAI5H,EAAI,EAAGA,EAAI4H,KAAKmU,OAAO/d,OAAQgC,IACtC,GAAI4H,KAAKmU,OAAO/b,GAAG4d,YAAYF,EAAOH,EAASI,GAC7C,SAWJ,OARaJ,EAAQzB,SACnBlU,KAAKyT,MACLzT,KAAKsR,cACLtR,KAAKmU,WAKK6B,YAAYF,EAAOH,EAASI,MAM1CH,OAAA,SAAOD,EAAkBxB,GACvB,IAAM8E,WAzFRtD,EACA/L,EACAuK,GAGA,IADA,IAAI+E,EAAkBtP,EACbxR,EAAI,EAAGA,EAAIwR,EAAIxT,OAAQgC,IAAK,CACnC,IAAMkT,EAAI1B,EAAIxR,GAAGwd,OAAOD,EAASxB,GACjC,GAAIvK,IAAQsP,EACVA,EAAS9gB,GAAKkT,UACLA,IAAM1B,EAAIxR,GAAI,CACvB8gB,EAAWhf,MAAM0P,EAAIxT,QACrB,IAAK,IAAI0C,EAAI,EAAGA,EAAIV,EAAGU,IACrBogB,EAASpgB,GAAK8Q,EAAI9Q,GAEpBogB,EAAS9gB,GAAKkT,UAGX4N,GAwEiCvD,EAAS3V,KAAKmU,OAAQA,GAC5D,OAAI8E,IAAmBjZ,KAAKmU,gBAGjB4E,EAAK/Y,KAAKyT,MAAOzT,KAAKsR,cAAe2H,OAjE1B1D,IAqEb4D,eACX,WACE1F,EACO2F,EACAC,EACAC,gBAEPC,cAAM9F,UAJC2F,cACAC,gBACAC,eAFAC,OAAAH,EACAG,SAAAF,EACAE,UAAAD,WALX,2BAaE5N,SAAA,SAAS8J,EAAwBC,GAC3BA,EAAW,GACbD,EAAIjN,OAAO,KAEbvI,KAAKoZ,KAAK1N,SAAS8J,EAAK,GACxBA,EAAIjN,OAAO,KACXvI,KAAKqZ,OAAO3N,SAAS8J,EAAK,GAC1BA,EAAIjN,OAAO,KACXvI,KAAKsZ,QAAQ5N,SAAS8J,EAAK,GACvBC,EAAW,GACbD,EAAIjN,OAAO,QAOfmN,aAAA,SAAaC,GACX,YAASyD,KAAK9E,SAASqB,QACT0D,OAAO/E,SAASqB,QAEhB2D,QAAQhF,SAASqB,MAOjCE,WAAA,SACEC,EACAH,EACAI,GAEA,OACED,IAAU9V,MACVA,KAAKoZ,KAAKpD,YAAYF,EAAOH,EAASI,IACtC/V,KAAKqZ,OAAOrD,YAAYF,EAAOH,EAASI,IACxC/V,KAAKsZ,QAAQtD,YAAYF,EAAOH,EAASI,MAO7CH,OAAA,SAAOD,EAAkBxB,GACvB,IAAMiF,EAAOpZ,KAAKoZ,KAAKxD,OAAOD,EAASxB,GACjCkF,EAASrZ,KAAKqZ,OAAOzD,OAAOD,EAASxB,GACrCmF,EAAUtZ,KAAKsZ,QAAQ1D,OAAOD,EAASxB,GAC7C,OACEiF,IAASpZ,KAAKoZ,MACdC,IAAWrZ,KAAKqZ,QAChBC,IAAYtZ,KAAKsZ,aAIT,IAAIH,EAAKnZ,KAAKyT,MAAO2F,EAAMC,EAAQC,OApEvB/D,IAyEb9E,eACX,WAAYgD,EAA4BlC,gBACtCiI,cAAM/F,UADgClC,WAAAiI,MAAAjI,WAD1C,2BAQE7F,SAAA,SAAS8J,EAAwBC,GAC/B,mBAAoBlE,KAClB,IAAK,SACL,IAAK,UACHiE,EAAIjN,OAAOvI,KAAKuR,IAAI5R,YACpB,MACF,IAAK,SACH6V,EAAIjN,OAAO,KACXiN,EAAIjN,OAAOgF,GAAkBvN,KAAKuR,MAClCiE,EAAIjN,OAAO,KACX,MACF,QACE,UAAUxJ,MAAM,0BAOtB2W,aAAA,SAAaC,GACX,YAAYpE,QA5BWgE,IAgCdkE,eACX,WAAYhG,EAA4BlS,EAAwB9C,gBAC9Dib,cAAMjG,UADgClS,cAAwB9C,aAAxBib,OAAAnY,EAAwBmY,QAAAjb,WADlE,2BAQEiN,SAAA,SAAS8J,EAAwBC,GAC/BD,EAAIjN,OAAO,KACXiN,EAAIjN,OAAOgF,GAAkBvN,KAAKuB,KAAKA,OACvCiU,EAAIjN,OAAO,KACXvI,KAAKvB,MAAMiN,SAAS8J,EAAK,GACzBA,EAAIjN,OAAO,QAMbmN,aAAA,SAAaC,GACX,OAAOA,EAAQhB,cAAc3U,KAAKuB,KAAKA,KAAMvB,KAAKvB,UAMpDoX,WAAA,SACEC,EACAH,EACAI,GAEA,OACED,IAAU9V,MAAQA,KAAKvB,MAAMuX,YAAYF,EAAOH,EAASI,MAO7DH,OAAA,SAAOD,EAAkBxB,GACvB,IAAM1V,EAAQuB,KAAKvB,MAAMmX,OAAOD,EAASxB,GACzC,OAAI1V,IAAUuB,KAAKvB,WAGT,IAAIgb,EAAUzZ,KAAKyT,MAAOzT,KAAKuB,KAAM9C,OA5CpB8W,IAiDlBoE,eACX,WACElG,EACOlS,EACA9C,EACA2W,gBAEPwE,cAAMnG,UAJClS,cACA9C,eACA2W,cAFAwE,OAAArY,EACAqY,QAAAnb,EACAmb,SAAAxE,WALX,2BAaE1J,SAAA,SAAS8J,EAAwBC,GAC3BzV,KAAKoV,QACPI,EAAIjN,OAAOvI,KAAKuB,MAElBiU,EAAIjN,OAAO,MACNvI,KAAKoV,QAAUpV,KAAKuB,OACvBiU,EAAIjN,OAAOvI,KAAKuB,MAChBiU,EAAIjN,OAAO,MAEbiN,EAAIjN,OAAOvI,KAAKvB,OAChB+W,EAAIjN,OAAO,QAMbmN,aAAA,SAAaC,GACX,OAAOA,EAAQR,iBAAiBnV,KAAKuB,KAAMvB,KAAKvB,MAAOuB,KAAKoV,YA9B9BG,IAkCrBsE,eACX,WAAYpG,EAA4Btd,gBACtC2jB,cAAMrG,UADgCtd,aAAA2jB,QAAA3jB,WAD1C,2BAQEuV,SAAA,SAAS8J,EAAwBC,GAC/BD,EAAIjN,OAAO,KACXiN,EAAIjN,OAAOvI,KAAK7J,MAAMwJ,eAMxBiW,OAAA,SAAOD,EAAkBxB,GACvB,IAAM3O,EAAI2O,EAAOnU,KAAK7J,OACtB,IAAKqP,EACH,UAAUzG,4BAA4BiB,KAAK7J,OAE7C,OAAOqP,MArBgB+P,aAyBXwE,GAAItG,EAAqBxZ,EAASE,GAChD,OACEF,IAAOwZ,EAAMpD,QACbpW,IAAOwZ,EAAMvD,MACb/V,GAAMsZ,EAAMpD,QACZlW,GAAMsZ,EAAMvD,KAELuD,EAAMpD,OAEXpW,IAAOwZ,EAAMrD,OAASnW,IAAOwZ,EAAMtD,IAC9BhW,EAELA,IAAOsZ,EAAMrD,OAASjW,IAAOsZ,EAAMtD,IAC9BlW,MAEEsd,GAAI9D,EAAOxZ,EAAIE,YAGZwL,GAAI8N,EAAqBxZ,EAASE,GAChD,OAAIF,IAAOwZ,EAAMvD,KACR/V,EAELA,IAAOsZ,EAAMvD,KACRjW,MAEEie,GAAIzE,EAAOxZ,EAAIE,YAGZ6f,GAAIvG,EAAqBxZ,EAASE,GAChD,OAAIF,IAAOwZ,EAAMvD,SACJoH,GAAO7D,EAAOtZ,GAEvBA,IAAOsZ,EAAMvD,KACRjW,MAEEke,GAAS1E,EAAOxZ,EAAIE,YAGjB8f,GAAIxG,EAAqBxZ,EAASE,GAChD,OAAIF,IAAOwZ,EAAMvD,MAAQ/V,IAAOsZ,EAAMvD,KAC7BuD,EAAMvD,KAEXjW,IAAOwZ,EAAMtD,IACRhW,EAELA,IAAOsZ,EAAMtD,IACRlW,MAEEme,GAAS3E,EAAOxZ,EAAIE,YAGjB+f,GAAIzG,EAAqBxZ,EAASE,GAChD,OAAIF,IAAOwZ,EAAMvD,KACRuD,EAAMvD,KAEX/V,IAAOsZ,EAAMtD,IACRlW,MAEEoe,GAAO5E,EAAOxZ,EAAIE,OC7mDlBggB,uDAIXC,YAAA,SAAY9J,GACV,IAAK,IAAIlY,EAAI,EAAGA,EAAIkY,EAAOla,OAAQgC,IACjCkY,EAAOlY,GAAGiiB,MAAMra,SAIpBsa,WAAA,SAAWC,GACT,UAAUxb,MAAM,8BAGlByb,WAAA,SAAWC,GACT,UAAU1b,MAAM,8BAGlB2b,SAAA,SAASjd,GACP,UAAUsB,MAAM,4BAGlB4b,WAAA,SAAWC,GACT,UAAU7b,MAAM,8BAGlB8b,aAAA,SAAaC,GACX,UAAU/b,MAAM,gCAGlBgc,SAAA,SAASvC,GACP,UAAUzZ,MAAM,4BAGlBic,SAAA,SAASxC,GACP,YAAYuC,SAASvC,MAGvByC,WAAA,SAAWC,GACT,UAAUnc,MAAM,8BAGlBoc,SAAA,SAAShX,GACP,UAAUpF,MAAM,4BAGlBqc,YAAA,SAAYC,GACV,UAAUtc,MAAM,+BAGlBuc,eAAA,SAAehT,GACb,UAAUvJ,MAAM,6BAGlBwc,eAAA,SAAejT,GACb,UAAUvJ,MAAM,8BAGlByc,UAAA,SAAUC,GACR,UAAU1c,MAAM,6BAGlB2c,UAAA,SAAUC,GACR,UAAU5c,MAAM,gCAIP6c,eACX,8CADF,2BAKExB,YAAA,SAAY9J,GAEV,IADA,IAAI1G,EAAa,KACRxR,EAAI,EAAGA,EAAIkY,EAAOla,OAAQgC,IAAK,CACtC,IAAMsF,EAAS4S,EAAOlY,GAChByF,EAAQH,EAAO2c,MAAMra,MAC3B,GAAI4J,EACFA,EAAIxR,GAAKyF,UACAH,IAAWG,EAAO,CAC3B+L,EAAM,IAAI1P,MAAMoW,EAAOla,QACvB,IAAK,IAAI+G,EAAI,EAAGA,EAAI/E,EAAG+E,IACrByM,EAAIzM,GAAKmT,EAAOnT,GAElByM,EAAIxR,GAAKyF,UAGN+L,GAAO0G,KAMhBoK,SAAA,SAASjd,GACP,OAAOA,KAMTkd,WAAA,SAAWC,GACT,OAAOA,KAMTJ,WAAA,SAAWC,GACT,OAAOA,KAMTI,aAAA,SAAaC,GACX,OAAOA,KAMTC,SAAA,SAASvC,GACP,OAAOA,KAMTwC,SAAA,SAASxC,GACP,OAAOA,KAMTyC,WAAA,SAAWC,GACT,OAAOA,KAMTC,SAAA,SAAShX,GACP,OAAOA,KAMTiX,YAAA,SAAYC,GACV,OAAOA,KAMTC,eAAA,SAAehT,GACb,IAAMgI,EAAStQ,KAAKoa,YAAY9R,EAAKgI,QACrC,OAAIA,IAAWhI,EAAKgI,OACXhI,MAEEuT,GAAUvL,MAMvBiL,eAAA,SAAejT,GACb,IAAMgI,EAAStQ,KAAKoa,YAAY9R,EAAKgI,QACrC,OAAIA,IAAWhI,EAAKgI,OACXhI,MAEEwT,GAAUxL,MAMvBkL,UAAA,SAAUC,GACR,IAAMnL,EAAStQ,KAAKoa,YAAYqB,EAAKnL,QACrC,OAAIA,IAAWmL,EAAKnL,OACXmL,MAEEM,GAAKN,EAAKla,KAAM+O,MAM7BoL,UAAA,SAAUC,GACR,OAAOA,MA3HwBxB,IA+HtB5E,uDAIX5V,SAAA,WACE,IAAM6V,EAAM,IAAIjI,GAEhB,YADK7B,SAAS8J,MACPA,EAAI7V,cAGbqc,YAAA,WACE,IAAMxG,EAAM,IAAIjI,GAEhB,YADK7B,SAAS8J,MACPA,EAAI7V,cAGbsc,OAAA,SAAOxI,EAA2B/F,GAChC,UAAU3O,MAAM,iBAGlB2M,SAAA,SAAS8J,EAAwB7V,GAC/B6V,EAAIjN,OAAO,cAGb2T,OAAA,WACE,YAGFC,UAAA,WACE,YAGFC,MAAA,WACE,YAGFC,QAAA,WACE,YAGFC,YAAA,WACE,YAGFjC,MAAA,SAAMkC,GACJ,UAAUxd,MAAM,oBAIPyd,eAUX,8CAVF,2BAiBEP,OAAA,SAAOxI,EAA2B/F,GAChC,WAAW+O,GAAYhJ,EAAO,OAMhC/H,SAAA,SAAS8J,EAAwB7V,OAKjC0a,MAAA,SAAMkC,GACJ,OAAOA,EAAQjC,WAAWta,qCA3BrB,WAIL,YAHUua,QACRva,KAAKua,MAAQ,IAAIiC,QAEPjC,aAPWhF,IAAdiH,GACIjC,iBAiCJA,GAAeiC,GAAME,SAErBC,eAUX,8CAVF,2BAiBEV,OAAA,SAAOxI,EAA2B/F,GAChC,WAAW+O,GAAYhJ,EAAO,QAMhC/H,SAAA,SAAS8J,EAAwB7V,GAC/B6V,EAAIjN,OAAO,QAMb8R,MAAA,SAAMkC,GACJ,OAAOA,EAAQ/B,WAAWxa,qCA7BrB,WAIL,YAHUya,QACRza,KAAKya,MAAQ,IAAIkC,QAEPlC,aAPWlF,IAAdoH,GACIlC,iBAmCJA,GAAekC,GAAMD,SAErBE,eACX,WAAmBnf,gBACjB4Y,sBADiB5Y,WAAA4Y,MAAA5Y,WADrB,2BAQEwe,OAAA,SAAOxI,EAA2B/F,GAChC,WAAW+O,GAAYhJ,EAAOzT,KAAKvC,QAMrCiO,SAAA,SAAS8J,EAAwB7V,GAC3BA,GACF6V,EAAIjN,OAAO,KACXiN,EAAIjN,OAAOgF,GAAkBvN,KAAKvC,MAClC+X,EAAIjN,OAAO,MAEXiN,EAAIjN,OAAOvI,KAAKvC,QAOpB4c,MAAA,SAAMkC,GACJ,OAAOA,EAAQ7B,SAAS1a,UA7BHuV,IAiCnBsH,GAAY,GAELC,eACX,WAAmBvb,SAEjB,IADAqV,sBADiBrV,YAAAqV,OAAArV,EAEbsb,GAAUtb,GACZ,UAAUxC,MAAM,yBAElB8d,GAAUtb,iBANd,2BAYE0a,OAAA,SAAOxI,EAA2B/F,GAChC,WAAW+O,GAAYhJ,EAAOzT,KAAKuB,SAMrCmK,SAAA,SAAS8J,EAAwB7V,GAE7B6V,EAAIjN,OADF5I,EACS4N,GAAoBvN,KAAKuB,MAEzBvB,KAAKuB,SAOpB8Y,MAAA,SAAMkC,GACJ,OAAOA,EAAQ5B,WAAW3a,SAM5Bqc,QAAA,WACE,aAtCuB9G,aA0CXwH,GAAQxb,GACtB,IAAI6C,EAAIyY,GAAUtb,GAIlB,OAHK6C,IACHA,EAAI,IAAI0Y,GAAMvb,IAET6C,MAGImU,eAGX,WAAmBC,EAAa7G,gBAC9B8G,sBADiBD,aAFnB7G,YAEmB8G,MAAAD,EAEjBC,EAAK9G,KAAOA,EAAK3M,uBALrB,2BAWEiX,OAAA,SAAOxI,EAA2B/F,GAChC,UAAI1N,KAAKwY,IACA/E,EAAMvD,KAEXxC,GAAoB,KAAb1N,KAAK2R,KACE,KAAZ3R,KAAKwY,IACA9K,MAEE+O,GACThJ,EACA/F,EACA,IAAI+O,GAAYhJ,EAAOzT,KAAKwY,IAAM,UAG3BiE,GAAchJ,EAAOzT,KAAKwY,IAAKxY,KAAK2R,SAMjDjG,SAAA,SAAS8J,EAAwB7V,GAC/B6V,EAAIjN,OAAOvI,KAAKwY,IAAI7Y,YACpB6V,EAAIjN,OAAOvI,KAAK2R,SAMlB0I,MAAA,SAAMkC,GACJ,OAAOA,EAAQ1B,aAAa7a,SAM9Bmc,UAAA,WACE,aA/CyB5G,IAmDhByH,eACX,WAAmBxE,gBACjBG,sBADiBH,WAAAG,MAAAH,WADrB,2BAQEyD,OAAA,SAAOxI,EAA2B/F,GAChC,UAAI1N,KAAKwY,IACA/E,EAAMvD,KAEC,GAAZlQ,KAAKwY,IACA/E,EAAMtD,QAEJsM,GAAYhJ,EAAOzT,KAAKwY,QAMrC9M,SAAA,SAAS8J,EAAwB7V,GAC/B6V,EAAIjN,OAAOvI,KAAKwY,IAAI7Y,eAMtB0a,MAAA,SAAMkC,GACJ,OAAOA,EAAQxB,SAAS/a,SAM1Boc,MAAA,WACE,aApCqB7G,IAwCZ0H,eACX,WAAYzE,sBACJA,mCAMR6B,MAAA,SAAMkC,GACJ,OAAOA,EAAQvB,SAAShb,UATHgd,IAaZE,eACX,WAAmBC,gBACjBtE,sBADiBsE,WAAAtE,MAAAsE,WADrB,2BAQEzR,SAAA,SAAS8J,EAAwB7V,GAC/B6V,EAAIjN,OAAO,KACX,IAAM9K,EAAMuC,KAAKmd,IAAIxd,SAAS,IAC9B6V,EAAIjN,OAAO,SAAStD,OAAOxH,EAAIrH,SAC/Bof,EAAIjN,OAAO9K,MAMb4c,MAAA,SAAMkC,GACJ,OAAOA,EAAQtB,WAAWjb,UAnBHuV,IAuBd6H,eACX,WAAmBjZ,gBACjB2U,sBADiB3U,WAAA2U,MAAA3U,WADrB,2BAQEuH,SAAA,SAAS8J,EAAwB7V,GAC/B6V,EAAIjN,OAAO,SACXiN,EAAIjN,OAAOgF,GAAkBvN,KAAKmE,MAClCqR,EAAIjN,OAAO,SAMb8R,MAAA,SAAMkC,GACJ,OAAOA,EAAQpB,SAASnb,UAlBHuV,IAsBZ8H,eACX,WAAmBC,gBACjBtE,sBADiBsE,kBAAAtE,aAAAsE,WADrB,2BAQE5R,SAAA,SAAS8J,EAAwB7V,GAC/B6V,EAAIjN,OAAOvI,KAAKsd,eAMlBjD,MAAA,SAAMkC,GACJ,OAAOA,EAAQnB,YAAYpb,UAhBHuV,aAoBZgI,GACd/H,EACAlF,EACAkN,EACA7d,GAEA,IAAMvJ,EAASka,EAAOla,OACtB,GAAIA,EAAS,EAAG,CACdka,EAAO,GAAG5E,SAAS8J,EAAK7V,GACxB,IAAK,IAAIvH,EAAI,EAAGA,EAAIhC,EAAQgC,IAC1Bod,EAAIjN,OAAOiV,GACXlN,EAAOlY,GAAGsT,SAAS8J,EAAK7V,QAKjBkc,eACX,WAAmBvL,gBACjBiJ,sBADiBjJ,cAAAiJ,SAAAjJ,WADrB,2BAQE5E,SAAA,SAAS8J,EAAwB7V,GAC/B4d,GAAW/H,EAAKxV,KAAKsQ,OAAQ,IAAK3Q,MAMpC0a,MAAA,SAAMkC,GACJ,OAAOA,EAAQjB,eAAetb,SAMhCsc,YAAA,WACE,aAvB2B/G,IA2BlBuG,eACX,WAAmBxL,gBACjBkJ,sBADiBlJ,cAAAkJ,SAAAlJ,WADrB,2BAQE5E,SAAA,SAAS8J,EAAwB7V,GAC/B4d,GAAW/H,EAAKxV,KAAKsQ,OAAQ,IAAK3Q,MAMpC0a,MAAA,SAAMkC,GACJ,OAAOA,EAAQhB,eAAevb,UAhBHuV,IAoBlBwG,eACX,WAAmBxa,EAAqB+O,gBACtCoJ,sBADiBnY,cAAqB+O,cAArBoJ,OAAAnY,EAAqBmY,SAAApJ,WAD1C,2BAQE5E,SAAA,SAAS8J,EAAwB7V,GAC/B6V,EAAIjN,OAAOgF,GAAoBvN,KAAKuB,OACpCiU,EAAIjN,OAAO,KACXgV,GAAW/H,EAAKxV,KAAKsQ,OAAQ,IAAK3Q,GAClC6V,EAAIjN,OAAO,QAMb8R,MAAA,SAAMkC,GACJ,OAAOA,EAAQf,UAAUxb,UAnBHuV,IAuBbkI,eACX,WAAmB9B,gBACjB/B,sBADiB+B,YAAA/B,OAAA+B,WADrB,2BAQEM,OAAA,WACE,YAAYN,QAMdjQ,SAAA,SAAS8J,EAAwB7V,GAC/B6V,EAAIjN,OAAO,gBACXvI,KAAK2b,KAAKjQ,SAAS8J,EAAK,GACxBA,EAAIjN,OAAO,QAMb8R,MAAA,SAAMkC,GACJ,OAAOA,EAAQb,UAAU1b,SAM3Bkc,OAAA,WACE,aAhCsB3G,aAoCVmI,GAASnM,EAAUoE,GACjC,GAAIpE,EAAK,CACP,GAAIA,EAAI4K,YAAa,CACnB,IAAMrB,EAAUvJ,EAChB,OAAOoE,EAAQhC,cAAcmH,EAAQnJ,SAAemJ,EAAQtC,OAE1DjH,EAAI6K,QACN,OAAQ7K,EAAYiH,sBASVmF,GAAmBpM,EAAUoE,GAC3C,WAAW4C,GAAQmF,GAASnM,EAAKoE,GAAU,UAGhCiF,GAAkC,CAC7CgD,SAAUb,GAAQ,YAClBc,IAAKd,GAAQ,OACbe,OAAQf,GAAQ,UAChBgB,SAAUhB,GAAQ,YAClBiB,KAAMjB,GAAQ,QACdkB,MAAOlB,GAAQ,SACfmB,QAASnB,GAAQ,WACjBoB,YAAapB,GAAQ,eACrBqB,MAAOrB,GAAQ,SACfsB,UAAWtB,GAAQ,aACnBuB,YAAavB,GAAQ,eACrBwB,KAAMxB,GAAQ,QACdyB,OAAQzB,GAAQ,UAChB0B,WAAY1B,GAAQ,cACpB2B,UAAW3B,GAAQ,aACnB4B,WAAY5B,GAAQ,cACpB6B,KAAM7B,GAAQ,QACd8B,MAAO9B,GAAQ,SACf+B,OAAQ/B,GAAQ,UAChBgC,UAAWhC,GAAQ,aACnB1M,OAAQ0M,GAAQ,SAChBiC,MAAOjC,GAAQ,SACfkC,KAAMlC,GAAQ,QACdmC,SAAUnC,GAAQ,YAClBoC,OAAQpC,GAAQ,UAChBqC,OAAQrC,GAAQ,UAChBsC,OAAQtC,GAAQ,UAChBuC,cAAevC,GAAQ,iBACvBwC,QAASxC,GAAQ,WACjByC,OAAQzC,GAAQ,UAChB0C,aAAc1C,GAAQ,gBACtB2C,WAAY3C,GAAQ,cACpB4C,aAAc5C,GAAQ,gBACtB6C,UAAW7C,GAAQ,aACnB8C,KAAM9C,GAAQ,QACd+C,KAAM/C,GAAQ,QACdgD,UAAWhD,GAAQ,aACnBiD,IAAKjD,GAAQ,OACbkD,OAAQlD,GAAQ,UAChBmD,KAAMnD,GAAQ,QACdoD,OAAQpD,GAAQ,UAChBqD,cAAerD,GAAQ,iBACvBsD,cAAetD,GAAQ,iBACvBuD,KAAMvD,GAAQ,QACdwD,SAAUxD,GAAQ,YAClByD,MAAOzD,GAAQ,SACf0D,KAAM1D,GAAQ,QACdvN,MAAOuN,GAAQ,SACf2D,WAAY3D,GAAQ,cACpB4D,OAAQ5D,GAAQ,UAChB6D,QAAS7D,GAAQ,UACjB8D,IAAK9D,GAAQ,OACb+D,MAAO/D,GAAQ,SACfgE,cAAehE,GAAQ,iBACvBiE,WAAYjE,GAAQ,cACpBkE,mBAAoBlE,GAAQ,sBAC5BmE,mBAAoBnE,GAAQ,sBAC5BoE,UAAWpE,GAAQ,aACnBqE,IAAKrE,GAAQ,OACbsE,YAAatE,GAAQ,eACrBuE,YAAavE,GAAQ,eACrBwE,YAAaxE,GAAQ,eACrByE,QAASzE,GAAQ,WACjB3M,MAAO2M,GAAQ,SAGJ0E,GAA0B,IAAIlJ,GAAQ,IAAK,KAE3CmJ,GAAqB,IAAInJ,GAAQ,IAAK,OAEtCoJ,GAAsB,IAAIpJ,GAAQ,IAAK,OAEvCqJ,GAAuB,IAAIrJ,GAAQ,EAAG,MAEtCsJ,GAAqB,IAAIxE,GAAO,cAEhCyE,GAAkB,CAC7B,YAAa,EACb5G,MAAO,YAMO6G,GAAkBC,EAAeC,GAG/C,OAFWH,GAAgBE,IAAUE,OAAOC,YACjCL,GAAgBG,IAAUC,OAAOC,eCjyBjCC,GACX,SACSrnB,EACAD,EACAI,EACAG,QAHAN,eACAD,eACAI,eACAG,UAHA2E,QAAAjF,EACAiF,QAAAlF,EACAkF,QAAA9E,EACA8E,QAAA3E,GAIEgnB,GACX,SAAmBjoB,EAAkBuB,QAAlBvB,cAAkBuB,SAAlBqE,OAAA5F,EAAkB4F,OAAArE,GAG1B2mB,GACX,SACSzC,EACAuB,EACAZ,EACAhC,QAHAqB,iBACAuB,gBACAZ,kBACAhC,cAHAxe,UAAA6f,EACA7f,SAAAohB,EACAphB,WAAAwgB,EACAxgB,YAAAwe,GAIE+D,GACX,SACSC,EACAnZ,EACAoZ,EACAC,QAHAF,gBACAnZ,iBACAoZ,oBACAC,eAHA1iB,SAAAwiB,EACAxiB,UAAAqJ,EACArJ,aAAAyiB,EACAziB,aAAA0iB,GAQEC,GAOX,SACS7nB,EACAO,EACAN,EACAG,QAHAJ,eACAO,eACAN,eACAG,eATT2kB,KAAuB,UAGvBW,MAAwB,KAGfxgB,QAAAlF,EACAkF,QAAA3E,EACA2E,QAAAjF,EACAiF,QAAA9E,YAIK0nB,GAAeC,EAAaC,GAC1C,OAAOD,EAAGL,IAAI7mB,EAAImnB,EAAGN,IAAI7mB,GAAKknB,EAAGL,IAAIpoB,EAAI0oB,EAAGN,IAAIpoB,MAGrC2oB,cACX,WAAmBC,QAAAA,cAAAhjB,YAAAgjB,6BAQnBC,YAAA,SAAYrZ,EAAgBmC,GAI1B,IAHA,IAAMiX,EAAShjB,KAAKgjB,OACd5sB,EAAS4sB,EAAO5sB,OAClB8sB,EAAOF,EAAO5sB,EAAS,GAClBgC,EAAI,EAAGA,EAAIhC,EAAQgC,IAAK,CAC/B,IACI8Q,EADE/C,EAAO6c,EAAO5qB,GAGlB8Q,EADEga,EAAKvnB,EAAIwK,EAAKxK,EACZ,IAAI4mB,GAAQW,EAAM/c,EAAM,EAAG4F,GAE3B,IAAIwW,GAAQpc,EAAM+c,GAAO,EAAGnX,GAElCnC,EAAInO,KAAKyN,GACTga,EAAO/c,MAIXgd,WAAA,SAAWC,EAAiBC,GAE1B,IADA,MAAML,EAAS,OACChjB,KAAKgjB,uBAAQ,KAAlB1X,UACT0X,EAAOvnB,KAAK,IAAI4mB,GAAM/W,EAAElR,EAAIgpB,EAAS9X,EAAE3P,EAAI0nB,eAElCN,EAAMC,kBAILM,GACdC,EACAC,EACAC,EACAC,GAIA,IAFA,IACMV,EAAkB,GACf5qB,EAAI,EAAGA,EAFF,GAEaA,IAAK,CAC9B,IAAM8G,EAAS,EAAJ9G,EAAQnB,KAAK0sB,GAHZ,GAIZX,EAAOvnB,KAAK,IAAI4mB,GAAMkB,EAAKE,EAAKxsB,KAAK2sB,IAAI1kB,GAAIskB,EAAKE,EAAKzsB,KAAK4sB,IAAI3kB,gBAEvD6jB,GAAMC,YAGHc,GACd/oB,EACAD,EACAI,EACAG,GAEA,WAAW0nB,GAAM,CACf,IAAIV,GAAMtnB,EAAID,GACd,IAAIunB,GAAMnnB,EAAIJ,GACd,IAAIunB,GAAMnnB,EAAIG,GACd,IAAIgnB,GAAMtnB,EAAIM,SAaL0oB,GACX,SACS3pB,EACAqoB,EACAC,EACAsB,QAHA5pB,cACAqoB,oBACAC,oBACAsB,iBAHAhkB,OAAA5F,EACA4F,aAAAyiB,EACAziB,aAAA0iB,EACA1iB,eAAAgkB,YAIKC,GAAW/a,EAAYvN,GACrC,IAAMvB,EACJ8O,EAAEsZ,IAAIpoB,GAAM8O,EAAEG,KAAKjP,EAAI8O,EAAEsZ,IAAIpoB,IAAMuB,EAAIuN,EAAEsZ,IAAI7mB,IAAOuN,EAAEG,KAAK1N,EAAIuN,EAAEsZ,IAAI7mB,GACvE,GAAIuoB,MAAM9pB,GACR,UAAU2E,MAAM,oBAElB,OAAO3E,WAGO+pB,GACdC,EACAlb,EACApO,EACAO,GAEA,IAAIN,EACAspB,EACAnpB,EACAopB,EACApb,EAAEG,KAAK1N,EAAIb,GACb4G,EAAejB,KAAK,mCAElByI,EAAEsZ,IAAI7mB,GAAKb,GAEbC,EAAKkpB,GAAW/a,EAAGpO,GACnBupB,EAAKnb,EAAEuZ,UAEP1nB,EAAKmO,EAAEsZ,IAAIpoB,EACXiqB,EAAK,GAEHnb,EAAEG,KAAK1N,GAAKN,GAEdH,EAAK+oB,GAAW/a,EAAG7N,GACnBipB,EAAKpb,EAAEuZ,UAEPvnB,EAAKgO,EAAEG,KAAKjP,EACZkqB,EAAK,GAEHvpB,EAAKG,GACPkpB,EAAc3oB,KAAK,IAAIsoB,GAAiBhpB,EAAIspB,EAAInb,EAAEwZ,SAAU,IAC5D0B,EAAc3oB,KAAK,IAAIsoB,GAAiB7oB,EAAIopB,EAAIpb,EAAEwZ,QAAS,MAE3D0B,EAAc3oB,KAAK,IAAIsoB,GAAiB7oB,EAAIopB,EAAIpb,EAAEwZ,SAAU,IAC5D0B,EAAc3oB,KAAK,IAAIsoB,GAAiBhpB,EAAIspB,EAAInb,EAAEwZ,QAAS,cAI/C6B,GACdH,EACAI,EACAC,GAEA,IAGIrsB,EAHEssB,EAAaF,EAAeC,EAC5BE,EAAsBzqB,MAAMwqB,GAC5BE,EAAsB1qB,MAAMwqB,GAElC,IAAKtsB,EAAI,EAAGA,GAAKssB,EAAYtsB,IAC3BusB,EAAUvsB,GAAK,EACfwsB,EAAUxsB,GAAK,EAKjB,IAHA,IAAMysB,EAAoB,GACtBC,KACEC,EAAoBX,EAAchuB,OAC/B+G,EAAI,EAAGA,EAAI4nB,EAAmB5nB,IAAK,CAC1C,IAAM6nB,EAAeZ,EAAcjnB,GACnCwnB,EAAUK,EAAatC,UAAYsC,EAAavC,QAChDmC,EAAUI,EAAatC,UAAYsC,EAAahB,UAChD,IAAIiB,KACJ,IAAK7sB,EAAI,EAAGA,EAAIosB,EAAcpsB,IAC5B,GAAIusB,EAAUvsB,KAAOwsB,EAAUxsB,GAAI,CACjC6sB,KACA,SAGAA,EACF,IAAK7sB,EAAIosB,EAAcpsB,GAAKssB,EAAYtsB,IACtC,GAAIusB,EAAUvsB,IAAMwsB,EAAUxsB,GAAI,CAChC6sB,KACA,MAIFH,GAAUG,IACZJ,EAAQppB,KAAKupB,EAAa5qB,GAC1B0qB,EAASG,UAGNJ,WAaOhsB,GAAM2M,EAAWmM,GAC/B,OAAOA,EAAO1a,KAAK4B,MAAM2M,EAAImM,GAAQA,EAAOnM,WAU9B0f,GAAUC,GACxB,WAAW/C,GAAK+C,EAAIrqB,IAAKqqB,EAAIjqB,GAAIiqB,EAAI9pB,IAAK8pB,EAAIpqB,aAMhCqqB,GAAYD,GAC1B,WAAW/C,IAAM+C,EAAI9pB,GAAI8pB,EAAIpqB,IAAKoqB,EAAIrqB,GAAIqqB,EAAIjqB,aAGhCmqB,GAAYC,GAC1B,WAAWvC,GAAMuC,EAAMtC,OAAOlZ,KAAI,SAACyb,mBAnBTA,GAC1B,WAAWlD,GAAMkD,EAAM5pB,GAAI4pB,EAAMnrB,IAkBwBmrB,gBA8J3CC,GAAUL,EAAWM,GAMnC,IALA,IAAItoB,EAAIsoB,EAAMrvB,OAAS,EAInBsvB,EAAW,IAAI/C,GAAKwC,EAAI9pB,GAAI8pB,EAAI9pB,GAAI8pB,EAAIpqB,GAAIoqB,EAAIjqB,IAC7CiC,GAAK,GAAG,CACb,IAAMwoB,EAAWD,IACjBA,EAAWD,EAAMtoB,IAEN9B,GAAKqqB,EAAS5qB,GAAK,GAC3B4qB,EAAS3qB,IAAM4qB,EAAS5qB,IAAM2qB,EAASxqB,IAAMyqB,EAASzqB,MAEvDyqB,EAAS7qB,GAAK4qB,EAAS5qB,GACvB2qB,EAAM1oB,OAAOI,EAAG,GAChBuoB,EAAWC,GAEbxoB,cAOYyoB,GAASH,EAAe9pB,GAGtC,IAFA,IAAI6mB,EAAM,EACNnZ,EAAOoc,EAAMrvB,OACVosB,EAAMnZ,GAAM,CACjB,IAAMwc,EAAM5uB,KAAK4B,OAAO2pB,EAAMnZ,GAAQ,GAClC1N,GAAK8pB,EAAMI,GAAKxqB,GAClBmnB,EAAMqD,EAAM,EAEZxc,EAAOwc,SAGJrD,WASOsD,GACdL,EACAM,GAEA,IAAKN,EAAMrvB,OACT,OAAO2vB,EAET,IACIC,EACA5tB,EAFA6tB,EAAUF,EAAKjrB,GAGnB,IAAK1C,EAAI,EAAGA,EAAIqtB,EAAMrvB,WACpB4vB,EAAOP,EAAMrtB,IAENiD,GAAK0qB,EAAKjrB,IACfkrB,EAAKjrB,GAAK,IAAOgrB,EAAKhrB,IACtBirB,EAAK9qB,GAAK,IAAO6qB,EAAK7qB,IALI9C,IAS1B6tB,EAAUhvB,KAAK2Z,IAAIqV,EAASD,EAAK3qB,IAIrC,IADA,IAAI6qB,EAAaD,EACV7tB,EAAIqtB,EAAMrvB,WACf4vB,EAAOP,EAAMrtB,IAEN0C,IAAMirB,EAAK1qB,IAChB2qB,EAAKjrB,GAAK,GAAMgrB,EAAKhrB,IACrBirB,EAAK9qB,GAAK,GAAM6qB,EAAK7qB,IALA9C,IASrB8tB,EAAaF,EAAK3qB,GAQtB,OAJE6qB,EADE9tB,IAAMqtB,EAAMrvB,OACD2vB,EAAK1qB,GAELpE,KAAKC,IAAIgvB,EAAYH,EAAK1qB,MAEvB4qB,WAGL7D,GAAK2D,EAAKhrB,GAAIkrB,EAASF,EAAK7qB,GAAIgrB,YAU/BC,GACdV,EACAM,GAEA,IAAKN,EAAMrvB,OACT,OAAO2vB,EAET,IACIC,EACA5tB,EAFA8tB,EAAaH,EAAK1qB,GAGtB,IAAKjD,EAAIqtB,EAAMrvB,OAAS,EAAGgC,GAAK,IAC9B4tB,EAAOP,EAAMrtB,KACTA,IAAMqtB,EAAMrvB,OAAS,GAAK4vB,EAAK3qB,GAAK0qB,EAAK1qB,QAG3C2qB,EAAKlrB,GAAKirB,EAAK1qB,IACf2qB,EAAKjrB,GAAK,IAAOgrB,EAAKhrB,IACtBirB,EAAK9qB,GAAK,IAAO6qB,EAAK7qB,IAPS9C,IAW/B8tB,EAAajvB,KAAKC,IAAIgvB,EAAYF,EAAKlrB,IAI3C,IADA,IAAImrB,EAAUhvB,KAAKC,IAAIgvB,EAAYF,EAAK3qB,IACjCjD,GAAK,MACV4tB,EAAOP,EAAMrtB,IAENiD,IAAM0qB,EAAKjrB,IAChBkrB,EAAKjrB,GAAK,GAAMgrB,EAAKhrB,IACrBirB,EAAK9qB,GAAK,GAAM6qB,EAAK7qB,IALV9C,IASX6tB,EAAUD,EAAKlrB,GAInB,OAAIorB,IADJD,EAAUhvB,KAAK2Z,IAAIqV,EAASF,EAAKjrB,cAIpBsnB,GAAK2D,EAAKhrB,GAAIkrB,EAASF,EAAK7qB,GAAIgrB,OCriBlCE,eAGX,0BACE/P,sBAHFgQ,QAAsC,YADxC,2BAUE1L,WAAA,SAAWC,GAET,YADKyL,QAAQzL,EAAMrZ,SACZqZ,KAMTU,eAAA,SAAehT,GAEb,YADK8R,YAAY9R,EAAKgI,QACfhI,MApBqBge,IAqCnBC,eACX,WAAmB9nB,gBACjBmY,sBADiBnY,aAAAmY,QAAAnY,8BAOnBuc,SAAA,SAASxC,GAEP,YADK/Z,MAAQ+Z,EAAIA,IACVA,MAVqB8N,aAchBE,GAAMjV,EAAckV,GAClC,GAAIlV,EAAK,CACP,IAAMgL,EAAU,IAAIgK,GAAWE,GAC/B,IAEE,OADAlV,EAAI8I,MAAMkC,GACHA,EAAQ9d,YACR+I,GACP9F,EAAejB,KAAK+G,EAAK,mBAGtBif,MAGIC,eAKX,0BACEjO,sBALFkO,aACAC,OAAwB,KACxBrlB,KAAsB,cAHxB,2BAYEsZ,aAAA,SAAaC,GAIX,YAHS6L,SACP3mB,KAAK4mB,OAAOnrB,KAAKqf,WAQrBC,SAAA,SAASvC,GAIP,YAHSmO,SAAsB,GAAXnO,EAAIA,KACtBxY,KAAK4mB,OAAOnrB,KAAK,IAAI6qB,GAAY,EAAG,eAQxChL,eAAA,SAAehT,GAEb,YADK8R,YAAY9R,EAAKgI,gBAOxBkL,UAAA,SAAUC,GAOR,YANUkL,UACR3mB,KAAK2mB,WACL3mB,KAAKoa,YAAYqB,EAAKnL,QACtBtQ,KAAK2mB,WACL3mB,KAAKuB,KAAOka,EAAKla,KAAKyD,uBAK1B6hB,SAAA,SACEzsB,EACAuB,EACAmrB,EACAC,EACApR,cAEA,GAAI3V,KAAK4mB,OAAOxwB,OAAS,EAAG,CAC1B,IAAM4wB,EAAoB,GAY1B,OAXAhnB,KAAK4mB,OAAO/lB,SAAQ,SAAComB,EAAO7uB,GAC1B,GAAkB,KAAd6uB,EAAMtV,KAAa,CACrB,IAAIjE,EAAMtV,EAAI,GAAK,EAAI0uB,EAAQC,EACtB,GAAL3uB,GAAuB,UAAbugB,EAAKpX,OACjBmM,EAAMzW,KAAK0Z,MAAMmW,EAAQA,EAAQC,EAASA,GAAU,IAEtDC,EAAQvrB,KAAMwrB,EAAMzO,IAAM9K,EAAO,UAEjCsZ,EAAQvrB,KAAKwrB,EAAMzO,IAAM7C,EAAQhC,cAAcsT,EAAMtV,aAGjD3R,KAAKuB,MACX,IAAK,UACH,GAAIylB,EAAQ5wB,OAAS,GAAK,EAAG,CAE3B,IADA,IAAM4sB,EAA+B,GAC5B7lB,EAAI,EAAGA,EAAI6pB,EAAQ5wB,OAAQ+G,GAAK,EACvC6lB,EAAOvnB,KACL,IAAIyrB,GAAmB9sB,EAAI4sB,EAAQ7pB,GAAIxB,EAAIqrB,EAAQ7pB,EAAI,KAG3D,WAAW+pB,GAAmBlE,SAGlC,IAAK,YACH,GAAsB,GAAlBgE,EAAQ5wB,OACV,OAAO8wB,GACL9sB,EAAI4sB,EAAQ,GACZrrB,EAAIqrB,EAAQ,GACZ5sB,EAAI4sB,EAAQ,GAAKA,EAAQ,GACzBrrB,EAAIqrB,EAAQ,GAAKA,EAAQ,IAG7B,MACF,IAAK,UACH,GAAsB,GAAlBA,EAAQ5wB,OACV,OAAO8wB,GACL9sB,EAAI4sB,EAAQ,GACZrrB,EAAIqrB,EAAQ,GACZA,EAAQ,GACRA,EAAQ,IAGZ,MACF,IAAK,SACH,GAAsB,GAAlBA,EAAQ5wB,OACV,OAAO8wB,GACL9sB,EAAI4sB,EAAQ,GACZrrB,EAAIqrB,EAAQ,GACZA,EAAQ,GACRA,EAAQ,qBA5GYV,aAsHlBa,GACd5V,EACAnX,EACAuB,EACAmrB,EACAC,EACApR,GAEA,GAAIpE,EAAK,CACP,IAAMgL,EAAU,IAAImK,GACpB,IAEE,OADAnV,EAAI8I,MAAMkC,GACHA,EAAQsK,SAASzsB,EAAGuB,EAAGmrB,EAAOC,EAAQpR,SACtCnO,GACP9F,EAAejB,KAAK+G,EAAK,oBAGtB0f,GAA0B9sB,EAAGuB,EAAGvB,EAAI0sB,EAAOnrB,EAAIorB,OAG3CK,eAIX,WAA4BC,gBAC1BxO,sBAD0BwO,eAH5BC,SAAsC,KACtC/lB,KAAsB,KAEMsX,QAAAwO,WAJ9B,2BASE1M,WAAA,SAAWC,GAOT,YANKrZ,KAAOqZ,EAAMjb,WAEhBK,KAAKsnB,SAAStnB,KAAKuB,MADjBvB,KAAKqnB,MACoB,GAECrnB,KAAKsnB,SAAStnB,KAAKuB,OAAS,GAAK,EAExDqZ,KAITI,SAAA,SAASxC,GAIP,YAHSjX,OACPvB,KAAKsnB,SAAStnB,KAAKuB,OAASiX,EAAIA,KAAOxY,KAAKqnB,MAAQ,EAAI,IAEnD7O,KAIT8C,eAAA,SAAehT,GAEb,YADK8R,YAAY9R,EAAKgI,QACfhI,MA9B0Bge,aAkCrBiB,GACdhW,EACA8V,GAEA,IAAM9K,EAAU,IAAI6K,GAAgBC,GACpC,IACE9V,EAAI8I,MAAMkC,SACH/U,GACP9F,EAAejB,KAAK+G,EAAK,sBAEpB+U,EAAQ+K,aAGJE,eACX,WACSC,EACAC,gBAEP5O,sBAHO2O,iBACAC,mBADA5O,UAAA2O,EACA3O,cAAA4O,8BAMTvM,SAAA,SAAShX,GACP,WAAWmiB,GAAQtmB,KAAK0nB,YAAYC,aAAaxjB,EAAIA,IAAKnE,KAAKynB,cAV1BnB,ICrPzC,SAASsB,GACPN,GAEA,IAAMphB,EAAS,GAIf,OAHAvD,OAAOC,KAAK0kB,GAAUzmB,SAAQ,SAACU,GAC7B2E,EAAO3E,GAAQrH,MAAMiF,KAAKmoB,EAAS/lB,OAE9B2E,MCoBG2hB,GDVCC,cAKX,WAA4BC,EAAyBC,QAAzBD,qBAAyBC,qBAJrDC,aAAyC,UACzCC,YAAsB,OACtBC,WAAqB,EAEOnoB,cAAA+nB,EAAyB/nB,cAAAgoB,6BAErDI,OAAA,SAAOtS,GACL,cAAaA,KAGRA,QAIEiS,WAAajS,EAAMiS,UACxB/nB,KAAKgoB,WAAalS,EAAMkS,UACxBhoB,KAAKkoB,aAAepS,EAAMoS,YAC1BloB,KAAKmoB,YAAcrS,EAAMqS,aAO7BE,WAAA,WACE,YAAYL,YAMdM,QAAA,WACEtoB,KAAKgoB,eAMPO,UAAA,WACEvoB,KAAKgoB,kBAIHQ,cACJ,WACkBC,EACAnkB,QADAmkB,yBACAnkB,eADAtE,kBAAAyoB,EACAzoB,aAAAsE,6BAMlBokB,aAAA,SAAa3c,EAAYub,GACvBvb,EAAK/L,KAAKyoB,aAAaE,uBAAuBC,kBAC5C7c,EACA/L,KAAKsE,SAEPtE,KAAKyoB,aAAaI,aAAa9c,GAAMub,KAGvCwB,uBAAA,WACE,YAAYL,aAAaK,+BAWvBC,cAIJ,WACkBN,EACAnkB,EACAsO,EACAoW,QAHAP,yBACAnkB,oBACAsO,sBACAoW,sBAPlBC,OAAkC,UAClCC,kBAAuC,GAGrBlpB,kBAAAyoB,EACAzoB,aAAAsE,EACAtE,eAAA4S,EACA5S,eAAAgpB,6BAGlBG,UAAA,SAAUF,GACRjpB,KAAKipB,OAASA,KAGRG,YAAA,SAAYjlB,GAClB,IAAMC,EAAID,EAAIE,MAAM,gBACpB,OAAOD,EAAIA,EAAE,GAAK,QAGZilB,iBAAA,SAAiBllB,GACvB,IAAImlB,EAAgBtpB,KAAKyoB,aAAaE,uBAAuBhB,aAC3Dpa,EAAgBpJ,EAAKnE,KAAKsE,SAC1BtE,KAAKsE,SAKP,MAHgC,MAA5BglB,EAActuB,OAAO,KACvBsuB,EAAgBA,EAAcxxB,UAAU,IAEnCwxB,KAMTC,kBAAA,SACEhoB,EACAioB,cAOM7N,EAAO,IAAIc,GACfzc,KAAKgpB,WACL,kBAAMQ,EAPiB,WACvB,IAAMlZ,EAAS+F,EAAKoS,aAAagB,oBAAoBloB,GACrD,OAAO+O,GAAUA,EAAOla,OAASka,EAAOA,EAAOla,OAAS,GAAK,KAFtC,sBAQPmL,GAQlB,YADKknB,aAAaiB,wBAAwBnoB,GAJtB,SAACqI,GACnB,OAAO4f,EAAO5f,EAAI,MAGyC+R,GACtDA,KAMTgO,mBAAA,SACEpoB,EACAioB,cAMM7N,EAAO,IAAIc,GACfzc,KAAKgpB,WACL,kBAAMQ,EALC5S,EAAK6R,aAAagB,oBAAoBloB,IAAS,uBAMrCA,GAGnB,YADKknB,aAAaiB,wBAAwBnoB,EAAMioB,EAAQ7N,GACjDA,KAiBDiO,kBAAA,SACN7d,EACAud,EACAO,GAEA,IAAIC,EAAiB9pB,KAAKyoB,aAAaI,aAAaS,GAKpD,OAJKQ,GAAkBD,GAAkB9d,IACvC/L,KAAKipB,OAAOc,sBAAsBhe,GAClC+d,EAAiB9pB,KAAKyoB,aAAaI,aAAaS,IAE3CQ,GAAkB,QASnBE,sBAAA,SACNV,GAEA,YAASb,aAAawB,YAAYC,aAAaZ,QACjCb,aAAagB,yBAEbhB,aAAa0B,iBAAiBb,IAAkB,QAOhEc,oBAAA,SACEjmB,EACA5C,EACAioB,cAEMzd,EAAK/L,KAAKopB,YAAYjlB,GACtBmlB,EAAgBtpB,KAAKqpB,iBAAiBllB,GAIxCmjB,EAAWtnB,KAAK4pB,kBAAkB7d,EAAIud,MAC1C,GAAIhC,GAAYA,EAAS/lB,GAAO,CAG9B,IAAM8oB,EAAiB/C,EAAS/lB,GAChC,WAAWkb,GACTzc,KAAK4S,UACL4W,EAAOa,EAAeA,EAAej0B,OAAS,IAAM,kBAG7CqmB,GACTzc,KAAKgpB,WACL,WAKE,GAFA1B,EAAW7O,EAAKmR,kBAAkB7d,EAAIud,MAExB,CACZ,GAAIhC,EAAS/lB,GAAO,CAGlB,IAAM8oB,EAAiB/C,EAAS/lB,GAChC,OAAOioB,EAAOa,EAAeA,EAAej0B,OAAS,IAAM,UAErD6xB,EAAexP,EAAKuR,sBAAsBV,GAChD,GAAIrB,EAAc,CAGhB,GADAxP,EAAKgQ,aAAa6B,iBAAiBhB,GAC/BrB,EAAa1mB,GAAO,CACtB,IAAMgpB,EAAqBtC,EAAa1mB,GACxC,OAAOioB,EACLe,EAAmBA,EAAmBn0B,OAAS,IAAM,aAIhDozB,EAAO,UAIhB/Q,EAAKgQ,aAAa+B,2BAChBlB,MAGK,YAOX7Q,EAAKgQ,aAAa+B,2BAA2BlB,MACtC,yBAGO/nB,SAAW4C,MAOjCsmB,qBAAA,SACEtmB,EACA5C,EACAioB,cAEMzd,EAAK/L,KAAKopB,YAAYjlB,GACtBmlB,EAAgBtpB,KAAKqpB,iBAAiBllB,GAC5C,WAAWsY,GACTzc,KAAKgpB,WACL,WACE,IAAMf,EAAetP,EAAKqR,sBAAsBV,GAEhD,GAAKrB,EAIE,CACLtP,EAAK8P,aAAa6B,iBAAiBhB,GACnC,IAAMiB,EAAqBtC,EAAa1mB,IAAS,GAC3CmpB,EAAkB/R,EAAKiR,kBAC3B7d,EACAud,MAIF,OAAOE,EAAOe,EAAmB5wB,OADH+wB,EAAgBnpB,IAAS,YAVvDoX,EAAK8P,aAAa+B,2BAA2BlB,MACtC,0BAaQ/nB,SAAW4C,MAQlCwmB,kBAAA,SAAkBppB,EAAcqpB,cAC9B,WAAWnO,GACTzc,KAAKgpB,WACL,WACE,IAAM6B,EAAehS,EAAKqQ,kBAAkB3nB,GAC5C,IAAKspB,EACH,MAAO,GA4BT,IA1BA,IAAMC,EAAUnoB,OAAOC,KAAKioB,GACzB/gB,KAAI,SAAC5K,UAAMoO,SAASpO,EAAG,OACvB6rB,KAAKxd,IAEF0c,EAAcpR,EAAK4P,aAAawB,YAChCe,EAAkBf,EAAYgB,YAChChB,EAAYrd,OAAS,EACrBqd,EAAYrd,OACVse,EAAiBjB,EAAYgB,YAC/BD,EACA/zB,KAAK2Z,UAAL3Z,MACE+zB,UACG9wB,MAAMiF,KACP8qB,EAAYkB,UAAUC,wCAGtBthB,KAAI,SAAC1K,UACLkO,SAASlO,EAAEgJ,aNzVQ,oBMyVgC,SAIvDijB,GAAe,EACfC,GAAe,EACfC,GAAc,EACdC,GAAqB,EAEhBpzB,EAAI,EAAGA,EAAI0yB,EAAQ10B,OAAQgC,IAAK,CACvC,IAAMwU,EAASke,EAAQ1yB,GACjBqzB,EAAarzB,EAAI,EAAI0yB,EAAQ1yB,EAAI,IAAM,EACvCszB,EAAatzB,EAAI0yB,EAAQ10B,OAAS,EAAI00B,EAAQ1yB,EAAI,IAAM,EAC9D,GAAIwU,EAASse,EACX,MAEF,GAAIte,GAAUoe,EAAiB,CAK7B,GAJIK,EAAc,IAChBA,EAAcze,EACd4e,GAAqB,GAEnBF,EAAc,EAChB,GAAI1e,IAAWoe,EACbM,EAAc1e,MACT,CACD6e,EAAaJ,IACfC,EAAcG,GAGhB,IAAME,EAAkB1B,EAAYkB,UAAUS,oCACXhf,QAEnC,GAAK+e,EAKE,CACL,IAAIE,EACF5B,EAAYkB,UAAUS,oCACaZ,QAUrC,GARKa,IAGHA,EACE5B,EAAYkB,UAAUS,yCAItBC,EAEF,IACE,IAAI/jB,EAAU+jB,EACd/jB,EACAA,EAAUA,EAAQgkB,kBAElB,GAAIhkB,IAAY6jB,EAAiB,CAC/BL,EAAc1e,EACd,YAzBF0e,EAAc,IAChBA,EAAc1e,GA+BtB2e,EAAa3e,OACJ8e,EAAaR,GAAkBQ,EAAa,KACrDL,EAAcC,EAAcC,EAAaC,EAAoB5e,UAK/Die,EACE,CACEkB,MAAOV,EACProB,MAAOsoB,EACPU,KAAMT,EACN,eAAgBC,GAChBZ,KACC,qBAIOA,MAAoBrpB,MAQxC0qB,eAAA,SACE1qB,EACAya,EACAkQ,IAGElsB,KAAKkpB,kBAAkB3nB,KAAUvB,KAAKkpB,kBAAkB3nB,GAAQ,KAC3D2qB,EAAgBC,sBAAwBnQ,QAItCoQ,cAoBX,WACkBzD,QAAAA,mCApBlBE,aAA4D,QAC5DsB,iBAAgE,QAChEV,oBAAgD,QAChD4C,qBAAiD,QACjDC,yBAAuD,QACvDC,gBAEI,QACJtC,YAA0B,UAC1BuC,2BAAuD,QACvDC,kBAA8C,QAC9CC,uBAAqD,QACrDC,qBAAoE,QACpEC,mBAAkE,QAC1DC,kBAGF,GAGY7sB,4BAAA2oB,EAEhB3oB,KAAKypB,oBAALnJ,KAAmC,CAAC,8BAGtCwM,sBAAA,SAAsBxoB,GACpB,WAAWkkB,GAAgBxoB,KAAMsE,MAGnCyoB,sBAAA,SACEzoB,EACAsO,EACAoW,GAEA,WAAWD,GAAgB/oB,KAAMsE,EAASsO,EAAWoW,MAGvDgE,eAAA,SAAe1M,GACbtgB,KAAKiqB,YAAc3J,KAGb2M,kBAAA,SAAkBC,EAAqBzuB,GACzCuB,KAAKypB,oBAAoByD,GAC3BltB,KAAKypB,oBAAoByD,GAAazxB,KAAKgD,GAE3CuB,KAAKypB,oBAAoByD,GAAe,CAACzuB,MAO7C0uB,oBAAA,SAAoBC,GAClB,IAAM9F,EAAWtnB,KAAKypB,oBAALnJ,KACZgH,GAAaA,EAASlxB,OAGzBkxB,EAASA,EAASlxB,OAAS,GAAKg3B,EAFhCptB,KAAKypB,oBAALnJ,KAAmC,CAAC8M,MAWxCC,mBAAA,SACEC,EACA3X,GAIA,IAAI4X,EADJvtB,KAAKqsB,qBAAuBzE,GAAmB5nB,KAAKypB,qBAEpD,IAYI+D,EAZEnG,EAAQiG,EAAkB,iBAChC,GAAIjG,EAAO,CACT,IAAMoG,EAAWpG,EAAM/S,SAASqB,GAC5B8X,IACFF,EAAWG,GAAmBD,UAG9BF,EACF,IAAK,IAAMI,KAAoBJ,EAC7BvtB,KAAKitB,kBAAkBU,EAAkBJ,EAASI,IAItD,IAAMC,EAAYN,EAAkB,qBACpC,GAAIM,EAAW,CACb,IAAMC,EAAeD,EAAUtZ,SAASqB,GACpCkY,IACFL,EAAeE,GAAmBG,WAcjC,IAAMC,KARPN,EACI,SAAUA,IACdA,EAAYlN,KAAW,IAGzBkN,EAAe,IACHlN,KAAW,EAEUkN,EAAc,CAC1CxtB,KAAKypB,oBAAoBqE,IAC5B9tB,KAAKitB,kBAAkBa,EAAsB,GAE/C,IAAMC,EAAgB/tB,KAAKypB,oBAAoBqE,GAC/CC,EAAcA,EAAc33B,OAAS,IACnCo3B,EAAaM,OAQnBE,iBAAA,SAAiB1G,GACftnB,KAAKssB,yBAAyB7wB,KAAKuE,KAAKypB,qBACxCzpB,KAAKypB,oBAAsB7B,GAAmBN,MAMhD2G,gBAAA,WACEjuB,KAAKypB,oBAAsBzpB,KAAKssB,yBAAyBhvB,SAM3DgtB,iBAAA,SAAiBve,GACf,IAAMmiB,EAAiBluB,KAAK2sB,qBAAqB5gB,GAC7CoiB,EAAenuB,KAAK4sB,mBAAmB7gB,GACtCoiB,IACHA,EAAenuB,KAAK4sB,mBAAmB7gB,GAAM,IAG/C,IADA,IAAIqiB,KACKh2B,EAAI,EAAGA,EAAI4H,KAAKysB,kBAAkBr2B,QAAU,CACnD,IAAMsX,EAAM1N,KAAKysB,kBAAkBr0B,GACnC,GAAIsV,EAAIqa,WAAahc,EAAI,CAGvB,GAFA2B,EAAI4a,UACJtoB,KAAKysB,kBAAkB1vB,OAAO3E,EAAG,GAC7B81B,EAAgB,CAClB,IAAMp1B,EAAIo1B,EAAe71B,QAAQqV,GAC7B5U,GAAK,GACPo1B,EAAenxB,OAAOjE,EAAG,GAG7Bq1B,EAAa1yB,KAAKiS,GAClB0gB,UAEAh2B,IAGCg2B,GACHpuB,KAAKwqB,2BAA2Bze,SAQpCye,2BAAA,SAA2Bze,EAAYic,GACrC,IAAKhoB,KAAKwsB,2BAA2B6B,MAAK,SAAC3gB,UAAQA,EAAIqa,WAAahc,KAAK,CACvE,IAAM2B,EAAM,IAAIoa,GAAuB/b,EAAIic,GAC3ChoB,KAAKwsB,2BAA2B/wB,KAAKiS,OAUzC4gB,WAAA,SAAWpG,EAAoBC,cACvBoG,EAAM5rB,OAAOC,KAAK5C,KAAKiqB,YAAYC,cACzC,GAAIqE,EAAIn4B,OAAS,EAAG,CAClB,IAAMqzB,EAAsB7B,GAAmB5nB,KAAKypB,qBACpD8E,EAAI1tB,SAAQ,SAACkL,GACX+M,EAAKqR,iBAAiBpe,GAAM0d,EAC5B,IAAM+E,EAAe1V,EAAKyT,gBAAgBxgB,GAC1C,GAAIyiB,GAAgBA,EAAarG,UAAYA,EAAW,CACtD,IAAMgG,EAAerV,EAAK8T,mBAAmB7gB,GAC7C,GAAIoiB,EAAc,CAChB,IAIIzgB,EAJAwgB,EAAiBpV,EAAK6T,qBAAqB5gB,GAK/C,IAJKmiB,IACHA,EAAiBpV,EAAK6T,qBAAqB5gB,GAAM,IAG3C2B,EAAMygB,EAAa9uB,SACzBqO,EAAI6a,YACJ2F,EAAezyB,KAAKiS,IAI1BoL,EAAKyT,gBAAgBxgB,GAAM,CAAEmc,WAAAA,EAAYC,UAAAA,UAG7C,IACIza,EADE+gB,EAAmBzuB,KAAKqsB,qBAEtB3e,EAAM1N,KAAKwsB,2BAA2BntB,SAAU,CACtDqO,EAAIua,aAAewG,EACnB/gB,EAAIwa,WAAaA,EACjBxa,EAAIya,UAAYA,EAChB,IAAIve,SACA8D,EAAI2a,cACNze,EAAM5J,KAAK4sB,mBAAmBlf,EAAIqa,aAEhCne,EAAM5J,KAAK4sB,mBAAmBlf,EAAIqa,UAAY,KAGhDne,EAAM5J,KAAK2sB,qBAAqBjf,EAAIqa,aAElCne,EAAM5J,KAAK2sB,qBAAqBjf,EAAIqa,UAAY,IAGhDne,EAAI8kB,OAAM,SAACtqB,UAAOsJ,EAAI0a,OAAOhkB,OAC/BwF,EAAInO,KAAKiS,QAGRuc,YAAc,QAMrB0E,wBAAA,SAAwBrO,cAMlBsO,EAAiC,GACzBjsB,OAAOC,KAAK0d,EAAK4J,cACzBrpB,SAAQ,SAACkL,GACX,IAAM8iB,EAAS7V,EAAK2T,qBAAqB5gB,GACrC8iB,IACFD,EAAOA,EAAKj1B,OAAOk1B,OAGvBD,EAAK7D,MACH,SAAC+D,EAAIC,UAAOD,EAAG5G,WAAa6G,EAAG7G,YAAc4G,EAAG3G,UAAY4G,EAAG5G,aAEjE,IAAMjiB,EAKA,GACF8oB,EAKA,KAkBJ,OAjBAJ,EAAK/tB,SAAQ,SAAC6M,GAETshB,GACDA,EAAE9G,aAAexa,EAAIwa,YACrB8G,EAAE7G,YAAcza,EAAIya,UAUpB6G,EAAEJ,KAAKnzB,KAAKiS,GAFZxH,EAAOzK,KANPuzB,EAAI,CACF9G,WAAYxa,EAAIwa,WAChBC,UAAWza,EAAIya,UACfF,aAAcva,EAAIua,aAClB2G,KAAM,CAAClhB,QAONxH,KAOT+oB,sBAAA,SAAsBL,GACpB5uB,KAAK0sB,uBAAuBjxB,KAAKuE,KAAKysB,mBACtCzsB,KAAKysB,kBAAoBmC,KAM3BM,qBAAA,WACElvB,KAAKysB,kBAAoBzsB,KAAK0sB,uBAAuBpvB,SAGvDosB,wBAAA,SACEnoB,EACAioB,EACA7N,GAEa,UAATpa,GACFvB,KAAK6sB,kBAAkBpxB,KAAK,CAAEkgB,KAAAA,EAAM6N,OAAAA,OAIxCV,uBAAA,WACE,YAAYqG,oBAAoBC,KAAKpvB,SAG/BmvB,oBAAA,SAAoBxT,EAAMpK,EAAK5K,GAErC,GADc3G,KAAK6sB,kBAAkBwC,WAAU,SAACL,UAAMA,EAAErT,OAASA,MAAS,EAC/D,CACT,IAAM7Q,EAAOnE,EAAS2oB,cAAc,QAGpC,OAFAxkB,EAAKkC,YAAcuE,EACnBzG,EAAKykB,aAAaC,GAAoB7T,EAAK9R,KACpCiB,iBAMX2kB,eAAA,SAAeC,GAGb,iBAFMC,EAAQD,EAASE,KAAKxE,qBAAqBoE,QAC3CK,EAAQ7vB,KAAKypB,oBAALnJ,KAAiC,oBACpCxV,UACHjB,EAAMiB,EAAK1C,aAAaonB,IACxBp3B,EAAImhB,EAAKsT,kBAAkBwC,WAAU,SAACL,UAAMA,EAAErT,KAAK9R,MAAQA,KAEjEiB,EAAKkC,YAAcuM,EAAKsT,kBAAkBz0B,GAAGoxB,OAAO,CAACqG,SAJpCF,yBAQrBG,uBAAA,SAAuB3H,GACrB,WAAW4H,GAAiB/vB,KAAMmoB,SAIzBqH,GAAqB,iCAE5BO,cACJ,WACkBtH,EACAN,QADAM,yBACAN,iBADAnoB,kBAAAyoB,EACAzoB,eAAAmoB,qBAMlB6H,YAAA,SAAYC,GACV,IAAKA,GAAeA,EAAYpyB,MAC9B,SAEF,IAAMqyB,EAAWD,EAAYC,SAC7B,IAAKA,GAAkC,IAAtBA,EAASnlB,SACxB,SAEF,IAAMgB,EACHmkB,EAAqB9nB,aAAa,wBAClC8nB,EAAqB9nB,aAAa,OAClC8nB,EAAqB9nB,aAAa,QACrC,IAAK2D,EACH,SAEF,IACG/L,KAAKyoB,aAAamE,mBAAmB7gB,KACrC/L,KAAKyoB,aAAakE,qBAAqB5gB,GAExC,SAEF,IAAMoc,EAAYnoB,KAAKyoB,aAAa8D,gBAAgBxgB,GACpD,OAAKoc,QAGOA,WAAaA,EAAUA,yBC9zBvBgI,GAAkB1yB,GAEhC,IADAA,EAAMA,EAAIwH,OAAO,IACTZ,MAAM,sBACZ,OAAO5G,EAET,IAAM2yB,EAAO9iB,SAAS7P,EAAK,IAC3B,OAAIymB,MAAMkM,GACD,GAELA,GAAQ,MACHC,OAAOC,aAAaF,GAEzBA,GAAQ,QAEHC,OAAOC,aACZ,MAAUF,GAAQ,GAAM,KACxB,MAAgB,KAAPA,GAKN,aAGOG,GAAY9yB,GAC1B,OAAOA,EAAI2H,QACT,4DACA+qB,KAOJ,SAAYtI,GACVA,iBACAA,qBACAA,iBACAA,yBACAA,iBACAA,iBACAA,mBACAA,mBACAA,iBACAA,qBACAA,sBACAA,sBACAA,sBACAA,sBACAA,sBACAA,sBACAA,sBACAA,0BACAA,sBACAA,sBACAA,gBACAA,0BACAA,sBACAA,oBACAA,sBACAA,0BACAA,0BACAA,wBAGAA,oBACAA,wBACAA,kBACAA,kBACAA,sBACAA,oBACAA,gBACAA,gBACAA,gBAGAA,0BACAA,8BACAA,wBACAA,wBACAA,4BACAA,0BACAA,sBACAA,sBACAA,sBACAA,0BACAA,0BACAA,oBArDF,CAAYA,KAAAA,YAuEA2I,GAfCC,GAOX,gBANAtmB,iBACAumB,wBACAlY,IAAc,OACd5K,KAAe,QACf+iB,SAAmB,EAGjB3wB,KAAKmK,KAAO0d,GAAU+I,cA6FVC,GAAYpK,EAAaqK,GACvC,IACI14B,EADE8G,EAAchF,MAAM,KAE1B,IAAK9B,EAAI,EAAGA,EAAI,IAAKA,IACnB8G,EAAE9G,GAAKquB,EAGT,IADAvnB,EAAC6xB,IAAQtK,GAAO+J,GAAOQ,IAAMR,GAAOQ,IAAMR,GAAOS,QAC5C74B,EAAI,EAAGA,EAAI04B,EAAK16B,OAAQgC,GAAK,EAChC8G,EAAE4xB,EAAK14B,IAAM04B,EAAK14B,EAAI,GAExB,OAAO8G,GAhGT,SAAYsxB,GACVA,qBACAA,iBACAA,qBACAA,mBACAA,mBACAA,uBACAA,yBACAA,iBACAA,sBACAA,sBACAA,oBACAA,oBACAA,sBACAA,sBACAA,kBACAA,sBACAA,sBACAA,0BACAA,gBACAA,gBACAA,gBACAA,sBACAA,gBACAA,sBACAA,sBACAA,sBACAA,sBACAA,wBACAA,kBACAA,kBACAA,sBACAA,oBACAA,oBACAA,kBACAA,wBACAA,wBACAA,wBACAA,oBACAA,oBACAA,wBACAA,wBACAA,0BACAA,0BACAA,0BAGAA,wBACAA,0BAGAA,0BACAA,0BACAA,0BACAA,0BACAA,oBACAA,wBACAA,0BACAA,wBACAA,0BACAA,wBACAA,sBACAA,sBACAA,0BACAA,wBACAA,sBACAA,sBACAA,kBACAA,oBACAA,oBACAA,wBACAA,0BACAA,wBACAA,sBACAA,0BACAA,0BACAA,0BACAA,0BACAA,wBACAA,wBACAA,0BACAA,0BACAA,sBACAA,kBAnFF,CAAYA,KAAAA,YAsGCU,GAA0B,CACrCV,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOW,MACPX,GAAOW,MACPX,GAAOS,QA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GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOkD,QACPlD,GAAOmD,MACPnD,GAAOS,QACPT,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOS,QACPT,GAAOoD,OACPpD,GAAOS,QACPT,GAAOS,QACPT,GAAOkD,QACPlD,GAAOS,QACPT,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,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OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAO+D,OACP/D,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,QAGTD,GAAa3D,IAAQP,GAAOmE,WCp/BhBC,GDs/BCC,GAA2BhE,GAAYL,GAAOQ,IAAK,CAC9D,GACAR,GAAOsE,SAGIC,GAAyBlE,GAAYL,GAAOQ,IAAK,CAC5D,GACAR,GAAOwE,UAGIC,GAAuBpE,GAAYL,GAAOQ,IAAK,CAC1D,GACAR,GAAOsE,OACP,IACAtE,GAAO0E,UAGIC,GAAuBtE,GAAYL,GAAOQ,IAAK,CAC1D,GACAR,GAAO4E,UAGIC,GAAyBxE,GAAYL,GAAOQ,IAAK,CAC5D,GACAR,GAAO8E,UAGIC,GAA2B1E,GAAYL,GAAO+C,KAAM,CAC/D,GACA/C,GAAOgF,SAGIC,GAA+B5E,GAAYL,GAAO8E,QAAS,CACtE,GACA9E,GAAOgF,OACP,GACAhF,GAAOkF,UAGIC,GAA8B9E,GAAYL,GAAOoF,MAAO,CACnE,GACApF,GAAOkF,UAGIG,GAAsBhF,GAAYL,GAAOQ,IAAK,CACzD,GACAR,GAAOsE,OACP,GACAtE,GAAOsF,QAGIC,GAA0BlF,GAAYL,GAAOoF,MAAO,CAC/D,GACApF,GAAOwF,UAGIC,GAA+BpF,GAAYL,GAAO0F,MAAO,CACpE,GACA1F,GAAOkF,UAGIS,GAA+BtF,GAAYL,GAAO4F,OAAQ,CACrE,EACA5F,GAAOS,QACP,GACAT,GAAOS,QACP,GACAT,GAAOS,QACP,GACAT,GAAOS,UAGIoF,GAAwBxF,GAAYL,GAAO+C,KAAM,CAC5D,GACA/C,GAAO8F,OACP,GACA9F,GAAOS,QACP,GACAT,GAAOS,QACP,GACAT,GAAO+F,UAGIC,GAAwB3F,GAAYL,GAAO+C,KAAM,CAC5D,GACA/C,GAAO8F,OACP,GACA9F,GAAOS,QACP,GACAT,GAAOS,QACP,GACAT,GAAOiG,UAGIC,GAA2B7F,GAAYL,GAAO+C,KAAM,CAC/D,GACA/C,GAAOmG,QACP,GACAnG,GAAOoG,QACP,GACApG,GAAOoG,QACP,GACApG,GAAO+F,UAGIM,GAA2BhG,GAAYL,GAAO+C,KAAM,CAC/D,GACA/C,GAAOmG,QACP,GACAnG,GAAOoG,QACP,GACApG,GAAOoG,QACP,GACApG,GAAOiG,UAGIK,GAAuBjG,GAAYL,GAAOpT,IAAK,CAC1D,EACAoT,GAAO+C,KACP,GACA/C,GAAO+C,KACP,GACA/C,GAAOuG,KACP,GACAvG,GAAOwG,KACP,GACAxG,GAAOS,QACP,GACAT,GAAO+C,KACP,GACA/C,GAAO+C,OAGI0D,GAA6BpG,GAAYL,GAAO+C,KAAM,CACjE,GACA/C,GAAO0G,OACP,EACA1G,GAAO2G,MACP,GACA3G,GAAO2G,MACP,GACA3G,GAAO2G,MACP,GACA3G,GAAO2G,MACP,GACA3G,GAAO4G,OACP,GACA5G,GAAOS,QACP,GACAT,GAAOS,QACP,GACAT,GAAOS,QACP,IACAT,GAAOS,QACP,IACAT,GAAOS,QACPF,IACAP,GAAO0G,SAGIG,GAA8BxG,GAAYL,GAAO+C,KAAM,CAClE,GACA/C,GAAO8G,QACP,GACA9G,GAAOoG,QACP,GACApG,GAAOoG,QACP,GACApG,GAAO4G,OACPrG,IACAP,GAAO0G,SAGIK,GAA8B1G,GAAYL,GAAO+C,KAAM,CAClE,GACA/C,GAAO8G,QACP,GACA9G,GAAOoG,QACP,GACApG,GAAOoG,QACP,GACApG,GAAO4G,OACPrG,IACAP,GAAO0G,SAGIM,GAA2B3G,GAAYL,GAAOS,QAAS,CAClE,EACAT,GAAO+C,KACP,GACA/C,GAAO+C,KACP,GACA/C,GAAO+C,KACP,GACA/C,GAAO+C,KACP,GACA/C,GAAOiH,SAKIC,cAQX,WAAmBC,EAA+BC,QAA/BD,kBAA+BC,oBAPlDC,sBACAC,mBACAC,MAAgB,OAChBC,KAAe,OACf7xB,KAAe,OACfwqB,SAAmB,EAEA3wB,WAAA23B,EAA+B33B,aAAA43B,EAChD53B,KAAK63B,UAXyB,GAY9B73B,KAAK83B,OAAS59B,MAAM8F,KAAK63B,UAAY,GACrC,IAAK,IAAIz/B,EAAI,EAAGA,GAAK4H,KAAK63B,UAAWz/B,IACnC4H,KAAK83B,OAAO1/B,GAAK,IAAIq4B,8BAIzBwH,MAAA,WAIE,YAHSD,MAAQh4B,KAAKmG,MACpBnG,KAAKk4B,kBAEKJ,OAAO93B,KAAKmG,SAG1BgyB,SAAA,SAAS96B,GAIP,OAHM2C,KAAKg4B,KAAOh4B,KAAKmG,KAAQnG,KAAK63B,YAAcx6B,GAChD2C,KAAKk4B,kBAEKJ,OAAQ93B,KAAKmG,KAAO9I,EAAK2C,KAAK63B,cAG5CO,QAAA,WACEp4B,KAAKmG,KAAQnG,KAAKmG,KAAO,EAAKnG,KAAK63B,aAGrCQ,KAAA,WACE,GAAIr4B,KAAK+3B,MAAQ,EACf,UAAUh5B,MAAM,0BAElBiB,KAAK+3B,KAAO/3B,KAAKmG,QAGnBkhB,MAAA,WACE,GAAIrnB,KAAK+3B,KAAO,EACd,UAAUh5B,MAAM,2BAElBiB,KAAKmG,KAAOnG,KAAK+3B,KACjB/3B,KAAK+3B,MAAQ,KAGfO,OAAA,WACEt4B,KAAK+3B,MAAQ,KAGfQ,QAAA,WACE,YAAYR,MAAQ,KAGdS,WAAA,WAKN,IAJA,IAAMC,EAAe,GAAKz4B,KAAK63B,UAAY,GAAK,EAC1Ca,EAAqBx+B,MAAMu+B,EAAe,GAC5CE,EAAW34B,KAAK+3B,KAChBa,EAAW,EACRD,GAAY34B,KAAKg4B,MACtBU,EAAUE,GAAY54B,KAAK83B,OAAOa,GAClCA,EAAYA,EAAW,EAAK34B,KAAK63B,UACjCe,IAOF,IALA54B,KAAK+3B,KAAO,EACZ/3B,KAAKmG,KAAOyyB,EACZ54B,KAAKg4B,KAAOY,EACZ54B,KAAK63B,UAAYY,EACjBz4B,KAAK83B,OAASY,EACPE,GAAYH,GACjBC,EAAUE,KAAc,IAAInI,MAIxBnxB,MAAA,SAAMqxB,EAAUsH,EAAOY,GACzB74B,KAAK43B,SACP53B,KAAK43B,QAAQt4B,MAAMu5B,EAAWZ,MAI1BC,WAAA,WACN,IAAIF,EAAOh4B,KAAKg4B,KACZD,EAAO/3B,KAAK+3B,MAAQ,EAAI/3B,KAAK+3B,KAAO/3B,KAAKmG,KACzC0xB,EAAY73B,KAAK63B,UAMrB,GALIG,GAAQD,EACVA,GAAQF,EAERE,IAEEA,GAAQC,EAAM,CAEhB,GAAIh4B,KAAK+3B,KAAO,EACd,UAAUh5B,MAAM,qBAElBiB,KAAKw4B,aACLR,EAAOh4B,KAAKg4B,KAEZD,EADAF,EAAY73B,KAAK63B,cAGnB,IAAIiB,EAAU5H,GACRyG,EAAQ33B,KAAK23B,MACfhH,EAAW3wB,KAAK2wB,SACdmH,EAAS93B,KAAK83B,OAChBiB,EAAuBlR,GAAU+I,IACjCoI,EAAwB,EACxBC,EAAoB,GACpBC,EAAmB,EACnBC,KACAlB,EAAeH,EAAOE,GACtBoB,GAAgB,IACP,CACX,IAAM57B,EAAWm6B,EAAMr7B,WAAWq0B,GAClC,OAAQmI,EAAQt7B,IAAas7B,EAAQ,KACnC,KAAKtI,GAAOS,QACV8H,EAAYlR,GAAUoJ,QAEpBgI,EADE/U,MAAM1mB,GACI,uBAEA,wBAEds7B,EAAU5H,GACVP,IACA,MACF,KAAKH,GAAOW,MACVR,IACAwI,KACA,SACF,KAAK3I,GAAO2B,IACV6G,EAAgBrI,IAChBmI,EAAUzE,GACV,SACF,KAAK7D,GAAOmC,MACVoG,EAAYlR,GAAU8K,MACtBqG,EAAgBrI,IAChBmI,EAAU1F,GACV,SACF,KAAK5C,GAAOY,KACV4H,EAAgBrI,IAChBoI,EAAYlR,GAAUuJ,KACtB0H,EAAUjE,GACV,SACF,KAAKrE,GAAOkB,KACVqH,EAAYlR,GAAUwR,IACtBL,IAAkBrI,EAClBmI,EAAUzC,GACV,SACF,KAAK7F,GAAOa,KACV0H,EAAYlR,GAAUwR,IACtBL,IAAkBrI,EAClBmI,EAAUtC,GACV,SACF,KAAKhG,GAAOc,KACV0H,IAAkBrI,EAClBoI,EAAYlR,GAAUyJ,KACtBwH,EAAU1F,GACV,SACF,KAAK5C,GAAOe,OACVyH,EAAgBrI,IAChBoI,EAAYlR,GAAU0J,OACtBuH,EAAUjE,GACV,SACF,KAAKrE,GAAOgB,QACVwH,EAAgBrI,IAChBoI,EAAYlR,GAAU2J,QACtB,MACF,KAAKhB,GAAOiB,IACVuH,EAAgBrI,IAChBoI,EAAYlR,GAAU0J,OACtBuH,EAAU3D,GACV,SACF,KAAK3E,GAAOmB,MACVqH,EAAgBrI,IAChBoI,EAAYlR,GAAU8J,MACtB,MACF,KAAKnB,GAAOoB,MACVoH,EAAgBrI,IAChBoI,EAAYlR,GAAU+J,MACtB,MACF,KAAKpB,GAAOqB,KACVmH,EAAgBrI,IAChBoI,EAAYlR,GAAUgK,KACtBiH,EAAUjE,GACV,SACF,KAAKrE,GAAOsB,KACVkH,EAAgBrI,IAChBoI,EAAYlR,GAAUiK,KACtB,MACF,KAAKtB,GAAOuB,MACViH,EAAgBrI,IAChBoI,EAAYlR,GAAUkK,MACtB,MACF,KAAKvB,GAAOwB,MACV+G,EAAYlR,GAAUmK,MACtBgH,EAAgBrI,IAChBmI,EAAUjF,GACV,SACF,KAAKrD,GAAOyB,IACV+G,EAAgBrI,IAChBmI,EAAUrF,GACV,SACF,KAAKjD,GAAOkD,QACVsF,EAAgBrI,IAChBoI,EAAYlR,GAAUyR,MACtBR,EAAU1F,GACV,SACF,KAAK5C,GAAO0B,MACV8G,EAAgBrI,IAChBoI,EAAYlR,GAAUqK,MACtB4G,EAAUzD,GACV,SACF,KAAK7E,GAAO4B,MACV4G,EAAgBrI,IAChBoI,EAAYlR,GAAUuK,MACtB0G,EAAU/D,GACV,SACF,KAAKvE,GAAOwE,QACVrE,IACAoI,EAAYlR,GAAUmN,QACtB,MACF,KAAKxE,GAAO6B,QACV2G,EAAgBrI,IAChBoI,EAAYlR,GAAUwK,QACtB,MACF,KAAK7B,GAAO8B,GACV0G,EAAgBrI,IAChBoI,EAAYlR,GAAUyK,GACtBwG,EAAUjD,GACV,SACF,KAAKrF,GAAO+B,GACVyG,EAAgBrI,IAChBoI,EAAYlR,GAAU0K,GACtBuG,EAAUjE,GACV,SACF,KAAKrE,GAAOgC,GACVwG,EAAgBrI,IAChBoI,EAAYlR,GAAU2K,GACtBsG,EAAUjE,GACV,SACF,KAAKrE,GAAOiC,MACVuG,EAAgBrI,IAChBoI,EAAYlR,GAAU4K,MACtB,MACF,KAAKjC,GAAOkC,GACVsG,IAAkBrI,EAClBoI,EAAYlR,GAAU6K,GACtBoG,EAAU1F,GACV,SACF,KAAK5C,GAAOoC,MACVoG,EAAgBrI,IAChBoI,EAAYlR,GAAU+K,MACtB,MACF,KAAKpC,GAAOsC,MACVkG,EAAgBrI,IAChBoI,EAAYlR,GAAUiL,MACtB,MACF,KAAKtC,GAAOwC,MACVgG,EAAgBrI,IAChBoI,EAAYlR,GAAUmL,MACtB,MACF,KAAKxC,GAAO0C,MACV8F,EAAgBrI,IAChBoI,EAAYlR,GAAUqL,MACtB,MACF,KAAK1C,GAAOqC,OAEVuG,EADAJ,EAAgBrI,IAEhBoI,EAAYlR,GAAU8K,MACtBmG,EAAU3C,GACV,SACF,KAAK3F,GAAOuC,IACViG,EAAgBrI,IAChBoI,EAAYlR,GAAUkL,IACtB+F,EAAUjE,GACV,SACF,KAAKrE,GAAOyC,IACV+F,EAAgBrI,IAChBoI,EAAYlR,GAAUoL,IACtB6F,EAAU7D,GACV,SACF,KAAKzE,GAAO2C,MACV6F,EAAgBrI,IAChBoI,EAAYlR,GAAUsL,MACtB2F,EAAUjE,GACV,SACF,KAAKrE,GAAOQ,IAEV,MACF,KAAKR,GAAOsE,OACVnE,IACAoI,EAAaA,EACXlR,GAAU0R,QACV1R,GAAUuJ,KACZ,MACF,KAAKZ,GAAO8D,OAEVyE,EAAYlR,GAAUsK,IACtB+G,EAAW5rB,SAASqqB,EAAM7/B,UAAUkhC,EAAerI,GAAW,IAC9D,MACF,KAAKH,GAAOmE,OAEVoE,EAAYlR,GAAU2R,IACtBN,EAAWO,WAAW9B,EAAM7/B,UAAUkhC,EAAerI,IACrD,MACF,KAAKH,GAAO+C,KAEV5C,IACA,SACF,KAAKH,GAAOiE,KACVsE,EAAYlR,GAAU6R,QACtBR,EAAWO,WAAW9B,EAAM7/B,UAAUkhC,EAAerI,IACrDqI,EAAgBrI,IAChBmI,EAAU1F,GACV,SACF,KAAK5C,GAAO+D,OACVwE,EAAYlR,GAAU6R,QACtBR,EAAWO,WAAW9B,EAAM7/B,UAAUkhC,EAAerI,IACrDsI,EAAY,IACZD,EAAgBrI,IAChB,MACF,KAAKH,GAAOgE,OACV7D,IACAmI,EAAUpE,GACV,SACF,KAAKlE,GAAO6C,QAMV,GAHA4F,EAAYtB,EAAM7/B,UAAUkhC,EAAerI,GAIxCoI,IAAclR,GAAU8R,QAAuB,KAAbn8B,GAClCu7B,IAAclR,GAAU8K,OACK,MAA5BsG,EAAUj0B,eACV,sEAAsED,KACpE4yB,EAAM7/B,UAAU64B,EAAW,IAE/B,CACAoI,EAAYlR,GAAU8R,OACtBhJ,IACA,eAGJ,KAAKH,GAAOgD,QACV4F,EAAezI,IACfmI,EAAU3C,GACV,SACF,KAAK3F,GAAO0D,QAIV+E,EAAY1I,GAAYoH,EAAM7/B,UAAUkhC,EAAerI,IACvD,MACF,KAAKH,GAAO8F,OACV2C,EAAYtB,EAAM7/B,UAAUkhC,EAAerI,GAC3CA,IACA,MACF,KAAKH,GAAOmG,QACVsC,EAAY1I,GAAYoH,EAAM7/B,UAAUkhC,EAAerI,IACvDA,IACA,MACF,KAAKH,GAAO+F,QACV6C,EAAezI,EACfA,GAAY,EACZmI,EAAUpC,GACV,SACF,KAAKlG,GAAOiG,QACV2C,EAAezI,EACfA,GAAY,EACZmI,EAAUjC,GACV,SACF,KAAKrG,GAAO0E,QACVvE,IACAoI,EAAYlR,GAAUqN,QACtB,MACF,KAAK1E,GAAO4E,QACVzE,IACAoI,EAAYlR,GAAUuN,QACtB,MACF,KAAK5E,GAAO8C,KAKV,GADA2F,EAAYtB,EAAM7/B,UAAUkhC,EAAerI,GACvCoI,GAAalR,GAAU8K,MAAO,CAEhC,GADAhC,IAC+B,OAA3BsI,EAAUj0B,cAAwB,CACpC8zB,EAAUhC,GACV,SAEFiC,EAAYlR,GAAUyL,WAG1B,KAAK9C,GAAO4D,OAKV,GADA6E,EAAY1I,GAAYoH,EAAM7/B,UAAUkhC,EAAerI,IACnDoI,GAAalR,GAAU8K,MAAO,CAEhC,GADAhC,IAC+B,OAA3BsI,EAAUj0B,cAAwB,CACpC8zB,EAAUhC,GACV,SAEFiC,EAAYlR,GAAUyL,WAG1B,KAAK9C,GAAO8E,QACVwD,EAAUvD,GACV5E,IACA,SACF,KAAKH,GAAOgF,OACVsD,EAAUrD,GACV9E,IACA,SACF,KAAKH,GAAOkF,QACVoD,EAAU5H,GACVP,IACA,SACF,KAAKH,GAAOsD,OACVgF,EAAUnD,GACVhF,IACA,SACF,KAAKH,GAAOuD,MACVgF,EAAYlR,GAAUsK,IACtB2G,EAAUzE,GACV1D,IACA,SACF,KAAKH,GAAOmD,MACVoF,EAAYlR,GAAU2R,IACtBV,EAAUpE,GACV/D,IACA,SACF,KAAKH,GAAOwD,QACV+E,EAAYlR,GAAU8K,MACtBmG,EAAU1F,GACVzC,IACA,SACF,KAAKH,GAAOoD,OACVmF,EAAYlR,GAAU8K,MACtBmG,EAAU3C,GACViD,EAAezI,IACf,SACF,KAAKH,GAAOoF,MACVjF,IACA,MACF,KAAKH,GAAO0F,MACVvF,GAAY,EACZ,MACF,KAAKH,GAAOpT,IACV4b,EAAgBrI,IAChBmI,EAAU7B,GACV,SACF,KAAKzG,GAAOwG,KACVgC,IAAkBrI,EAClBmI,EAAUzB,GACV,SACF,KAAK7G,GAAOuG,KACViC,IAAkBrI,EAClBmI,EAAUvB,GACV,SACF,KAAK/G,GAAO0G,OACV6B,EAAYlR,GAAUzK,IACtB6b,EAAY1I,GAAYoH,EAAM7/B,UAAUkhC,EAAerI,IACvDA,IACA,MACF,KAAKH,GAAOiH,OACV9G,IACA,MACF,KAAKH,GAAOsF,MACVgD,EAAU/C,GACVpF,IACA,SACF,KAAKH,GAAOwF,QACV8C,EAAU7C,GACVtF,IACA,SACF,KAAKH,GAAO2G,MAEV,GAAIxG,EAAWyI,EAAe,GAG1BzB,EACG7/B,UAAUshC,EAAe,EAAGzI,EAAW,GACvCtsB,MAAM,yCACT,CAEAssB,IACA,cAMDH,GAAO8G,QACVyB,EAAYlR,GAAUzK,IACtB6b,EAAY1I,GAAYoH,EAAM7/B,UAAUkhC,EAAerI,IACvDA,IACAmI,EAAUtB,GACV,SACF,KAAKhH,GAAOoG,QAGV,KADAjG,EACeyI,EAAe,GAG1BzB,EACG7/B,UAAUshC,EAAe,EAAGzI,GAC5BtsB,MAAM,mCAGT,SAKJ00B,EAAYlR,GAAUoJ,QACtBgI,EAAY,2BACZH,EAAU5H,GACV,MACF,KAAKV,GAAO2D,QAEV,GAAIxD,EAAWyI,EAAe,GAG1BzB,EACG7/B,UAAUshC,EAAe,EAAGzI,EAAW,GACvCtsB,MAAM,2BACT,CAEAssB,IACA,SAOJsI,EAAY1I,GAAYoH,EAAM7/B,UAAUkhC,EAAerI,IACvD,MACF,KAAKH,GAAO4G,OACVgC,EAAezI,IACf,SACF,KAAKH,GAAO4F,OACVzF,IACAmI,EAAU7E,GACV,SACF,QAEE,GAAI6E,IAAY5H,GAAe,CAC7B6H,EAAYlR,GAAUoJ,QACtBgI,EAAY,yBACZ,MAEFD,EAAgBrI,EAChBoI,EAAYlR,GAAU+I,IAQ1B,GANAqH,EAAM9tB,KAAO4uB,EACbd,EAAMvH,gBAAkByI,EACxBlB,EAAMzf,IAAM0gB,EACZjB,EAAMrqB,KAAOqrB,EACbhB,EAAMtH,SAAWqI,IACjBhB,GACYD,EACV,MAEFe,EAAU5H,GACViI,KACAlB,EAAQH,EAAOE,EAAOH,QAEnBlH,SAAWA,EAChB3wB,KAAKg4B,KAAOA,EAAOH,QCx0DZ+B,GAAkC,KAElCC,GAAqC,cAKhCC,KACd,OAAOF,YAMOG,GAAYx4B,GAC1B,IAAKq4B,GACH,UAAU76B,MAAM,qBAEb66B,GAAmBr4B,OACtBq4B,GAAmBr4B,KAAOA,GAE5B,IAAMy4B,EAAOJ,GACPK,EAAQ,IAAIC,GAASF,EAAMA,EAAK5Y,IAAK7f,GAG3C,OAFAy4B,EAAK5Y,IAAM6Y,EACXA,EAAME,MAAQvF,GAAWwF,OAClBH,WAcOI,GAAa3yB,GAC3B,WAAW4yB,GAAkB5yB,YASf6yB,GACdh5B,EACA6uB,EACAoK,GAEA,IAAMP,EAAQF,GAAYx4B,GAC1B04B,EAAMrC,QAAU4C,EAChB,IACEpK,EAAK6J,SACEzyB,GAEPyyB,EAAMD,KAAKS,MAAMjzB,EAAcyyB,UAE1BA,EAAM/zB,UAcf,SAAY0uB,GACVA,mBACAA,uBACAA,2BACAA,mBAJF,CAAYA,KAAAA,YAMC8F,uDAIXC,YAAA,WACE,WAAWn3B,MAAOo3B,aAMpBC,4HAAA,SAAWr5B,EAAgBs5B,GAIzB,OADuBD,WAAWr5B,EAAIs5B,QAOxCC,4HAAA,SAAa9C,GACX8C,aAAa9C,WAOJ+C,cAUX,WAAmBC,QAAAA,kBATnBC,QAAkB,OAClBxkC,MAAgB,QAChBykC,cAAwB,OACxBz1B,kBACA01B,WAA4B,UAC5BC,aAA8B,UAC9BC,oBACAC,MAAgB,EAEGv7B,WAAAi7B,EACjBj7B,KAAK0F,MAAQ,IAAI6H,EACZssB,KACHA,GAAmB75B,iCAQvBw7B,SAAA,SAAS9kC,GACPsJ,KAAKtJ,MAAQA,KAOfmkC,WAAA,SAAWK,GACTl7B,KAAKk7B,QAAUA,KAMjBO,gBAAA,WAEE,YADiBR,MAAMN,eACT36B,KAAKm7B,iBAGbO,IAAA,sBACN,IAAI17B,KAAKs7B,YAAT,CAGA,IACMK,EADc37B,KAAK0F,MAAMM,OACH41B,cACtBt4B,EAAMtD,KAAKi7B,MAAMN,cACvB,GAAyB,MAArB36B,KAAKq7B,aAAsB,CAC7B,GAAI/3B,EAAMtD,KAAKk7B,QAAUl7B,KAAKo7B,WAC5B,OAEFp7B,KAAKi7B,MAAMF,aAAa/6B,KAAKq7B,kBAE3BH,EAAUS,EAAUr4B,EACpB43B,GAAWl7B,KAAKk7B,UAClBA,EAAUl7B,KAAKk7B,SAEjBl7B,KAAKo7B,WAAa93B,EAAM43B,EACxBl7B,KAAKq7B,aAAer7B,KAAKi7B,MAAMJ,YAAW,WACxCxkB,EAAKglB,aAAe,KACpBhlB,EAAKwlB,gBACJX,OAGLY,SAAA,SAASC,EAAiCC,GACxC,IAAMC,EAAIF,EACJz4B,EAAMtD,KAAKi7B,MAAMN,cACvBsB,EAAEV,MAAQv7B,KAAKu7B,QACfU,EAAEL,cAAgBt4B,GAAO04B,GAAa,GACtCh8B,KAAK0F,MAAMC,IAAIs2B,GACfj8B,KAAK07B,SAGCG,YAAA,WACmB,MAArB77B,KAAKq7B,eACPr7B,KAAKi7B,MAAMF,aAAa/6B,KAAKq7B,cAC7Br7B,KAAKq7B,aAAe,MAEtBr7B,KAAKs7B,eACL,IACE,IAAIh4B,EAAMtD,KAAKi7B,MAAMN,cAErB,IADA36B,KAAKm7B,cAAgB73B,EAAMtD,KAAKtJ,MACzBsJ,KAAK0F,MAAMtP,UAAU,CAC1B,IAAM2lC,EAAe/7B,KAAK0F,MAAMM,OAChC,GAAI+1B,EAAaH,cAAgBt4B,EAC/B,MAOF,GALAtD,KAAK0F,MAAMO,SACN81B,EAAaG,UAChBH,EAAaI,kBAEf74B,EAAMtD,KAAKi7B,MAAMN,gBACN36B,KAAKm7B,cACd,aAGG3zB,GACP9F,EAAepC,MAAMkI,QAElB8zB,eACDt7B,KAAK0F,MAAMtP,UACb4J,KAAK07B,SAITU,IAAA,SAAI3gB,EAAyB4gB,GAC3B,IAAMrC,EAAO,IAAIsC,GAAKt8B,KAAMq8B,GAAY,IACxCrC,EAAK5Y,IAAM,IAAI8Y,GAAWF,EAAM,KAAM,aACtCA,EAAK5Y,IAAI+Y,MAAQvF,GAAWwF,OAC5BJ,EAAK5Y,IAAImb,MAAK,WACZ,IAAMC,EAAO,WACXxC,EAAKyC,WACL,cAAuBzC,EAAK0C,0BAAW,KAA5BC,UACT,IACEA,UACOn1B,GACP9F,EAAepC,MAAMkI,MAI3B,IACEiU,IAAO8gB,MAAK,SAACr2B,GACX8zB,EAAK9zB,OAASA,EACds2B,aAEKh1B,GACPwyB,EAAKS,MAAMjzB,GACXg1B,QAGJ,IAAMI,EAAYhD,GAIlB,OAHAA,GAAqBI,EACrBh6B,KAAK87B,SAAS9B,EAAK5Y,IAAIyb,QAAQ,cAC/BjD,GAAqBgD,EACd5C,QAQE8C,cAMX,WAAmB9C,QAAAA,iBALnB4B,cAAwB,OACxBL,MAAgB,OAChBr1B,OAAY,UACZg2B,YAEmBl8B,UAAAg6B,6BAKnBj0B,QAAA,SAAQg3B,GAGN,OADcA,EACDnB,cAAgB57B,KAAK47B,eADpBmB,EAC2CxB,MAAQv7B,KAAKu7B,SAMxEyB,QAAA,WACE,YAAYhD,QAOd8B,SAAA,SAAS51B,EAAW81B,GAClBh8B,KAAKkG,OAASA,EACdlG,KAAKg6B,KAAKiD,UAAUnB,SAAS97B,KAAMg8B,MAGrCG,eAAA,WACE,IAAMnC,EAAOh6B,KAAKg6B,KAElB,GADAh6B,KAAKg6B,KAAO,KACRA,GAAQA,EAAK+B,cAAgB/7B,KAAM,CACrCg6B,EAAK+B,aAAe,KACpB,IAAMa,EAAYhD,GAIlB,OAHAA,GAAqBI,EACrBA,EAAK5Y,IAAI8b,OAAOl9B,KAAKkG,QACrB0zB,GAAqBgD,iBASzBO,OAAA,WACEn9B,KAAKk8B,kBAOII,cASX,WAAmBW,EAA6B17B,QAA7B07B,sBAA6B17B,iBARhDm7B,UAA4B,QAC5BU,UAA0B,UAC1BX,gBACAv2B,OAAc,UACdm3B,WAA4B,UAC5Bjc,IAAyB,UACzB2a,aAAyC,KAEtB/7B,eAAAi9B,EAA6Bj9B,UAAAuB,6BAKhDwb,QAAA,WACE,YAAYxb,QAMd+7B,UAAA,SAAU91B,GAER,GADAxH,KAAKy6B,MAAMjzB,GAAO,IAAIzI,MAAM,qBACxBiB,OAAS45B,IAAsB55B,KAAK+7B,aAAc,CAEpD/7B,KAAK+7B,aAAaoB,SAClB,IAAMpB,EAAe,IAAIe,GAAa98B,MACtCA,KAAKq9B,WAAa,YAClBr9B,KAAK+7B,aAAeA,EACpB/7B,KAAKi9B,UAAUnB,SAASC,OAO5BwB,aAAA,WACE,YAAYN,aAMdO,UAAA,WACE,YAAYf,WAQdgB,SAAA,SAASd,GACP38B,KAAK08B,UAAUjhC,KAAKkhC,MAMtBl0B,KAAA,sBACQwxB,EAAQF,GAAc,aAC5B,GAAK/5B,KAAKy8B,QAEH,CACL,IAAMV,EAAe9B,EAAM4C,QAAQ78B,MACnCA,KAAKy9B,UAAS,WACZ1B,EAAaD,SAASllB,EAAK1Q,gBAJ7B+zB,EAAMiD,OAAOl9B,KAAKkG,QAOpB,OAAO+zB,EAAM/zB,YAOfw3B,OAAA,WAEE,KAAO19B,KAAKohB,MAAQphB,KAAKohB,IAAIwW,SAC3B53B,KAAKohB,IAAMphB,KAAKohB,IAAItb,OAEtB,GAAI9F,KAAKohB,KAAOphB,KAAKohB,IAAIwW,SAAW53B,KAAKo9B,UAAW,CAElD,IAAM51B,EAAMxH,KAAKo9B,UACjBp9B,KAAKo9B,UAAY,KACjBp9B,KAAKohB,IAAIwW,QAAQ53B,KAAKohB,IAAK5Z,aAElB41B,WACP17B,EAAepC,MACbU,KAAKo9B,UACL,8BACAp9B,KAAKuB,SAMbk5B,MAAA,SAAMjzB,EAAYm2B,GAEhB,GADA39B,KAAK49B,UAAUp2B,GACXm2B,EAAW,CAEb,IADA,IAAIE,EAAI79B,KAAKohB,IACNyc,GAAKA,GAAKF,GACfE,EAAIA,EAAE/3B,OAEJ+3B,GAAKF,IACP39B,KAAKohB,IAAMyc,QAGVT,UAAY51B,EACjBxH,KAAK09B,YAOPE,UAAA,SAAUp2B,GACR,IAAIs2B,EAAMt2B,EAAG9H,WACb,IAAKo+B,EAAK,CACRA,EAAMt2B,EAAG/H,MAAe+H,EAAG/H,6BAAkC,GAC7D,IAAK,IAAIo+B,EAAI79B,KAAKohB,IAAKyc,EAAGA,EAAIA,EAAE/3B,OAC9Bg4B,GAAO,KACPA,GAAOD,EAAE9gB,UACT+gB,GAAO,KAETt2B,EAAG9H,WAAiBo+B,SAQbxD,cACX,WAAmB77B,QAAAA,aAAAuB,WAAAvB,6BAKnB89B,KAAA,SAAKI,GACHA,EAAS38B,KAAKvB,UAMhBs/B,UAAA,SAAcpB,GACZ,OAAOA,EAAS38B,KAAKvB,UAMvBu/B,WAAA,SAAe93B,GACb,WAAWo0B,EAAep0B,MAM5B+3B,WAAA,SAAWhE,GACTA,EAAMiD,OAAOl9B,KAAKvB,UAMpBy/B,UAAA,WACE,YAMFC,IAAA,WACE,YAAY1/B,YAOH2/B,cACX,WAA4BnE,QAAAA,aAAAj6B,WAAAi6B,6BAK5BsC,KAAA,SAAKI,GACH38B,KAAKi6B,MAAMsC,KAAKI,MAMlBoB,UAAA,SAAcpB,GACZ,GAAI38B,KAAKk+B,YAAa,CAEpB,IAAMjE,EAAQ,IAAIC,GAChBl6B,KAAKi6B,MAAMD,KACXh6B,KAAKi6B,MAAMn0B,OACX,yBASF,OAPAm0B,EAAME,MAAQvF,GAAWwF,OACzBp6B,KAAKi6B,MAAMn0B,OAASm0B,EACpBj6B,KAAKi6B,MAAMsC,MAAK,SAAC8B,GACf1B,EAAS0B,GAAM9B,MAAK,SAAC+B,GACnBrE,EAAMiD,OAAOoB,SAGVrE,EAAM/zB,gBAENy2B,EAAS38B,KAAKi6B,MAAMsE,QAO/BP,WAAA,SAAe93B,GACb,YAASg4B,iBACKH,WAAU,sBAAUzD,GAAep0B,UAEpCo0B,GAAep0B,MAO9B+3B,WAAA,SAAWhE,GACLj6B,KAAKk+B,YACPl+B,KAAKu8B,MAAK,SAACgC,GACTtE,EAAMiD,OAAOqB,MAGftE,EAAMiD,OAAOl9B,KAAKi6B,MAAMsE,QAO5BL,UAAA,WACE,YAAYjE,MAAME,OAASvF,GAAWwF,UAMxC+D,IAAA,WACE,GAAIn+B,KAAKk+B,YACP,UAAUn/B,MAAM,qBAElB,YAAYk7B,MAAMsE,UASTrE,cAMX,WAAmBF,EAAmBl0B,EAAyBvE,QAA5Cy4B,iBAAmBl0B,mBAAyBvE,iBAL/Dg9B,IAAS,UACTpE,kBACAwC,SAAuC,UACvC/E,QAAwD,KAErC53B,UAAAg6B,EAAmBh6B,YAAA8F,EAAyB9F,UAAAuB,EAC7DvB,KAAKm6B,MAAQvF,GAAW4J,gCAGlBC,iBAAA,WACN,IAAK7E,GACH,UAAU76B,MAAM,qBAElB,GAAIiB,OAAS45B,GAAmBxY,IAC9B,UAAUriB,MAAM,2BAOpBmH,OAAA,WACE,WAAWk4B,GAAcp+B,SAG3Bk9B,OAAA,SAAOqB,GACLv+B,KAAKy+B,mBACD7E,KAAuBA,GAAmBwD,YAC5Cp9B,KAAKu+B,IAAMA,GAEbv+B,KAAKm6B,MAAQvF,GAAW8J,SACxB,IAAMzE,EAAQj6B,KAAK8F,OAInB,GAHI8zB,KACFA,GAAmBxY,IAAM6Y,GAEvBj6B,KAAK28B,SAAU,CACjB,IACE38B,KAAK28B,SAAS4B,SACP/2B,GACPxH,KAAKg6B,KAAKS,MAAMjzB,EAAcyyB,QAI3BE,MAAQvF,GAAW+J,SAI5B3B,QAAA,WACE,YAAYhD,QAMdjd,QAAA,WACE,YAAYxb,QAGdg8B,aAAA,WACE,YAAYvD,KAAKiD,aAGnBV,KAAA,SAAKI,GAEH,OAAQ38B,KAAKm6B,OACX,KAAKvF,GAAWwF,OACd,GAAIp6B,KAAK28B,SACP,UAAU59B,MAAM,qCAEhBiB,KAAK28B,SAAWA,EAElB,MACF,KAAK/H,GAAW8J,SACd,IAAM1E,EAAOh6B,KAAKg6B,KACZC,EAAQj6B,KAAK8F,OACnB,IACE62B,EAAS38B,KAAKu+B,KACdv+B,KAAKm6B,MAAQvF,GAAW+J,WACjBn3B,GACPxH,KAAKm6B,MAAQvF,GAAW+J,KACxB3E,EAAKS,MAAMjzB,EAAcyyB,SAI7B,KAAKrF,GAAW+J,KACd,UAAU5/B,MAAM,qBAClB,QACE,UAAUA,uCAAuCiB,KAAKm6B,WAQ5DyE,UAAA,WACE,IAAM3E,EAAQF,GAAkB,mBAQhC,OAPkBE,EAAMsD,eACV9B,mBACZ/5B,EAAevB,MAAM,oBACrB85B,EAAM4C,UAAUf,cAEhB7B,EAAMiD,WAEDjD,EAAM/zB,YAQf24B,MAAA,SAAM/D,GACJ,IAAMb,EAAQF,GAAkB,eAEhC,OADAE,EAAM4C,UAAUf,YAAehB,GACxBb,EAAM/zB,YAQf44B,KAAA,SAAKrjB,GACH,IAAMwe,EAAQF,GAAkB,cAoBhC,gBAnBMgF,EAAQC,GACZ,IACE,KAAOA,GAAM,CACX,IAAM94B,EAASuV,IACf,GAAIvV,EAAOg4B,YAET,YADAh4B,EAAOq2B,KAAKwC,GAGZ74B,EAAOq2B,MAAK,SAAC/yB,GACXw1B,EAAOx1B,KAIbywB,EAAMiD,iBACC11B,GACPyyB,EAAMD,KAAKS,MAAMjzB,EAAcyyB,SAI5BA,EAAM/zB,YAOf+4B,cAAA,SAAcxjB,GACZ,IAAMue,EAAOJ,GACb,IAAKI,EACH,UAAUj7B,MAAM,qBAElB,YAAY+/B,MAAK,WACf,IAAI54B,EACJ,EAAG,CACD,IAAM+zB,EAAQ,IAAIiF,GAAclF,EAAcA,EAAK5Y,KACnD4Y,EAAK5Y,IAAM6Y,EACXA,EAAME,MAAQvF,GAAWwF,OACzB3e,EAAKwe,GACL/zB,EAAS+zB,EAAM/zB,gBACPA,EAAOg4B,aAAeh4B,EAAOi4B,OACvC,OAAOj4B,QAIX22B,QAAA,SAAQsC,GAEN,GADAn/B,KAAKy+B,mBACDz+B,KAAKg6B,KAAK+B,aACZ,UAAUh9B,MAAM,4BAElB,IAAMg9B,EAAgC,IAAIe,GAAa98B,KAAKg6B,MAI5D,YAHKA,KAAK+B,aAAeA,EACzBnC,GAAqB,KACrB55B,KAAKg6B,KAAKqD,WAAa8B,GAAkB,KAClCpD,QAIEmD,eACX,WAAYlF,EAAYl0B,sBAChBk0B,EAAMl0B,EAAQ,qBAFxB,2BAKEs5B,aAAA,WACEp/B,KAAKk9B,cAGPmC,UAAA,WACEr/B,KAAKk9B,eAV0BhD,IChzBtBoF,cAOX,WAA4BC,EAA6BlD,QAA7BkD,kBAN5Bh+B,iBACAi+B,gBACAC,SAAc,UACdzF,KAAkB,UAClB0F,WAA2C,GAEf1/B,WAAAu/B,EAC1Bv/B,KAAKuB,KAAO86B,6BAMdr5B,MAAA,sBACOhD,KAAKg6B,OACRh6B,KAAKg6B,KAAOsC,KACTiB,eACAnB,KAAI,WACH,IAAMnC,EAAQqC,GAAc,eAkB5B,OAjBAjmB,EAAKkpB,QAAQhD,MAAK,SAACkD,GACjB,IAAME,EAAatpB,EAAKqpB,WAKxB,GAJArpB,EAAKmpB,WACLnpB,EAAKopB,SAAWA,EAChBppB,EAAK2jB,KAAO,KACZ3jB,EAAKqpB,WAAa,GACdC,EACF,IAAK,IAAIvnC,EAAI,EAAGA,EAAIunC,EAAWvpC,OAAQgC,IACrC,IACEunC,EAAWvnC,GAAGqnC,SACPj4B,GACP9F,EAAepC,MAAMkI,EAAK,UAIhCyyB,EAAMiD,OAAOuC,MAERxF,EAAM/zB,WACZlG,KAAKuB,UAIdq+B,UAAA,SAAUp+B,GACJxB,KAAKw/B,QACPh+B,EAAGxB,KAAKy/B,UAERz/B,KAAK0/B,WAAWjkC,KAAK+F,MAQzB28B,IAAA,WACE,YAASqB,QACAlD,GAAet8B,KAAKy/B,WAE7Bz/B,KAAKgD,aACOg3B,KAAKvxB,WAGnBo3B,WAAA,WACE,YAAYL,cAOHM,GAAkB,SAC7BC,GAEA,GAAuB,GAAnBA,EAAS3pC,OACX,OAAOkmC,OAET,GAAuB,GAAnByD,EAAS3pC,OACX,OAAO2pC,EAAS,GAAG5B,MAAMH,eAE3B,IAAM/D,EAAQqC,GAAuB,kBACjClkC,EAAI,EAcR,OAbA6hC,EACG6E,MAAK,WACJ,KAAO1mC,EAAI2nC,EAAS3pC,QAAQ,CAC1B,IAAM4pC,EAAUD,EAAS3nC,KACzB,IAAK4nC,EAAQH,aACX,OAAOG,EAAQ7B,MAAMH,sBAGlB1B,UAERC,MAAK,WACJtC,EAAMiD,cAEHjD,EAAM/zB,mBAMC+5B,GAAY74B,EAAe84B,GACzC,IAAMF,EAAU,IAAIV,IAAQ,WAC1B,IAAMrF,EAA4BqC,GAAc,eAC1CP,EAAe9B,EAAM4C,QAAQz1B,GAC/Bo1B,KACE5E,EAAU,SAAC1tB,GACXsyB,IAGFA,KAEFT,EAAaD,SAAS5xB,EAAMA,EAAIC,KAAO,aAgBzC,OAdA/C,EAAKkD,iBAAiB,OAAQstB,MAC9BxwB,EAAKkD,iBAAiB,QAASstB,MAC/BxwB,EAAKkD,iBAAiB,QAASstB,MAC3BxwB,EAAKc,cAAgBqF,EAAQ4yB,KAC3BD,GACF94B,EAAKg5B,eAAe7yB,EAAQ8yB,MAAO,aAAcH,GAGnDrF,WAAWjD,EAAS,MACQ,WAAnBxwB,EAAKk5B,UACdzF,WAAWjD,EAAS,KACXsI,IACR94B,EAAa84B,IAAMA,GAEfjG,EAAM/zB,2BACGg6B,GAAO94B,EAAKk5B,YAE9B,OADAN,EAAQh9B,QACDg9B,MCrIGO,GCTCC,ouDAqEAC,s0DA0FAC,sm9BAqnBAC,0fA0BAC,ykFAkIAC,0mNAkcAC,+sCD91CGC,GACd58B,EACA68B,EACAC,EACAC,EACAC,GAEA,IAAMlH,EAA8BqC,GAAc,QAC5C8E,EAAU,IAAIC,eACdtF,EAAe9B,EAAM4C,QAAQuE,GAC7BE,EAAqB,CACzBC,OAAQ,EACRC,WAAY,GACZr9B,IAAAA,EACAs9B,YAAa,KACbC,aAAc,KACdC,YAAa,KACbC,aAAc,MAEhBR,EAAQS,KAAKZ,GAAc,MAAO98B,MAC9B68B,IACFI,EAAQU,aAAed,GAEzBI,EAAQW,mBAAqB,WAC3B,GAA2B,IAAvBX,EAAQY,WAAkB,CAI5B,GAHAV,EAASC,OAASH,EAAQG,OAC1BD,EAASE,WACPJ,EAAQI,YAAiC,KAAlBJ,EAAQG,QAAiB,aAAgB,GAC3C,KAAnBD,EAASC,QAAoC,GAAnBD,EAASC,OACrC,GACIP,GAAYA,IAAaT,GAA2B0B,WACtDb,EAAQO,aACyC,eAAjDP,EAAQO,YAAY/6B,gBAAgB05B,eAKlCU,GAAYA,IAAaT,GAA2B0B,WACtDb,EAAQE,oBAAoBY,aAE5BZ,EAASK,YAAcP,EAAQE,SAC/BA,EAASG,YAAeL,EAAQE,SAAiBG,gBAC5C,CACL,IAAM7zB,EAAOwzB,EAAQE,SAEjBN,GAAYA,IAAaT,GAA2B4B,MACvC,iBAARv0B,EAGGA,EAIR0zB,EAASM,aADQ,iBAARh0B,EACew0B,GAAS,CAACx0B,IAEVA,EAL1BlM,EAAejB,KAAK,wCAAyC0D,GAF7Dm9B,EAASI,aAAe9zB,EAU1B,IAAMy0B,EAAoBjB,EAAQkB,kBAAkB,gBAChDD,IACFf,EAASG,YAAcY,EAAkBj9B,QAAQ,WAAY,YA1B/Dk8B,EAASK,YAAcP,EAAQO,YAC/BL,EAASG,YAAeL,EAAQO,YAAoBF,YA6BxD1F,EAAaD,SAASwF,KAG1B,IACMJ,GACFE,EAAQmB,iBACN,eACApB,GAAmB,6BAErBC,EAAQoB,KAAKtB,KAGX,uEAAuEn8B,KACrEZ,GAKA,2DAA2DY,KAAKZ,GAGhEi9B,EAAQqB,iBAAiB,gCAChB,iBAAiB19B,KAAKZ,GAC/Bi9B,EAAQqB,iBAAiB,4BAChB,0BAA0B19B,KAAKZ,GACxCi9B,EAAQqB,iBAAiB,kCAChB,gBAAgB19B,KAAKZ,GAC9Bi9B,EAAQqB,iBAAiB,6BAGzBrB,EAAQqB,iBAAiB,4BAElB,kBAAkB19B,KAAKZ,GAChCi9B,EAAQqB,iBAAiB,4BAChB,WAAW19B,KAAKZ,IACzBi9B,EAAQqB,iBAAiB,6BAE3BrB,EAAQoB,KAAK,aAERpjC,GACPsC,EAAejB,KAAKrB,oBAAqB+E,GACzC43B,EAAaD,SAASwF,UAEjBrH,EAAM/zB,kBAMCk8B,GACdM,EACA1B,GAEA,IAAM72B,EAAO62B,GAAY,2BACnB2B,EAAaj/B,OAAMk/B,mBAAyBl/B,OAAMm/B,cACxD,GAAIF,EAAY,CAEd,IADA,IAAMG,EAAU,IAAIH,EACXvqC,EAAI,EAAGA,EAAIsqC,EAAMtsC,OAAQgC,IAChC0qC,EAAQv6B,OAAOm6B,EAAMtqC,IAEvB,OAAO0qC,EAAQC,QAAQ54B,cAEd64B,KAAKN,EAAO,CAAEv4B,KAAAA,KAzI3B,SAAYo2B,GACVA,aACAA,4BACAA,cACAA,sBACAA,cACAA,cANF,CAAYA,KAAAA,YEoCA0C,GFwICC,cAIX,WACkBC,EAIAh5B,QAJAg5B,mBAIAh5B,iBARlBi5B,UAAyC,QACzCrD,SAA0D,GAGxC//B,YAAAmjC,EAIAnjC,UAAAmK,6BAMlBk5B,KAAA,SACEl/B,EACAm/B,EACAC,GAEAp/B,EAAMoJ,EAAmBpJ,GACzB,IAAMs7B,EAAWz/B,KAAKojC,UAAUj/B,GAChC,gBAAWs7B,EACFnD,GAAemD,QAEZF,MAAMp7B,EAAKm/B,EAAcC,GAAapF,SAG5CqF,WAAA,SACNr/B,EACAm/B,EACAC,cAEMtJ,EAA8BqC,GAAc,SAG5CmH,EAAWt/B,EAAIu/B,SAAS,gBAC1BD,IACFt/B,EAAMA,EAAIiB,QAAQ,eAAgB,KAEpC,IAAMu+B,EAAkBp2B,EACtB,iBACAA,GAEIq2B,GAAkBH,GAAYt/B,IAAQw/B,EA+B5C,OA9BIC,IAEFz/B,0BAA8B2E,mBAAmB63B,KAGnDI,GAAK58B,EAAKnE,KAAKmK,MAAMoyB,MAAK,SAAC+E,GACzB,GAAIA,EAASC,QAAU,KACjB+B,EACF,UAAUvkC,OACPwkC,yCAAqDp/B,QAC/Cm9B,EAASC,QACZD,EAASE,WAAa,IAAMF,EAASE,WAAa,SAKxDiC,GAEFt/B,GAAO,eACPm9B,EAASn9B,KAAO,gBACPy/B,IAETtC,EAASn9B,IAAMA,EAAMw/B,GAEvBttB,EAAK8sB,OAAO7B,EAAUjrB,GAAMkmB,MAAK,SAACkD,UACzBppB,EAAK0pB,SAAS57B,GACrBkS,EAAK+sB,UAAUj/B,GAAOs7B,EACtBxF,EAAMiD,OAAOuC,SAGVxF,EAAM/zB,YAMfq5B,MAAA,SACEp7B,EACAm/B,EACAC,cAIA,GAFAp/B,EAAMoJ,EAAmBpJ,GACRnE,KAAKojC,UAAUj/B,GAE9B,YAEF,IAAI67B,EAAUhgC,KAAK+/B,SAAS57B,GAS5B,OARK67B,IACHA,EAAU,IAAI6D,IACZ,kBAAMjtB,EAAK4sB,WAAWr/B,EAAKm/B,EAAcC,cAChCp/B,GAEXnE,KAAK+/B,SAAS57B,GAAO67B,EACrBA,EAAQh9B,SAEHg9B,KAGT7B,IAAA,SAAIh6B,GAEF,YAD+Bi/B,UAAU71B,EAAmBpJ,cAI9D,SAAOA,eACOi/B,UAAU71B,EAAmBpJ,mBAM7B2/B,GACdxC,EACAyC,GAEA,IAAMn2B,EAAO0zB,EAASI,aACtB,OAAOpF,GAAe1uB,EAAOL,EAAkBK,GAAQ,eEvPzCo2B,GAAcp2B,GAC5B,IAAI4K,EAAMlL,SAASM,EAAM,IACzB,GAAIsW,MAAM1L,GACR,UAAUzZ,MAAM,eAElB,GAAmB,GAAf6O,EAAKxX,OACP,WAAWkwB,GAAU9N,GAEvB,GAAmB,GAAf5K,EAAKxX,OAQP,WAAWkwB,GAPX9N,EACS,GAANA,GACO,GAANA,IAAa,GACP,IAANA,IAAc,GACR,IAANA,IAAc,GACR,KAANA,IAAe,GACT,KAANA,IAAe,IAGrB,UAAUzZ,MAAM,gBA3BlB,SAAYkkC,GACVA,kBACAA,cACAA,kBAHF,CAAYA,KAAAA,YA6pBAzS,GA/nBCyT,cAGX,WAAmBxwB,QAAAA,kBAFnBywB,cAEmBlkC,WAAAyT,EACjBzT,KAAKkkC,OAASjB,GAAiBkB,kCAGjCC,gBAAA,WACE,eAGFC,SAAA,WACE,YAAY5wB,SAGdnU,MAAA,SAAMu5B,EAAmBZ,OAEzBqM,gBAAA,SAAgBJ,GACdlkC,KAAKkkC,OAASA,KAGhBK,YAAA,SAAYC,EAAmBjjC,OAE/BkjC,cAAA,SAAcljC,OAEdmjC,oBAAA,SAAoBnjC,EAAc4S,OAElCwwB,sBAAA,SAAsBpjC,EAAc4S,OAEpCywB,WAAA,SAAW74B,OAEX84B,kBAAA,SACEL,EACAjjC,EACAujC,EACArmC,OAGFsmC,mBAAA,eAEAC,cAAA,eAEAC,wBAAA,eAEAC,yBAAA,eAEAC,aAAA,eAEAC,kBAAA,eAEAC,kBAAA,eAEAC,kBAAA,SAAkBC,OAElBC,kBAAA,eAEAC,gBAAA,eAEAC,gBAAA,eAEAC,cAAA,eAEAC,uBAAA,SAAuBrkC,OAEvBskC,cAAA,SAAclqB,OAEdmqB,eAAA,SAAenqB,GACb3b,KAAK6lC,cAAclqB,MAGrBoqB,cAAA,SAAcC,OAEdC,sBAAA,eAEAC,oBAAA,SACE3kC,EACA4kC,EACAC,OAGFC,mBAAA,SACE9kC,EACA4kC,EACAC,OAGFE,wBAAA,SACE/kC,EACA4kC,EACAC,OAGFG,cAAA,eAEAC,SAAA,SAASjlC,EAAc9C,EAAgBgoC,OAEvCC,QAAA,eAMAC,sBAAA,SAAsBC,OAEtBC,oBAAA,eAEAC,wBAAA,WACE,OAAQ9mC,KAAKkkC,QACX,KAAKjB,GAAiB8D,WACpB,SACF,KAAK9D,GAAiB+D,KACpB,iBACF,QACE,oBAINC,mBAAA,WACE,OAAQjnC,KAAKkkC,QACX,KAAKjB,GAAiB8D,WACpB,SACF,KAAK9D,GAAiB+D,KACpB,gBACF,QACE,uBAKKE,eAKX,0BACE7wB,cAAM,aALR5W,MAAyB,KACzB0nC,UAAoC,OACpCC,MAAuB,cAHzB,2BASEC,YAAA,SAAYD,GACVpnC,KAAKP,MAAMhE,KAAKuE,KAAKonC,OACrBpnC,KAAKonC,MAAQA,KAGfE,WAAA,WACEtnC,KAAKonC,MAAQpnC,KAAKP,MAAMnC,SAM1B8mC,gBAAA,WACE,YAAS+C,eACKA,UAAUlP,gBAQ1BoM,SAAA,WACE,YAAY+C,MAAM/C,cAOpB/kC,MAAA,SAAMu5B,EAAmBZ,GACvBj4B,KAAKonC,MAAM9nC,MAAMu5B,EAAWZ,MAM9BsP,SAAA,SAAS1O,EAAmBZ,GAC1Bv2B,EAAejB,KAAKo4B,MAMtByL,gBAAA,SAAgBJ,GACdsD,YAAMlD,0BAAgBJ,GAClBlkC,KAAKP,MAAMrJ,OAAS,IAEtB4J,KAAKonC,MAAQpnC,KAAKP,MAAM,GACxBO,KAAKP,MAAQ,IAEfO,KAAKonC,MAAM9C,gBAAgBJ,MAM7BK,YAAA,SAAYC,EAAmBjjC,GAC7BvB,KAAKonC,MAAM7C,YAAYC,EAAIjjC,MAM7BkjC,cAAA,SAAcljC,GACZvB,KAAKonC,MAAM3C,cAAcljC,MAM3BmjC,oBAAA,SAAoBnjC,EAAc4S,GAChCnU,KAAKonC,MAAM1C,oBAAoBnjC,EAAM4S,MAMvCwwB,sBAAA,SAAsBpjC,EAAc4S,GAClCnU,KAAKonC,MAAMzC,sBAAsBpjC,EAAM4S,MAMzCywB,WAAA,SAAW74B,GACT/L,KAAKonC,MAAMxC,WAAW74B,MAMxB84B,kBAAA,SACEL,EACAjjC,EACAujC,EACArmC,GAEAuB,KAAKonC,MAAMvC,kBAAkBL,EAAIjjC,EAAMujC,EAAIrmC,MAM7CsmC,mBAAA,WACE/kC,KAAKonC,MAAMrC,wBAMbC,cAAA,WACEhlC,KAAKonC,MAAMpC,mBAMbC,wBAAA,WACEjlC,KAAKonC,MAAMnC,6BAMbC,yBAAA,WACEllC,KAAKonC,MAAMlC,8BAMbC,aAAA,WACEnlC,KAAKonC,MAAMjC,kBAMbC,kBAAA,WACEplC,KAAKonC,MAAMhC,uBAMbC,kBAAA,WACErlC,KAAKonC,MAAM/B,uBAMbC,kBAAA,SAAkBC,GAChBvlC,KAAKonC,MAAM9B,kBAAkBC,MAM/BC,kBAAA,WACExlC,KAAKonC,MAAM5B,uBAMbC,gBAAA,WACEzlC,KAAKonC,MAAM3B,qBAMbC,gBAAA,WACE1lC,KAAKonC,MAAM1B,qBAMbC,cAAA,WACE3lC,KAAKonC,MAAMzB,mBAMbC,uBAAA,SAAuBrkC,GACrBvB,KAAKonC,MAAMxB,uBAAuBrkC,MAMpCskC,cAAA,SAAclqB,GACZ3b,KAAKonC,MAAMvB,cAAclqB,MAM3BoqB,cAAA,SAAcC,GACZhmC,KAAKonC,MAAMrB,cAAcC,MAM3BC,sBAAA,WACEjmC,KAAKonC,MAAMnB,2BAMbC,oBAAA,SACE3kC,EACA4kC,EACAC,GAEApmC,KAAKonC,MAAMlB,oBAAoB3kC,EAAM4kC,EAAYC,MAMnDC,mBAAA,SACE9kC,EACA4kC,EACAC,GAEApmC,KAAKonC,MAAMf,mBAAmB9kC,EAAM4kC,EAAYC,MAMlDE,wBAAA,SACE/kC,EACA4kC,EACAC,GAEApmC,KAAKonC,MAAMd,wBAAwB/kC,EAAM4kC,EAAYC,MAMvDG,cAAA,WACEvmC,KAAKonC,MAAMb,mBAMbC,SAAA,SAASjlC,EAAc9C,EAAgBgoC,GACrCzmC,KAAKonC,MAAMZ,SAASjlC,EAAM9C,EAAOgoC,MAMnCC,QAAA,WACE1mC,KAAKonC,MAAMV,aAMbC,sBAAA,SAAsBC,GACpB5mC,KAAKonC,MAAMT,sBAAsBC,MAMnCC,oBAAA,WACE7mC,KAAKonC,MAAMP,0BA/R4B5C,IAmS9BwD,eAGX,WACEh0B,EACOi0B,EACSC,gBAEhB/wB,cAAMnD,UAHCi0B,eACSC,kBALlBC,MAAgB,EAIPhxB,QAAA8wB,EACS9wB,WAAA+wB,EAGZD,IACF9wB,EAAKstB,OAASwD,EAAMxD,iBAV1B,2BAiBEE,gBAAA,WACE,YAAYsD,MAAMtD,qBAMpB9kC,MAAA,SAAMu5B,EAAmBZ,GACvBj4B,KAAK0nC,MAAMH,SAAS1O,EAAWZ,MAMjCsO,cAAA,WACEvmC,KAAK4nC,WAMPlB,QAAA,WACsB,KAAd1mC,KAAK4nC,OAAe5nC,KAAK2nC,UAC7B3nC,KAAK0nC,MAAMJ,iBAxC0BrD,IA6C9B4D,eACX,WACEp0B,EACAi0B,EACAC,sBAEMl0B,EAAOi0B,EAAOC,gBANxB,2BASEG,OAAA,SAAOC,GACL/nC,KAAKV,MAAMyoC,EAAS/nC,KAAKokC,sBAG3B4D,cAAA,SAAcD,GACZ/nC,KAAK8nC,OAAOC,GACZ/nC,KAAK0nC,MAAML,YACT,IAAII,GAAsBznC,KAAKyT,MAAOzT,KAAK0nC,cAO/CtC,kBAAA,WACEplC,KAAKgoC,cAAc,gCAMrB3C,kBAAA,WACErlC,KAAKgoC,cAAc,iCAMrB1C,kBAAA,SAAkBC,GAChBvlC,KAAKgoC,cAAc,gCAMrBxC,kBAAA,WACExlC,KAAKgoC,cAAc,gCAMrBvC,gBAAA,WACEzlC,KAAKgoC,cAAc,8BAMrBtC,gBAAA,WACE1lC,KAAKgoC,cAAc,8BAMrBrC,cAAA,WACE3lC,KAAKgoC,cAAc,4BAMrBnC,cAAA,SAAclqB,GACZ3b,KAAKgoC,cAAc,4BAMrBjC,cAAA,SAAcC,GACZhmC,KAAKgoC,cAAc,4BAMrB/B,sBAAA,WACEjmC,KAAKgoC,cAAc,qCAMrB9B,oBAAA,SACE3kC,EACA4kC,EACAC,GAEApmC,KAAKgoC,cAAc,mCAMrB3B,mBAAA,SACE9kC,EACA4kC,EACAC,GAEApmC,KAAKgoC,cAAc,iCAMrB1B,wBAAA,SACE/kC,EACA4kC,EACAC,GAEApmC,KAAKgoC,cAAc,uCAMrBrB,sBAAA,SAAsBC,GACpB5mC,KAAKgoC,cAAc,qCAMrBnB,oBAAA,WACE7mC,KAAKgoC,cAAc,yCAMrBxB,SAAA,SAASjlC,EAAc9C,EAAgBgoC,GACrCzmC,KAAKV,MAAM,4BAA6BU,KAAKokC,uBA7ITqD,IAiJ3BQ,GAAwB,GAExBC,GAAkC,GAElCC,GAA4B,GAE5BC,GAAkC,GAElCC,GAAgC,GAEhCC,GAAiC,GAEjCC,GAA2B,GAE3BC,GAA2B,GAE3BC,GAA0B,GAE1BC,GAAyB,GAEzBC,GAA6B,GAE7BC,GAAiC,GAEjCnzB,GAAqB,IAKlC,SAAY+a,GACVA,yCACAA,qCACAA,uCACAA,mCACAA,qCACAA,iCACAA,2CACAA,uCACAA,yCACAA,sCACAA,wCACAA,4CACAA,sCACAA,oDACAA,8BACAA,4BACAA,0BACAA,0BACAA,kCACAA,0BACAA,0BACAA,8BACAA,8BACAA,4BACAA,8BACAA,0BACAA,4BACAA,sBACAA,wCACAA,gBACAA,gCACAA,4BACAA,oCACAA,4BACAA,gCACAA,kCACAA,gCACAA,8BACAA,gCACAA,gCACAA,sCACAA,kDACAA,gCACAA,gCACAA,0CACAA,oBACAA,4BACAA,0BACAA,oCACAA,gCACAA,8BACAA,wCACAA,sCACAA,4BACAA,wDACAA,gEACAA,gCACAA,qBA1DF,CAAYA,KAAAA,YAyNAqY,GA5JCC,GAAuBC,GAAuBC,KAAO,EACrDC,GAAsBF,GAAuBC,KAAO,EACpDE,GAAuBH,GAAuBC,KAAO,EAGhEf,GAAYc,GAAuBpW,OAASnC,GAAOmC,MACnDsV,GAAYc,GAAuBlX,MAAQrB,GAAO2Y,eAClDlB,GAAYc,GAAuBzX,MAAQd,GAAO2Y,eAClDlB,GAAYc,GAAuBzP,OAAS9I,GAAO2Y,eACnDlB,GAAYc,GAAuBnW,OAASpC,GAAO2Y,eACnDlB,GAAYc,GAAuB3W,OAAS5B,GAAO2Y,eACnDlB,GAAYc,GAAuBrW,IAAMlC,GAAOkC,GAChDuV,GAAYc,GAAuB7V,OAAS1C,GAAO4Y,SACnDnB,GAAYc,GAAuBnY,KAAOJ,GAAO6Y,KACjDnB,GAAsBa,GAAuBpW,OAASnC,GAAO8Y,KAC7DpB,GAAsBa,GAAuBnY,KAAOJ,GAAO6Y,KAC3Df,GAAqBS,GAAuBpW,OAASnC,GAAO+Y,cAC5DjB,GAAqBS,GAAuBlX,MAAQrB,GAAOgZ,aAC3DlB,GAAqBS,GAAuBzX,MAAQd,GAAOiZ,YAC3DnB,GAAqBS,GAAuBzP,OAAS9I,GAAOkZ,eAC5DpB,GAAqBS,GAAuBnW,OAASpC,GAAOmZ,cAC5DrB,GAAqBS,GAAuB3W,OAC1C5B,GAAOoZ,qBAETzB,GAAgBY,GAAuBvW,IAAMhC,GAAOqZ,eACpD1B,GAAgBY,GAAuBjX,MAAQtB,GAAOsZ,iBACtD3B,GAAgBY,GAAuB5V,OACrC3C,GAAOuZ,2BACT5B,GAAgBY,GAAuBpW,OAASnC,GAAOwZ,gBACvD7B,GAAgBY,GAAuBlX,MAAQrB,GAAOyZ,eACtD9B,GAAgBY,GAAuBzX,MAAQd,GAAO0Z,cACtD/B,GAAgBY,GAAuBzP,OAAS9I,GAAO2Z,iBACvDhC,GAAgBY,GAAuBnW,OAASpC,GAAO4Z,gBACvDjC,GAAgBY,GAAuB/V,OAASxC,GAAO6Z,cACvDlC,GAAgBY,GAAuB3W,OAAS5B,GAAO8Z,uBACvDnC,GAAgBY,GAAuB/T,SAAWxE,GAAO+Z,oBACzDpC,GAAgBY,GAAuBhX,OAASvB,GAAOga,cACvDpC,GAAsBW,GAAuBvW,IAAMhC,GAAOqZ,eAC1DzB,GAAsBW,GAAuBjX,MAAQtB,GAAOsZ,iBAC5D1B,GAAsBW,GAAuB5V,OAC3C3C,GAAOuZ,2BACT3B,GAAsBW,GAAuBpW,OAASnC,GAAOwZ,gBAC7D5B,GAAsBW,GAAuBlX,MAAQrB,GAAOyZ,eAC5D7B,GAAsBW,GAAuBzX,MAAQd,GAAO0Z,cAC5D9B,GAAsBW,GAAuBzP,OAAS9I,GAAO2Z,iBAC7D/B,GAAsBW,GAAuBnW,OAASpC,GAAO4Z,gBAC7DhC,GAAsBW,GAAuBnX,OAASpB,GAAO6Y,KAC7DjB,GAAsBW,GAAuB3W,OAC3C5B,GAAO8Z,uBACTjC,GAAoBU,GAAuBpW,OAASnC,GAAO+Y,cAC3DlB,GAAoBU,GAAuBlX,MAAQrB,GAAOgZ,aAC1DnB,GAAoBU,GAAuBzX,MAAQd,GAAOiZ,YAC1DpB,GAAoBU,GAAuBzP,OAAS9I,GAAOkZ,eAC3DrB,GAAoBU,GAAuB3W,OACzC5B,GAAOoZ,qBACTvB,GAAoBU,GAAuB/T,SACzCxE,GAAO+Z,oBACTlC,GAAoBU,GAAuBnW,OAASpC,GAAOmZ,cAC3DtB,GAAoBU,GAAuB/V,OAASxC,GAAO6Z,cAC3D9B,GAAeQ,GAAuBpW,OAASnC,GAAOia,UACtDlC,GAAeQ,GAAuBzX,MAAQd,GAAOka,SACrDnC,GAAeQ,GAAuBvP,KAAOhJ,GAAOma,QACpDpC,GAAeQ,GAAuB5W,KAAO3B,GAAOoa,QACpDrC,GAAeQ,GAAuBrP,SAAWlJ,GAAOqa,YACxDtC,GAAeQ,GAAuB1P,KAAO7I,GAAOsa,QACpDvC,GAAeQ,GAAuB3rB,KAAOoT,GAAOua,QACpDxC,GAAeQ,GAAuBpP,QAAUnJ,GAAOwa,WACvDzC,GAAeQ,GAAuBhX,OAASvB,GAAOya,UACtD1C,GAAeQ,GAAuB7W,OAAS1B,GAAO0a,UACtD3C,GAAeQ,GAAuBzV,MAAQ9C,GAAO2a,SACrD5C,GAAeQ,GAAuBnX,OAASpB,GAAO4a,UACtD7C,GAAeQ,GAAuB1W,SAAW7B,GAAO6a,QACxD9C,GAAeQ,GAAuB7V,OAAS1C,GAAO8a,QACtD/C,GAAeQ,GAAuB3X,MAAQZ,GAAO+a,SACrDhD,GAAeQ,GAAuBjX,MAAQtB,GAAOgb,SACrDjD,GAAeQ,GAAuBnY,KAAOJ,GAAOib,WACpDjD,GAAeO,GAAuBpW,OAASnC,GAAOkb,WACtDlD,GAAeO,GAAuBvP,KAAOhJ,GAAOmb,SACpDnD,GAAeO,GAAuB5W,KAAO3B,GAAOmb,SACpDnD,GAAeO,GAAuBrP,SAAWlJ,GAAOob,aACxDpD,GAAeO,GAAuB1P,KAAO7I,GAAOqb,SACpDrD,GAAeO,GAAuBpX,OAASnB,GAAOsb,WACtDtD,GAAeO,GAAuBzV,MAAQ9C,GAAOub,UACrDvD,GAAeO,GAAuB3X,MAAQZ,GAAOwb,YACrDxD,GAAeO,GAAuB/W,OAASxB,GAAOwb,YACtDxD,GAAeO,GAAuBxX,QAAUf,GAAOyb,WACvDxD,GAAcM,GAAuBpW,OAASnC,GAAO0b,gBACrDzD,GAAcM,GAAuBhX,OAASvB,GAAO2b,WACrD1D,GAAcM,GAAuBvW,IAAMhC,GAAO2b,WAClD1D,GAAcM,GAAuBzW,IAAM9B,GAAO2b,WAClD1D,GAAcM,GAAuBqD,OAAS5b,GAAO2b,WACrD1D,GAAcM,GAAuBsD,OAAS7b,GAAO2b,WACrD1D,GAAcM,GAAuBxW,IAAM/B,GAAO2b,WAClD1D,GAAcM,GAAuBuD,OAAS9b,GAAO2b,WACrD1D,GAAcM,GAAuBxP,SAAW/I,GAAO2b,WACvD1D,GAAcM,GAAuB3T,SAAW5E,GAAO2b,WACvD1D,GAAcM,GAAuB7T,SAAW1E,GAAO2b,WACvD1D,GAAcM,GAAuBjX,MAAQtB,GAAO2b,WACpD1D,GAAcM,GAAuB/W,OAASxB,GAAO2b,WACrD1D,GAAcM,GAAuB7W,OAAS1B,GAAO2b,WACrD1D,GAAcM,GAAuBvX,SAAWhB,GAAO2b,WACvD1D,GAAcM,GAAuBlX,MAAQrB,GAAO2b,WACpD1D,GAAcM,GAAuB3W,OAAS5B,GAAO2b,WACrD1D,GAAcM,GAAuBtW,OAASjC,GAAO2b,WACrD1D,GAAcM,GAAuBnX,OAASpB,GAAO+b,WACrD9D,GAAcM,GAAuB/V,OAASxC,GAAOgc,WACrD/D,GAAcM,GAAuB1W,SAAW7B,GAAOic,aACvD/D,GAAaK,GAAuBnY,KAAOJ,GAAO6Y,KAClDX,GAAaK,GAAuB/V,OAASxC,GAAOkc,WACpDhE,GAAaK,GAAuB7V,OAAS1C,GAAOmc,UACpDjE,GAAaK,GAAuBnW,OAASpC,GAAOkc,WACpDhE,GAAaK,GAAuBjW,OAAStC,GAAOmc,UACpDjE,GAAaK,GAAuBpX,OAASnB,GAAOkc,WACpDhE,GAAaK,GAAuBnX,OAASpB,GAAOmc,UACpDjE,GAAaK,GAAuB1W,SAAW7B,GAAOoc,cACtDjE,GAAiBI,GAAuBnY,KAAOJ,GAAO6Y,KACtDV,GAAiBI,GAAuB/V,OAASxC,GAAOkc,WACxD/D,GAAiBI,GAAuB7V,OAAS1C,GAAOqc,eACxDlE,GAAiBI,GAAuBnW,OAASpC,GAAOkc,WACxD/D,GAAiBI,GAAuBjW,OAAStC,GAAOmc,UACxDhE,GAAiBI,GAAuBpX,OAASnB,GAAOkc,WACxD/D,GAAiBI,GAAuBnX,OAASpB,GAAOmc,UACxDhE,GAAiBI,GAAuB1W,SAAW7B,GAAOoc,cAC1DhE,GAAqBG,GAAuBnY,KAAOJ,GAAO6Y,KAC1DT,GAAqBG,GAAuB/V,OAASxC,GAAOkc,WAC5D9D,GAAqBG,GAAuB7V,OAAS1C,GAAOmc,UAC5D/D,GAAqBG,GAAuBnW,OAASpC,GAAOkc,WAC5D9D,GAAqBG,GAAuBjW,OAAStC,GAAOmc,UAC5D/D,GAAqBG,GAAuBpX,OAASnB,GAAOkc,WAC5D9D,GAAqBG,GAAuBnX,OAASpB,GAAOmc,UAC5Dl3B,GAASszB,GAAuBnX,OAAS,EACzCnc,GAASszB,GAAuBhX,OAAS,EACzCtc,GAASszB,GAAuBtW,OAAS,EACzChd,GAASszB,GAAuB3W,OAAS,EACzC3c,GAASszB,GAAuB3T,SAAW,EAC3C3f,GAASszB,GAAuB7T,SAAW,EAC3Czf,GAASszB,GAAuBzW,IAAM,EACtC7c,GAASszB,GAAuBvW,IAAM,EACtC/c,GAASszB,GAAuBsD,OAAS,EACzC52B,GAASszB,GAAuBqD,OAAS,EACzC32B,GAASszB,GAAuBxW,IAAM,EACtC9c,GAASszB,GAAuBuD,OAAS,EACzC72B,GAASszB,GAAuBxP,SAAW,EAC3C9jB,GAASszB,GAAuBjX,MAAQ,EACxCrc,GAASszB,GAAuB/W,OAAS,EACzCvc,GAASszB,GAAuBlX,MAAQ,EACxCpc,GAASszB,GAAuB7W,OAAS,EACzCzc,GAASszB,GAAuBvX,SAAW,EAC3C/b,GAASszB,GAAuBnY,KAAO,EACvCnb,GAASqzB,IAAgB,EACzBrzB,GAASwzB,IAAe,EAM1B,SAAYJ,GACVA,mBACAA,mBACAA,qBACAA,uBACAA,2BALF,CAAYA,KAAAA,YAQCiE,cAgBX,WACShU,EACAqO,EACSvP,EACTtzB,QAHAw0B,oBACAqO,sBACSvP,oBACTtzB,oBAnBTyoC,SAAkB,QAClBC,qBAAkD,QAClDC,oBAAqC,UACrCC,SAA0B,UAC1BC,sBACAC,wBACAlnC,OAAkB,UAClBmnC,oBACAC,UAA2B,UAC3BC,gBAA4B,UAC5BC,cAA0B,QAC1BC,UAAsB,QACtBC,mBACAC,YAGS3tC,aAAA84B,EACA94B,eAAAmnC,EACSnnC,aAAA43B,EACT53B,aAAAsE,EAEPtE,KAAKotC,YAAcvE,GAAY+E,iCAGjCC,YAAA,SAAYC,EAAa33C,GAGvB,IAFA,IAAMyT,EAAiB,GACjBmjC,EAAW/sC,KAAK+sC,SACf52C,EAAQ42C,EAAS32C,SACtBwT,EAAInO,KAAKsxC,EAAS52C,MACdA,GAAS42C,EAAS32C,SAGtB,GAAI22C,EAAS52C,MAAY23C,EACvB,UAAU/uC,MAAM,oBAGpB,OAAO6K,KAGTmkC,eAAA,SAAeD,EAAa7V,GAC1B,IAEIzyB,EAFEunC,EAAW/sC,KAAK+sC,SAClB52C,EAAQ42C,EAAS32C,OAErB,GACEoP,EAAIunC,IAAW52C,kBACDqP,GAAgC,iBAALA,GAC3C,IAAIwoC,EAAQjB,EAAS32C,QAAUD,EAAQ,GAQvC,GAPI63C,EAAQ,GACVjB,EAAShwC,OACP5G,EAAQ,EACR63C,EACA,IAAI1nB,GAAcymB,EAASr2C,MAAMP,EAAQ,EAAG42C,EAAS32C,UAG9C,KAAP03C,EACF,YAEF33C,IACA,GACEqP,EAAIunC,IAAW52C,kBACDqP,IAAiC,iBAALA,GAAsB,KAALA,IAE7D,GADAwoC,EAAQjB,EAAS32C,QAAUD,EAAQ,GAC1B,KAALqP,EAAU,CACZ,GAAW,KAAPsoC,EAGF,YAFKlW,QAAQt4B,MAAM,yBAA0B24B,GAC7Cj4B,KAAK84B,QAAU6P,QAGjB,IAAMltB,EAAO,IAAI6K,GACfymB,EAAS52C,EAAQ,GACjB6J,KAAK6tC,YAAY,IAAK13C,EAAQ,IAGhC,OADA42C,EAAShwC,OAAO5G,EAAQ,EAAG63C,EAAQ,EAAGvyB,cAG7B,KAAPqyB,GAAc33C,GAAS,GACzB6J,KAAK43B,QAAQt4B,MAAM,2BAA4B24B,GAC/Cj4B,KAAK84B,QAAU6P,SAGbqF,EAAQ,MACC1nB,GAActmB,KAAK6tC,YAAY,IAAK13C,EAAQ,IAElD42C,EAAS,MAGlBkB,UAAA,SAAUpV,EAAmBZ,GAC3Bj4B,KAAK84B,QAAU94B,KAAKktC,SAAWvE,GAAmBD,GAGlDhnC,EAAejB,KAAKo4B,MAGtBqV,gBAAA,SAAgBpJ,EAAY7M,GAK1B,IAJA,IAGIkW,EAHEpB,EAAW/sC,KAAK+sC,SAChBnV,EAAU53B,KAAK43B,QACjBrmB,EAAMw7B,EAASzvC,QAEN,CACX,IAAI8wC,EAAMrB,EAASzvC,MACnB,GAAIwnC,GAAMiE,GAAuBnX,MAAO,CAEtC,IADA,IAAM3yB,EAAoB,CAACsS,GACpB68B,GAAOrF,GAAuBhX,OACnC9yB,EAAKzD,QAAQuxC,EAASzvC,OACtB8wC,EAAMrB,EAASzvC,MAEjB,GAAkB,iBAAP8wC,EAAiB,CAC1B,GAAW,KAAPA,EAAY,CAEd,KAAOnvC,EAAK7I,QAAU,GAAG,CACvB,IAAMi4C,EAAKpvC,EAAKI,QACVivC,EAAKrvC,EAAKI,QACVkvC,EAAK,IAAI9xB,GAAYmb,EAAQyM,WAAYgK,EAAIC,GACnDrvC,EAAKzD,QAAQ+yC,UAEfxB,EAAStxC,KAAK,IAAI6qB,GAASrnB,EAAK,WAEhB,KAAPmvC,EAAY,CAErB,IAAMnsB,EAAQ8qB,EAASzvC,MACjB0kB,EAAQ+qB,EAASzvC,MACvBiU,EAAM,IAAIkL,GACRmb,EAAQyM,WACR5nB,GAAwBuF,EAAOC,GAC/BhjB,GAEF6lC,EAAKiE,GAAuBnY,IAC5B,aAGAwd,GAAOrF,GAAuBpX,MAAO,CACnCpgB,EAAI4E,gBACN5E,EAAM,IAAIkL,GACRmb,EAAQyM,WACR9yB,EACA,OAGJuzB,EAAKiE,GAAuBnY,IAC5B,kBAGgB,iBAAPwd,EAAiB,CAE1BrB,EAAStxC,KAAK2yC,GACd,SAGCA,EAAiB,EAEpB,GAAIA,IAAQrF,GAAuB3X,KACjC7f,EAAM,IAAIkL,GAAUmb,EAAQyM,WAAY9yB,WAC/B68B,IAAQrF,GAAuB/W,MACxCzgB,EAAM,IAAIkL,GAAamb,EAAQyM,WAAY9yB,WAClC68B,IAAQlF,GAKjB,YADK+E,UAAU,qBAAsBhW,MAFrC1mB,EAAM,IAAIkL,GAAemb,EAAQyM,WAAY9yB,OAK1C,CAEL,GAAIkE,GAASqvB,GAAMrvB,GAAS24B,GAAgB,CAC1CrB,EAAStxC,KAAK2yC,GACd,aAEFD,EAAOpB,EAASzvC,MACR8wC,GACN,KAAKrF,GAAuB3T,QAC1B7jB,EAAM,IAAIkL,GAAUmb,EAAQyM,WAAY8J,EAAM58B,GAC9C,MACF,KAAKu3B,GAEHv3B,EAAM,IAAIkL,GAAemb,EAAQyM,WAAY8J,EAAM58B,GACnD,MACF,KAAK03B,GAEH13B,EAAM,IAAIkL,GAAcmb,EAAQyM,WAAY8J,EAAM58B,GAClD,MACF,KAAKw3B,GAAuB7T,QAC1B3jB,EAAM,IAAIkL,GAASmb,EAAQyM,WAAY8J,EAAM58B,GAC7C,MACF,KAAKw3B,GAAuBzW,GAC1B/gB,EAAM,IAAIkL,GAASmb,EAAQyM,WAAY8J,EAAM58B,GAC7C,MACF,KAAKw3B,GAAuBvW,GAC1BjhB,EAAM,IAAIkL,GAASmb,EAAQyM,WAAY8J,EAAM58B,GAC7C,MACF,KAAKw3B,GAAuBsD,MAC1B96B,EAAM,IAAIkL,GAASmb,EAAQyM,WAAY8J,EAAM58B,GAC7C,MACF,KAAKw3B,GAAuBqD,MAC1B76B,EAAM,IAAIkL,GAASmb,EAAQyM,WAAY8J,EAAM58B,GAC7C,MACF,KAAKw3B,GAAuBxW,GAC5B,KAAKwW,GAAuBuD,MAC1B/6B,EAAM,IAAIkL,GAASmb,EAAQyM,WAAY8J,EAAM58B,GAC7C,MACF,KAAKw3B,GAAuBxP,QAC1BhoB,EAAM,IAAIkL,GAASmb,EAAQyM,WAAY8J,EAAM58B,GAC7C,MACF,KAAKw3B,GAAuBjX,KAC1BvgB,EAAM,IAAIkL,GAAUmb,EAAQyM,WAAY8J,EAAM58B,GAC9C,MACF,KAAKw3B,GAAuB/W,MAC1BzgB,EAAM,IAAIkL,GAAemb,EAAQyM,WAAY8J,EAAM58B,GACnD,MACF,KAAKw3B,GAAuBlX,KAC1BtgB,EAAM,IAAIkL,GAAemb,EAAQyM,WAAY8J,EAAM58B,GACnD,MACF,KAAKw3B,GAAuB7W,MAC1B3gB,EAAM,IAAIkL,GAAamb,EAAQyM,WAAY8J,EAAM58B,GACjD,MACF,KAAKw3B,GAAuBvX,QAC1BjgB,EAAM,IAAIkL,GAAamb,EAAQyM,WAAY8J,EAAM58B,GACjD,MACF,KAAKw3B,GAAuB3W,MAC1B,KAAI2a,EAAS32C,OAAS,GA0BpB,YADK63C,UAAU,kBAAmBhW,MAxBlC,OAAQ8U,EAASA,EAAS32C,OAAS,IACjC,KAAK2yC,GAAuBtW,MAC1Bsa,EAASzvC,MACTiU,EAAM,IAAIkL,GACRmb,EAAQyM,WACR0I,EAASzvC,MACT6wC,EACA58B,GAEF,MACF,KAAKw3B,GAAuBpX,MAC1B,IAAIwc,EAAKh4B,cAQP,YADK83B,UAAU,mBAAoBhW,MANnC1mB,EAAM,IAAIkL,GACRmb,EAAQyM,WACR8J,EACA58B,GAYV,MACF,KAAKw3B,GAAuBtW,MAC1B,GAAIqS,GAAMiE,GAAuB3W,MAE/B,YADK6b,UAAU,kBAAmBhW,MAKtC,KAAK8Q,GAAuBpX,MAK1B,OAHAob,EAAStxC,KAAK0yC,GACdpB,EAAStxC,KAAK2yC,GACdrB,EAAStxC,KAAK8V,MAEhB,QAEE,YADK08B,UAAU,qBAAsBhW,eAK7C8U,EAAStxC,KAAK8V,SAIhBi9B,iBAAA,SAAiBvW,GAGf,IAEIwW,EACAltC,EAHE6T,EAAS6iB,EAAM9tB,OAAS4+B,GAAuBzV,KAC/C6T,EAAYnnC,KAAKmnC,UAGvB,GAAI/xB,EAEFq5B,EAAgBxW,EAAMtH,UADtBpvB,EAAO02B,EAAMrqB,MACyBxX,OAAS,UACtC6hC,EAAM9tB,OAAS4+B,GAAuBpX,MAyB/C,YAxBA,IAAM+c,EAASvH,EAAUhP,SAAS,GAC5BwW,EAASxH,EAAUhP,SAAS,GAClC,GACEuW,EAAOvkC,OAAS4+B,GAAuBpW,OACvCgc,EAAOxkC,OAAS4+B,GAAuB3W,MAEvC+U,EAAU/O,UACV+O,EAAU/O,UACV72B,EAAOmtC,EAAO9gC,KACd6gC,EAAgBE,EAAOhe,SAAW,UAElC+d,EAAOvkC,OAAS4+B,GAAuBpX,OACvC+c,EAAOvkC,OAAS4+B,GAAuBzV,MACtCob,EAAOvkC,OAAS4+B,GAAuBpW,OACR,QAA9B+b,EAAO9gC,KAAK5I,gBACX2pC,EAAOxkC,OAAS4+B,GAAuBpX,OACtCgd,EAAOxkC,OAAS4+B,GAAuBzV,MAE3C,YAGAmb,EAAgBxW,EAAMtH,SAAW,OAKrC,IACIie,EADAC,EAAW,EAERA,GAAY,GAGjB,OAFA1H,EAAU/O,WACVwW,EAASzH,EAAUlP,SACJ9tB,MACb,KAAK4+B,GAAuBnX,MAC1Bid,IACA,MACF,KAAK9F,GAAuBpX,MAC5B,KAAKoX,GAAuBzV,KAC1Bub,IACA,MACF,KAAK9F,GAAuB9X,QAC5B,KAAK8X,GAAuBnY,IAE1B,YADKqd,UAAU,uBAAwBW,QAI7CzH,EAAU/O,UACV,IACM35B,EAAQ0oC,EAAUxP,MAAM7/B,UAAU22C,EADpBG,EAAOje,UACyChjB,OAOpE,WANyB8O,GACvBzc,KAAK43B,QAAQyM,WACb9iC,EACA9C,EACA2W,MAKJ05B,iBAAA,WAEE,IADA,IAAMllC,EAAM,KACC,CACX,IAAMquB,EAAQj4B,KAAKmnC,UAAUlP,QAC7B,OAAQA,EAAM9tB,MACZ,KAAK4+B,GAAuBpW,MAC1B/oB,EAAInO,KAAKw8B,EAAMrqB,MACf,MACF,KAAKm7B,GAAuBjX,KAC1BloB,EAAInO,KAAK,KACT,MACF,KAAKstC,GAAuBvP,IAC5B,KAAKuP,GAAuB5W,IAC1BvoB,EAAInO,KAAKw8B,EAAMzf,KACf,MACF,QACE,OAAO5O,EAEX5J,KAAKmnC,UAAU/O,cAQX2W,oBAAA,WACN,IAAIC,KACA/W,EAAQj4B,KAAKmnC,UAAUlP,QAC3B,GAAIA,EAAM9tB,OAAS4+B,GAAuBjX,KAExCkd,KACAhvC,KAAKmnC,UAAU/O,UACfH,EAAQj4B,KAAKmnC,UAAUlP,gBAEvBA,EAAM9tB,OAAS4+B,GAAuBpW,QACtB,SAAfsF,EAAMrqB,MAAkC,QAAfqqB,EAAMrqB,MAIhC,YADKu5B,UAAU/O,UACR,CAAC,EAAkB,QAAfH,EAAMrqB,KAAiB,EAAI,GAExC,OAAQqqB,EAAM9tB,MACZ,KAAK4+B,GAAuBrP,QAC1B,GAAIsV,GAAkB/W,EAAMzf,IAAM,EAEhC,YAIJ,KAAKuwB,GAAuBpW,MAC1B,GAAIqc,GAA2C,MAAzB/W,EAAMrqB,KAAK5S,OAAO,GAEtC,YAEF,GAAmB,MAAfi9B,EAAMrqB,MAA+B,OAAfqqB,EAAMrqB,KAAe,CAE7C,GAAIohC,GAAkB/W,EAAMvH,gBAE1B,YAEF,IAAIxxB,EAAmB,OAAf+4B,EAAMrqB,MAAiB,EAAI,EAC/BqqB,EAAM9tB,OAAS4+B,GAAuBrP,UACxCx6B,EAAI+4B,EAAMzf,KAEZ,IAAI9O,EAAI,EACR1J,KAAKmnC,UAAU/O,UAEf,IAAM6W,GADNhX,EAAQj4B,KAAKmnC,UAAUlP,SACI9tB,OAAS4+B,GAAuB/W,MACrDkd,EACJjX,EAAM9tB,OAAS4+B,GAAuBjX,MAAQmd,EAMhD,GALIC,IAEFlvC,KAAKmnC,UAAU/O,UACfH,EAAQj4B,KAAKmnC,UAAUlP,SAErBA,EAAM9tB,OAAS4+B,GAAuB5W,IAAK,CAG7C,GAAI,GAFJzoB,EAAIuuB,EAAMzf,OAEI,EAAA,GAGZ,GADA9O,EAAI,EACAwlC,EACF,oBAEOxlC,EAAI,GAEb,GAAIwlC,EACF,oBAEOxlC,GAAK,IAETwlC,EACH,YAGJlvC,KAAKmnC,UAAU/O,kBACN8W,EAET,YAEF,MAAO,CAAChwC,EAAG+vC,GAAgBvlC,EAAI,GAAKA,EAAIA,MAChB,OAAfuuB,EAAMrqB,MAAgC,QAAfqqB,EAAMrqB,KAAgB,CAEtD,GAAIohC,GAAkB/W,EAAMvH,gBAE1B,YAEF,IAAIxxB,EAAmB,QAAf+4B,EAAMrqB,MAAkB,EAAI,EAMpC,GALIqqB,EAAM9tB,OAAS4+B,GAAuBrP,UACxCx6B,EAAI+4B,EAAMzf,KAEZxY,KAAKmnC,UAAU/O,WACfH,EAAQj4B,KAAKmnC,UAAUlP,SACb9tB,OAAS4+B,GAAuB5W,IACxC,OAAI8F,EAAMzf,IAAM,GAAK,EAAIyf,EAAMzf,MAAQ,EAAA,QAIrCxY,KAAKmnC,UAAU/O,UACR,CAACl5B,EAAG+4B,EAAMzf,UAGhB,CACL,IAAIpU,EAAI6zB,EAAMrqB,KAAKvJ,MAAM,gBACzB,GAAID,EAEF,OAAI4qC,GAAkB/W,EAAMvH,sBAI5B1wB,KAAKmnC,UAAU/O,UACR,CACLH,EAAM9tB,OAAS4+B,GAAuBrP,QAAUzB,EAAMzf,IAAM,EAC5DlL,SAASlJ,EAAE,GAAI,MAMnB,GAHAA,EAAI6zB,EAAMrqB,KAAKvJ,MAAM,iBAKnB,YADK8iC,UAAU/O,UACR,EAAE,EAAG9qB,SAASlJ,EAAE,GAAI,iBAIjC,KAAK2kC,GAAuB5W,IAC1B,OAAI6c,IAAmB/W,EAAMvH,iBAAmBuH,EAAMzf,IAAM,SAG5DxY,KAAKmnC,UAAU/O,UACR,CAAC,EAAGH,EAAMzf,MAErB,eAGF22B,cAAA,SAAc/I,EAAwBgJ,GACpC,IAAM37B,EAAQzT,KAAK43B,QAAQyM,WAC3B,IAAK5wB,EACH,YAGF,GADA27B,EAAYA,GAAa37B,EAAMrD,MAC3Bg2B,EAEF,IADA,UAAkBA,EAAQiJ,MAAM,uBAE9B,gBACE,IAAK,WACHD,EAAY3yB,GACVhJ,EACA27B,EACA,IAAI3yB,GAAUhJ,EAAO,IAAIgJ,GAAYhJ,EAAO,qBAE9C,MACF,IAAK,aACH27B,EAAY3yB,GACVhJ,EACA27B,EACA,IAAI3yB,GAAYhJ,EAAO,oBAEzB,MACF,IAAK,MACH27B,EAAY3yB,GACVhJ,EACA27B,EACA,IAAI3yB,GAAUhJ,EAAO,IAAIgJ,GAAYhJ,EAAO,qBAE9C,MACF,IAAK,QACH27B,EAAY3yB,GACVhJ,EACA27B,EACA,IAAI3yB,GAAYhJ,EAAO,oBAEzB,MACF,QACE27B,EAAY37B,EAAMpD,OAI1B,OAAI++B,IAAc37B,EAAMrD,eAGbkW,GAAS8oB,MAGtBE,yBAAA,WACE,OAAQtvC,KAAKytC,UAAUztC,KAAKytC,UAAUr3C,OAAS,IAC7C,IAAK,aACL,IAAK,YACL,IAAK,cACL,IAAK,kBACL,IAAK,gBACL,IAAK,uBACH,SAEJ,YAGFm5C,UAAA,SACEvB,EACAwB,EACAC,EACAC,EACAC,GAEA,IAGI1X,EACAyW,EACAlK,EACA52B,EACA4K,EACAjH,EACA4C,EATEyjB,EAAU53B,KAAK43B,QACfuP,EAAYnnC,KAAKmnC,UACjB4F,EAAW/sC,KAAK+sC,SAQlB2C,IACF1vC,KAAKotC,YAAcvE,GAAY+E,MAC/B5tC,KAAK+sC,SAAStxC,KAAK,MAErBm0C,EAAY,KAAO5B,EAAQ,IAAKA,EAE9B,OADA/V,EAAQkP,EAAUlP,QACVj4B,KAAK84B,QAAQb,EAAM9tB,OACzB,KAAKqmB,GAAOmC,MAEV,GAAIwU,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuB3W,MAAO,CAE1DpyB,KAAKsvC,4BACP1X,EAAQt4B,MAAM,uBAAwB6nC,EAAUhP,SAAS,IACzDn4B,KAAK84B,QAAU6P,KAEf3oC,KAAK84B,QAAUwP,GACf1Q,EAAQwN,qBAEV,UAEFsJ,EAASvH,EAAUhP,SAAS,IAEnBzH,iBACNge,EAAOvkC,MAAQ4+B,GAAuBpW,OACrC+b,EAAOvkC,MAAQ4+B,GAAuBzV,MAKxC6T,EAAU9O,OAEZr4B,KAAKktC,SAAWjV,EAAMrqB,KACtB5N,KAAKmtC,iBACLhG,EAAU/O,UACV+O,EAAU/O,UACVp4B,KAAK84B,QAAUyP,GACfwE,EAAShwC,OAAO,EAAGgwC,EAAS32C,QAC5B,SACF,KAAKo6B,GAAO8Y,KAEV,GAAInC,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuB3W,MAAO,CAE9DpyB,KAAK84B,QAAU6P,GACf/Q,EAAQt4B,MAAM,uBAAwB6nC,EAAUhP,SAAS,IACzD,cAEG+U,SAAWjV,EAAMrqB,KACtB5N,KAAKmtC,iBACLhG,EAAU/O,UACV+O,EAAU/O,UACVp4B,KAAK84B,QAAUyP,GACfwE,EAAShwC,OAAO,EAAGgwC,EAAS32C,QAC5B,SACF,KAAKo6B,GAAO2Y,eAEVnpC,KAAK84B,QAAUwP,GACf1Q,EAAQwN,oBACR,SACF,KAAK5U,GAAOwZ,gBACV,IAAK/R,EAAMvH,gBAAiB,CAC1B1wB,KAAK84B,QAAU8P,GACfhR,EAAQt4B,MAAM,uBAAwB24B,GACtC,SAEFL,EAAQmN,qBAGV,KAAKvU,GAAO+Y,cACV,GAAIpC,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuB9V,IAIvD,GAHAkU,EAAU/O,UACV+O,EAAU/O,UAEA,OADVoM,EAAKxkC,KAAKgtC,qBAAqB/U,EAAMrqB,OAGnC,QADAqqB,EAAQkP,EAAUlP,SACJ9tB,MACZ,KAAK4+B,GAAuBpW,MAC1BiF,EAAQ2M,YAAYC,EAAIvM,EAAMrqB,MAE5B5N,KAAK84B,QADH6W,EACavH,GAEAD,GAEjBhB,EAAU/O,UACV,MACF,KAAK2Q,GAAuBlX,KAC1B+F,EAAQ2M,YAAYC,EAAI,MAEtBxkC,KAAK84B,QADH6W,EACavH,GAEAD,GAEjBhB,EAAU/O,UACV,MACF,QACEp4B,KAAK84B,QAAU4P,GACf9Q,EAAQt4B,MAAM,kBAAmB24B,aAGhCa,QAAU4P,GACf9Q,EAAQt4B,MAAM,0BAA2B24B,QAG3CL,EAAQ2M,YAAYvkC,KAAKitC,oBAAqBhV,EAAMrqB,MAElD5N,KAAK84B,QADH6W,EACavH,GAEAD,GAEjBhB,EAAU/O,UAEZ,SACF,KAAK5H,GAAOyZ,eACV,IAAKhS,EAAMvH,gBAAiB,CAC1B1wB,KAAK84B,QAAU8P,GACfhR,EAAQt4B,MAAM,uBAAwB24B,GACtC,SAEFL,EAAQmN,qBAGV,KAAKvU,GAAOgZ,aACV,GAAIrC,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuB9V,IAIvD,OAHAkU,EAAU/O,UACV+O,EAAU/O,WACVH,EAAQkP,EAAUlP,SACJ9tB,MACZ,KAAK4+B,GAAuBpW,MAC1BiF,EAAQ2M,YAAY,KAAMtM,EAAMrqB,MAE9B5N,KAAK84B,QADH6W,EACavH,GAEAD,GAEjBhB,EAAU/O,UACV,MACF,KAAK2Q,GAAuBlX,KAC1B+F,EAAQ2M,YAAY,KAAM,MAExBvkC,KAAK84B,QADH6W,EACavH,GAEAD,GAEjBhB,EAAU/O,UACV,MACF,QACEp4B,KAAK84B,QAAU4P,GACf9Q,EAAQt4B,MAAM,kBAAmB24B,QAGrCL,EAAQ2M,YAAYvkC,KAAKitC,oBAAqB,MAE5CjtC,KAAK84B,QADH6W,EACavH,GAEAD,GAEjBhB,EAAU/O,UAEZ,SACF,KAAK5H,GAAO0Z,cACNjS,EAAMvH,iBACRkH,EAAQmN,qBAIZ,KAAKvU,GAAOiZ,YACV7R,EAAQgN,WAAW3M,EAAMrqB,MAEvB5N,KAAK84B,QADH6W,EACavH,GAEAD,GAEjBhB,EAAU/O,UACV,SACF,KAAK5H,GAAO2Z,iBACNlS,EAAMvH,iBACRkH,EAAQmN,qBAIZ,KAAKvU,GAAOkZ,eACV9R,EAAQ6M,cAAcxM,EAAMrqB,MAE1B5N,KAAK84B,QADH6W,EACavH,GAEAD,GAEjBhB,EAAU/O,UACV,SACF,KAAK5H,GAAO8Z,uBACNrS,EAAMvH,iBACRkH,EAAQmN,qBAIZ,KAAKvU,GAAOoZ,qBACVzC,EAAU/O,UAEVyX,EAAiB,QADjB5X,EAAQkP,EAAUlP,SACa9tB,MAC7B,KAAK4+B,GAAuBpW,MAC1BiF,EAAQ8M,oBAAoBzM,EAAMrqB,KAAM,MACxCu5B,EAAU/O,UAERp4B,KAAK84B,QADH6W,EACavH,GAEAD,GAEjB,SACF,KAAKY,GAAuBzV,KAG1B,OAFA1lB,EAAOqqB,EAAMrqB,KACbu5B,EAAU/O,UACFxqB,GACN,IAAK,MACH5N,KAAK84B,QAAUwP,GACf1Q,EAAQ+O,sBAAsB,OAU5B3mC,KAAK84B,QARL94B,KAAKuvC,UACHrtB,OAAO4tB,+BAOM3H,GAEAS,GAEjB,MAAMgH,EACR,IAAK,OACL,IAAK,iBAEH,IADA3X,EAAQkP,EAAUlP,SACR9tB,OAAS4+B,GAAuBpW,MAAO,CAC/Cxe,EAAS,CAAC8jB,EAAMrqB,MAChBu5B,EAAU/O,UACV,YAEMyX,EAEV,IAAK,YACL,IAAK,cACL,IAAK,iBACL,IAAK,mBACL,IAAK,MAEH,GADA17B,EAASnU,KAAK+uC,sBAIZ,MAFA,MAAMc,EAIV,QAEE17B,EAASnU,KAAK8uC,mBAGlB,IADA7W,EAAQkP,EAAUlP,SACR9tB,MAAQ4+B,GAAuBnX,MAAO,CAC9CgG,EAAQ8M,oBAAoB92B,EAAgBuG,GAC5CgzB,EAAU/O,UAERp4B,KAAK84B,QADH6W,EACavH,GAEAD,GAEjB,UAINvQ,EAAQt4B,MAAM,2BAA4B24B,GAC1Cj4B,KAAK84B,QAAU4P,GACf,SACF,KAAKlY,GAAO+Z,oBAGV,OAFApD,EAAU/O,WACVH,EAAQkP,EAAUlP,SACJ9tB,MACZ,KAAK4+B,GAAuBpW,MAC1BiF,EAAQ+M,sBAAsB1M,EAAMrqB,KAAM,MAExC5N,KAAK84B,QADH6W,EACavH,GAEAD,GAEjBhB,EAAU/O,UACV,SACF,KAAK2Q,GAAuBzV,KAG1B,GAFA1lB,EAAOqqB,EAAMrqB,KACbu5B,EAAU/O,UACE,gBAARxqB,GAEF,GAAe,QADfuG,EAASnU,KAAK+uC,uBAEZ,WAGF56B,EAASnU,KAAK8uC,mBAGhB,IADA7W,EAAQkP,EAAUlP,SACR9tB,MAAQ4+B,GAAuBnX,MAAO,CAC9CgG,EAAQ+M,sBAAsB/2B,EAAgBuG,GAE5CnU,KAAK84B,QADH6W,EACavH,GAEAD,GAEjBhB,EAAU/O,UACV,UAINR,EAAQt4B,MAAM,0BAA2B24B,GACzCj4B,KAAK84B,QAAU4P,GACf,SACF,KAAKlY,GAAO4Z,gBACNnS,EAAMvH,iBACRkH,EAAQmN,qBAIZ,KAAKvU,GAAOmZ,cAGV,GAFAxC,EAAU/O,WACVH,EAAQkP,EAAUlP,SACR9tB,MAAQ4+B,GAAuBpW,MACvC/kB,EAAOqqB,EAAMrqB,KACbu5B,EAAU/O,kBACDH,EAAM9tB,MAAQ4+B,GAAuBlX,KAC9CjkB,EAAO,KACPu5B,EAAU/O,kBACDH,EAAM9tB,MAAQ4+B,GAAuB9V,IAEzC,CACLjzB,KAAK84B,QAAU8P,GACfhR,EAAQt4B,MAAM,aAAc24B,GAC5BkP,EAAU/O,UACV,SALAxqB,EAAO,OAOTqqB,EAAQkP,EAAUlP,SACR9tB,MAAQ4+B,GAAuB9V,IAAK,CAE5C,GAAU,OADVuR,EAAK52B,EAAO5N,KAAKgtC,qBAAqBp/B,GAAQA,GAC9B,CACd5N,KAAK84B,QAAU8P,GACfhR,EAAQt4B,MAAM,0BAA2B24B,GACzCkP,EAAU/O,UACV,YAEF+O,EAAU/O,WACVH,EAAQkP,EAAUlP,SACR9tB,MAAQ4+B,GAAuBpW,MAAO,CAC9C3yB,KAAK84B,QAAU8P,GACfhR,EAAQt4B,MAAM,2BAA4B24B,GAC1C,SAEFrqB,EAAOqqB,EAAMrqB,KACbu5B,EAAU/O,UACVH,EAAQkP,EAAUlP,aAElBuM,EAAK,GAEP,OAAQvM,EAAM9tB,MACZ,KAAK4+B,GAAuBxW,GAC5B,KAAKwW,GAAuBgH,SAC5B,KAAKhH,GAAuBiH,OAC5B,KAAKjH,GAAuBkH,OAC5B,KAAKlH,GAAuBmH,UAC5B,KAAKnH,GAAuBoH,QAC5B,KAAKpH,GAAuB/T,QAC1Bxc,EAAMyf,EAAM9tB,KACZg9B,EAAU/O,UACVH,EAAQkP,EAAUlP,QAClB,MACF,KAAK8Q,GAAuBjW,MAC1B8E,EAAQiN,kBACNL,EACA52B,EACAm7B,GAAuBnY,IACvB,MAGA5wB,KAAK84B,QADH6W,EACavH,GAEAD,GAEjBhB,EAAU/O,UACV,SACF,QACEp4B,KAAK84B,QAAU8P,GACfhR,EAAQt4B,MAAM,yBAA0B24B,GACxC,SAEJ,OAAQA,EAAM9tB,MACZ,KAAK4+B,GAAuBpW,MAC5B,KAAKoW,GAAuB1P,IAC1BzB,EAAQiN,kBACNL,EACA52B,EACA4K,EACAyf,EAAMrqB,MAERu5B,EAAU/O,UACVH,EAAQkP,EAAUlP,QAClB,MACF,QACEj4B,KAAK84B,QAAU8P,GACfhR,EAAQt4B,MAAM,0BAA2B24B,GACzC,SAEJ,GAAIA,EAAM9tB,MAAQ4+B,GAAuBjW,MAAO,CAC9C9yB,KAAK84B,QAAU8P,GACfhR,EAAQt4B,MAAM,aAAc24B,GAC5B,cAGKa,QADH6W,EACavH,GAEAD,GAEjBhB,EAAU/O,UACV,SACF,KAAK5H,GAAOqZ,eACVjS,EAAQoN,gBACRhlC,KAAK84B,QAAUuP,GACflB,EAAU/O,UACV,SACF,KAAK5H,GAAOsZ,iBACVlS,EAAQqN,0BACRjlC,KAAK84B,QAAUuP,GACflB,EAAU/O,UACV,SACF,KAAK5H,GAAOuZ,2BACVnS,EAAQsN,2BACRllC,KAAK84B,QAAUuP,GACflB,EAAU/O,UACV,SACF,KAAK5H,GAAO6Z,cACNrqC,KAAK0tC,YACP1tC,KAAKytC,UAAUhyC,KAAK,iBACpBuE,KAAK0tC,eACI1tC,KAAK2tC,UACd3tC,KAAKytC,UAAUhyC,KAAK,QACpBuE,KAAK2tC,aAEL3tC,KAAKytC,UAAUhyC,KAAK,cAEtBm8B,EAAQ2O,gBACRvmC,KAAK84B,QAAUmP,GACfd,EAAU/O,UACV,SACF,KAAK5H,GAAOga,cACV5S,EAAQuN,eACRnlC,KAAK84B,QAAUwP,GACfnB,EAAU/O,UACV,SACF,KAAK5H,GAAOia,UACVsC,EAAStxC,KAAK6qB,GAAY2R,EAAMrqB,OAChCu5B,EAAU/O,UACV,SACF,KAAK5H,GAAOka,SACVlyB,EAAMlL,SAAS2qB,EAAMrqB,KAAM,IAC3B,IACEm/B,EAAStxC,KAAKuoC,GAAc/L,EAAMrqB,aAC3BpG,GACP,GAAIxH,KAAK84B,UAAYyP,IAAkBpB,EAAU5O,UAAW,CAC1D4O,EAAU9f,QACVrnB,KAAK84B,QAAUwP,GACf1Q,EAAQwN,oBACR,SAEFxN,EAAQt4B,MAAM,cAAe24B,GAC7Bj4B,KAAK84B,QAAU4P,GAEjBvB,EAAU/O,UACV,SACF,KAAK5H,GAAOma,QACVoC,EAAStxC,KAAK,IAAI6qB,GAAQ2R,EAAMzf,MAChC2uB,EAAU/O,UACV,SACF,KAAK5H,GAAOoa,QACVmC,EAAStxC,KAAK,IAAI6qB,GAAQ2R,EAAMzf,MAChC2uB,EAAU/O,UACV,SACF,KAAK5H,GAAOqa,YACNpuB,GAAmCwb,EAAMrqB,MAE3Cm/B,EAAStxC,KACP,IAAI6qB,GACF,IAAI7J,GAAcmb,EAAQyM,WAAYpM,EAAMzf,IAAKyf,EAAMrqB,QAI3Dm/B,EAAStxC,KAAK,IAAI6qB,GAAY2R,EAAMzf,IAAKyf,EAAMrqB,OAEjDu5B,EAAU/O,UACV,SACF,KAAK5H,GAAOsa,QACViC,EAAStxC,KAAK,IAAI6qB,GAAQ2R,EAAMrqB,OAChCu5B,EAAU/O,UACV,SACF,KAAK5H,GAAOua,QACVgC,EAAStxC,KAAK,IAAI6qB,GAAQ/Y,EAAgB0qB,EAAMrqB,KAAM5N,KAAKsE,WAC3D6iC,EAAU/O,UACV,SACF,KAAK5H,GAAOwa,WACV+B,EAAStxC,KAAK,IAAI6qB,GAAW2R,EAAMrqB,OACnCu5B,EAAU/O,UACV,SACF,KAAK5H,GAAOya,UACVjrC,KAAK+tC,eAAe,IAAK9V,GACzB8U,EAAStxC,KAAK,KACd0rC,EAAU/O,UACV,SACF,KAAK5H,GAAO0a,UACV6B,EAAStxC,KAAK6qB,IACd6gB,EAAU/O,UACV,SACF,KAAK5H,GAAO2a,SAEE,gBADZv9B,EAAOqqB,EAAMrqB,KAAK5I,gBACmB,QAAR4I,GAA0B,OAARA,GAE7C5N,KAAK84B,QAAU0P,GACfxoC,KAAKotC,YAAcvE,GAAYS,KAC/ByD,EAAStxC,KAAK,OAEdsxC,EAAStxC,KAAKmS,GACdm/B,EAAStxC,KAAK,MAEhB0rC,EAAU/O,UACV,SACF,KAAK5H,GAAO4a,UACVprC,KAAK+tC,eAAe,IAAK9V,GACzBkP,EAAU/O,UACV,SACF,KAAK5H,GAAO+a,SAIV,GAHApE,EAAU/O,UACVH,EAAQkP,EAAUlP,QAClByW,EAASvH,EAAUhP,SAAS,GAE1BF,EAAM9tB,MAAQ4+B,GAAuBpW,OACT,aAA5BsF,EAAMrqB,KAAK5I,gBACV0pC,EAAOvkC,MAAQ4+B,GAAuB1W,SACrCqc,EAAOvkC,MAAQ4+B,GAAuBnY,KACtC8d,EAAOvkC,MAAQ4+B,GAAuB7V,OACxC,CACAiU,EAAU/O,UACVp4B,KAAKmtC,iBACL,cAEGc,UAAU,eAAgBhW,GAC/B,SACF,KAAKzH,GAAOgb,SAEV,QADAkD,EAASvH,EAAUhP,SAAS,IACbhuB,MACb,KAAK4+B,GAAuBvP,IAC5B,KAAKuP,GAAuBrP,QAC5B,KAAKqP,GAAuB5W,IAC1B,IAAKuc,EAAOhe,gBAAiB,CAE3ByW,EAAU/O,UACV,UAGN,GAAIp4B,KAAK84B,UAAYyP,IAAkBpB,EAAU5O,UAAW,CAC1D4O,EAAU9f,QACVrnB,KAAK84B,QAAUwP,GACf1Q,EAAQwN,oBACR,cAEK6I,UAAU,wBAAyBhW,GACxC,SAEJ,KAAKzH,GAAO6a,QACVlE,EAAU/O,UAGZ,KAAK5H,GAAO8a,QACVnE,EAAU7O,UACV/mB,EAAMvR,KAAK+tC,eAAe,IAAK9V,KACpBj4B,KAAKktC,UACdtV,EAAQ4O,SAASxmC,KAAKktC,SAAoB37B,EAAKvR,KAAKmtC,eAEtDntC,KAAK84B,QAAU2W,EAAmBvH,GAAwBD,GAC1D,SACF,KAAKzX,GAAOib,WAIV,GAHAtE,EAAU/O,UACV+O,EAAU7O,SACV/mB,EAAMvR,KAAK+tC,eAAe,IAAK9V,GAC3BuX,EAEF,YADKtpC,OAASqL,KAMhB,GAHIvR,KAAKktC,UAAY37B,GACnBqmB,EAAQ4O,SAASxmC,KAAKktC,SAAoB37B,EAAKvR,KAAKmtC,eAElDsC,EACF,SAEFzvC,KAAKiuC,UAAU,eAAgBhW,GAC/B,SACF,KAAKzH,GAAOkb,WAEV,IADAgD,EAASvH,EAAUhP,SAAS,IACjBhuB,MAAQ4+B,GAAuBzP,MAEtC6N,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuBpX,OACpDwV,EAAUhP,SAAS,GAAGzH,iBAKvBqc,EAAStxC,KACP,IAAIghB,GACFmb,EAAQyM,WACR5nB,GAAwBwb,EAAMrqB,KAAM8gC,EAAO9gC,QAG/C5N,KAAK84B,QAAU2P,KATfsE,EAAStxC,KAAKw8B,EAAMrqB,KAAM8gC,EAAO9gC,KAAM,KACvCu5B,EAAU/O,WAUZ+O,EAAU/O,cACL,CACL,GACEp4B,KAAKotC,aAAevE,GAAY+E,OAChC5tC,KAAKotC,aAAevE,GAAYuH,OAEA,OAA5BnY,EAAMrqB,KAAK5I,eACbmiC,EAAU/O,UACV2U,EAAStxC,KACP,IAAIghB,GAAgBmb,EAAQyM,cAAkBqK,EAAO9gC,SAGvB,QAA5BqqB,EAAMrqB,KAAK5I,gBACbmiC,EAAU/O,UACVH,EAAQyW,GAEV3B,EAAStxC,KACP,IAAIghB,GAAgBmb,EAAQyM,cAAmBpM,EAAMrqB,gBAIzD5N,KAAKotC,cAAgBvE,GAAYwH,UACJ,QAA7BpY,EAAMrqB,KAAK5I,eACX+nC,EAASA,EAAS32C,OAAS,KAAO0yC,IAClCiE,EAASA,EAAS32C,OAAS,KAAO6yC,KACjCyF,EAAOvkC,OAAS4+B,GAAuBpX,OACtC+c,EAAOvkC,OAAS4+B,GAAuBzV,MACzC,CAEAyZ,EAAStxC,MAAMytC,IACf/B,EAAU/O,UACV,SAEA2U,EAAStxC,KAAK,IAAIghB,GAAYmb,EAAQyM,WAAYpM,EAAMrqB,YAErDkrB,QAAU2P,GAEjBtB,EAAU/O,UACV,SACF,KAAK5H,GAAOub,UACV,GAAI/rC,KAAKotC,cAAgBvE,GAAYwH,SAAU,CAE7CtD,EAAStxC,KAAKuE,KAAKwuC,iBAAiBvW,IACpCj4B,KAAK84B,QAAU2P,GACf,SAEFsE,EAAStxC,KAAK,KAAMw8B,EAAMrqB,KAAM,KAChCu5B,EAAU/O,UACV,SACF,KAAK5H,GAAOmb,SACVoB,EAAStxC,KAAK,IAAIghB,GAAYmb,EAAQyM,WAAYpM,EAAMzf,MACxD2uB,EAAU/O,UACVp4B,KAAK84B,QAAU2P,GACf,SACF,KAAKjY,GAAOob,aAEE,MADZh+B,EAAOqqB,EAAMrqB,QAGTA,EADE5N,KAAKktC,UAAYltC,KAAKktC,SAAS7oC,MAAM,yBAChC,KAEA,MAGX0oC,EAAStxC,KAAK,IAAIghB,GAAcmb,EAAQyM,WAAYpM,EAAMzf,IAAK5K,IAC/Du5B,EAAU/O,UACVp4B,KAAK84B,QAAU2P,GACf,SACF,KAAKjY,GAAOqb,SACVkB,EAAStxC,KAAK,IAAIghB,GAAYmb,EAAQyM,WAAYpM,EAAMrqB,OACxDu5B,EAAU/O,UACVp4B,KAAK84B,QAAU2P,GACf,SACF,KAAKjY,GAAOyb,WACV9E,EAAU/O,WACVH,EAAQkP,EAAUlP,SAEV9tB,MAAQ4+B,GAAuB5W,KACrC8F,EAAMvH,gBAEN1wB,KAAKiuC,UAAU,eAAgBhW,IAE/B8U,EAAStxC,KAAK,IAAIghB,GAAYmb,EAAQyM,WAAYpM,EAAMzf,MACxD2uB,EAAU/O,UACVp4B,KAAK84B,QAAU2P,IAEjB,SACF,KAAKjY,GAAOwb,YACVe,EAAStxC,MAAMw8B,EAAM9tB,MACrBg9B,EAAU/O,UACV,SACF,KAAK5H,GAAO2b,WACVnsC,KAAK84B,QAAU0P,GACfxoC,KAAKkuC,gBAAgBjW,EAAM9tB,KAAM8tB,GACjC8U,EAAStxC,KAAKw8B,EAAM9tB,MACpBg9B,EAAU/O,UACV,SACF,KAAK5H,GAAO0b,gBAGqB,QAA7BjU,EAAMrqB,KAAK5I,eACX+nC,EAASA,EAAS32C,OAAS,KAAO6yC,IAClC8D,EAASA,EAAS32C,OAAS,MAAQ8yC,IAEnClpC,KAAK84B,QAAU0P,GACfxoC,KAAKkuC,gBAAgBpF,GAAc7Q,GACnC8U,EAAStxC,KAAKqtC,IACd3B,EAAU/O,WAEmB,OAA7BH,EAAMrqB,KAAK5I,eACX+nC,EAASA,EAAS32C,OAAS,KAAO0yC,IAClCiE,EAASA,EAAS32C,OAAS,MAAQ8yC,IAEnClpC,KAAK84B,QAAU0P,GACfxoC,KAAKkuC,gBAAgBjF,GAAahR,GAClC8U,EAAStxC,KAAKwtC,IACd9B,EAAU/O,WAEVp4B,KAAKiuC,UAAU,eAAgBhW,GAEjC,SACF,KAAKzH,GAAO+b,WACNvsC,KAAKkuC,gBAAgBjW,EAAM9tB,KAAM8tB,KACnCj4B,KAAK84B,QAAUyP,IAEjBpB,EAAU/O,UACV,SACF,KAAK5H,GAAOgc,WACNxsC,KAAKkuC,gBAAgBnF,GAAuBnX,MAAOqG,KACjDj4B,KAAKktC,UAAYltC,KAAKotC,aAAevE,GAAYuH,OACnDpwC,KAAKiuC,UAAU,uBAAwBhW,IAEnCj4B,KAAKotC,aAAevE,GAAYyH,KAClC1Y,EAAQiO,cAAckH,EAASzvC,OAE/Bs6B,EAAQkO,eAAeiH,EAASzvC,OAElC0C,KAAKytC,UAAUhyC,KAAK,SACpBm8B,EAAQ2O,gBACRvmC,KAAK84B,QAAUmP,KAGnBd,EAAU/O,UACV,SACF,KAAK5H,GAAOic,aACV,GAAIzsC,KAAKkuC,gBAAgBnF,GAAuBnX,MAAOqG,GACrD,YAASiV,UAAYltC,KAAKotC,aAAevE,GAAYuH,QACnDpwC,KAAKiuC,UAAU,2BAA4BhW,GAE3Cj4B,KAAK84B,QAAUmP,GACfd,EAAU/O,eAGVp4B,KAAKutC,gBAAkBR,EAASzvC,MAChC0C,KAAKqtC,eACLrtC,KAAK84B,QAAUmP,GACfd,EAAU/O,cAId+O,EAAU/O,UACV,SACF,KAAK5H,GAAOsb,WACV,GAAI9rC,KAAKotC,cAAgBvE,GAAYwH,SAAU,CAE7C,IAAME,EAAevwC,KAAKwuC,iBAAiBvW,GAC3C,GAAIsY,EAAc,CAChBxD,EAAStxC,KAAK80C,GACdvwC,KAAK84B,QAAU2P,GACf,UAGJsE,EAAStxC,KAAKw8B,EAAM9tB,MACpBg9B,EAAU/O,UACV,SACF,KAAK5H,GAAO4Y,SACVppC,KAAK84B,QAAUmP,GACfd,EAAU/O,UACVR,EAAQ8O,UACJ1mC,KAAKytC,UAAUr3C,QACjB4J,KAAKytC,UAAUnwC,MAEjB,SACF,KAAKkzB,GAAOkC,GAEV,OADA9kB,EAAOqqB,EAAMrqB,KAAK5I,eAEhB,IAAK,SAGH,GAFAmiC,EAAU/O,WACVH,EAAQkP,EAAUlP,SAEV9tB,MAAQ4+B,GAAuB1P,KACrCpB,EAAM9tB,MAAQ4+B,GAAuB3rB,IACrC,CAIA,GAHApd,KAAKstC,UAAYrV,EAAMrqB,KACvBu5B,EAAU/O,WACVH,EAAQkP,EAAUlP,SAEV9tB,MAAQ4+B,GAAuB1W,SACrC4F,EAAM9tB,MAAQ4+B,GAAuBnY,IAIrC,YAFKyc,eACLlG,EAAU/O,aAGVp4B,KAAKktC,SAAW,KAChBltC,KAAKotC,YAAcvE,GAAYuH,OAC/BpwC,KAAK84B,QAAU0P,GACfuE,EAAStxC,KAAK,KACd,SAGJm8B,EAAQt4B,MAAM,sBAAuB24B,GACrCj4B,KAAK84B,QAAU4P,GACf,SACF,IAAK,YAGH,OAFAvB,EAAU/O,WACVH,EAAQkP,EAAUlP,SACJ9tB,MACZ,KAAK4+B,GAAuBpW,MAI1B,GAHA/kB,EAAOqqB,EAAMrqB,KACbu5B,EAAU/O,YACVH,EAAQkP,EAAUlP,SAET9tB,MAAQ4+B,GAAuB1P,KACpCpB,EAAM9tB,MAAQ4+B,GAAuB3rB,MACvC+pB,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuB1W,QACrD,CACAryB,KAAKgtC,qBAAqBp/B,GAAQqqB,EAAMrqB,KACxCu5B,EAAU/O,UACV+O,EAAU/O,UACV,eAGJ,KAAK2Q,GAAuB1P,IAC5B,KAAK0P,GAAuB3rB,IAC1B,GACE+pB,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuB1W,QACrD,CACAryB,KAAKitC,oBAAsBhV,EAAMrqB,KACjCu5B,EAAU/O,UACV+O,EAAU/O,UACV,UAINR,EAAQt4B,MAAM,yBAA0B24B,GACxCj4B,KAAK84B,QAAU4P,GACf,SACF,IAAK,UAKH,GAFAvB,EAAU/O,WACVH,EAAQkP,EAAUlP,SAEV9tB,MAAQ4+B,GAAuB1P,KACrC8N,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuB1W,QACrD,CAEY,UADZzkB,EAAOqqB,EAAMrqB,KAAK5I,gBACa,UAAR4I,GACrBgqB,EAAQt4B,kCAAkCsO,EAAQqqB,GAEpDkP,EAAU/O,UACV+O,EAAU/O,UACV,SAEFR,EAAQt4B,MAAM,uBAAwB24B,GACtCj4B,KAAK84B,QAAU4P,GACf,SACF,IAAK,YACL,IAAK,uBACL,IAAK,gBACL,IAAK,kBACH,GAAIvB,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuB/V,MAAO,CAG9D,OAFAmU,EAAU/O,UACV+O,EAAU/O,UACFxqB,GACN,IAAK,YACHgqB,EAAQyN,oBACR,MACF,IAAK,uBACHzN,EAAQqO,wBACR,MACF,IAAK,gBACHrO,EAAQ6N,kBACR,MACF,IAAK,kBACH7N,EAAQ4N,oBAGZxlC,KAAKytC,UAAUhyC,KAAKmS,GACpBgqB,EAAQ2O,gBACR,eAGJ,IAAK,uBAGH,OAFAY,EAAU/O,WACVH,EAAQkP,EAAUlP,SACJ9tB,MACZ,KAAK4+B,GAAuB/V,MAC1BmU,EAAU/O,UACVR,EAAQ0N,kBAAkB,MAC1BtlC,KAAKytC,UAAUhyC,KAAKmS,GACpBgqB,EAAQ2O,gBACR,SACF,KAAKwC,GAAuB/T,QAG1B,GAFAmS,EAAU/O,WACVH,EAAQkP,EAAUlP,SAEV9tB,MAAQ4+B,GAAuBpW,OACrCwU,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuB/V,MACrD,CACAplB,EAAOqqB,EAAMrqB,KACbu5B,EAAU/O,UACV+O,EAAU/O,UACVR,EAAQ0N,kBAAkB13B,GAC1B5N,KAAKytC,UAAUhyC,KAAK,wBACpBm8B,EAAQ2O,gBACR,UAIN,MACF,IAAK,gBACHY,EAAU/O,UACVR,EAAQ8N,kBACR1lC,KAAK0tC,cACL1tC,KAAK84B,QAAUwP,GACf,SACF,IAAK,OACHnB,EAAU/O,UACVR,EAAQ+N,gBACR3lC,KAAK2tC,YACL3tC,KAAK84B,QAAUuP,GACf,SACF,IAAK,kBACL,IAAK,WACL,IAAK,aACL,IAAK,YACL,IAAK,mBACL,IAAK,YACL,IAAK,eACL,IAAK,eACL,IAAK,sBACL,IAAK,eACL,IAAK,gBACL,IAAK,cACL,IAAK,qBACL,IAAK,cACL,IAAK,cACL,IAAK,WAGH,GAFAlB,EAAU/O,WACVH,EAAQkP,EAAUlP,SACR9tB,MAAQ4+B,GAAuB/V,MAAO,CAC9CmU,EAAU/O,UACVR,EAAQgO,uBAAuBh4B,GAC/B5N,KAAKytC,UAAUhyC,KAAKmS,GACpBgqB,EAAQ2O,gBACR,eAGJ,IAAK,cACHY,EAAU/O,UACVp4B,KAAKktC,SAAW,KAChBltC,KAAKotC,YAAcvE,GAAYyH,KAC/BtwC,KAAK84B,QAAU0P,GACfuE,EAAStxC,KAAK,KACd,SACF,IAAK,QACH0rC,EAAU/O,UACVp4B,KAAKktC,SAAW,KAChBltC,KAAKotC,YAAcvE,GAAY+E,MAC/B5tC,KAAK84B,QAAU0P,GACfuE,EAAStxC,KAAK,KACd,SACF,IAAK,WACH0rC,EAAU/O,UACVp4B,KAAKktC,SAAW,KAChBltC,KAAKotC,YAAcvE,GAAYwH,SAC/BrwC,KAAK84B,QAAU0P,GACfuE,EAAStxC,KAAK,KACd,SACF,IAAK,cACH,GACE0rC,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuBpW,OACrDwU,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuB/V,MACrD,CACA4E,EAAQmO,cAAcoB,EAAUhP,SAAS,GAAGvqB,MAC5Cu5B,EAAU/O,UACV+O,EAAU/O,UACV+O,EAAU/O,UACVp4B,KAAKytC,UAAUhyC,KAAKmS,GACpBgqB,EAAQ2O,gBACR,eAGJ,IAAK,qBACL,IAAK,mBACL,IAAK,yBACHY,EAAU/O,UAEV,IAAIoY,EAA0B,KAC1BC,EAAgC,KAC9BrK,EAAoB,GAe1B,KAlBAnO,EAAQkP,EAAUlP,SAIR9tB,MAAQ4+B,GAAuBpW,QACvC6d,EAAWvY,EAAMrqB,KACjBu5B,EAAU/O,UACVH,EAAQkP,EAAUlP,SAGlBA,EAAM9tB,MAAQ4+B,GAAuB3W,OACrC+U,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuBpW,QAErD8d,EAAiBtJ,EAAUhP,SAAS,GAAGvqB,KACvCu5B,EAAU/O,UACV+O,EAAU/O,UACVH,EAAQkP,EAAUlP,SAGlBA,EAAM9tB,MAAQ4+B,GAAuBzV,MACT,SAA5B2E,EAAMrqB,KAAK5I,eACXmiC,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuBpW,OACrDwU,EAAUhP,SAAS,GAAGhuB,MAAQ4+B,GAAuBnX,OAErDwU,EAAQ3qC,KAAK0rC,EAAUhP,SAAS,GAAGvqB,MACnCu5B,EAAU/O,UACV+O,EAAU/O,UACV+O,EAAU/O,UACVH,EAAQkP,EAAUlP,QAEpB,GAAIA,EAAM9tB,MAAQ4+B,GAAuB/V,MAAO,CAE9C,OADAmU,EAAU/O,UACFxqB,GACN,IAAK,qBACHgqB,EAAQsO,oBACNsK,EACAC,EACArK,GAEF,MACF,IAAK,mBACHxO,EAAQyO,mBACNmK,EACAC,EACArK,GAEF,MACF,IAAK,yBACHxO,EAAQ0O,wBACNkK,EACAC,EACArK,GAINpmC,KAAKytC,UAAUhyC,KAAKmS,GACpBgqB,EAAQ2O,gBACR,eAIJ,IAAK,GAEH3O,EAAQt4B,4BAA4BsO,EAAQqqB,GAG5Cj4B,KAAK84B,QAAU8P,GACf,SACF,QACEhR,EAAQt4B,0BAA0BsO,EAAQqqB,GAC1Cj4B,KAAK84B,QAAU4P,GACf,SAEJ9Q,EAAQt4B,yBAAyBsO,EAAQqqB,GACzCj4B,KAAK84B,QAAU4P,GACf,SACF,KAAKlY,GAAOkc,WAEV,GAAI8C,GAAgBC,EAClB,SAEFzvC,KAAKwtC,cAAc/xC,KAAKw8B,EAAM9tB,KAAO,GAGrCg9B,EAAU/O,UACV,SACF,KAAK5H,GAAOqc,eAEV,GAAI2C,GAAgBC,EAClB,SAEF,GAAiC,GAA7BzvC,KAAKwtC,cAAcp3C,OAAa,CAClC4J,KAAK84B,QAAUmP,GAGf,cAICzX,GAAOmc,UAGR3sC,KAAKwtC,cAAcp3C,OAAS,GAC5B4J,KAAKwtC,cAAcxtC,KAAKwtC,cAAcp3C,OAAS,IAAM6hC,EAAM9tB,MAE3DnK,KAAKwtC,cAAclwC,MAGU,GAA7B0C,KAAKwtC,cAAcp3C,QACnB6hC,EAAM9tB,MAAQ4+B,GAAuB7V,QAErClzB,KAAK84B,QAAUmP,IAEjBd,EAAU/O,UACV,SACF,KAAK5H,GAAOoc,cACV,GAAI4C,GAAgBC,EAClB,SAE+B,GAA7BzvC,KAAKwtC,cAAcp3C,SACrB4J,KAAK84B,QAAUmP,IAEjBd,EAAU/O,UACV,SACF,KAAK5H,GAAO6Y,KAKV,OAJIsG,IACFxI,EAAU/O,UACVR,EAAQiP,0BAGZ,QACE,GAAI2I,GAAgBC,EAClB,SAEF,GAAIC,EACF,QAAI1vC,KAAKkuC,gBAAgBnF,GAAuBnX,MAAOqG,KACrDj4B,KAAKkG,OAAS6mC,EAASzvC,UAK3B,GAAIqyC,EAMF,OAJE/X,EAAQt4B,MADN24B,EAAM9tB,MAAQ4+B,GAAuB9X,QACzBgH,EAAMrqB,KAEN,eAFYqqB,MAM9B,GAAIj4B,KAAK84B,UAAYyP,IAAkBpB,EAAU5O,UAAW,CAC1D4O,EAAU9f,QACVrnB,KAAK84B,QAAUwP,GACf1Q,EAAQwN,oBACR,YAGAplC,KAAK84B,UAAY4P,IACjB1oC,KAAK84B,UAAY8P,IACjB5oC,KAAK84B,UAAY6P,GACjB,CACA,GAAI1Q,EAAM9tB,MAAQ4+B,GAAuB9X,QACvC2G,EAAQt4B,MAAM24B,EAAMrqB,KAAMqqB,WACjBA,EAAM9tB,OAAS4+B,GAAuB/V,MAAO,CAEtD4E,EAAQkO,eAAeiH,EAASzvC,OAChC0C,KAAKytC,UAAUhyC,KAAK,SACpBm8B,EAAQ2O,gBACRvmC,KAAK84B,QAAUmP,GACfd,EAAU/O,UACV,YACSH,EAAM9tB,OAAS4+B,GAAuB1W,QAI/C,YAFKyG,QAAUmP,GACfd,EAAU/O,aAGVR,EAAQt4B,MAAM,eAAgB24B,QAGzBa,QADH94B,KAAKsvC,2BACQ3G,GAEAC,GAEjB,SAEFzB,EAAU/O,UACV,SAGN,eAISsY,eACX,WAA4Bj9B,gBAC1BgF,cAAM,aADoBhF,aAAAgF,QAAAhF,WAD9B,2BAQEnU,MAAA,SAAMu5B,EAAmBZ,GACvB,UAAUl5B,MAAM85B,MAMlBwL,SAAA,WACE,YAAY5wB,UAhBkBwwB,aAoFlB0M,GACd/iC,EACAgqB,EACAtzB,EACA8hC,EACAwK,GAEA,OAAOtU,GACL,2BACA,SAACrC,aAxEHkN,EACAvP,EACAtzB,EACA8hC,EACAwK,GAEA,IAAM3W,EAA6BqC,GAAc,mBAC3C6G,EAAS,IAAI2J,GAAO7E,GAAad,EAAWvP,EAAStzB,GACvD8qC,EAAsB,KAoD1B,OAnDIwB,IACFxB,WAqIFjI,EACAvP,EACAtzB,GAEA,IAAM6+B,EAAS,IAAI2J,GAAOtE,GAAgBrB,EAAWvP,EAAStzB,GAE9D,OADA6+B,EAAOoM,UAAUrtB,OAAO4tB,+BACjB3M,EAAOj9B,QA1IV,IAAI6iC,GAAuB6H,EAAOhZ,GAClCA,EACAtzB,KAGJ8qC,EAAYjM,EAAOgM,cAAc/I,EAASgJ,GAAaA,EAAUnzB,aAE/D2b,EAAQkO,eAAesJ,GACvBxX,EAAQ2O,iBAEVtM,EACG6E,MAAK,WACJ,MAAQqE,EAAOoM,UAAU,kBAAkC,CACzD,GAAIpM,EAAOkK,YAAa,kBACtB,IAAMwD,EAActjC,EAClB41B,EAAOmK,UACPhpC,GAEE6+B,EAAOoK,kBACT3V,EAAQkO,eAAe3C,EAAOoK,iBAC9B3V,EAAQ2O,iBAEV,IAAMuK,EAAkCxU,GACtC,0BAWF,OATAyU,GAAuBF,EAAajZ,EAAS,KAAM,MAAM2E,MAAK,WACxD4G,EAAOoK,iBACT3V,EAAQ8O,UAEVvD,EAAOkK,eACPlK,EAAOmK,UAAY,KACnBnK,EAAOoK,gBAAkB,KACzBuD,EAAW5T,iBAEN4T,EAAW5qC,kDAEd9B,EAAI61B,EAAM2E,YAChB,GAAIx6B,EAAE85B,UACJ,OAAO95B,SAGJk4B,UAERC,MAAK,WACA6S,GACFxX,EAAQ8O,UAEVzM,EAAMiD,cAEHjD,EAAM/zB,WAaG,IAAI6iC,GAAuBn7B,EAAMgqB,GACxBA,EAAStzB,EAAS8hC,EAASwK,GAAO3S,WAAWhE,MAEpE,SAACA,EAAOzyB,GACN9F,EAAejB,KAAK+G,sCAAyCoG,GAC7DqsB,EAAMiD,uBAKI6T,GACd5sC,EACAyzB,EACAwO,EACAwK,GAEA,OAAOtU,GACL,0BACA,SAACrC,GACC+W,GAAS7sC,GAAKo4B,MAAK,SAAC0U,GACbA,EAAIvP,aAGPiP,GACEM,EAAIvP,aACJ9J,EACAzzB,EACAiiC,EACAwK,GACArU,MAAK,SAACr2B,GACDA,GACHxE,EAAejB,wCAAwC0D,GAEzD81B,EAAMiD,cAZRjD,EAAMiD,iBAiBZ,SAACjD,EAAOzyB,GACN9F,EAAejB,KAAK+G,EAAK,wCAAyCrD,GAClE81B,EAAMiD,uBAKIgU,GACdz9B,EACA0zB,EACA7iC,GAEA,IAAM6+B,EAAS,IAAI2J,GACjBvE,GACApB,EACA,IAAIuJ,GAAaj9B,GACjBnP,GAGF,OADA6+B,EAAOoM,UAAUrtB,OAAO4tB,+BACjB3M,EAAOj9B,WAsBHirC,GAAsC,CACjD,aACA,kBACA,iBACAC,WACA9wB,QACA,mBACA+wB,yBA+CcC,GACd37B,EACApE,EACA27B,GAEA,GAAI37B,EAAI2K,SAAU,CAChB,IACE,gBA3CJvG,EACApE,EACA27B,GAEA,IAAMhnC,EAASqL,EAAI+C,SAASqB,GAC5B,cAAezP,GACb,IAAK,SACH,gBAfuBgnC,GAC3B,QAASiE,GAAQjE,IAcKA,GAEPhnC,GAAUjP,KAAKyZ,MAAMxK,OACnBogB,GAAQpgB,OAERogB,GAAQpgB,OAJRogB,GAAYpgB,EAAkB,MAM7C,IAAK,SACH,OAAKA,EAKEgrC,GACL3/B,EAAIkC,MACJ,IAAIs1B,GAAuB7iC,EAAkB,MAC7C,IAPOogB,GASX,IAAK,UACH,OAAOpgB,EAASogB,GAAUlW,MAAQkW,GAAUjW,OAC9C,IAAK,YACH,OAAOiW,GAEX,UAAUvnB,MAAM,iBAaa4W,EAAUpE,EAAiBoK,KAAMuxB,SACnD1lC,GACP9F,EAAejB,KAAK+G,UAEf8e,UAEF/U,WCx4FOggC,GAAahW,EAAer8B,EAAWwK,GAErD,OADA6xB,GAAS7xB,EACC,IAANxK,EACe,IAAVq8B,EAEAA,EAAQr8B,GAAM,GAAKq8B,EAAQr8B,GAAK,MAQ9BsyC,cACX,WAA4BC,QAAAA,gBAAAzxC,cAAAyxC,qBAG5BC,QAAA,WACE,YAAYD,SAASpjB,MAAK,SAACsjB,UAAYA,EAAQD,mBAItCE,cACX,WAA4BH,QAAAA,gBAAAzxC,cAAAyxC,qBAG5BC,QAAA,WACE,YAAYD,SAAS/iB,OAAM,SAACijB,UAAYA,EAAQD,mBAIvCG,cAqBX,WACkBC,EACA5yC,EACAwK,QAFAooC,0BACA5yC,cACAwK,SAFA1J,mBAAA8xC,EACA9xC,OAAAd,EACAc,OAAA0J,WArBXqoC,sBAAP,SACED,EACAE,EACAv8B,GAEA,IAAMw8B,EAAUJ,EAAmBK,kBAEhCD,EAAQH,IACTG,EAAQH,GAAer8B,UAAYA,KAEnCw8B,EAAQH,GAAiB,CAAEE,cAAAA,EAAev8B,SAAAA,OAIvC08B,qBAAP,WACEN,EAAmBK,gBAAkB,gBAUvCR,QAAA,WACE,IAAMU,EAAQP,EAAmBK,gBAAgBlyC,KAAK8xC,eACtD,aACEM,GACuB,MAAvBA,EAAMJ,eACNT,GAAaa,EAAMJ,cAAehyC,KAAKd,EAAGc,KAAK0J,SAjCxCmoC,GACJK,gBAAkB,OC+hBVG,GAmDAC,GAoLAC,GA8CAC,GAiGAC,GAgCAC,GDh5BJC,qCACJC,0BAAP,SACEd,EACAe,GAEA,IAAMC,EAAOD,EAAcxD,MAAM,KACjC,MAAe,OAAXyD,EAAK,OACIjB,GACTC,EACAxkC,SAASwlC,EAAK,GAAI,IAClBxlC,SAASwlC,EAAK,GAAI,aAQjBC,gBAAP,SAAuBtB,GACrB,WAAWG,GAAWH,MAGjBuB,gBAAP,SAAuBvB,GACrB,WAAWD,GAAWC,kBEzEVwB,GAAe11C,GAC7B,OAAOA,EAAQ21C,QAAO,SAAChtC,EAAQN,GAC7B,OAAIA,EAAK,KAAOutC,UAASh1C,OAChB+H,EAEFA,EAASN,EAAK,KACpB,aAcWwtC,GACd71C,EACApH,EACAk9C,GAEA,IAAIp1C,EAAO,EACPq1C,EAAU,EAqBd,OApBA/1C,EAAQ8wB,MAAK,SAACklB,GACZ,IAAK,IAAIn7C,EAAI,EAAGA,EAAKm7C,EAAO,GAAcn9C,OAAQgC,IAAK,CACrD,OAASm7C,EAAO,GAAgBF,GAC9B,KAAKF,UAASj1C,OACZD,IACA,MACF,KAAKk1C,UAASh1C,OACZF,IACAq1C,IACA,MACF,KAAKH,UAAS/0C,MACZk1C,IAGJ,GAAIA,EAAUn9C,EACZ,qBAKCc,KAAK2Z,IAAI3Z,KAAKC,IAAIf,EAAOm9C,EAAU,GAAKr1C,EAAM,ID6fvD,SAAiBo0C,GAGCA,qCAAhB,SACEmB,GAEA,OAAOA,GAA2C,UAAjCA,EAAOC,uBAN5B,CAAiBpB,KAAAA,QAmDjB,SAAiBC,IAIf,SAAYoB,GACVA,kBACAA,kBACAA,kBACAA,cAJF,CAAYpB,mBAAAA,sBAJd,CAAiBA,KAAAA,QAoLjB,SAAiBC,GAoBCA,+CAAhB,SACEiB,GAEA,OAAOA,GAAiD,mBAAvCA,EAAOG,8BAvB5B,CAAiBpB,KAAAA,QA8CjB,SAAiBC,GAeCA,uDAAhB,SACEgB,GAEA,QAAKA,IAKM,4BAFEA,EAAOC,uBAGlBhB,GAAMmB,mCAAmCJ,KA2D7BhB,sDAAhB,SACEgB,GAEA,QAAKA,IAKM,4BAFEA,EAAOG,8BAGlBlB,GAAMoB,qCAAqCL,KA5FjD,CAAiBhB,KAAAA,QAiGjB,SAAiBC,GAMCA,qCAAhB,SACEe,GAEA,OAAOA,GAA2C,UAAjCA,EAAOC,uBAgBVhB,uCAAhB,SACEe,GAEA,OAAOA,GAAkD,aAAxCA,EAAOG,8BA5B5B,CAAiBlB,KAAAA,QAgCjB,SAAiBC,IAkJf,SAAYoB,GAIVA,uBAIAA,yBAIAA,2BAZF,CAAYpB,eAAAA,kBA+EZ,SAAYqB,GACVA,mBACAA,yBACAA,2BACAA,uBAJF,CAAYrB,eAAAA,kBAjOd,CAAiBA,KAAAA,YEr8BJsB,GAAe,CAC1BC,aACA,uBAGWC,GAAmC,CAC9C9yB,OACA5C,UACAqB,QACAW,UAGW2zB,GACX,SACS/pC,EACA7I,EACA9C,QAFA2L,mBACA7I,iBACA9C,aAFAuB,YAAAoK,EACApK,UAAAuB,EACAvB,WAAAvB,GAmBEq6B,GAAU,CACrBsb,KAAM,SAAUC,GACdA,EAAIxtC,MAAMytC,WAAa,WAEzBC,KAAM,SAAUF,GACdA,EAAIxtC,MAAMytC,WAAa,UAEzBE,KAAM,SAAUH,GACdA,EAAI1Z,YAAc,EAClB0Z,EAAIG,QAENC,MAAO,SAAUJ,GACfA,EAAII,SAENC,OAAQ,SAAUL,GAChBA,EAAIG,QAENG,KAAM,SAAUN,GACdA,EAAIO,UAENC,OAAQ,SAAUR,GAChBA,EAAIO,oBAIQE,GACdlmB,EACAmmB,GAEA,IAAMC,EAAWlc,GAAQic,GACzB,OAAIC,aAEA,IAAK,IAAI73C,EAAI,EAAGA,EAAIyxB,EAAKx4B,OAAQ+G,IAC/B,IACE63C,EAASpmB,EAAKzxB,UACPqK,eAOJytC,eA2BX,WACkB9pB,EACA+pB,gBAEhB7+B,sBAHgB8U,mBACA+pB,kBAxBlBC,gBAAsC,OACtCC,aAA8B,KAC9BC,qBACAnrB,aAA6C,KAC7CorB,WAAgD,CAAExuB,MAAO,EAAGC,OAAQ,KACpEwuB,iBACAC,gBACAvqB,iBACAwqB,qBACAC,sBACAxtB,WAAqB,IACrByI,SAA2B,OAC3B/jB,QAAkB,IAClB+oC,KAAkC,OAClC5V,SAAmC,KACnC6V,YAKI,CAAEx0B,IAAK,GAAI5C,OAAQ,GAAIqB,KAAM,GAAIW,MAAO,IAG1BnK,YAAA8U,EACA9U,WAAA6+B,EAGhB7+B,EAAKg/B,YAAc,SAACj2C,GAClB,IAAMy2C,EAAgBz2C,EAAEiL,cAClB7F,EACJqxC,EAAcztC,aAAa,SAC3BytC,EAAc7tC,eAAeuF,EAAQ8yB,MAAO,QAC1C77B,GAWF6R,EAAKpM,cAVO,CACVE,KAAM,YACNC,OAAQ,KACRC,cAAe,KACfwrC,cAAAA,EACArxC,KAAAA,EACAsxC,0BACE12C,EAAE02C,8BA7Cd,2BAqDEC,iBAAA,SAAiBC,GACfh2C,KAAKy1C,gBAAkBO,EACnBA,EACFh2C,KAAKmrB,UAAUoE,aAAa0lB,EAAKgB,0BAA2B,QAE5Dj2C,KAAKmrB,UAAU+qB,gBAAgBjB,EAAKgB,8BAIxCE,kBAAA,SAAkBH,GAChBh2C,KAAK01C,iBAAmBM,EACpBA,EACFh2C,KAAKmrB,UAAUoE,aAAa0lB,EAAKmB,2BAA4B,QAE7Dp2C,KAAKmrB,UAAU+qB,gBAAgBjB,EAAKmB,+BAIxCC,sBAAA,SAAsBvuC,EAAkBiE,GACtC,IAAMnC,EAAM5J,KAAKkqB,aAAane,GACzBnC,EAGHA,EAAInO,KAAKqM,GAFT9H,KAAKkqB,aAAane,GAAM,CAACjE,MAM7Bo1B,OAAA,SAAOoZ,EAAqBC,cAI1B5zC,OAAOC,KAAK5C,KAAKkqB,cAAcrpB,SAAQ,SAACkL,GAEtC,IADA,IAAMyqC,EAAQ5/B,EAAKsT,aAAane,GACvB3T,EAAI,EAAGA,EAAIo+C,EAAMpgD,QACpBwgB,EAAKuU,UAAUsrB,SAASD,EAAMp+C,IAChCA,IAEAo+C,EAAMz5C,OAAO3E,EAAG,GAGC,IAAjBo+C,EAAMpgD,eACDwgB,EAAKsT,aAAane,MAI7B,IADA,IAAMzD,EAAOtI,KAAKo1C,aACTh9C,EAAI,EAAGA,EAAIkQ,EAAKlS,OAAQgC,IAAK,CACpC,IAAMwN,EAAO0C,EAAKlQ,IAEhBwN,EAAKwE,SAAWpK,KAAKmrB,WACP,cAAdvlB,EAAKrE,MACJvB,KAAKy1C,iBACLz1C,KAAK01C,mBAQRnoC,GAAoB3H,EAAKwE,OAAQxE,EAAKrE,KAAMqE,EAAKnH,MAAMkB,gBAInDomB,EAAOwwB,EAAaG,qBAAqB12C,KAAKmrB,WACpDnrB,KAAKs1C,WAAWxuB,MAAQf,EAAKe,MAC7B9mB,KAAKs1C,WAAWvuB,OAAShB,EAAKgB,OAC9B,IAAK,IAAI3uB,EAAI,EAAGA,EAAIk+C,EAASlgD,OAAQgC,IAAK,CACxC,IAAMu+C,EAAUL,EAASl+C,GACnBw2B,EAAO5uB,KAAKkqB,aAAaysB,EAAQjpC,KACjCkpC,EAAY52C,KAAKkqB,aAAaysB,EAAQE,UAC5C,GAAIjoB,GAAQgoB,EAAW,CACrB,IAAM91C,EAAWg0C,GAAalmB,EAAM+nB,EAAQ5B,QAC5C,GAAIj0C,EACF,IAAK,IAAI3D,EAAI,EAAGA,EAAIy5C,EAAUxgD,OAAQ+G,IACpCy5C,EAAUz5C,GAAGmN,iBAAiBqsC,EAAQG,MAAOh2C,WAWvDi2C,KAAA,SAAKvnC,GACHjC,GAAoBvN,KAAKmrB,UAAW,qBAAsB3b,UAM5DwnC,mBAAA,WACE,YAAY7B,iBAAmBn1C,KAAKmrB,cAlJd5d,IAAb0nC,GACIgB,0BACb,mCAFShB,GAGImB,2BACb,wCA4JStC,GAAapB,GAAMoB,oBAOhBmD,GACdC,GAEA,OAAQA,GACN,IAAK,SACL,IAAK,SACH,OAAOpD,GAAWqD,OACpB,IAAK,WACH,OAAOrD,GAAWsD,QACpB,IAAK,MACL,IAAK,WACL,IAAK,eACH,OAAOtD,GAAWuD,SACpB,QACE,sBAIUC,GAAUxsC,EAAYosC,GACpC,GAAqB,GAAjBpsC,EAAKC,SACP,SAEF,IAAM6C,EAAO9C,EAAKkC,YAClB,OAAQkqC,GACN,KAAKpD,GAAWqD,OACd,QAASvpC,EAAKvJ,MAAM,SACtB,KAAKyvC,GAAWsD,QACd,QAASxpC,EAAKvJ,MAAM,cACtB,KAAKyvC,GAAWuD,SACd,UAAOzpC,EAAKxX,OAEhB,UAAU2I,gCAAgCm4C,OAG/BK,GAIX,SACkBvR,EACAwR,QADAxR,qBACAwR,2BALlBC,mBAAqB,QACrBC,kBAA8C,KAG5B13C,cAAAgmC,EACAhmC,oBAAAw3C,GAIPG,cAGX,WACS3R,EACAl+B,EACAwjB,EACA7V,EACAmiC,EACA74B,EACA84B,EACA7rB,EACA8rB,QARA9R,qBACAl+B,oBACAwjB,wBACA7V,qBACAmiC,mBACA74B,sBACA84B,qBACA7rB,iBACA8rB,wBAXTC,WAAqB,EAGZ/3C,cAAAgmC,EACAhmC,aAAA8H,EACA9H,iBAAAsrB,EACAtrB,cAAAyV,EACAzV,YAAA43C,EACA53C,eAAA+e,EACA/e,cAAA63C,EACA73C,UAAAgsB,EACAhsB,iBAAA83C,qBAGTE,SAAA,SAASliC,GACP,QAAK9V,KAAK+e,aAGLjJ,EAAMiJ,WAGP/e,KAAKyV,SAAWK,EAAML,eAGduW,qBAMAisB,GACdnpB,EACAC,GAEA,OAAOD,EAAG1N,IAAM2N,EAAG3N,aAGL82B,GACdppB,EACAC,GAEA,OAAOA,EAAGvO,MAAQsO,EAAGtO,eAiCP23B,GACdC,EACAC,WAEA,OAAID,IAASC,MAGRD,IAASC,KAIXD,EAAKttC,OAASutC,EAAKvtC,QAEfstC,EAAKE,iBACJD,EAAKC,eACPF,EAAKG,aAAe7F,GAAMqB,WAAWyE,UACrCH,EAAKE,aAAe7F,GAAMqB,WAAWyE,oBACpCJ,EAAKttC,eAAkB2tC,uBACrBJ,EAAKvtC,aAAL4tC,EAAuBD,aAC9BL,EAAKG,aAAeF,EAAKE,YACzBI,GAAoBP,EAAKE,cAAeD,EAAKC,gBAC7CK,GAAoBP,EAAKQ,WAAYP,EAAKO,aAC1CT,GAAuBC,EAAKS,cAAeR,EAAKQ,wBAMpCC,GACdC,EACAC,GAEA,GAAID,IAAQC,EACV,SAEF,IAAKD,IAAQC,EACX,SAEF,GACED,EAAIE,eAAiBD,EAAIC,cACzBF,EAAIl7C,QAAUm7C,EAAIn7C,OAClBk7C,EAAI7rC,MAAM9W,SAAW4iD,EAAI9rC,MAAM9W,OAE/B,SAEF,IAAK,IAAIgC,EAAI,EAAGA,EAAI2gD,EAAI7rC,MAAM9W,OAAQgC,IACpC,IAAK+/C,GAAuBY,EAAI7rC,MAAM9U,GAAI4gD,EAAI9rC,MAAM9U,IAClD,SAGJ,kBAqBc8gD,GACdjpB,EACAkpB,GAcA,MAAO,CACLjsC,MAAO,CAbsB,CAC7BpC,KAAMmlB,EAAYmpB,WAClBb,WAAYxE,GAAWsF,KACvBf,cAAeroB,EAAYqoB,cAC3BM,WAAY,KACZC,cAAe,KACfnB,kBAAmB,KACnB1F,cAC0B,MAAxBmH,EACIA,EACAlpB,EAAY+hB,gBAIlBiH,aAAc,EACdp7C,SACAy7C,wBAAyBrpB,EAAYqpB,kCAIzBC,GACdxa,EACAj5B,GAEA,IAAMmqB,EAAc,IAAIupB,GAAYza,EAAKj0B,KAAMhF,EAAuB,GAStE,OARAmqB,EAAYsoB,WAAaxZ,EAAKwZ,WAC9BtoB,EAAYqoB,cAAgBvZ,EAAKuZ,cACjCroB,EAAY2oB,WAAa7Z,EAAK6Z,WAC9B3oB,EAAY4oB,cAAgB9Z,EAAK8Z,cAC7BU,GAAoCxa,EAAK8Z,cAAe/yC,EAAO2zC,QAC/D,KACJxpB,EAAYynB,kBAAoB3Y,EAAK2Y,kBACrCznB,EAAY+hB,cAAgBjT,EAAKiT,cAAgB,EAC1C/hB,MAGI8jB,GAAarB,GAAMqB,WAMnB2F,cAGX,WACkBhS,EACA9X,EACA+pB,EACAC,EAChBC,EACgB1vC,EACA8e,QANAye,kBACA9X,iBACA+pB,mBACAC,yBAEAzvC,iBACA8e,mBATlB6wB,UAA2B,KAGT95C,WAAA0nC,EACA1nC,UAAA4vB,EACA5vB,YAAA25C,EACA35C,kBAAA45C,EAEA55C,UAAAmK,EACAnK,YAAAipB,EAEZ4wB,IACFA,EAAYC,UAAY95C,yBAI5BooB,OAAA,SAAOtS,GACL,QAAKA,QAIE4xB,QAAU5xB,EAAM4xB,OACrB1nC,KAAK25C,SAAW7jC,EAAM6jC,QACtB35C,KAAKmK,OAAS2L,EAAM3L,MACpBwuC,GAAoB34C,KAAK45C,aAAc9jC,EAAM8jC,6BAKnCjB,GACdoB,EACAC,GAEA,OAAOD,IAAQC,KAAUD,KAASC,GAAOD,EAAI3xB,OAAO4xB,OAOzCC,GACX,SACkBC,EACAlM,QADAkM,kBACAlM,aADAhuC,WAAAk6C,EACAl6C,WAAAguC,GAYPwL,cAqDX,WACSJ,EACAtzC,EACAq0C,QAFAf,uBACAtzC,mBACAq0C,sBAtDTlB,aAAuB,OACvBp7C,cACA06C,uBAGAD,0BACAM,WAAkC,UAClCC,cAA6B,UAI7BuB,eACA56B,eACA66B,iBACAC,yBACAC,QAAyB,UACzBC,2BACAC,UAA2B,UAC3BC,UAA2B,UAC3BC,kBAAwC,UACxCC,WAA6B,UAC7BC,cAAwB,gBACxBC,YAAsB,WACtBC,oBAA8B,OAC9BC,mBAA6B,OAC7BC,sBACA/D,uBACAgE,+BACAC,sBACAC,uBACAC,mCACAvD,YAA6B,UAC7BwD,WAA4B,UAC5BprB,SAAiB,UACjBqrB,YAAoB,UACpBC,2BACAC,qBACAC,sBACAC,wBACA5zC,KAAsB,UACtBuxC,wBAAgD,UAChD5B,8BACAkE,cAA+B,UAC/BC,YAEI,QACJ7J,cAAwB,OACxB8J,iBAA+C,UAC/CC,eAAmC,UACnCC,gBAGSh8C,gBAAAo5C,EACAp5C,YAAA8F,EACA9F,eAAAm6C,EAEPn6C,KAAKu4C,WAAaxE,GAAWsF,KAC7Br5C,KAAKs4C,cAAgBxyC,EAASA,EAAOwyC,cAAgB,KACrDt4C,KAAKs6C,aAAex0C,EAASA,EAAOw0C,aAAe,EACnDt6C,KAAKw6C,eAAiBlI,GAAWoB,eAAeuI,OAChDj8C,KAAKk3C,WAAapxC,EAASA,EAAOoxC,WAAapD,GAAWqD,OAC1Dn3C,KAAKk7C,mBAAqBp1C,EAASA,EAAOo1C,mBAAqB,KAC/Dl7C,KAAKm7C,YAAYr1C,GAASA,EAAOq1C,UACjCn7C,KAAKw7C,eAAiB11C,EAASA,EAAO01C,eAAiB,GACvDx7C,KAAKy7C,WAAW31C,GAASA,EAAO21C,SAChCz7C,KAAK07C,UAAY51C,EAASA,EAAO41C,UAAY,MAC7C17C,KAAK27C,YAAc71C,EAASA,EAAO61C,YAAc,KACjD37C,KAAK03C,kBAAoB5xC,EAASA,EAAO4xC,kBAAoB,KAC7D13C,KAAKg8C,SAAWl2C,EAASA,EAAOk2C,SAAW,gCAG7CE,UAAA,WACEl8C,KAAKwf,UACLxf,KAAKs6C,aAAet6C,KAAK8F,OAAS9F,KAAK8F,OAAOw0C,aAAe,EAC7Dt6C,KAAKkwB,SAAW,KAChBlwB,KAAKu7C,YAAc,KACnBv7C,KAAKi5C,aAAe,EACpBj5C,KAAKnC,SACLmC,KAAKu6C,QAAU,KACfv6C,KAAKw6C,eAAiBlI,GAAWoB,eAAeuI,OAChDj8C,KAAKy6C,UAAY,KACjBz6C,KAAK06C,UAAY,KACjB16C,KAAK26C,kBAAoB,KACzB36C,KAAK46C,WAAa,KAClB56C,KAAK66C,cAAgB,WACrB76C,KAAKi7C,iBACLj7C,KAAKk3C,WAAal3C,KAAK8F,OAAS9F,KAAK8F,OAAOoxC,WAAapD,GAAWqD,OACpEn3C,KAAKk7C,mBAAqBl7C,KAAK8F,OAC3B9F,KAAK8F,OAAOo1C,mBACZ,KACJl7C,KAAKm7C,YAAYn7C,KAAK8F,QAAS9F,KAAK8F,OAAOq1C,UAC3Cn7C,KAAK83C,YAAc,KACnB93C,KAAKs7C,WAAa,KAClBt7C,KAAK44C,WAAa,KAClB54C,KAAKo7C,kBACLp7C,KAAKq7C,8BACLr7C,KAAKy7C,WAAWz7C,KAAK8F,QAAS9F,KAAK8F,OAAO21C,SAC1Cz7C,KAAK44C,WAAa,KAClB54C,KAAKs5C,wBAA0B,KAC/Bt5C,KAAK03C,kBAAoB13C,KAAK8F,OAAS9F,KAAK8F,OAAO4xC,kBAAoB,KACvE13C,KAAK47C,cAAgB,KACrB57C,KAAK67C,YAAc,GACnB77C,KAAKgyC,cAAgB,EACrBhyC,KAAK87C,iBAAmB,KACxB97C,KAAK+7C,eAAiB,QAGhBI,UAAA,WACN,IAAMC,EAAK,IAAI5C,EAAYx5C,KAAKo5C,WAAYp5C,KAAK8F,OAAQ9F,KAAKm6C,WAuC9D,OAtCAiC,EAAGnD,aAAej5C,KAAKi5C,aACvBmD,EAAGv+C,MAAQmC,KAAKnC,MAChBu+C,EAAGxD,WAAa54C,KAAK44C,WACrBwD,EAAG7D,WAAav4C,KAAKu4C,WACrB6D,EAAG9D,cAAgBt4C,KAAKs4C,cACxB8D,EAAGvD,cAAgB74C,KAAK64C,cACxBuD,EAAG58B,OAASxf,KAAKwf,OACjB48B,EAAG9B,aAAet6C,KAAKs6C,aACvB8B,EAAG7B,QAAUv6C,KAAKu6C,QAClB6B,EAAG5B,eAAiBx6C,KAAKw6C,eACzB4B,EAAG3B,UAAYz6C,KAAKy6C,UACpB2B,EAAG1B,UAAY16C,KAAK06C,UACpB0B,EAAGzB,kBAAoB36C,KAAK26C,kBAC5ByB,EAAGxB,WAAa56C,KAAK46C,WACrBwB,EAAGvB,cAAgB76C,KAAK66C,cACxBuB,EAAGtB,YAAc96C,KAAK86C,YACtBsB,EAAGrB,oBAAsB/6C,KAAK+6C,oBAC9BqB,EAAGpB,mBAAqBh7C,KAAKg7C,mBAC7BoB,EAAGhB,eAAiBp7C,KAAKo7C,eACzBgB,EAAGf,2BAA6Br7C,KAAKq7C,2BACrCe,EAAGnB,cAAgBj7C,KAAKi7C,cACxBmB,EAAGlF,WAAal3C,KAAKk3C,WACrBkF,EAAGlB,mBAAqBl7C,KAAKk7C,mBAC7BkB,EAAGjB,UAAYn7C,KAAKm7C,UACpBiB,EAAGtE,YAAc93C,KAAK83C,YACtBsE,EAAGd,WAAat7C,KAAKs7C,WACrBc,EAAGlsB,SAAWlwB,KAAKkwB,SACnBksB,EAAGb,YAAcv7C,KAAKu7C,YACtBa,EAAGT,YAAc37C,KAAK27C,YACtBS,EAAGX,SAAWz7C,KAAKy7C,SACnBW,EAAG/B,SAAWr6C,KAAKq6C,SACnB+B,EAAG9C,wBAA0Bt5C,KAAKs5C,wBAClC8C,EAAG1E,kBAAoB13C,KAAK03C,kBAC5B0E,EAAGR,cAAgB57C,KAAK47C,cACxBQ,EAAGP,YAAcl5C,OAAO05C,OAAOr8C,KAAK67C,aACpCO,EAAGpK,cAAgBhyC,KAAKgyC,cACxBoK,EAAGN,iBAAmB97C,KAAK87C,iBAC3BM,EAAGL,eAAiB/7C,KAAK+7C,eAClBK,KAGTE,OAAA,WACE,YAAUlC,YAGE+B,oBAGd1C,KAAA,WACE,IAAI2C,EAAkBp8C,KACtB,EAAG,CACD,GAAIo8C,EAAGhC,OACL,MAEFgC,EAAGhC,UACHgC,EAAKA,EAAGt2C,aACDs2C,GACT,eAGFG,MAAA,WAIE,IAHA,IAEIC,EAFEJ,EAAKp8C,KAAKm8C,YACZM,EAAML,EAEmB,OAArBI,EAAMC,EAAI32C,SAChB02C,EAAMA,EAAIL,YACVM,EAAI32C,OAAS02C,EACbC,EAAMD,EAER,OAAOJ,KAGTM,mBAAA,WACE,MAAO,CACL5xC,KAAM9K,KAAKo5C,WACXb,WAAYv4C,KAAKu4C,WACjBD,cAAet4C,KAAKs4C,cACpBM,WAAY54C,KAAK44C,WACjBC,cAAe74C,KAAK64C,cAChB74C,KAAK64C,cAAc6D,qBACnB,KACJhF,kBAAmB13C,KAAK03C,kBACxB1F,cAAehyC,KAAKgyC,kBAIxB2K,eAAA,qBACMC,EAAkB58C,KAChBkN,EAAQ,GAIZ0vC,EAAGrE,aAAe7F,GAAMqB,WAAWyE,UAClCoE,EAAGpC,iBAAmBlI,GAAWoB,eAAeuI,QAC9B,aAAjBW,EAAGnC,oBACJmC,EAAGtE,yBAAHuE,EAAkB5zB,kBAAlB6zB,EAAgEj2C,SAAhEk2C,EAAAC,WAIDJ,EAAKA,EAAG92C,QAGV,GAIK82C,EAAGjB,aACHiB,EAAG92C,QACJ82C,EAAG92C,OAAO61C,cAAgBiB,EAAGjB,aAE7BzuC,EAAMzR,KAAKmhD,EAAGF,sBAEhBE,EAAKA,EAAG92C,aACD82C,GAOT,MAAO,CACL1vC,MAAAA,EACA+rC,aARyBj5C,KAAKs5C,wBDruB3BlG,GCuuBCpzC,KAAKs5C,wBACLt5C,KAAKi5C,cDxuB2B,GC0uBlCj5C,KAAKi5C,aAIPp7C,MAAOmC,KAAKnC,MACZy7C,wBAAyBt5C,KAAKs5C,4BAIlC2D,YAAA,WAEE,IADA,IAAIn3C,EAAS9F,KAAK8F,OACXA,GAAQ,CACb,GAAIA,EAAOs1C,eACT,SAEFt1C,EAASA,EAAOA,mBAKpBo3C,8BAAA,WAEE,IADA,IAAIp3C,EAAS9F,KAAK8F,OACXA,GAAQ,CACb,GAAIA,EAAOu1C,2BACT,OAAOv1C,EAETA,EAASA,EAAOA,sBASpBq3C,aAAA,SAAaxgB,GAEX,IADA,IAAI1M,EAA2BjwB,KACxBiwB,GACAA,EAAYzQ,QACfmd,EAAS1M,GAEXA,EAAcA,EAAYnqB,UAI9Bs3C,UAAA,SAAU1F,GACR,YACOA,oBAAsBA,KACzB13C,KAAK8F,QACP9F,KAAK8F,OAAO4xC,oBAAsBA,QAK3B2F,cAGX,WAAmBC,QAAAA,oBAFnBC,OAAyB,KAENv9C,aAAAs9C,6BAEnBf,MAAA,WACE,IAAMr2C,EAAS,IAAIm3C,EAAcr9C,KAAKs9C,SACtC,GAAIt9C,KAAKu9C,OAAQ,CACfr3C,EAAOq3C,OAAS,GAChB,IAAK,IAAInlD,EAAI,EAAGA,EAAI4H,KAAKu9C,OAAOnnD,SAAUgC,EACxC8N,EAAOq3C,OAAOnlD,GAAK4H,KAAKu9C,OAAOnlD,UAG5B8N,KAGTs3C,eAAA,SAAe1nC,GACb,IAAKA,EACH,SAEF,GAAI9V,OAAS8V,EACX,SAEF,IAAKgjC,GAAmB94C,KAAKs9C,QAASxnC,EAAMwnC,SAC1C,SAEF,GAAIt9C,KAAKu9C,OAAQ,CACf,IAAKznC,EAAMynC,QAAUv9C,KAAKu9C,OAAOnnD,SAAW0f,EAAMynC,OAAOnnD,OACvD,SAEF,IAAK,IAAIgC,EAAI,EAAGA,EAAI4H,KAAKu9C,OAAOnnD,OAAQgC,IACtC,IAAK0gD,GAAmB94C,KAAKu9C,OAAOnlD,GAAI0d,EAAMynC,OAAOnlD,IACnD,iBAGK0d,EAAMynC,OACf,SAEF,eAISE,cACX,WACSC,EACSC,QADTD,0BACSC,iBADT39C,mBAAA09C,EACS19C,eAAA29C,6BAGlBpB,MAAA,WACE,WAAWkB,EAAkBz9C,KAAK09C,cAAcnB,QAASv8C,KAAK29C,cAGhEH,eAAA,SAAe1nC,GACb,QACIA,IACD9V,OAAS8V,GAAS9V,KAAK09C,cAAcF,eAAe1nC,EAAM4nC,sBAKpDE,gCACXC,UAAiC,QACjCC,UAAoB,WACpBxC,WAA4B,gCAE5BiB,MAAA,WAIE,IAHA,IAAMwB,EAAQ,IAAIH,EACZh0C,EAAM5J,KAAK69C,UACXG,EAASD,EAAMF,UACZzlD,EAAI,EAAGA,EAAIwR,EAAIxT,OAAQgC,IAC9B4lD,EAAO5lD,GAAKwR,EAAIxR,GAAGmkD,QAIrB,OAFAwB,EAAMD,UAAY99C,KAAK89C,UACvBC,EAAMzC,WAAat7C,KAAKs7C,WACjByC,KAGTP,eAAA,SAAe1nC,GACb,GAAI9V,OAAS8V,EACX,SAEF,IAAKA,GAAS9V,KAAK69C,UAAUznD,SAAW0f,EAAM+nC,UAAUznD,OACtD,SAEF,IAAK,IAAIgC,EAAI,EAAGA,EAAI4H,KAAK69C,UAAUznD,OAAQgC,IACzC,IAAK4H,KAAK69C,UAAUzlD,GAAGolD,eAAe1nC,EAAM+nC,UAAUzlD,IACpD,SAGJ,YAGF6lD,WAAA,SAAWrxC,GACT,YACOixC,UAAUznD,OAAS,GACxB4J,KAAK69C,UAAU,GAAGF,UAAUryB,aAAe1e,QAKpCsxC,gCAIX59B,KAAe,OACf69B,MAAiC,QACjCC,cAAiD,QACjDnzB,oBAKAozB,kBAA4B,OAG5BC,4BACAC,uDAEAhC,MAAA,WACE,IAAMiC,EAAQ,IAAIN,EAOlB,IAAK,IAAM38C,KANXi9C,EAAMl+B,KAAOtgB,KAAKsgB,KAClBk+B,EAAMvzB,YAAcjrB,KAAKirB,YACzBuzB,EAAMF,gBAAkBt+C,KAAKs+C,gBAC7BE,EAAMH,kBAAoBr+C,KAAKq+C,kBAC/BG,EAAMD,qBAAuBv+C,KAAKu+C,qBAClCC,EAAML,MAAQn+C,KAAKm+C,WACKC,cACtBI,EAAMJ,cAAc78C,GAAQvB,KAAKo+C,cAAc78C,GAAMg7C,QAEvD,OAAOiC,KAGThB,eAAA,SAAe1nC,GACb,GAAI9V,OAAS8V,EACX,SAEF,IACGA,GACD9V,KAAKsgB,OAASxK,EAAMwK,KAKpB,SAEF,IAAMm+B,EAAgB97C,OAAOC,KAAK5C,KAAKo+C,eACjCM,EAAiB/7C,OAAOC,KAAKkT,EAAMsoC,eACzC,GAAIK,EAAcroD,SAAWsoD,EAAetoD,OAC1C,SAEF,cAAuBqoD,iBAAe,CAAjC,IAAMzY,OACT,IACGhmC,KAAKo+C,cAAcpY,GAAUwX,eAC5B1nC,EAAMsoC,cAAcpY,IAGtB,qBASNiY,WAAA,SAAW18C,EAAcqL,GACvB,IAAM+xC,EAAU3+C,KAAKo+C,cAAc78C,GACnC,QAAKo9C,GAGEA,EAAQV,WAAWrxC,MAG5BgyC,gBAAA,SAAgBr9C,GACd,IAAMo9C,EAAU3+C,KAAKo+C,cAAc78C,GACnC,OAAKo9C,EAGEA,EAAQb,UAFN,SAKXe,qBAAA,SAAqBt9C,GACnB,IAAMo9C,EAAU3+C,KAAKo+C,cAAc78C,GACnC,IAAKo9C,EACH,YAEF,IAAMG,EAAoBH,EAAQd,UAAU,GAC5C,OAAKiB,EAGEA,EAAkBnB,qBAIhBoB,cA4BX,WAAmBj3C,QAAAA,oBA3BnB+X,KAAe,OACfuB,IAAc,OACd49B,WAAqB,OACrBC,YAAsB,OACtBC,UAAoB,OACpBC,aAAuB,OACvBC,WAAqB,OACrBC,YAAsB,OACtBC,UAAoB,OACpBC,aAAuB,OACvBC,YAAsB,OACtBC,aAAuB,OACvBC,WAAqB,OACrBC,cAAwB,OACxB74B,MAAgB,OAChBC,OAAiB,OACjB64B,QAAkB,OAClBC,QAAkB,OAClBC,WAAmC,UACnCC,WAAiC,UACjCC,kBAA4B,OAC5BC,UAAoB,OACpBC,WAAqB,OACrBC,YAAsB,OACtBC,YAAsB,OACtB3E,YAEmBz7C,aAAA8H,6BAEnBu4C,YAAA,WACE,YAAYnB,UAAYl/C,KAAKs/C,UAAYt/C,KAAK0/C,cAGhDY,eAAA,WACE,YAAYnB,aAAen/C,KAAKu/C,aAAev/C,KAAK2/C,iBAGtDY,aAAA,WACE,YAAYvB,WAAah/C,KAAKo/C,WAAap/C,KAAKw/C,eAGlDgB,cAAA,WACE,YAAYvB,YAAcj/C,KAAKq/C,YAAcr/C,KAAKy/C,gBAGpDgB,eAAA,WACE,YAAShF,cACK+E,qBAEAH,iBAIhBK,cAAA,WACE,YAASjF,cACK8E,oBAEAD,oBAIhBK,cAAA,WACE,YAASlF,cACK4E,mBAEAE,kBAIhBK,YAAA,WACE,YAASnF,cACK6E,sBAEAE,mBAIhBK,cAAA,SAAc17B,GACZ,YAAYs2B,SAAWt2B,EAAI3E,MAAQ2E,EAAI/D,OAGzC0/B,aAAA,SAAa37B,GACX,YAAYs2B,SAAWt2B,EAAItF,KAAOsF,EAAI3G,UAGxCuiC,aAAA,SAAa57B,GACX,YAAYs2B,SAAWt2B,EAAI/D,IAAM+D,EAAItF,QAGvCmhC,WAAA,SAAW77B,GACT,YAAYs2B,SAAWt2B,EAAI3G,OAAS2G,EAAI3E,SAG1CygC,cAAA,SAAc97B,GACZ,YAAYs2B,SAAWt2B,EAAI3G,OAAS2G,EAAI/D,IAAM+D,EAAI3E,MAAQ2E,EAAItF,QAGhEqhC,WAAA,SAAW/7B,GACT,YAAYs2B,SAAWt2B,EAAI3E,MAAQ2E,EAAItF,KAAOsF,EAAI3G,OAAS2G,EAAI/D,OAGjE+/B,UAAA,WACE,YAAY1F,UAAY,EAAI,KAG9B2F,aAAA,WACE,YAGFC,SAAA,SAASvrC,GACP9V,KAAK8H,QAAUgO,EAAMhO,QACrB9H,KAAK6f,KAAO/J,EAAM+J,KAClB7f,KAAKohB,IAAMtL,EAAMsL,IACjBphB,KAAKg/C,WAAalpC,EAAMkpC,WACxBh/C,KAAKi/C,YAAcnpC,EAAMmpC,YACzBj/C,KAAKk/C,UAAYppC,EAAMopC,UACvBl/C,KAAKm/C,aAAerpC,EAAMqpC,aAC1Bn/C,KAAKo/C,WAAatpC,EAAMspC,WACxBp/C,KAAKq/C,YAAcvpC,EAAMupC,YACzBr/C,KAAKs/C,UAAYxpC,EAAMwpC,UACvBt/C,KAAKu/C,aAAezpC,EAAMypC,aAC1Bv/C,KAAKw/C,YAAc1pC,EAAM0pC,YACzBx/C,KAAKy/C,aAAe3pC,EAAM2pC,aAC1Bz/C,KAAK0/C,WAAa5pC,EAAM4pC,WACxB1/C,KAAK2/C,cAAgB7pC,EAAM6pC,cAC3B3/C,KAAK8mB,MAAQhR,EAAMgR,MACnB9mB,KAAK+mB,OAASjR,EAAMiR,OACpB/mB,KAAK4/C,QAAU9pC,EAAM8pC,QACrB5/C,KAAK6/C,QAAU/pC,EAAM+pC,QACrB7/C,KAAK+/C,WAAajqC,EAAMiqC,WACxB//C,KAAK8/C,WAAahqC,EAAMgqC,WACxB9/C,KAAKggD,kBAAoBlqC,EAAMkqC,kBAC/BhgD,KAAKigD,UAAYnqC,EAAMmqC,UACvBjgD,KAAKkgD,WAAapqC,EAAMoqC,WACxBlgD,KAAKy7C,SAAW3lC,EAAM2lC,YAGxB6F,oBAAA,SAAoBlgC,EAAa2F,GAC/B/mB,KAAKohB,IAAMA,EACXphB,KAAK+mB,OAASA,EACdxZ,GAAoBvN,KAAK8H,QAAS,MAAUsZ,QAC5C7T,GAAoBvN,KAAK8H,QAAS,SAAaif,WAGjDw6B,sBAAA,SAAsB1hC,EAAciH,GAClC9mB,KAAK6f,KAAOA,EACZ7f,KAAK8mB,MAAQA,EACbvZ,GAAoBvN,KAAK8H,QAAS,OAAW+X,QAC7CtS,GAAoBvN,KAAK8H,QAAS,QAAYgf,WAGhD06B,iBAAA,SAAiBx+C,EAAey+C,GAC1BzhD,KAAKy7C,SASPz7C,KAAKuhD,sBACHv+C,GARAy+C,EACAzhD,KAAKg/C,WACLh/C,KAAKi/C,YACLj/C,KAAKw/C,YACLx/C,KAAKy/C,aACLz/C,KAAKo/C,WACLp/C,KAAKq/C,aAEiBr/C,KAAKmhD,YAC3BM,GAGFzhD,KAAKshD,oBAAoBt+C,EAAOy+C,MAIpCC,kBAAA,SAAkB1+C,EAAey+C,GAC3BzhD,KAAKy7C,SACPz7C,KAAKshD,oBAAoBt+C,EAAOy+C,GAEhCzhD,KAAKuhD,sBAAsBv+C,EAAOy+C,MAItCj5C,MAAA,WAGE,IAFA,IACIyzB,EADEn2B,EAAS9F,KAAK8H,QAEZm0B,EAAIn2B,EAAO67C,WACjB77C,EAAO87C,YAAY3lB,MAIvB4lB,cAAA,WACE,IAAM97B,EAAO/lB,KAAK8hD,eAClB,YAAS/B,gBACKA,WAAW58B,WAAW4C,EAAKhrB,GAAIgrB,EAAKjrB,IAE3CosB,GAA0BnB,EAAKhrB,GAAIgrB,EAAKjrB,GAAIirB,EAAK7qB,GAAI6qB,EAAK1qB,OAGnEymD,aAAA,WACE,IAAM1+B,EAAUpjB,KAAK4/C,QAAU5/C,KAAK6f,KAAO7f,KAAKugD,eAC1Cl9B,EAAUrjB,KAAK6/C,QAAU7/C,KAAKohB,IAAMphB,KAAKqgD,cAC/C,WAAWn5B,GACT9D,EACAC,EACAD,EAAUpjB,KAAK8mB,MACfzD,EAAUrjB,KAAK+mB,WAInBg7B,eAAA,WACE,IAAMC,EACJhiD,KAAK4/C,QAAU5/C,KAAK6f,KAAO7f,KAAKg/C,WAAah/C,KAAKo/C,WAC9C6C,EAAWjiD,KAAK6/C,QAAU7/C,KAAKohB,IAAMphB,KAAKk/C,UAAYl/C,KAAKs/C,UAGjE,WAAWp4B,GACT86B,EACAC,EACAD,GALmBhiD,KAAKw/C,YAAcx/C,KAAK8mB,MAAQ9mB,KAAKy/C,cAMxDwC,GALoBjiD,KAAK0/C,WAAa1/C,KAAK+mB,OAAS/mB,KAAK2/C,mBAS7DuC,cAAA,SACEC,EACAxsC,GAEA,IAAMoQ,EAAO/lB,KAAKoiD,eAClB,OAAO10B,GACLy0B,EACAp8B,EAAKhrB,GACLgrB,EAAKjrB,GACLirB,EAAK7qB,GAAK6qB,EAAKhrB,GACfgrB,EAAK1qB,GAAK0qB,EAAKjrB,GACf6a,MAIJysC,aAAA,WACE,IAAMC,EAASriD,KAAK4/C,QAAU5/C,KAAK6f,KAC7ByiC,EAAStiD,KAAK6/C,QAAU7/C,KAAKohB,IAC7BmhC,EAAaviD,KAAKugD,eAAiBvgD,KAAK8mB,MAAQ9mB,KAAKwgD,gBACrDgC,EACJxiD,KAAKqgD,cAAgBrgD,KAAK+mB,OAAS/mB,KAAKsgD,iBAC1C,WAAWp5B,GACTm7B,EACAC,EACAD,EAASE,EACTD,EAASE,SAOFC,eACX,WACkBr7C,EACAuO,EACA+sC,EACAvzB,gBAEhB1W,sBALgBrR,cACAuO,iBACA+sC,0BACAvzB,2BAHA1W,OAAArR,EACAqR,UAAA9C,EACA8C,mBAAAiqC,EACAjqC,sBAAA0W,WALpB,2BAUUwzB,cAAA,SAAcllD,EAAaqN,GACjC,IAAKA,EAAM,CACT,GAAI9K,KAAKoH,KAAKu6C,qBAAqBiB,KAEjC,YADA5iD,KAAKoH,KAAKu6C,UAAU30C,aAAevP,GAGrCqN,EAAO9K,KAAKoH,KAAKqF,cAAco2C,eAAeplD,QAE3C2J,KAAK07C,YAAYh4C,MAIxB4P,SAAA,SAASjd,GAEP,YADKklD,cAAcllD,EAAIA,aAKzB0d,SAAA,SAAShX,GACP,GAAKnE,KAAK0iD,iBAAyBv+C,IACjCnE,KAAKoH,KAAKmoB,aAAa,MAAOprB,EAAIA,SAC7B,CACL,IAAM4+C,EAAM/iD,KAAKoH,KAAKqF,cAAcu2C,gBAAgBz1C,EAAQpF,MAAO,OACnE46C,EAAIxzB,aAAa,MAAOprB,EAAIA,KAC5BnE,KAAKoH,KAAK07C,YAAYC,kBAM1BznC,eAAA,SAAehT,GAEb,YADK8R,YAAY9R,EAAKgI,gBAKxBoL,UAAA,SAAUC,GACR,IAAMrJ,EAAKqJ,EAAKM,SACZ1K,EAAMe,EAAGgC,SAAStU,KAAK2V,SAC3B,GAAmB,iBAARpE,EAAkB,CACvBe,aAAcmK,KAGhBlL,EAAM0xC,GACJ3wC,EAAGmB,MACH,IAAIs1B,GAAuBx3B,EAAK,MAChC,IACAyK,eAGJ,IAAMlR,EAAO9K,KAAKmvB,oBAAoB7c,EAAIf,EAAKvR,KAAKoH,KAAKqF,eACzDzM,KAAK2iD,cAAcpxC,EAAKzG,mBA7Dcwb,aAmE5B48B,GAAkB3xC,GAChC,aACEA,GACAA,IAAQ+U,IACR/U,IAAQ+U,GAAUnG,QAClB5O,IAAQ+U,GAAUpG,MAClB3O,IAAQ+U,GAAU/G,YC/zCTi8B,GAAiB,CAC5B,qBACA,oBACA,kBACA,eACAtgC,SACA,yBACA,qBACA5jB,UACAokD,aACA,iBACAyH,QACA,kBACA,eACA,kBACA,eACA,sBACA,iBACA,2BACA,gBACA,kBACA,4BACA,uBACA,0BACA,6BACA,iBACA,gCACA,yBACAC,WACA,yBACA,2BACA,0BACA,qBACA,sBACA,oBACA,gBACA,iBACA,sBACA,yBACA,qBACAC,UACA,gBACA,gBACA,kBACAC,WACA,mBACA,iBACA,oBACAC,UACA,gBACA,mBACA,qBACAC,UACA,sBACA,uBACA,oBACA,qBACA,uBACA,oBACA,kBACA,cACA,gBACA,qBACA,iBACA,0BACA,yBACA,4BACA,yBACA,0BACA,iBACA,kBACA,sBACA,oBACA,sBACA,kBACA,oBACA,6BACAlP,cACA,iBACAmP,UACA,gBACA,kBACA,mBAGWC,GAA2B,CACtC,uBAGA,mBACA,UACA,UAaWC,GAAsB,CACjC,kCACA,kCACA,iCAGWC,GAAkB,CAC7B,WACA,YACA,iBACA,iBACA,iBACA,KAGWC,GAAwB,CAAC,QAAS,QAAS,KAE3CC,GAAyC,WAUpD,IATA,IAAMC,EAAQ,CAAC,OAAQ,QAAS,MAAO,UACjCC,EAAQ,CACZl9B,SACAC,UACA,eACA,gBACA,eACA,iBAEO3uB,EAAI,EAAGA,EAAIwrD,GAAgBxtD,OAAQgC,IAC1C,IAAK,IAAI+E,EAAI,EAAGA,EAAI4mD,EAAM3tD,OAAQ+G,IAEhC6mD,EADaJ,GAAgBxrD,GAAGgN,QAAQ,IAAK2+C,EAAM5mD,QAIvD,OAAO6mD,EAhB6C,YAmBtCC,GACdC,EACAC,GAGA,IADA,MAAMr6C,EAAM,OACU85C,mBAAiB,KAA5BQ,UACT,IAAK,IAAMzO,KAAQuO,EAAS,CAC1B,IAAMliC,EAAQoiC,EAAQh/C,QAAQ,IAAKuwC,GAC7B1zB,EAAQmiC,EAAQh/C,QAAQ,IAAK8+C,EAAQvO,IAC3C7rC,EAAIkY,GAASC,EACbnY,EAAImY,GAASD,iBAGW6hC,mBAAuB,KAAxCQ,UACT,IAAK,IAAM5C,KAAU0C,EAAW,CAC9B,IAAMniC,EAAQqiC,EAAcj/C,QAAQ,IAAKq8C,GACnCx/B,EAAQoiC,EAAcj/C,QAAQ,IAAK++C,EAAU1C,IACnD33C,EAAIkY,GAASC,EACbnY,EAAImY,GAASD,UAGVlY,MAGIw6C,GAAkBL,GAC7B,CACE,cAAe,QACf,YAAa,OACb,eAAgB,MAChB,aAAc,UAEhB,CAAE,aAAc,QAAS,cAAe,WAG7BM,GAAiBN,GAC5B,CACE,cAAe,MACf,YAAa,SACb,eAAgB,OAChB,aAAc,SAEhB,CAAE,aAAc,SAAU,cAAe,UAG9BO,GAAqBP,GAChC,CACE,cAAe,QACf,YAAa,OACb,eAAgB,SAChB,aAAc,OAEhB,CAAE,aAAc,QAAS,cAAe,WAG7BQ,GAAoBR,GAC/B,CACE,cAAe,MACf,YAAa,SACb,eAAgB,QAChB,aAAc,QAEhB,CAAE,aAAc,SAAU,cAAe,UAG9BS,cACX,WACkBjmD,EACAgX,QADAhX,kBACAgX,gBADAzV,WAAAvB,EACAuB,cAAAyV,6BAGlBkvC,aAAA,WACE,eAGFC,YAAA,SAAYroC,GACV,IAAM9d,EAAQuB,KAAKvB,MAAM4b,MAAMkC,GAC/B,OAAI9d,IAAUuB,KAAKvB,eAGRimD,EAAajmD,EAAOuB,KAAKyV,aAGtCovC,oBAAA,SAAoBC,GAClB,UAAIA,WAGOJ,EAAa1kD,KAAKvB,MAAOuB,KAAKyV,SAAWqvC,MAGtDxwC,SAAA,SAASqB,EAAwBu3B,GAC/B,OAAO+V,GAA2BttC,EAAS3V,KAAKvB,MAAOyuC,MAGzD9pC,UAAA,SAAUuS,GACR,eAQSovC,eACX,WACEtmD,EACAgX,EACgB25B,gBAEhB/4B,cAAM5X,EAAOgX,UAFG25B,iBAAA/4B,YAAA+4B,WAJpB,2BAYEuV,aAAA,WACE,WAAWD,GAAa1kD,KAAKvB,MAAOuB,KAAKyV,aAM3CmvC,YAAA,SAAYroC,GACV,IAAM9d,EAAQuB,KAAKvB,MAAM4b,MAAMkC,GAC/B,OAAI9d,IAAUuB,KAAKvB,eAGRsmD,EAAwBtmD,EAAOuB,KAAKyV,SAAUzV,KAAKovC,cAMhEyV,oBAAA,SAAoBC,GAClB,UAAIA,WAGOC,EACT/kD,KAAKvB,MACLuB,KAAKyV,SAAWqvC,EAChB9kD,KAAKovC,cAIThsC,UAAA,SAAUuS,GACR,IACE,QAAS3V,KAAKovC,UAAU96B,SAASqB,SAC1BnO,GACP9F,EAAejB,KAAK+G,gBA7CmBk9C,aAuD7BM,GACdrvC,EACAsvC,EACAC,GAEA,OAAW,MAAND,GAAcC,EAAGzvC,SAAWwvC,EAAGxvC,WAAayvC,EAAG9hD,UAAUuS,GACrDuvC,EAAGP,eAELM,MAOIE,GAAW,CACtB,eACA,oCAWcC,GAAW7jD,GACzB,MAAyB,KAAlBA,EAAKvG,OAAO,KAAcmqD,GAAS5jD,YAG5B8jD,GAAY9jD,GAC1B,QAASi6C,GAAej6C,YAGV+jD,GAAQz+C,EAAqBtF,GAC3C,OAAOsF,EAAMtF,YAMCgkD,GACd1+C,EACAtF,EACA9C,GAEKA,EAGHoI,EAAMtF,GAAQ9C,SAFPoI,EAAMtF,YAMDikD,GACd3+C,EACAtF,GAEA,OAAOsF,EAAMtF,YAGCkkD,GACd5+C,EACAtF,GAEA,IAAI6C,EAAIyC,EAAMtF,GAKd,OAJK6C,IAEHyC,EAAMtF,GADN6C,EAAI,IAGCA,MAGIshD,GAA6B,SACxC7+C,GAEA,IAAIzC,EAAIyC,EAAK8+C,uBAQb,OAJKvhD,IAEHyC,EAAK8+C,uBADLvhD,EAAI,IAGCA,YAGOwhD,GAAW/+C,EAAqBtF,GAC9C,OAAOsF,EAAMtF,YAGCskD,GACdh/C,EACAtF,GAEA,IAAI6C,EAAIyC,EAAMtF,GAKd,OAJK6C,IAEHyC,EAAMtF,GADN6C,EAAI,IAGCA,WAGO0hD,GACdnwC,EACAvL,EACAvD,EACAi+C,EACAiB,EACAC,EACAC,GAwBA,IAAK,IAAMv/C,IAtBO,CAChB,CAAEqF,GAAIg6C,EAAeG,SAAU,YAC/B,CAAEn6C,GAAIi6C,EAAUE,SAAU,aAElBrlD,SAAQ,SAAC+E,GACjB,GAAIA,EAAKmG,GAAI,CACX,IAAMo6C,EAAWV,GAAmBr7C,EAAQxE,EAAKsgD,WACjD97C,EAAS+7C,EAASvgD,EAAKmG,OAGrBo6C,EAASvgD,EAAKmG,IADd3B,EAAS,QAKX67C,GACeP,GAA2Bt7C,GAEnC3O,KAAK,CACZ2qD,OAFFh8C,EAAS,GAGPunC,QAASsU,IAGMp/C,EACjB,GA/GuB,KA+GTH,EA/GJ1L,OAAO,GAkHjB,GAtHOmqD,GAsHWz+C,GAAO,CAEvB,IAAM2/C,EAAKT,GAAW/+C,EAAOH,GACvB4/C,EAAKT,GAAkBz7C,EAAQ1D,GACrCxM,MAAMqsD,UAAU9qD,KAAK8Y,MAAM+xC,EAAID,OAC1B,CAEL,IAAMnB,EAAKI,GAAQz+C,EAAOH,GAAMm+C,oBAAoBC,GAC9CG,EAAKK,GAAQl7C,EAAQ1D,GAC3B6+C,GAAQn7C,EAAQ1D,EAAMs+C,GAAcrvC,EAASsvC,EAAIC,cAgBvCsB,GACdC,EACA1R,GAEA,GAAI0R,EAAMrwD,OAAS,EAAG,CACpBqwD,EAAM17B,MAAK,SAAC7rB,EAAGwK,UAAMA,EAAEmN,cAAgB3X,EAAE2X,iBAEzC,IADA,IAAI6vC,EAAgC,KAC3BtuD,EAAIquD,EAAMrwD,OAAS,EAAGgC,GAAK,EAAGA,KACrCsuD,EAAUD,EAAMruD,IACRsuD,QAAU3R,EAClBA,EAAS2R,EAEX,OAAOA,SAEF3R,MAGI4R,eAGX,WACkBC,EACAjxC,gBAEhBiB,sBAHgBgwC,eACAjxC,iBAJlBu3B,SAAmB,GAGDt2B,QAAAgwC,EACAhwC,UAAAjB,WALpB,2BAUEkxC,YAAA,SAAYtlD,GACVvB,KAAKktC,SAAW3rC,KAGVulD,YAAA,WACN,IAAMC,EAAUzB,GAAQtlD,KAAK4mD,MAAO,aACpC,IAAKG,EAAQtoD,MAAM0d,YAEjB,OAAOM,GAAArK,GAET,IAAM/U,EAAI0pD,EAAQtoD,MAClB,af1TiCkT,GACnC,OAAQA,EAAK3M,eACX,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,IACH,SACF,QACE,We+S8B3H,EAAEsU,MAChC,UAAU5S,MAAM,oBAElB,OAAO1B,EAAEmb,IAAMiE,GAAuBpf,EAAEsU,SAM1CkJ,aAAA,SAAaC,GAEX,GAAsB,cAAlB9a,KAAKktC,SACP,gBAmDJpyB,EACAksC,EACArxC,GAGA,IAAMhE,GADNmJ,EAAUmsC,GAA8BnsC,EAASksC,EAAgBrxC,IAC5ChE,KACf6G,EAAMsC,EAAQtC,IACpB,MAAa,OAAT7G,EACKmJ,MAEIwL,GADO,MAAT3U,EACe6G,EAAM,IAAOwuC,EAEdxuC,EAAM7C,EAAQhC,cAAchC,MAFE,OA7DxBmJ,EAAS9a,KAAK8mD,cAAe9mD,KAAK2V,YAE7C,MAAhBmF,EAAQnJ,MACQ,MAAhBmJ,EAAQnJ,MACQ,OAAhBmJ,EAAQnJ,KAER,OAAOs1C,GACLnsC,EACA9a,KAAK8mD,cACL9mD,KAAK2V,YAEkB,KAAhBmF,EAAQnJ,KAAa,CAC9B,GAAsB,gBAAlB3R,KAAKktC,SACP,OAAOpyB,EAET,IAAMnJ,EAAO3R,KAAKktC,SAAS7oC,MAAM,yBAA2B,KAAO,KACnE,WAAWiiB,GAAYxL,EAAQtC,IAAK7G,UAE/BmJ,KAMTY,UAAA,SAAUC,GACR,MAAqB,aAAjB3b,KAAKktC,SACK+V,GAA2BjjD,KAAK2V,QAASgG,EAAM3b,KAAKktC,UACrD7yB,MAAMra,MAEZ2b,MA9D6B2K,aAkExB2gC,GACdnsC,EACAosC,EACAvxC,GAEA,IAAMhE,EAAOmJ,EAAQnJ,KACf6G,EAAMsC,EAAQtC,IACpB,MAAa,OAAT7G,GAA0B,OAATA,MAER2U,GAAY9N,GADTiE,GAAuB9K,GAAQ8K,GAAArK,IACR80C,EAAc,MACjC,QAATv1C,MACE2U,GAAY9N,EAAM7C,EAAQ1E,WAAY,MAE1C6J,MAyBEqsC,uDACX5yC,MAAA,SAAM2X,OAENk7B,UAAA,SAAUtxC,GACR,WAAWuxC,GAAe,CAACrnD,KAAM8V,OAGnCymC,MAAA,WAEE,kBAIS+K,eACX,WAA4BC,gBAC1B9uC,sBAD0B8uC,qBAAA9uC,gBAAA8uC,8BAO5BhzC,MAAA,SAAM2X,GACJA,EAAgBs7B,kBACdxnD,KAAKunD,cAAcE,MAAMv7B,QAVUi7B,IAe5BE,eACX,WAA4B/+C,gBAC1BqQ,sBAD0BrQ,YAAAqQ,OAAArQ,WAD9B,2BAQEiM,MAAA,SAAM2X,GACJ,IAAK,IAAI9zB,EAAI,EAAGA,EAAI4H,KAAKsI,KAAKlS,OAAQgC,IACpC4H,KAAKsI,KAAKlQ,GAAGmc,MAAM2X,MAOvBk7B,UAAA,SAAUtxC,GAER,YADKxN,KAAK7M,KAAKqa,WAOjBymC,MAAA,WACE,WAAW8K,EAAe,GAAG1tD,OAAOqG,KAAKsI,WA1BT6+C,IA8BvBO,eACX,WACkB7gD,EACAi+C,EACAiB,EACAC,EACA2B,gBAEhB9uC,sBANgBhS,eACAi+C,qBACAiB,uBACAC,kBACA2B,uBAJA9uC,QAAAhS,EACAgS,cAAAisC,EACAjsC,gBAAAktC,EACAltC,WAAAmtC,EACAntC,kBAAA8uC,8BAQlBpzC,MAAA,SAAM2X,GACJ45B,GACE55B,EAAgBvW,QAChBuW,EAAgB07B,aAChB5nD,KAAK6G,MACL7G,KAAK8kD,YACL9kD,KAAK+lD,cACL/lD,KAAKgmD,SACL95B,EAAgB0mB,0BAA0B5yC,KAAK2nD,sBAtBhBR,IA2BxBU,eAGX,0BACE/uC,sBAHF4tC,QAAyB,cAD3B,2BAUEnyC,MAAA,SAAM2X,GACJlsB,KAAK0mD,QAAQnyC,MAAM2X,MAGrBrV,YAAA,WACE,YAGFixC,YAAA,SAAYC,GAEV,aApB+BZ,IAwBtBa,eACX,WAA4BC,gBAC1BjvC,sBAD0BivC,iBAAAjvC,YAAAivC,WAD9B,2BAQE1zC,MAAA,SAAM2X,GACAA,EAAgBg8B,kBAAkBC,SAASnoD,KAAKioD,YAClDjoD,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,aAOFixC,YAAA,SAAYC,GAIV,YAHSrB,SACPqB,EAAQK,cAAcL,EAAQ3hB,QAASpmC,KAAKioD,UAAWjoD,KAAK0mD,gBA3B5BmB,IAiCzBQ,eACX,WAA4Bt8C,gBAC1BwN,sBAD0BxN,UAAAwN,KAAAxN,WAD9B,2BAQEwI,MAAA,SAAM2X,GAEFA,EAAgBo8B,WAAatoD,KAAK+L,IAClCmgB,EAAgBq8B,cAAgBvoD,KAAK+L,IAErC/L,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,aAOFixC,YAAA,SAAYC,GAIV,YAHSrB,SACPqB,EAAQK,cAAcL,EAAQx5B,IAAKvuB,KAAK+L,GAAI/L,KAAK0mD,gBA9BpBmB,IAoCtBW,eACX,WAA4BloB,gBAC1B9mB,sBAD0B8mB,iBAAA9mB,YAAA8mB,WAD9B,2BAQE/rB,MAAA,SAAM2X,GACAA,EAAgBu8B,kBAAoBzoD,KAAKsgC,WAC3CtgC,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,YAOFixC,YAAA,SAAYC,GAIV,YAHSrB,SACPqB,EAAQK,cAAcL,EAAQW,KAAM1oD,KAAKsgC,UAAWtgC,KAAK0mD,gBA3BrBmB,IAiC7Bc,eACX,WAA4BnkB,EAA4BlE,gBACtD5mB,sBAD0B8qB,YAA4BlE,iBAA5B5mB,KAAA8qB,EAA4B9qB,YAAA4mB,WAD1D,2BAQE/rB,MAAA,SAAM2X,GAEFA,EAAgBu8B,kBAAoBzoD,KAAKsgC,WACzCpU,EAAgB08B,kBAAoB5oD,KAAKwkC,IAEzCxkC,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,YAOFixC,YAAA,SAAYC,GACV,GAAI/nD,KAAK0mD,QAAS,CAChB,IAAIjgD,EAASshD,EAAQc,SAAS7oD,KAAKwkC,IAC9B/9B,IACHA,OAAcshD,EAAQe,cACtBf,EAAQc,SAAS7oD,KAAKwkC,IAAM/9B,GAG9BshD,EAAQK,cAAcL,EAAQgB,OADhBtiD,EAASzG,KAAKsgC,UACiBtgC,KAAK0mD,sBApClBmB,IA0CzBmB,eACX,WAA4BC,gBAC1BrvC,sBAD0BqvC,oBAAArvC,eAAAqvC,8BAO5B10C,MAAA,SAAM2X,GACJ,IAAM9kB,EAAO8kB,EAAgBg9B,eAC7B,GAAI9hD,GAA4C,KAApC8kB,EAAgBu8B,iBAAyB,CACnD,IAAMjkD,EAAO4C,EAAKgB,aAAa,QAC/B,GAAI5D,GAAQA,EAAKH,MAAM,MAAO,CAC5B,IAAM0H,EAAKvH,EAAK1M,UAAU,GACpBsS,EAAShD,EAAKqF,cAAcC,eAAeX,GACjD,GAAI3B,EAAQ,CACV,IAAM++C,EAAW/+C,EAAOpC,eAAeuF,EAAQ67C,KAAM,QACjDD,GAAYA,EAAS9kD,MAAMrE,KAAKipD,eAClCjpD,KAAK0mD,QAAQnyC,MAAM2X,UAlBgB27B,IA0BlCwB,eACX,WAA4B7kB,gBAC1B1qB,sBAD0B0qB,UAAA1qB,KAAA0qB,8BAO5BjwB,MAAA,SAAM2X,GACAA,EAAgB08B,kBAAoB5oD,KAAKwkC,IAC3CxkC,KAAK0mD,QAAQnyC,MAAM2X,OAViB27B,IAe7ByB,eACX,WAA4B9kB,EAA4BjjC,gBACtDgoD,sBAD0B/kB,YAA4BjjC,YAA5BgoD,KAAA/kB,EAA4B+kB,OAAAhoD,8BAOxDgT,MAAA,SAAM2X,GAEFA,EAAgBg9B,gBAChBh9B,EAAgBg9B,eAAeM,eAAexpD,KAAKwkC,GAAIxkC,KAAKuB,OAE5DvB,KAAK0mD,QAAQnyC,MAAM2X,OAbwB27B,IAkBpC4B,eACX,WACkBjlB,EACAjjC,EACA9C,gBAEhBirD,sBAJgBllB,YACAjjC,cACA9C,aAFAirD,KAAAllB,EACAklB,OAAAnoD,EACAmoD,QAAAjrD,WAJpB,2BAYE8V,MAAA,SAAM2X,GAEFA,EAAgBg9B,gBAChBh9B,EAAgBg9B,eAAelhD,eAAehI,KAAKwkC,GAAIxkC,KAAKuB,OAC1DvB,KAAKvB,OAEPuB,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,MAAiB,QAAb7W,KAAKuB,MAAkBvB,KAAKwkC,IAAMj3B,EAAQ67C,YAShDtB,YAAA,SAAYC,GACV,MAAiB,QAAb/nD,KAAKuB,MAAkBvB,KAAKwkC,IAAMj3B,EAAQ67C,OACxCppD,KAAK0mD,SACPqB,EAAQK,cAAcL,EAAQ4B,UAAW3pD,KAAKvB,MAAOuB,KAAK0mD,iBAtCtBmB,IA8C/B+B,eACX,WAA4BplB,EAA4BjjC,gBACtDsoD,sBAD0BrlB,YAA4BjjC,YAA5BsoD,KAAArlB,EAA4BqlB,OAAAtoD,WAD1D,2BAQEgT,MAAA,SAAM2X,GACJ,GAAIA,EAAgBg9B,eAAgB,CAClC,IAAM1kB,EAAKtY,EAAgBg9B,eAAelhD,eACxChI,KAAKwkC,GACLxkC,KAAKuB,MAEHijC,GAAMmf,GAAoBnf,IAC5BxkC,KAAK0mD,QAAQnyC,MAAM2X,OAQzBrV,YAAA,WACE,YAMFixC,YAAA,SAAYC,GACV,aA/B+CF,IAmCtCiC,eACX,WACkBtlB,EACAjjC,EACAwoD,gBAEhBC,sBAJgBxlB,YACAjjC,cACAwoD,cAFAC,KAAAxlB,EACAwlB,OAAAzoD,EACAyoD,SAAAD,8BAQlBx1C,MAAA,SAAM2X,GACJ,GAAIA,EAAgBg9B,eAAgB,CAClC,IAAMe,EAAO/9B,EAAgBg9B,eAAelhD,eAC1ChI,KAAKwkC,GACLxkC,KAAKuB,MAEH0oD,GAAQA,EAAK5lD,MAAMrE,KAAK+pD,SAC1B/pD,KAAK0mD,QAAQnyC,MAAM2X,QAnBqB27B,IAyBnCqC,eACX,WAA4BC,gBAC1BC,sBAD0BD,kBAAAC,aAAAD,8BAO5B51C,MAAA,SAAM2X,GACAA,EAAgBnkB,KAAK1D,MAAMrE,KAAKmqD,aAClCnqD,KAAK0mD,QAAQnyC,MAAM2X,OAVY27B,IAexBwC,eACX,8CADF,2BAQE91C,MAAA,SAAM2X,GACAA,EAAgBo+B,SAClBtqD,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,aAlB+BgxC,IAsBtB0C,eACX,8CADF,2BAQEh2C,MAAA,SAAM2X,GACAA,EAAgBtY,QAClB5T,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,cAlB8BgxC,IAsBrB2C,eACX,WAA4BtrD,EAA2BwK,gBACrD+gD,sBAD0BvrD,WAA2BwK,SAA3B+gD,IAAAvrD,EAA2BurD,IAAA/gD,8BAQ7C6nC,aAAA,SAAahW,GACrB,OAAOmvB,GAAsBnvB,EAAOv7B,KAAKd,EAAGc,KAAK0J,OAVpBm+C,IAcpB8C,eACX,WAAYzrD,EAAWwK,sBACfxK,EAAGwK,gBAFb,2BAQE6K,MAAA,SAAM2X,GACAlsB,KAAKuxC,aAAarlB,EAAgB0+B,sBACpC5qD,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,aAlBoC2zC,IAsB3BK,eACX,WAAY3rD,EAAWwK,sBACfxK,EAAGwK,gBAFb,2BAQE6K,MAAA,SAAM2X,GAKAlsB,KAAKuxC,aAHPrlB,EAAgB4+B,yBACd5+B,EAAgB08B,kBAChB18B,EAAgBu8B,oBAElBzoD,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,aAtB0C2zC,IA0BjCO,eACX,WAAY7rD,EAAWwK,sBACfxK,EAAGwK,gBAFb,2BAQE6K,MAAA,SAAM2X,GACJ,IAAIqP,EAAQrP,EAAgB8+B,6BACd,OAAVzvB,IACFA,EAAQrP,EAAgB8+B,6BACtB9+B,EAAgBg9B,eAAep7C,WAAW1B,kBAC1C8f,EAAgB0+B,oBAChB,GAEA5qD,KAAKuxC,aAAahW,IACpBv7B,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,aAzBwC2zC,IA6B/BS,eACX,WAAY/rD,EAAWwK,sBACfxK,EAAGwK,gBAFb,2BAQE6K,MAAA,SAAM2X,GACJ,IAAMg/B,EAASh/B,EAAgBi/B,kCAC/B,IAAKD,EAAOh/B,EAAgB08B,kBAAmB,CAC7C,IAAIxhD,EAAO8kB,EAAgBg9B,eAC3B,EAAG,CACD,IAAM1kB,EAAKp9B,EAAKc,aACVo4B,EAAYl5B,EAAKk5B,UACnB8qB,EAAWF,EAAO1mB,GACjB4mB,IACHA,EAAWF,EAAO1mB,GAAM,IAE1B4mB,EAAS9qB,IAAc8qB,EAAS9qB,IAAc,GAAK,QAC3Cl5B,EAAOA,EAAKikD,yBAGjB9Z,aACH2Z,EAAOh/B,EAAgB08B,kBACrB18B,EAAgBu8B,oBAIpBzoD,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,aArC8C2zC,IAyCrCc,eACX,8CADF,2BAQE/2C,MAAA,SAAM2X,GAEJ,IADA,IAAIphB,EAAoBohB,EAAgBg9B,eAAe78C,WAChDvB,GAAM,CACX,OAAQA,EAAKC,UACX,KAAKwgD,KAAKC,aACR,OACF,KAAKD,KAAKE,UACR,GAAK3gD,EAAc1U,OAAS,EAC1B,OAGN0U,EAAOA,EAAKyB,iBAETm6C,QAAQnyC,MAAM2X,MAMrBrV,YAAA,WACE,aA5B+BgxC,IAgCtB6D,eACX,8CADF,2BAQEn3C,MAAA,SAAM2X,QACSA,EAAgBg9B,eACXyC,UAChB3rD,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,aAnBiCgxC,IAuBxB+D,eACX,8CADF,2BAQEr3C,MAAA,SAAM2X,QACSA,EAAgBg9B,eACXyC,UAChB3rD,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,aAnBkCgxC,IAuBzBgE,eACX,8CADF,2BAQEt3C,MAAA,SAAM2X,GACJ,IAAM9kB,EAAO8kB,EAAgBg9B,oBACxB9hD,EAAa0kD,eAAsB1kD,EAAa2kD,SACnD/rD,KAAK0mD,QAAQnyC,MAAM2X,MAOvBrV,YAAA,WACE,aAnBiCgxC,IAuBxBmE,eACX,WAA4B5c,gBAC1B6c,sBAD0B7c,iBAAA6c,YAAA7c,WAD9B,2BAQE76B,MAAA,SAAM2X,GACJ,GAAIA,EAAgBggC,WAAWlsD,KAAKovC,WAClC,IACEljB,EAAgBigC,oBAAoB1wD,KAAKuE,KAAKovC,WAC9CpvC,KAAK0mD,QAAQnyC,MAAM2X,GAFrB,QAIEA,EAAgBigC,oBAAoB7uD,UAQ1CuZ,YAAA,WACE,aAvBsCgxC,IA2B7BuE,eAGX,0BACEC,sBAHFC,oBADF,2BAUE/3C,MAAA,SAAM2X,GACJlsB,KAAKssD,cAMP/P,MAAA,WACE,IAAMgQ,EAAS,IAAIH,EAEnB,OADAG,EAAOD,QAAUtsD,KAAKssD,QACfC,MApB6BpF,IAwB3BqF,eAIX,WAAYlkD,gBACVmkD,sBAJFC,4BACAC,mBAIEF,EAAKC,mBAAqB,IAAIN,GAC9BK,EAAKE,YAAcnG,GAAal+C,EAAMmkD,EAAKC,6BAP/C,2BAaEn4C,MAAA,SAAM2X,GACJlsB,KAAK2sD,YAAYp4C,MAAM2X,GAClBlsB,KAAK0sD,mBAAmBJ,SAC3BtsD,KAAK0mD,QAAQnyC,MAAM2X,GAErBlsB,KAAK0sD,mBAAmBJ,cAM1Bz1C,YAAA,WACE,YAAa81C,YAA8B91C,kBAzBTgxC,IAmDzB+E,cACX,WACkBxd,EACAuY,EACA9U,QAFAzD,sBACAuY,4BACA9U,qBAFA7yC,eAAAovC,EACApvC,qBAAA2nD,EACA3nD,mBAAA6yC,6BAGlBjlB,UAAA,SAAU1B,GACRA,EAAgB0B,UAAU5tB,KAAKovC,UAAWpvC,KAAK6yC,kBAGjDga,UAAA,SAAU3gC,GACRA,EAAgB2gC,UAAU7sD,KAAKovC,UAAWpvC,KAAK6yC,kBAGjDD,0BAAA,SACE1mB,GAEA,OAAOA,EAAgB0mB,0BAA0B5yC,KAAK2nD,uBAI7CmF,eAIX,WACE1d,EACAuY,EACA9U,sBAEMzD,EAAWuY,EAAiB9U,gBATtC,2BAeE4U,MAAA,SAAMv7B,GACJ,WAAW4gC,EACT9sD,KAAKovC,UACLpvC,KAAK2nD,gBACL3nD,KAAK4yC,0BAA0B1mB,OAOnCzwB,KAAA,SAAKywB,EAAkC0b,GAIrC,UAHIA,GACF5nC,KAAK4tB,UAAU1B,SAQnB5uB,IAAA,SAAI4uB,EAAkC0b,GACpC,UAAIA,IACF5nC,KAAK6sD,UAAU3gC,WArCX0gC,IA4CGG,eAIX,WACE3d,EACAuY,EACA9U,sBAEMzD,EAAWuY,EAAiB9U,gBATtC,2BAeE4U,MAAA,SAAMv7B,GACJ,WAAW6gC,EACT/sD,KAAKovC,UACLpvC,KAAK2nD,gBACL3nD,KAAK4yC,0BAA0B1mB,OAOnCzwB,KAAA,SAAKywB,EAAkC0b,GAMrC,UALIA,EACF5nC,KAAK4tB,UAAU1B,GACG,GAAT0b,GACT5nC,KAAK6sD,UAAU3gC,SAQnB5uB,IAAA,SAAI4uB,EAAkC0b,GACpC,UAAIA,GACF5nC,KAAK6sD,UAAU3gC,QAEG,GAAT0b,GACT5nC,KAAK4tB,UAAU1B,WA1CX0gC,IAgDGI,eAMX,WACE5d,EACAuY,EACA9U,gBAEAoa,cAAM7d,EAAWuY,EAAiB9U,UAPpCqa,kBAJF,2BAiBEzF,MAAA,SAAMv7B,GACJ,WAAW8gC,EACThtD,KAAKovC,UACLpvC,KAAK2nD,gBACL3nD,KAAK4yC,0BAA0B1mB,OAOnCzwB,KAAA,SAAKywB,EAAkC0b,GACrC,QAAI5nC,KAAKktD,QACPltD,KAAK6sD,UAAU3gC,UASnB5uB,IAAA,SAAI4uB,EAAkC0b,GACpC,YAASslB,OACPltD,KAAK6sD,UAAU3gC,QAGJ,GAAT0b,IAEF5nC,KAAKktD,SACLltD,KAAK4tB,UAAU1B,YA9CX0gC,IAoDGO,eAMX,WACE/d,EACAuY,EACA9U,gBAEAua,cAAMhe,EAAWuY,EAAiB9U,UAPpCqa,kBAJF,2BAiBEzF,MAAA,SAAMv7B,GACJ,WAAWihC,EACTntD,KAAKovC,UACLpvC,KAAK2nD,gBACL3nD,KAAK4yC,0BAA0B1mB,OAOnCzwB,KAAA,SAAKywB,EAAkC0b,GAQrC,YAPSslB,SACO,GAAVtlB,EACF5nC,KAAK4tB,UAAU1B,GACG,GAAT0b,GACT5nC,KAAK6sD,UAAU3gC,UASrB5uB,IAAA,SAAI4uB,EAAkC0b,GACpC,GAAI5nC,KAAKktD,MAAO,CACd,IAAc,GAAVtlB,EAEF,YADKilB,UAAU3gC,MAEG,GAAT0b,GACT5nC,KAAK4tB,UAAU1B,WAGb0b,IAEF5nC,KAAKktD,SACLltD,KAAK4tB,UAAU1B,IAGnB,aAxDM0gC,IAgEGS,cACX,WACkBC,EACAxlD,QADAwlD,sBACAxlD,eADA9H,eAAAstD,EACAttD,aAAA8H,6BAMlB2/C,MAAA,SAAMv7B,GACJ,eAMFzwB,KAAA,SAAKywB,EAAkC0b,GACrC,YAMFtqC,IAAA,SAAI4uB,EAAkC0b,GACpC,UAAIA,IACF1b,EAAgBqhC,0BAA0BvtD,KAAKstD,UAAWttD,KAAK8H,mBAUxD0lD,cACX,WAA4BzlD,QAAAA,YAAA/H,UAAA+H,6BAK5B0/C,MAAA,SAAMv7B,GACJ,eAMFzwB,KAAA,SAAKywB,EAAkC0b,GACrC,YAMFtqC,IAAA,SAAI4uB,EAAkC0b,GACpC,UAAIA,IACF1b,EAAgBnkB,KAAO/H,KAAK+H,eAUrB0lD,cACX,WAA4BC,QAAAA,iBAAA1tD,eAAA0tD,6BAK5BjG,MAAA,SAAMv7B,GACJ,eAMFzwB,KAAA,SAAKywB,EAAkC0b,GACrC,YAMFtqC,IAAA,SAAI4uB,EAAkC0b,GACpC,UAAIA,IACF1b,EAAgBq3B,OAASvjD,KAAK0tD,oBAuEvBC,eACX,WAAmB7lD,gBACjB8lD,sBADiB9lD,eAAA8lD,UAAA9lD,WADrB,2BAKU+lD,sBAAA,SAAsBpwD,EAAoB0M,GAChD,MACO,QADCA,MAGSmc,GADT7oB,GAGe,qBAIN6oB,GADT7oB,GAGe,OAOzB+d,UAAA,SAAUC,GACR,GAAkB,SAAdA,EAAKla,KACP,mBAAaia,oBAAUC,GAEzB,IAEIqyC,EAFA3jD,EAAO,SACP4jD,EAA+B,KAEnC,GAAItyC,EAAKnL,OAAO,aAAcgW,GAAe,CAC3C,IAAMhW,EAAUmL,EAAKnL,OAAO,GAAqBA,OAC7CA,EAAOla,QAAU,IACnB+T,EAAOmG,EAAO,GAAG0L,eAEnB+xC,EAAgBz9C,EAAO,GAAG0L,mBAE1B+xC,EAAgBtyC,EAAKnL,OAAO,GAAG0L,cAUjC,OAPE8xC,EAAe9tD,KAAK6tD,sBADlBpyC,EAAKnL,OAAOla,OAAS,EAErBqlB,EAAKnL,OAAO,GAAG0L,cAIyB,KAHxC7R,GAKAnK,KAAK8H,SAAW9H,KAAK8H,QAAQkmD,aAAaD,QAChCF,sBACV7tD,KAAK8H,QAAQM,aAAa2lD,GAC1B5jD,GAGG2jD,MAtDiCxnC,IA6D5C,SAAS2nC,GAAgC18C,GAIvC,GAAImhC,GAAwBnhC,GAAM,CAChC,GAAIA,aAAe+U,GACjB,OAAO/U,EAAIyK,cAEb,GAAIzK,aAAe+U,GACjB,OAAO/U,EAAIjB,OAAOxG,KAAI,SAACtE,UAAMyoD,GAAgCzoD,MAAIiD,KAAK,UAGnE,OAGIylD,eACX,WACSnG,EACAjgD,EACSqmD,gBAEhBC,sBAJOrG,iBACAjgD,iBACSqmD,uBAFTC,UAAArG,EACAqG,UAAAtmD,EACSsmD,kBAAAD,WAJpB,2BAYExzC,WAAA,SAAWC,GACT,IAAMmtC,EAAU/nD,KAAK+nD,QACfxE,EAASwE,EAAQxE,OACjB8K,EAAWp3D,KAAK4B,MAAM0qD,EAAOntD,OAAS,GAAK,EACjD,OAAQwkB,EAAMrZ,MACZ,IAAK,aACH,IAAM2E,EAASq9C,EAAO,EAAItsD,KAAKC,IAAIm3D,EAAUtG,EAAQuG,aAErD,OADAvG,EAAQuG,aACDpoD,EAET,IAAK,cAIH,OAHI6hD,EAAQuG,WAAa,GACvBvG,EAAQuG,aAEH/K,EAAO,EAAItsD,KAAKC,IAAIm3D,EAAUtG,EAAQuG,YAAc,GAC7D,IAAK,gBAEH,OADAvG,EAAQuG,iBACGhoC,GAAQ,IACrB,IAAK,iBAIH,OAHIyhC,EAAQuG,WAAa,GACvBvG,EAAQuG,iBAEChoC,GAAQ,IAEvB,OAAO1L,KAGD4O,OAAA,SAAOhR,EAAarO,GAC1B,IAII/F,EAJAmqD,KAGAC,KAEmC,OAAlCpqD,EAAI+F,EAAK9F,MAAM,iBAClBkqD,KACApkD,EAAO/F,EAAE,IACmC,OAAlCA,EAAI+F,EAAK9F,MAAM,kBACzBmqD,KACArkD,EAAO/F,EAAE,IAEX,IAAI8B,EAAS,GAiBb,OAhBIuoD,GAAkBtkD,GACpBjE,WA8eyBwoD,EAAgBl2C,GAE7C,GAAIA,EADQk2C,EAAQ,IACHl2C,GAAO,GAAKA,GAAOvhB,KAAKyZ,MAAM8H,GAC7C,MAAO,GAGT,IADA,IAAItS,EAAS,GACJ9N,EAAI,EAAGA,EAAIs2D,EAAQt4D,OAAQgC,GAAK,EAAG,CAC1C,IAAMqG,EAAQiwD,EAAQt2D,GAClB41C,EAAQ/2C,KAAK4B,MAAM2f,EAAM/Z,GAC7B,GAAIuvC,EAAQ,GACV,MAAO,GAGT,IADAx1B,GAAOw1B,EAAQvvC,EACRuvC,EAAQ,GACb9nC,GAAUwoD,EAAQt2D,EAAI,GACtB41C,WAGG9nC,GAhgBqBuoD,GAAkBtkD,GAAOqO,GACxCm2C,GAAoBxkD,GAC7BjE,WAmhB2B0oD,EAAqBp2C,GACpD,GAAIA,GAAO,GAAKA,GAAOvhB,KAAKyZ,MAAM8H,GAChC,MAAO,GAET,IAAMq2C,WAtBuBpxD,GAG7B,IAFA,IAAMmM,EAAM,GACRxR,EAAI,EACDA,EAAIqF,EAAIrH,QACb,GAA4B,KAAxBqH,EAAIwH,OAAO7M,EAAI,EAAG,GAAW,CAC/B,IAAM2zB,EAAQtuB,EAAInB,WAAWlE,GACvB4zB,EAAOvuB,EAAInB,WAAWlE,EAAI,GAChCA,GAAK,EACL,IAAK,IAAI+E,EAAI4uB,EAAO5uB,GAAK6uB,EAAM7uB,IAC7ByM,EAAInO,KAAK40B,OAAOC,aAAanzB,SAG/ByM,EAAInO,KAAKgC,EAAIwH,OAAO7M,IAAK,IAG7B,OAAOwR,GAOyBglD,GAC5B1oD,EAAS,GACb,EAAG,CAED,IAAM4oD,IADNt2C,EACoBq2C,EAASz4D,OAC7B8P,EAAS2oD,EAASC,GAAS5oD,EAC3BsS,GAAOA,EAAMs2C,GAASD,EAASz4D,aACxBoiB,EAAM,GACf,OAAOtS,GA/hBuByoD,GAAoBxkD,GAAOqO,GAC7B,MAAfwG,GAAM7U,GACfjE,EAAS8Y,GAAM7U,GACE,wBAARA,EAEY,IADrBjE,KAAYsS,GACDpiB,SACT8P,MAAaA,GAGfA,EADiB,mBAARiE,GAAqC,yBAARA,WA4iB1CqO,EACAu2C,GAEA,GAAIv2C,EAAM,MAAQA,GAAO,KACvB,SAAUA,EAEZ,GAAW,GAAPA,EACF,OAAOu2C,EAAUC,OAAOh0D,OAAO,GAEjC,IAAMujC,EAAM,IAAIhxB,GAKhB,GAJIiL,EAAM,IACR+lB,EAAIh2B,OAAOwmD,EAAUE,UACrBz2C,GAAOA,GAELA,EAAM,GACR+lB,EAAIh2B,OAAOwmD,EAAUC,OAAOh0D,OAAOwd,aACzBu2C,EAAUG,QAAU12C,GAAO,GACrC+lB,EAAIh2B,OAAOwmD,EAAUI,QAAQn0D,OAAO,IACzB,GAAPwd,GACF+lB,EAAIh2B,OAAOwmD,EAAUC,OAAOh0D,OAAOwd,EAAM,SAEtC,CACL,IAAM42C,EAAYn4D,KAAK4B,MAAM2f,EAAM,KAC/B42C,IACF7wB,EAAIh2B,OAAOwmD,EAAUC,OAAOh0D,OAAOo0D,IACnC7wB,EAAIh2B,OAAOwmD,EAAUI,QAAQn0D,OAAO,KAEtC,IAAMq0D,EAAWp4D,KAAK4B,MAAM2f,EAAM,KAAO,GACrC62C,IACF9wB,EAAIh2B,OAAOwmD,EAAUC,OAAOh0D,OAAOq0D,IACnC9wB,EAAIh2B,OAAOwmD,EAAUI,QAAQn0D,OAAO,KAEtC,IAAMs0D,EAAOr4D,KAAK4B,MAAM2f,EAAM,IAAM,GAChC82C,IACF/wB,EAAIh2B,OAAOwmD,EAAUC,OAAOh0D,OAAOs0D,IACnC/wB,EAAIh2B,OAAOwmD,EAAUI,QAAQn0D,OAAO,KAEtC,IAAMu0D,EAAO/2C,EAAM,GACf+2C,GACFhxB,EAAIh2B,OAAOwmD,EAAUC,OAAOh0D,OAAOu0D,WAKhChxB,EAAI5+B,YAvlBiB6Y,EAAKg3C,OAEjBh3C,EAEV+1C,EACKroD,EAAOc,cAEZwnD,EACKtoD,EAAOlB,cAETkB,KAGTupD,iBAAA,SAAiBn/C,cACT4c,EAAc5c,EAAO,GAAG3Q,WACxBwK,EAAOmG,EAAOla,OAAS,EAAIka,EAAO,GAAG0L,cAAgB,UACrDpS,EAAM5J,KAAK+nD,QAAQzgC,SAAS4F,GAClC,GAAItjB,GAAOA,EAAIxT,OAEb,WAAWkwB,GAAQtmB,KAAKwpB,OADR5f,GAAOA,EAAIxT,QAAUwT,EAAIA,EAAIxT,OAAS,IAAO,EACtB+T,IAEvC,IAAM8xB,EAAI,IAAI3V,GACZtmB,KAAKmuD,gBAAgB5kC,kBAAkB2D,GAAa,SAACwiC,UACnDC,EAAKnmC,OAAOkmC,GAAU,EAAGvlD,OAG7B,WAAWmc,GAAc,CAAC2V,OAI9B2zB,kBAAA,SAAkBt/C,cACV4c,EAAc5c,EAAO,GAAG3Q,WACxB6d,EAAYlN,EAAO,GAAG0L,cACtB7R,EAAOmG,EAAOla,OAAS,EAAIka,EAAO,GAAG0L,cAAgB,UACrDpS,EAAM5J,KAAK+nD,QAAQzgC,SAAS4F,GAC5BvhB,EAAK,IAAI4B,GACf,GAAI3D,GAAOA,EAAIxT,OACb,IAAK,IAAIgC,EAAI,EAAGA,EAAIwR,EAAIxT,OAAQgC,IAC1BA,EAAI,GACNuT,EAAGpD,OAAOiV,GAEZ7R,EAAGpD,OAAOvI,KAAKwpB,OAAO5f,EAAIxR,GAAI+R,IAGlC,IAAM8xB,EAAI,IAAI3V,GACZtmB,KAAKmuD,gBAAgBxkC,mBAAmBuD,GAAa,SAAC2iC,GACpD,IAAMntB,EAAQ,GACd,GAAImtB,EAAQz5D,OACV,IAAK,IAAIgC,EAAI,EAAGA,EAAIy3D,EAAQz5D,OAAQgC,IAClCsqC,EAAMjnC,KAAKq0D,EAAKtmC,OAAOqmC,EAAQz3D,GAAI+R,IAGvC,IAAMugB,EAAkB/e,EAAGhM,WAI3B,OAHI+qB,EAAgBt0B,QAClBssC,EAAMjnC,KAAKivB,GAETgY,EAAMtsC,OACDssC,EAAMj6B,KAAK+U,GAEXsyC,EAAKtmC,OAAO,EAAGrf,OAI5B,WAAWmc,GAAc,CAAC2V,OAG5B8zB,uBAAA,SAAuBz/C,OAEjB0/C,SADEC,EAAY3/C,EAAO,GAGvB0/C,EADEC,aAAqB3pC,GACR2pC,EAAU9rD,IAEV8rD,EAAUj0C,cAE3B,IAAMkR,EAAc5c,EAAO,GAAG3Q,WACxBwK,EAAOmG,EAAOla,OAAS,EAAIka,EAAO,GAAG0L,cAAgB,UACrDigB,EAAI,IAAI3V,GACZtmB,KAAKmuD,gBAAgB/jC,oBACnB4lC,EACA9iC,GACA,SAACwiC,UAAWQ,EAAK1mC,OAAOkmC,GAAU,EAAGvlD,OAGzC,WAAWmc,GAAc,CAAC2V,OAG5Bk0B,wBAAA,SAAwB7/C,OAElB0/C,SADEC,EAAY3/C,EAAO,GAGvB0/C,EADEC,aAAqB3pC,GACR2pC,EAAU9rD,IAEV8rD,EAAUj0C,cAE3B,IAAMkR,EAAc5c,EAAO,GAAG3Q,WACxB6d,EAAYlN,EAAO,GAAG0L,cACtB7R,EAAOmG,EAAOla,OAAS,EAAIka,EAAO,GAAG0L,cAAgB,UACrDigB,EAAI,IAAI3V,GACZtmB,KAAKmuD,gBAAgB1jC,qBACnBulC,EACA9iC,GACA,SAAC2iC,GACC,IAAMntB,EAAQmtB,EAAQ/lD,KAAI,SAAC4lD,UAAWU,EAAK5mC,OAAOkmC,EAAQvlD,MAC1D,OAAIu4B,EAAMtsC,OACDssC,EAAMj6B,KAAK+U,GAEX4yC,EAAK5mC,OAAO,EAAGrf,OAK9B,WAAWmc,GAAc,CAAC2V,OAO5Bo0B,gBAAA,SAAgB//C,GACd,IAAM/O,EAAO+O,EAAOla,OAAS,EAAIka,EAAO,GAAG0L,cAAgB,GACrD4O,EACJta,EAAOla,OAAS,EAAIka,EAAO,GAAG0L,cAAgB,QAC1CigB,EAAI,IAAI3V,GACZtmB,KAAKmuD,gBAAgBxjC,kBAAkBppB,EAAMqpB,IAE/C,WAAWtE,GAAc,CAAC2V,OAO5Bq0B,iBAAA,SAAiBhgD,GACf,IAAM61B,EAAa71B,EAAOla,OAAS,EAAIka,EAAO,GAAG0L,cAAgB,OAC7DA,EAAc,GAClB,OAAQmqB,GACN,IAAK,OACL,IAAK,eAEH,GADAnqB,EAAchc,KAAK8H,QAAQkF,YAAYW,OAAOvI,QAAQ,OAAQ,KAC3C,iBAAf+gC,EAA+B,CACjC,IAAM/hC,EAAI4X,EAAY3X,MAAMkJ,GAC5ByO,EAAc5X,EAAIA,EAAE,GAAK,SAG7B,IAAK,SACL,IAAK,gBAEKmsD,EAAU/K,GAAYxlD,KAAK+nD,QAAQH,aAAc,YAEvD5rC,EAAciyC,SADOsC,YAAAA,EAAUpqB,cAAVqqB,EAAAC,gBAAAC,EAAoCjyD,OAK/D,WAAW6nB,GAAQtK,MAMrBR,UAAA,SAAUC,GACR,OAAQA,EAAKla,MACX,IAAK,UACH,GAAIka,EAAKnL,OAAOla,QAAU,EACxB,YAAYq5D,iBAAiBh0C,EAAKnL,QAEpC,MACF,IAAK,WACH,GAAImL,EAAKnL,OAAOla,QAAU,EACxB,YAAYw5D,kBAAkBn0C,EAAKnL,QAErC,MACF,IAAK,iBACH,GAAImL,EAAKnL,OAAOla,QAAU,EACxB,YAAY25D,uBAAuBt0C,EAAKnL,QAE1C,MACF,IAAK,kBACH,GAAImL,EAAKnL,OAAOla,QAAU,EACxB,YAAY+5D,wBAAwB10C,EAAKnL,QAE3C,MACF,IAAK,SACH,GAAImL,EAAKnL,OAAOla,QAAU,EACxB,YAAYi6D,gBAAgB50C,EAAKnL,QAEnC,MACF,IAAK,UACH,GAAImL,EAAKnL,OAAOla,QAAU,EACxB,YAAYk6D,iBAAiB70C,EAAKnL,QAKxC,OADA5O,EAAejB,KAAK,sBAAuBgb,EAAK9b,gBACrC2mB,GAAQ,QAlQiBA,IAqS3BmoC,GAAoB,CAC/BkC,MAAO,CACL,KACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,IACA,GACA,KACA,GACA,IACA,GACA,KACA,GACA,IACA,EACA,KACA,EACA,IACA,EACA,KACA,EACA,KAEFC,SAAU,CACR,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,SAAU,CACR,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,OAAQ,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,MAISnC,GAAsB,CACjCoC,MAAO,MACPC,MAAO,MACPC,MAAO,SACPC,QAAS,aAGElyC,GAAQ,CACnBm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S,OAE5C,aAAc,CACZvhF,MAAO,EACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,YAAa,CACXxhF,MAAO,EACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwCrrF,KAE1E,mBAAoB,CAClBuK,MAAO,EACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,YAAa,CACXthF,MAAO,EACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCS,OAE5C,eAAgB,CACdvhF,MAAO,EACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,eAAgB,CACdxhF,MAAO,EACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwCrrF,KAE1E,sBAAuB,CACrBuK,MAAO,EACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,eAAgB,CACdthF,MAAO,GACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwCrrF,KAE1E,gBAAiB,CACfuK,MAAO,GACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,cAAe,CACbxhF,MAAO,GACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCS,OAE5C,qBAAsB,CACpBvhF,MAAO,GACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,cAAe,CACbthF,MAAO,GACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwCrrF,KAE1E,cAAe,CACbuK,MAAO,GACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,WAAY,CACVxhF,MAAO,GACPkhF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCS,QAOjCE,IACLlyC,GAAQ0xC,GACP75G,OAAOC,KAAKkoE,IAAO//C,MAAK,SAAC7rB,EAAGwK,UAAMohE,GAAM5rE,GAAGq8B,MAAQuvC,GAAMphE,GAAG6xB,UAmBxD0hF,eAMX,WACExpG,EACA3N,EACAe,UAEAwP,cAAM5C,EAAO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"}