{"version":3,"file":"bundle.js","sources":["../node_modules/fast-diff/diff.js","../node_modules/@vivliostyle/core/src/vivliostyle/constants.ts","../node_modules/@vivliostyle/core/src/vivliostyle/logging.ts","../node_modules/@vivliostyle/core/src/vivliostyle/plugin.ts","../node_modules/@vivliostyle/core/src/vivliostyle/profile.ts","../node_modules/@vivliostyle/core/src/vivliostyle/base.ts","../node_modules/@vivliostyle/core/src/vivliostyle/cfi.ts","../node_modules/@vivliostyle/core/src/vivliostyle/exprs.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css.ts","../node_modules/@vivliostyle/core/src/vivliostyle/geometry-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-prop.ts","../node_modules/@vivliostyle/core/src/vivliostyle/counters.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-tokenizer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/net.ts","../node_modules/@vivliostyle/core/src/vivliostyle/assets.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-parser.ts","../node_modules/@vivliostyle/core/src/vivliostyle/matchers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/types.ts","../node_modules/@vivliostyle/core/src/vivliostyle/diff.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vtree.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-cascade.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-logical-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sizing.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-floats.ts","../node_modules/@vivliostyle/core/src/vivliostyle/footnotes.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break.ts","../node_modules/@vivliostyle/core/src/vivliostyle/display.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-helper.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break-position.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-processor.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-retryers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/shared.ts","../node_modules/@vivliostyle/core/src/vivliostyle/text-polyfill.ts","../node_modules/@vivliostyle/core/src/vivliostyle/pseudo-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout.ts","../node_modules/@vivliostyle/core/src/vivliostyle/repetitive-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/table.ts","../node_modules/@vivliostyle/core/src/vivliostyle/math-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/columns.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-validator.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-styler.ts","../node_modules/@vivliostyle/core/src/vivliostyle/font.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-master.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-page.ts","../node_modules/@vivliostyle/core/src/vivliostyle/scripts.ts","../node_modules/@vivliostyle/core/src/vivliostyle/urls.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vgen.ts","../node_modules/@vivliostyle/core/src/vivliostyle/xml-doc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/ops.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sha1.ts","../node_modules/@vivliostyle/core/src/vivliostyle/toc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/epub.ts","../node_modules/@vivliostyle/core/src/vivliostyle/adaptive-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/core-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/print.ts","index.js"],"sourcesContent":["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 !== 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length && y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length && y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i), shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i), shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(\n          j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a, best_longtext_b,\n        best_shorttext_a, best_shorttext_b, best_common\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(0, -1);\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n        diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(0, diffs[pointer][1].length -\n            diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n};\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xD800 && charCode <= 0xDBFF;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xDC00 && charCode <= 0xDFFF;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after]\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange = typeof cursor_pos === 'number' ?\n    { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === 'number' ?\n    null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: ((p1: ErrorInfo) => void)[] } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listeners = this.listeners[level];\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(args);\n      });\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    let listeners = this.listeners[level];\n    if (!listeners) {\n      listeners = this.listeners[level] = [];\n    }\n    listeners.push(listener);\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (p1: Base.JSON) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Ident,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n */\nexport function registerHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    hooksForName.push(fn);\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming =\n      registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern =\n  /^[\\s\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:[\\s\\p{Zs}]*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  if (i < baseURL.length - 1) {\n    const j = baseURL.lastIndexOf(\".\");\n    if (j < i) {\n      // Assume the last part without '.' to be a directory name.\n      if (relURL == \"\") {\n        return baseURL;\n      }\n      baseURL += \"/\";\n      i = baseURL.length - 1;\n    }\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r =\n      /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n        url,\n      ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n  NCX = \"http://www.daisy.org/z3986/2005/ncx/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\nexport function asString(v: any): string | null {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\"];\n\nexport const propNameMap: { [key: string]: string[] } = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  return CSS.supports(prefix + prop, \"unset\");\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"behavior\":\n    case \"ua-list-item-count\":\n    case \"x-first-pseudo\":\n      propNameMap[prop] = null;\n      return null;\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = [prefix + prop];\n      propNameMap[prop] = prefixed;\n      return prefixed;\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  const elemStyle = (elem as HTMLElement)?.style;\n  if (!elemStyle) {\n    return;\n  }\n  if (prop.startsWith(\"--\")) {\n    elemStyle.setProperty(prop, value || \" \");\n    return;\n  }\n  const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n  if (!prefixedPropertyNames) {\n    return;\n  }\n  for (const prefixed of prefixedPropertyNames) {\n    switch (prefixed) {\n      case \"-webkit-text-combine\": // for Safari\n        switch (value) {\n          case \"all\":\n            value = \"horizontal\";\n            break;\n        }\n        break;\n      case \"text-combine-upright\":\n        switch (value) {\n          case \"all\":\n            // workaround for Chrome 93 bug https://crbug.com/1242755\n            elemStyle.setProperty(\"text-indent\", \"0\");\n            break;\n        }\n        break;\n    }\n    elemStyle.setProperty(prefixed, value);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /** @override */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\nexport const base64Chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nexport function appendBase64(sb: StringBuffer, data: string): void {\n  const length = data.length;\n  const length3 = Math.floor(length / 3) * 3;\n  for (let i = 0; i < length3; i += 3) {\n    const c1 = data.charCodeAt(i) & 255;\n    const c2 = data.charCodeAt(i + 1) & 255;\n    const c3 = data.charCodeAt(i + 2) & 255;\n    sb.append(base64Chars.charAt(c1 >> 2));\n    sb.append(base64Chars.charAt(((c1 << 4) | (c2 >> 4)) & 63));\n    sb.append(base64Chars.charAt(((c2 << 2) | (c3 >> 6)) & 63));\n    sb.append(base64Chars.charAt(c3 & 63));\n  }\n  switch (length - length3) {\n    case 1: {\n      const p1 = data.charCodeAt(length3) & 255;\n      sb.append(base64Chars.charAt(p1 >> 2));\n      sb.append(base64Chars.charAt((p1 << 4) & 63));\n      sb.append(\"==\");\n      break;\n    }\n    case 2: {\n      const q1 = data.charCodeAt(length3) & 255;\n      const q2 = data.charCodeAt(length3 + 1) & 255;\n      sb.append(base64Chars.charAt(q1 >> 2));\n      sb.append(base64Chars.charAt(((q1 << 4) | (q2 >> 4)) & 63));\n      sb.append(base64Chars.charAt((q2 << 2) & 63));\n      sb.append(\"=\");\n      break;\n    }\n  }\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set: { [key: string]: boolean } = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      list.push(listener);\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n\nexport let hasLShapeFloatBug: boolean | null = null;\n\n/**\n * Check if there is a bug with L-shape floats overlapping text.\n */\nexport function checkLShapeFloatBug(body: HTMLElement): boolean {\n  if (hasLShapeFloatBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    body.appendChild(container);\n    const f1 = doc.createElement(\"div\") as HTMLElement;\n    f1.style.width = \"0px\";\n    f1.style.height = \"14px\";\n    f1.style.cssFloat = \"left\";\n    container.appendChild(f1);\n    const f2 = doc.createElement(\"div\") as HTMLElement;\n    f2.style.width = \"50px\";\n    f2.style.height = \"50px\";\n    f2.style.cssFloat = \"left\";\n    f2.style.clear = \"left\";\n    container.appendChild(f2);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const leftEdge = range.getBoundingClientRect().left;\n    hasLShapeFloatBug = leftEdge < 40;\n    body.removeChild(container);\n  }\n  return hasLShapeFloatBug;\n}\n\nexport let hasVerticalBBoxBug: boolean | null = null;\n\n/**\n * Check if there is a bug with the bounding boxes of vertical text characters.\n * Though method used to be used check Chrome bug, it seems that the bug has\n * been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method to check Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function checkVerticalBBoxBug(body: HTMLElement): boolean {\n  if (hasVerticalBBoxBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    setCSSProperty(container, \"writing-mode\", \"vertical-rl\");\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const box = range.getBoundingClientRect();\n    hasVerticalBBoxBug = box.right - box.left < 10;\n    body.removeChild(container);\n  }\n  return hasVerticalBBoxBug;\n}\n\nexport let hasInlineBlockJustificationBug: boolean | null = null;\n\nexport function checkInlineBlockJustificationBug(body: HTMLElement): boolean {\n  if (hasInlineBlockJustificationBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"30px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a | \");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"30px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 3);\n    const box = range.getBoundingClientRect();\n    hasInlineBlockJustificationBug = box.right < 27;\n    body.removeChild(container);\n  }\n  return hasInlineBlockJustificationBug;\n}\n\nexport let hasSoftWrapOpportunityAfterHyphenBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityAfterHyphenBug(\n  body: HTMLElement,\n): boolean {\n  if (hasSoftWrapOpportunityAfterHyphenBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityAfterHyphenBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityAfterHyphenBug;\n}\n\nexport let hasSoftWrapOpportunityByWbrBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityByWbrBug(body: HTMLElement): boolean {\n  if (hasSoftWrapOpportunityByWbrBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    container.appendChild(doc.createElement(\"wbr\"));\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityByWbrBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityByWbrBug;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /** @override */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /** @override */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /** @override */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      const movedNode = elem.ownerDocument.getElementById(this.id);\n      if (movedNode) {\n        pos.node = movedNode;\n      } else {\n        Logging.logger.warn(\"E_CFI_ID_MISMATCH:\", this.id);\n      }\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /** @override */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n      return !CSS.supports(\"font-size\", \"1q\");\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  isRelativeRootFontSize: boolean | null = null;\n  fontSize: () => number;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return this.pageVertical ? vh : vw;\n        case \"vb\":\n          return this.pageVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return this.pageVertical ? pvh : pvw;\n        case \"pvb\":\n          return this.pageVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= req;\n        case \"max\":\n          return actual <= req;\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = scope && this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /** @override */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    if (this.scope) {\n      context.storeVal(this.scope, this.key, result);\n    }\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(scope: LexicalScope, public val: Val) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  override evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(scope: LexicalScope, public lhs: Val, public rhs: Val) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  override evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  override getOp(): string {\n    return \"!\";\n  }\n\n  override evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class NotMedia extends Not {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  override getOp(): string {\n    return \"not \";\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  override getOp(): string {\n    return \"-\";\n  }\n\n  override evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"&&\";\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"||\";\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class Comma extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \", \";\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \" or \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"<\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"<=\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \">\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \">=\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"==\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"!=\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"+\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \" - \";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"*\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"/\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"%\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(scope: LexicalScope, public num: number, unit: string) {\n    super(scope);\n    this.unit = unit.toLowerCase();\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(scope: LexicalScope, public qualifiedName: string) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  override evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  constructor(scope: LexicalScope, public not: boolean, public name: string) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  override evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  override isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  override evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  override evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(scope: LexicalScope, public val: Result) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(scope: LexicalScope, public name: MediaName, public value: Val) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  override evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class SupportsTest extends Val {\n  constructor(\n    scope: LexicalScope,\n    public name: string,\n    public value: string,\n    public isFunc: boolean,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.isFunc) {\n      buf.append(this.name);\n    }\n    buf.append(\"(\");\n    if (!this.isFunc && this.name) {\n      buf.append(this.name);\n      buf.append(\":\");\n    }\n    buf.append(this.value);\n    buf.append(\")\");\n  }\n\n  override evaluateCore(context: Context): Result {\n    return context.evalSupportsTest(this.name, this.value, this.isFunc);\n  }\n}\n\nexport class Param extends Val {\n  constructor(scope: LexicalScope, public index: number) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  visitValues(values: Val[]): Val[] {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n    return null;\n  }\n\n  visitEmpty(empty: Val): Val {\n    return null;\n  }\n\n  visitSlash(slash: Val): Val {\n    return null;\n  }\n\n  visitStr(str: Str): Val {\n    return null;\n  }\n\n  visitIdent(ident: Ident): Val {\n    return null;\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    return null;\n  }\n\n  visitNum(num: Num): Val {\n    return null;\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitHexColor(color: HexColor): Val {\n    return null;\n  }\n\n  visitURL(url: URL): Val {\n    return null;\n  }\n\n  visitURange(urange: URange): Val {\n    return null;\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  visitCommaList(list: CommaList): Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  visitFunc(func: Func): Val {\n    this.visitValues(func.values);\n    return null;\n  }\n\n  visitExpr(expr: Expr): Val {\n    return null;\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  error: boolean = false;\n\n  constructor() {\n    super();\n  }\n\n  override visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (this.error) {\n        return [];\n      }\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  override visitEmpty(empty: Val): Val {\n    return empty;\n  }\n\n  override visitStr(str: Str): Val {\n    return str;\n  }\n\n  override visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  override visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  override visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  override visitNum(num: Num): Val {\n    return num;\n  }\n\n  override visitInt(num: Int): Val {\n    return num;\n  }\n\n  override visitHexColor(color: HexColor): Val {\n    return color;\n  }\n\n  override visitURL(url: URL): Val {\n    return url;\n  }\n\n  override visitURange(urange: URange): Val {\n    return urange;\n  }\n\n  override visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (this.error) {\n      return empty;\n    }\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  override visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (this.error) {\n      return empty;\n    }\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  override visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (this.error) {\n      return empty;\n    }\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  override visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /** @override */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return null;\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: Visitor): Val {\n    return this;\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable: { [key: string]: Ident } = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitIdent(this);\n  }\n\n  override isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(public num: number, unit: string) {\n    super();\n    this.unit = unit.toLowerCase(); // units are case-insensitive in CSS\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitNumeric(this);\n  }\n\n  override isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitNum(this);\n  }\n\n  override isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class HexColor extends Val {\n  constructor(public hex: string) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    buf.append(this.hex);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitHexColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitURL(this);\n  }\n}\n\nexport class URange extends Val {\n  constructor(public urangeText: string) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.urangeText);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitURange(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0]?.appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i]?.appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitSpaceList(this);\n  }\n\n  override isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(public name: string, public values: Val[]) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  override toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (\n      this.expr instanceof Exprs.Const ||\n      this.expr instanceof Exprs.Numeric\n    ) {\n      this.expr.appendTo(buf, 0);\n    } else {\n      buf.append(\"-epubx-expr(\");\n      this.expr.appendTo(buf, 0);\n      buf.append(\")\");\n    }\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitExpr(this);\n  }\n\n  override isExpr(): boolean {\n    return true;\n  }\n}\n\n/**\n * Custom property value, may be arbitrary token\n */\nexport class AnyToken extends Val {\n  constructor(public text: string) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.text || \" \");\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  anywhere: getName(\"anywhere\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  initial: getName(\"initial\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  revert: getName(\"revert\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  unset: getName(\"unset\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const fullURange: URange = new URange(\"U+0-10FFFF\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  color: 2,\n};\n\nexport function isDefaultingValue(value: Val): boolean {\n  return (\n    value === ident.inherit ||\n    value === ident.initial ||\n    value === ident.revert ||\n    value === ident.unset\n  );\n}\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n\nexport function isCustomPropName(name: string): boolean {\n  return name?.length > 2 && name.startsWith(\"--\");\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  override visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters and named strings\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(public readonly targetId: string, public resolved: boolean) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /** @override */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedStringValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedStringValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /** @override */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr) => {\n      return format(arr[0]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /** @override */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /** @override */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n  }\n\n  /** @override */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const stringValues = this.namedStringValues[name];\n        if (!stringValues) {\n          return \"\";\n        }\n        const offsets = Object.keys(stringValues)\n          .map((a) => parseInt(a, 10))\n          .sort(Base.numberCompare);\n\n        const currentPage = this.counterStore.currentPage;\n        const pageStartOffset = currentPage.isBlankPage\n          ? currentPage.offset - 1\n          : currentPage.offset;\n        const pageLastOffset = currentPage.isBlankPage\n          ? pageStartOffset\n          : Math.max(\n              pageStartOffset,\n              ...Array.from(\n                currentPage.container.querySelectorAll(\n                  `[${Base.ELEMENT_OFFSET_ATTR}]`,\n                ),\n              ).map((e) =>\n                parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10),\n              ),\n            );\n\n        let firstOffset = -1;\n        let startOffset = -1;\n        let lastOffset = -1;\n        let firstExceptOffset = -1;\n\n        for (let i = 0; i < offsets.length; i++) {\n          const offset = offsets[i];\n          const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n          const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n          if (offset > pageLastOffset) {\n            break;\n          }\n          if (offset >= pageStartOffset) {\n            if (firstOffset < 0) {\n              firstOffset = offset;\n              firstExceptOffset = -1;\n            }\n            if (startOffset < 0) {\n              if (offset === pageStartOffset) {\n                startOffset = offset;\n              } else {\n                if (offsetPrev < firstOffset) {\n                  startOffset = offsetPrev;\n                }\n                // Check if the element at the offset is at beginning of the page\n                const elementAtOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n                );\n                if (!elementAtOffset) {\n                  // title or meta elements are not output, but should be treated as start\n                  if (startOffset < 0) {\n                    startOffset = offset;\n                  }\n                } else {\n                  let elementAtPageStartOffset =\n                    currentPage.container.querySelector(\n                      `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                    );\n                  if (!elementAtPageStartOffset) {\n                    // The element at pageStartOffset is not found when page break occured\n                    // within an element, so use the ancestor element with offset 0 instead.\n                    elementAtPageStartOffset =\n                      currentPage.container.querySelector(\n                        `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                      );\n                  }\n                  if (elementAtPageStartOffset) {\n                    // Find if the element at the offset is (the first child of)* the element at page start\n                    for (\n                      let element = elementAtPageStartOffset;\n                      element;\n                      element = element.firstElementChild\n                    ) {\n                      if (element === elementAtOffset) {\n                        startOffset = offset;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            lastOffset = offset;\n          } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n            firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n          }\n        }\n\n        const stringValue =\n          stringValues[\n            {\n              first: firstOffset,\n              start: startOffset,\n              last: lastOffset,\n              \"first-except\": firstExceptOffset,\n            }[retrievePosition]\n          ] || \"\";\n\n        return stringValue;\n      },\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CssCascade.CascadeInstance,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[cascadeInstance.currentElementOffset] = stringValue;\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"] as CssCascade.CascadeValue;\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\n      \"counter-increment\"\n    ] as CssCascade.CascadeValue;\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(page: Vtree.Page): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    }\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(expr, val, document) {\n    const found = this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    if (found) {\n      const node = document.createElement(\"span\");\n      node.textContent = val;\n      node.setAttribute(PAGES_COUNTER_ATTR, expr.key);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = this.currentPageCounters[\"page\"][0];\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /** @override */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"data-vivliostyle-id\") ||\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code === 0 || (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n  URANGE,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  CDO,\n  CDC,\n  UNKNOWN,\n  INVALID,\n  LAST = 54,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n\n  toString(): string {\n    switch (this.type) {\n      case TokenType.O_PAR:\n        return \"(\";\n      case TokenType.C_PAR:\n        return \")\";\n      case TokenType.O_BRC:\n        return \"{\";\n      case TokenType.C_BRC:\n        return \"}\";\n      case TokenType.O_BRK:\n        return \"[\";\n      case TokenType.C_BRK:\n        return \"]\";\n      case TokenType.COMMA:\n        return \",\";\n      case TokenType.SEMICOL:\n        return \";\";\n      case TokenType.COLON:\n        return \":\";\n      case TokenType.SLASH:\n        return \"/\";\n      case TokenType.AT:\n        return \"@\";\n      case TokenType.PERCENT:\n        return \"%\";\n      case TokenType.QMARK:\n        return \"Q\";\n      case TokenType.PLUS:\n        return \"+\";\n      case TokenType.MINUS:\n        return \"-\";\n      case TokenType.BAR_BAR:\n        return \"||\";\n      case TokenType.AMP_AMP:\n        return \"&&\";\n      case TokenType.BANG:\n        return \"!\";\n      case TokenType.DOLLAR:\n        return \"$\";\n      case TokenType.HAT:\n        return \"^\";\n      case TokenType.BAR:\n        return \"|\";\n      case TokenType.TILDE:\n        return \"~\";\n      case TokenType.STAR:\n        return \"*\";\n      case TokenType.GT:\n        return \">\";\n      case TokenType.LT:\n        return \"<\";\n      case TokenType.EQ:\n        return \"=\";\n      case TokenType.BANG_EQ:\n        return \"!=\";\n      case TokenType.DOLLAR_EQ:\n        return \"$=\";\n      case TokenType.HAT_EQ:\n        return \"^=\";\n      case TokenType.BAR_EQ:\n        return \"|=\";\n      case TokenType.TILDE_EQ:\n        return \"~=\";\n      case TokenType.STAR_EQ:\n        return \"*=\";\n      case TokenType.GT_EQ:\n        return \">=\";\n      case TokenType.LT_EQ:\n        return \"<=\";\n      case TokenType.EQ_EQ:\n        return \"==\";\n      case TokenType.COL_COL:\n        return \"::\";\n      case TokenType.CDO:\n        return \"<!--\";\n      case TokenType.CDC:\n        return \"-->\";\n      case TokenType.NUMERIC:\n        return this.num.toString() + this.text;\n      case TokenType.NUM:\n      case TokenType.INT:\n        return this.num.toString();\n      case TokenType.HASH:\n        return \"#\" + this.text;\n      case TokenType.FUNC:\n        return this.text + \"(\";\n      case TokenType.CLASS:\n        return \".\" + this.text;\n      default:\n        return this.text;\n    }\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n  CDO,\n  CDC,\n}\n\nexport function makeActions(def: Action, spec: Action[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.CDC,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.CDO,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  head: number = -1; // saved, occupied if >= 0\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(public input: string, public readonly handler: TokenizerHandler) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  mark(): void {\n    if (this.head >= 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL mark\");\n    }\n    this.head = this.curr;\n  }\n\n  reset(): void {\n    if (this.head < 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL reset\");\n    }\n    this.curr = this.head;\n    this.head = -1;\n  }\n\n  unmark(): void {\n    this.head = -1;\n  }\n\n  hasMark(): boolean {\n    return this.head >= 0;\n  }\n\n  private reallocate(): void {\n    const newIndexMask = 2 * (this.indexMask + 1) - 1;\n    const newBuffer: Token[] = Array(newIndexMask + 1);\n    let oldIndex = this.head;\n    let newIndex = 0;\n    while (oldIndex != this.tail) {\n      newBuffer[newIndex] = this.buffer[oldIndex];\n      oldIndex = (oldIndex + 1) & this.indexMask;\n      newIndex++;\n    }\n    this.head = 0;\n    this.curr = newIndex;\n    this.tail = newIndex;\n    this.indexMask = newIndexMask;\n    this.buffer = newBuffer;\n    while (newIndex <= newIndexMask) {\n      newBuffer[newIndex++] = new Token();\n    }\n  }\n\n  private error(position, token, mnemonics) {\n    if (this.handler) {\n      this.handler.error(mnemonics, token);\n    }\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.head >= 0 ? this.head : this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      // only expect to get here when mark is in effect\n      if (this.head < 0) {\n        throw new Error(\"F_CSSTOK_INTERNAL\");\n      }\n      this.reallocate();\n      tail = this.tail;\n      indexMask = this.indexMask;\n      head = indexMask; // this.head is zero\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenType = TokenType.INVALID;\n          if (isNaN(charCode)) {\n            tokenText = \"E_CSS_UNEXPECTED_EOF\";\n          } else {\n            tokenText = \"E_CSS_UNEXPECTED_CHAR\";\n          }\n          actions = actionsNormal;\n          position++;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n\n          // unicode-range support\n          if (\n            (tokenType === TokenType.URANGE && charCode === 63) ||\n            (tokenType === TokenType.IDENT &&\n              tokenText.toLowerCase() === \"u\" &&\n              /^(\\bu\\+[?0-9a-f]+(-[?0-9a-f]+)?|,|\\s+|\\/\\*([^*]|\\*[^/])*\\*\\/)+[;}]/i.test(\n                input.substring(position - 1),\n              ))\n          ) {\n            tokenType = TokenType.URANGE;\n            position++;\n            continue;\n          }\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          if (input[position] !== \">\") {\n            // dashed-ident (custom property name)\n            tokenType = TokenType.IDENT;\n            actions = actionsIdent;\n          }\n          continue;\n        case Action.CDO:\n          tokenType = TokenType.CDO;\n          tokenText = input.substring(tokenPosition, ++position);\n          actions = actionsNormal;\n          break;\n        case Action.CDC:\n          tokenType = TokenType.CDC;\n          tokenText = input.substring(tokenPosition, ++position);\n          actions = actionsNormal;\n          break;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              actions = actionsIdent;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err as Error, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /** @override */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /** @override */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /** @override */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err as Error);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /** @override */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(public scheduler: Scheduler, public name: string) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /** @override */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /** @override */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /** @override */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /** @override */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /** @override */\n  isPending(): boolean {\n    return false;\n  }\n\n  /** @override */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /** @override */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /** @override */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /** @override */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /** @override */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /** @override */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /** @override */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(public task: Task, public parent: Frame<T>, public name: string) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err as Error, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err as Error, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err as Error, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(public readonly fetch: () => Task.Result<T>, opt_name?: string) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(elem: Element, src?: string): Fetcher<string> {\n  const fetcher = new Fetcher(() => {\n    const frame: Task.Frame<string> = Task.newFrame(\"loadElement\");\n    const continuation = frame.suspend(elem);\n    let done = false;\n    const handler = (evt: Event) => {\n      if (done) {\n        return;\n      } else {\n        done = true;\n      }\n      continuation.schedule(evt ? evt.type : \"timeout\");\n    };\n    elem.addEventListener(\"load\", handler, false);\n    elem.addEventListener(\"error\", handler, false);\n    elem.addEventListener(\"abort\", handler, false);\n    if (elem.namespaceURI == Base.NS.SVG) {\n      if (src) {\n        elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n      }\n      // SVG handlers are not reliable\n      setTimeout(handler, 300);\n    } else if (elem.localName === \"script\") {\n      setTimeout(handler, 3000);\n    } else if (src) {\n      (elem as any).src = src;\n    }\n    return frame.result();\n  }, `loadElement ${src || elem.localName}`);\n  fetcher.start();\n  return fetcher;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum XMLHttpRequestResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type Response = Net.Response;\n\nexport function ajax(\n  url: string,\n  opt_type?: XMLHttpRequestResponseType,\n  opt_method?: string,\n  opt_data?: string,\n  opt_contentType?: string,\n): Task.Result<Response> {\n  const frame: Task.Frame<Response> = Task.newFrame(\"ajax\");\n  const request = new XMLHttpRequest();\n  const continuation = frame.suspend(request);\n  const response: Response = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n  request.open(opt_method || \"GET\", url, true);\n  if (opt_type) {\n    request.responseType = opt_type;\n  }\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      response.status = request.status;\n      response.statusText =\n        request.statusText || (request.status == 404 && \"Not Found\") || \"\";\n      if (response.status == 200 || response.status == 0) {\n        if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.responseXML &&\n          request.responseXML.documentElement.localName != \"parsererror\"\n        ) {\n          response.responseXML = request.responseXML;\n          response.contentType = (request.responseXML as any).contentType;\n        } else if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.response instanceof HTMLDocument\n        ) {\n          response.responseXML = request.response;\n          response.contentType = (request.response as any).contentType;\n        } else {\n          const text = request.response;\n          if (\n            (!opt_type || opt_type === XMLHttpRequestResponseType.TEXT) &&\n            typeof text == \"string\"\n          ) {\n            response.responseText = text;\n          } else if (!text) {\n            Logging.logger.warn(\"Unexpected empty success response for\", url);\n          } else {\n            if (typeof text == \"string\") {\n              response.responseBlob = makeBlob([text]);\n            } else {\n              response.responseBlob = text as Blob;\n            }\n          }\n          const contentTypeHeader = request.getResponseHeader(\"Content-Type\");\n          if (contentTypeHeader) {\n            response.contentType = contentTypeHeader.replace(/(.*);.*$/, \"$1\");\n          }\n        }\n      }\n      continuation.schedule(response);\n    }\n  };\n  try {\n    if (opt_data) {\n      request.setRequestHeader(\n        \"Content-Type\",\n        opt_contentType || \"text/plain; charset=UTF-8\",\n      );\n      request.send(opt_data);\n    } else {\n      if (\n        /^file:|^https?:\\/\\/[^/]+\\.githubusercontent\\.com|\\.(xhtml|xht|opf)$/i.test(\n          url,\n        )\n      ) {\n        // File or GitHub raw URL or .xht(ml) or .opf\n        if (\n          /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n        ) {\n          // Aozorabunko's (X)HTML support\n          request.overrideMimeType(\"text/html; charset=Shift_JIS\");\n        } else if (/\\.(html|htm)$/i.test(url)) {\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        } else if (/\\.(xhtml|xht|xml|opf)$/i.test(url)) {\n          request.overrideMimeType(\"application/xml; charset=UTF-8\");\n        } else if (/\\.(txt|css)$/i.test(url)) {\n          request.overrideMimeType(\"text/plain; charset=UTF-8\");\n        } else {\n          // fallback to HTML\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        }\n      } else if (/^data:,(<|%3c)/i.test(url)) {\n        request.overrideMimeType(\"text/html; charset=UTF-8\");\n      } else if (/^data:,/i.test(url)) {\n        request.overrideMimeType(\"text/plain; charset=UTF-8\");\n      }\n      request.send(null);\n    }\n  } catch (e) {\n    Logging.logger.warn(e, `Error fetching ${url}`);\n    continuation.schedule(response);\n  }\n  return frame.result();\n}\n\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): Blob {\n  const type = opt_type || \"application/octet-stream\";\n  return new Blob(parts, { type });\n}\n\nexport function readBlob(blob: Blob): Task.Result<ArrayBuffer> {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  (window[\"URL\"] || window[\"webkitURL\"]).revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return (window[\"URL\"] || window[\"webkitURL\"]).createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: XMLHttpRequestResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    ajax(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: Response,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, XMLHttpRequestResponseType.TEXT);\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n// vivliostyle-viewport-screen.css\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: -webkit-flex;\n    display: flex;\n    flex: none;\n    justify-content: center;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n// vivliostyle-viewport.css\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n  overflow: hidden;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  /* overflow: hidden; ** removed to fix issue #945 */\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container],\n  [data-vivliostyle-page-container] {\n    transform: none !important;\n  }\n\n  [data-vivliostyle-page-container] {\n    display: block !important;\n    max-height: 100vh;\n    break-after: page;\n  }\n\n  [data-vivliostyle-bleed-box] > div > div::before {\n    display: block;\n    content: \"\";\n    padding-top: 0.015625px;\n    margin-bottom: -0.015625px;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document url-prefix()  {\n    [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n    /* Workaround Gecko problem on page break */\n    [data-vivliostyle-page-container] {\n      break-after: auto;\n      height: 100% !important;\n    }\n  }\n}\n`;\n\n// validation.txt\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO | NEGATIVE;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nMIN_MAX_FIT_CONTENT = min-content | max-content | fit-content;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nURI_OR_NONE = URI | none;\nIMAGE = URI | IMAGE_FUNCTION | none;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = disc | circle | square | decimal | decimal-leading-zero | lower-roman |\n    upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha |\n    upper-alpha | russian | upper-russian | lower-russian | cjk-ideographic | trad-chinese-informal |\n    hebrew | none;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH | POS_NUM;\nfont-style = normal | italic | oblique;\nfont-weight = normal | bold | bolder | lighter | POS_NUM;\nheight = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-width = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-height = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-width = APLENGTH | MIN_MAX_FIT_CONTENT;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nposition = static | relative | absolute | fixed;\nquotes = [STRING STRING]+ | none | auto;\nright = APLENGTH;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-decoration = none | [ underline || overline || line-through || blink ];\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line | break-spaces;\nwidows = POS_INT;\nwidth = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\ninline-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-block-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-inline-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-block-size = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-inline-size = APLENGTH | MIN_MAX_FIT_CONTENT;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub]transform = none | TRANSFORM_FUNCTION+;\n[epub]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto | IDENT; /* page: IDENT is for CSS Paged Media */\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nCOMMON_LIG_VALUES        = [ common-ligatures | no-common-ligatures ];\nDISCRETIONARY_LIG_VALUES = [ discretionary-ligatures | no-discretionary-ligatures ];\nHISTORICAL_LIG_VALUES    = [ historical-ligatures | no-historical-ligatures ];\nCONTEXTUAL_ALT_VALUES    = [ contextual | no-contextual ];\nfont-variant-ligatures = normal | none | [ COMMON_LIG_VALUES || DISCRETIONARY_LIG_VALUES || HISTORICAL_LIG_VALUES || CONTEXTUAL_ALT_VALUES ];\nfont-variant-caps = normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps;\nNUMERIC_FIGURE_VALUES   = [ lining-nums | oldstyle-nums ];\nNUMERIC_SPACING_VALUES  = [ proportional-nums | tabular-nums ];\nNUMERIC_FRACTION_VALUES = [ diagonal-fractions | stacked-fractions ];\nfont-variant-numeric = normal | [ NUMERIC_FIGURE_VALUES || NUMERIC_SPACING_VALUES || NUMERIC_FRACTION_VALUES || ordinal || slashed-zero ];\nEAST_ASIAN_VARIANT_VALUES = [ jis78 | jis83 | jis90 | jis04 | simplified | traditional ];\nEAST_ASIAN_WIDTH_VALUES   = [ full-width | proportional-width ];\nfont-variant-east-asian = normal | [ EAST_ASIAN_VARIANT_VALUES || EAST_ASIAN_WIDTH_VALUES || ruby ];\nfont-variant_css2 = normal | small-caps; /* for font shorthand */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nFONT_STRETCH_CSS3_VALUES = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\nfont-stretch = FONT_STRETCH_CSS3_VALUES | PERCENTAGE;\nfont-stretch_css3 = FONT_STRETCH_CSS3_VALUES; /* for font shorthand */\nfont-display = [ auto | block | swap | fallback | optional ];\nunicode-range = COMMA( URANGE+ );\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a10 | a9 | a8 | a7 | a6 | a5 | a4 | a3 | a2 | a1 | a0\n          | b10 | b9 | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0\n          | c10 | c9 | c8 | c7 | c6 | c5 | c4 | c3 | c2 | c1 | c0\n          | jis-b10 | jis-b9 | jis-b8 | jis-b7 | jis-b6 | jis-b5 | jis-b4 | jis-b3 | jis-b2 | jis-b1 | jis-b0\n          | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\ncrop-offset = auto | LENGTH;\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = block-start | block-end | inline-start | inline-end | snap-block | snap-inline | left | right | top | bottom | none | footnote;\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[webkit]line-break = auto | loose | normal | strict | anywhere;\noverflow-wrap = normal | break-word | anywhere;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz]text-align-last = auto | start | end | left | right | center | justify;\ntext-justify = auto | none | inter-word | inter-character;\nword-break = normal | keep-all | break-all | break-word;\ntext-spacing = normal | none | auto | [[ trim-start | space-start | space-first ] ||\n    [ trim-end | space-end | allow-end ] || [ trim-adjacent | space-adjacent ] ||\n    no-compress || ideograph-alpha || ideograph-numeric || punctuation];\nhanging-punctuation = none | [ first || [ force-end | allow-end ] || last ];\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\nbox-sizing = content-box | padding-box | border-box;\ntext-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[epub,webkit]text-combine = none | horizontal;\ntext-combine-upright = none | all; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\ntouch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-size-adjust: none;\nfont-kerning: auto;\nfont-feature-settings: normal;\nfont-variant-ligatures: normal;\nfont-variant-caps: normal;\nfont-variant-numeric: normal;\nfont-variant-east-asian: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nall = ALL;\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-type list-style-position list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\nfont = FONT font-style font-variant_css2 font-weight font-stretch_css3 /* font-size line-height font-family are special-cased */;\nfont-variant = font-variant-ligatures font-variant-caps font-variant-numeric font-variant-east-asian;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\ninset = INSETS top right bottom left;\n\n/* old names  */\nword-wrap = overflow-wrap;\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n// user-agent.xml\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.footnote-content {\n  float: footnote;\n}\n\n.table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n// user-agent-page.css\nexport const UserAgentPageCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n// user-agent-base.css\nexport const UserAgentBaseCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\nhtml|html,\nhtml|address,\nhtml|blockquote,\nhtml|body,\nhtml|dd,\nhtml|div,\nhtml|dl,\nhtml|dt,\nhtml|fieldset,\nhtml|form,\nhtml|frame,\nhtml|frameset,\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|noframes,\nhtml|ol,\nhtml|p,\nhtml|ul,\nhtml|center,\nhtml|dir,\nhtml|hr,\nhtml|menu,\nhtml|pre,\nhtml|article,\nhtml|section,\nhtml|nav,\nhtml|aside,\nhtml|hgroup,\nhtml|footer,\nhtml|header,\nhtml|figure,\nhtml|figcaption,\nhtml|main {\n  display: block;\n  unicode-bidi: normal;\n}\nhtml|li {\n  display: list-item;\n}\nhtml|head {\n  display: none !important;\n}\nhtml|table {\n  display: table;\n}\nhtml|tr {\n  display: table-row;\n}\nhtml|thead {\n  display: table-header-group;\n  break-after: avoid;\n}\nhtml|tbody {\n  display: table-row-group;\n}\nhtml|tfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\nhtml|col {\n  display: table-column;\n}\nhtml|colgroup {\n  display: table-column-group;\n}\nhtml|td,\nhtml|th {\n  display: table-cell;\n}\nhtml|caption {\n  display: table-caption;\n  text-align: center;\n}\nhtml|th {\n  font-weight: bolder;\n  text-align: center;\n}\nhtml|*[hidden],\nhtml|link,\nhtml|style,\nhtml|script {\n  display: none;\n}\nhtml|h1 {\n  font-size: 2em;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h2 {\n  font-size: 1.5em;\n  margin-block-start: 0.75em;\n  margin-block-end: 0.75em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h3 {\n  font-size: 1.17em;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h4,\nhtml|p,\nhtml|blockquote,\nhtml|ul,\nhtml|fieldset,\nhtml|form,\nhtml|ol,\nhtml|dl,\nhtml|dir,\nhtml|menu,\nhtml|h5,\nhtml|h6 {\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h5 {\n  font-size: 0.83em;\n}\nhtml|h6 {\n  font-size: 0.75em;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|b,\nhtml|strong {\n  font-weight: bolder;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6 {\n  break-after: avoid;\n}\nhtml|blockquote {\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n}\nhtml|i,\nhtml|cite,\nhtml|em,\nhtml|var,\nhtml|address {\n  font-style: italic;\n}\nhtml|pre,\nhtml|tt,\nhtml|code,\nhtml|kbd,\nhtml|samp {\n  font-family: monospace;\n}\nhtml|pre {\n  white-space: pre;\n}\nhtml|button,\nhtml|textarea,\nhtml|input,\nhtml|select {\n  display: inline-block;\n}\nhtml|big {\n  font-size: 1.17em;\n}\nhtml|small,\nhtml|sub,\nhtml|sup {\n  font-size: 0.83em;\n}\nhtml|sub {\n  vertical-align: sub;\n}\nhtml|sup {\n  vertical-align: super;\n}\nhtml|table {\n  border-spacing: 2px;\n}\nhtml|thead,\nhtml|tbody,\nhtml|tfoot {\n  vertical-align: middle;\n}\n/* for XHTML tables without tbody */\nhtml|table > html|tr {\n  vertical-align: middle;\n}\nhtml|td,\nhtml|th {\n  vertical-align: inherit;\n}\nhtml|s,\nhtml|strike,\nhtml|del {\n  text-decoration: line-through;\n}\nhtml|hr {\n  border: 1px inset;\n}\nhtml|ol,\nhtml|ul,\nhtml|dir,\nhtml|menu,\nhtml|dd {\n  margin: 0px;\n  margin-inline-start: 40px;\n}\nhtml|ol html|ul,\nhtml|ul html|ol,\nhtml|ul html|ul,\nhtml|ol html|ol {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\nhtml|u,\nhtml|ins {\n  text-decoration: underline;\n}\nhtml|center {\n  text-align: center;\n}\nhtml|q:before {\n  content: open-quote;\n}\nhtml|q:after {\n  content: close-quote;\n}\n\nhtml|audio,\nhtml|video {\n  break-inside: avoid;\n}\n\nhtml|ruby {\n  display: ruby;\n}\nhtml|rp {\n  display: none;\n}\nhtml|rbc {\n  display: ruby-base-container;\n}\nhtml|rtc {\n  display: ruby-text-container;\n}\nhtml|rb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nhtml|rt {\n  display: ruby-text;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-variant-east-asian: ruby;\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\n\nhtml|rtc:lang(zh),\nhtml|rt:lang(zh) {\n  ruby-align: center;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-size: 50%;\n}\n\nhtml|rtc:lang(zh-TW),\nhtml|rt:lang(zh-TW) {\n  font-size: 30%;\n}\n\nhtml|rtc > html|rt,\nhtml|rtc > html|rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nhtml|bdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nhtml|bdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\nhtml|*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: embed;\n}\nhtml|*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: embed;\n}\n\n/*------------------ epub-specific ---------------------*/\n\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml|a[epub|type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\nhtml|a[epub|type=\"noteref\"]:href-epub-type(footnote) {\n  -adapt-template: url(user-agent.xml#footnote);\n  text-decoration: none;\n}\n\nhtml|aside[epub|type=\"footnote\"] {\n  display: none;\n}\n\nhtml|aside[epub|type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n\n/*--------------- ncx and toc ----------------------*/\n\n@namespace ncx \"http://www.daisy.org/z3986/2005/ncx/\";\n\nncx|ncx {\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nncx|content {\n  display: none;\n}\n\nbody > * {\n  -adapt-behavior: body-child;\n}\n\n[role=\"doc-toc\"],\n[role=\"directory\"],\nnav,\n.toc,\n#toc,\n#table-of-contents,\n#contents {\n  -adapt-behavior: toc-root;\n}\n\n[role=\"doc-toc\"] a,\n[role=\"directory\"] a,\nnav a,\n.toc a,\n#toc a,\nncx|navLabel {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[role=\"doc-toc\"] li,\n[role=\"directory\"] li,\nnav li,\n.toc li,\n#toc li,\nncx|navPoint {\n  -adapt-behavior: toc-node;\n}\n\n[role=\"doc-toc\"] li > *:first-child,\n[role=\"directory\"] li > *:first-child,\nnav li > *:first-child,\n.toc li > *:first-child,\n#toc li > *:first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[role=\"doc-toc\"] ol,\n[role=\"directory\"] ol,\nnav ol,\n.toc ol,\n#toc ol,\n[role=\"doc-toc\"] ul,\n[role=\"directory\"] ul,\nnav ul,\n.toc ul,\n#toc ul,\nol[role=\"doc-toc\"],\nol[role=\"directory\"],\nol.toc,\nol#toc,\nul[role=\"doc-toc\"],\nul[role=\"directory\"],\nul.toc,\nul#toc {\n  -adapt-behavior: toc-container;\n}\n`;\n\n// text-polyfill.css\nexport const TextPolyfillCss = `\nviv-ts-open.viv-ts-auto > viv-ts-inner,\nviv-ts-open.viv-ts-trim > viv-ts-inner {\n  margin-inline-start: -0.5em;\n}\nviv-ts-close.viv-ts-auto > viv-ts-inner,\nviv-ts-close.viv-ts-trim > viv-ts-inner {\n  letter-spacing: -0.5em;\n}\nviv-ts-close.viv-hang-end > viv-ts-inner,\nviv-ts-close.viv-hang-last > viv-ts-inner {\n  letter-spacing: -1em;\n}\nviv-ts-open.viv-ts-auto::before,\nviv-ts-close.viv-ts-auto::after,\nviv-ts-close.viv-hang-end::after {\n  content: \" \";\n  font-family: Courier, monospace;\n  word-spacing: normal;\n  letter-spacing: -0.11em;\n  line-height: 0;\n  text-orientation: mixed;\n  visibility: hidden;\n}\nviv-ts-close.viv-hang-end:not(.viv-hang-hw)::after {\n  letter-spacing: 0.4em;\n}\nviv-ts-close.viv-hang-hw > viv-ts-inner {\n  letter-spacing: -0.5em;\n}\nviv-ts-open.viv-hang-first > viv-ts-inner {\n  display: inline-block;\n  line-height: 1;\n  inline-size: 1em;\n  text-indent: 0;\n  text-align: end;\n  text-align-last: end;\n  margin-inline-start: -1em;\n}\nviv-ts-thin-sp::after {\n  content: \" \";\n  font-family: Times, serif;\n  font-size: 66.6%;\n  word-spacing: normal;\n  letter-spacing: normal;\n  line-height: 0;\n  text-orientation: mixed;\n  visibility: hidden;\n}\n`;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 0x1000000;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 0x2000000;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 0x3000000;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 0x4000000;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 0x5000000;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 0x6000000;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as an\n   *     argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  override getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  override getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics);\n  }\n\n  override startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  override tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  override classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  override pseudoclassSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  override pseudoelementSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  override idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  override attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  override descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  override childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  override adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  override followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  override nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  override startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  override startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  override startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  override startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  override startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  override startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  override startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  override startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  override startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  override startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  override startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  override startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  override startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  override startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  override startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  override endRule(): void {\n    this.slave.endRule();\n  }\n\n  override startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  override endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  override getCurrentToken(): CssTokenizer.Token {\n    return this.owner.getCurrentToken();\n  }\n\n  override error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner.errorMsg(mnemonics, token);\n  }\n\n  override startRuleBody(): void {\n    this.depth++;\n  }\n\n  override endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  override startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  override startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  override startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  override startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  override startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  override startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  override startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  override startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  override startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  override startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  override startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  override startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  override startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  override startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  override endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  VAL_URANGE,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = CssTokenizer.TokenType.LAST + 1;\nexport const OP_MEDIA_OR: number = CssTokenizer.TokenType.LAST + 2;\nexport const OP_MEDIA_NOT: number = CssTokenizer.TokenType.LAST + 3;\n\n(() => {\n  actionsBase[CssTokenizer.TokenType.IDENT] = Action.IDENT;\n  actionsBase[CssTokenizer.TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.COL_COL] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.AT] = Action.AT;\n  actionsBase[CssTokenizer.TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[CssTokenizer.TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorStart[CssTokenizer.TokenType.COL_COL] =\n    Action.SELECTOR_PSEUDOELEM;\n\n  actionsSelector[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[CssTokenizer.TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[CssTokenizer.TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelector[CssTokenizer.TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelectorInFunc[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.C_PAR] = Action.DONE;\n  actionsSelectorInFunc[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COL_COL] =\n    Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[CssTokenizer.TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[CssTokenizer.TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[CssTokenizer.TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[CssTokenizer.TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[CssTokenizer.TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[CssTokenizer.TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[CssTokenizer.TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[CssTokenizer.TokenType.URANGE] = Action.VAL_URANGE;\n  actionsPropVal[CssTokenizer.TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[CssTokenizer.TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[CssTokenizer.TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[CssTokenizer.TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[CssTokenizer.TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[CssTokenizer.TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[CssTokenizer.TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[CssTokenizer.TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[CssTokenizer.TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[CssTokenizer.TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[CssTokenizer.TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[CssTokenizer.TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[CssTokenizer.TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[CssTokenizer.TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[CssTokenizer.TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[CssTokenizer.TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[CssTokenizer.TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[CssTokenizer.TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[CssTokenizer.TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsError[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  priority[CssTokenizer.TokenType.C_PAR] = 0;\n  priority[CssTokenizer.TokenType.COMMA] = 0;\n  priority[CssTokenizer.TokenType.QMARK] = 1;\n  priority[CssTokenizer.TokenType.COLON] = 1;\n  priority[CssTokenizer.TokenType.AMP_AMP] = 2;\n  priority[CssTokenizer.TokenType.BAR_BAR] = 2;\n  priority[CssTokenizer.TokenType.LT] = 3;\n  priority[CssTokenizer.TokenType.GT] = 3;\n  priority[CssTokenizer.TokenType.LT_EQ] = 3;\n  priority[CssTokenizer.TokenType.GT_EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ_EQ] = 3;\n  priority[CssTokenizer.TokenType.BANG_EQ] = 3;\n  priority[CssTokenizer.TokenType.PLUS] = 4;\n  priority[CssTokenizer.TokenType.MINUS] = 4;\n  priority[CssTokenizer.TokenType.STAR] = 5;\n  priority[CssTokenizer.TokenType.SLASH] = 5;\n  priority[CssTokenizer.TokenType.PERCENT] = 5;\n  priority[CssTokenizer.TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n  priority[OP_MEDIA_OR] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n  SUPPORTS,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index === valStack.length) {\n        break;\n      }\n      if (valStack[index++] !== sep) {\n        throw new Error(\"Unexpected state\");\n      }\n      if (index === valStack.length) {\n        // keep last comma in `var(--b , )`\n        arr.push(Css.empty);\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let v;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n        this.actions = actionsErrorDecl;\n        // return null;\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n      return func;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    const val = valStack[0];\n    if (val instanceof Css.Val) {\n      return val;\n    } else if (!val) {\n      return Css.empty;\n    } else {\n      // custom property value can be arbitrary token e.g. \",\"\n      return new Css.AnyToken(val.toString());\n    }\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    // this.handler.error(mnemonics, token);\n    // (should not throw error by expression syntax errors)\n    Logging.logger.warn(mnemonics, token);\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == CssTokenizer.TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == CssTokenizer.TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.Comma(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = CssTokenizer.TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == CssTokenizer.TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = CssTokenizer.TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -CssTokenizer.TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -CssTokenizer.TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else if (tok == -OP_MEDIA_NOT) {\n          // `not` operator in `@media` or `@supports`\n          val = new Exprs.NotMedia(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case CssTokenizer.TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            // `and` operator in `@media` or `@supports`\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_OR:\n            // `or` operator in `@media` or `@supports`\n            val = new Exprs.OrMedia(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.EQ:\n          case CssTokenizer.TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case CssTokenizer.TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case CssTokenizer.TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (op != CssTokenizer.TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case CssTokenizer.TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readSupportsTest(token: CssTokenizer.Token): Exprs.SupportsTest {\n    // `@supports (prop-name:...)`\n    // `@supports func-name(...)`\n    const isFunc = token.type === CssTokenizer.TokenType.FUNC;\n    const tokenizer = this.tokenizer;\n    let startPosition: number;\n    let name: string;\n    if (isFunc) {\n      name = token.text;\n      startPosition = token.position + name.length + 1;\n    } else if (token.type === CssTokenizer.TokenType.O_PAR) {\n      const token1 = tokenizer.nthToken(1);\n      const token2 = tokenizer.nthToken(2);\n      if (\n        token1.type === CssTokenizer.TokenType.IDENT &&\n        token2.type === CssTokenizer.TokenType.COLON\n      ) {\n        tokenizer.consume();\n        tokenizer.consume();\n        name = token1.text;\n        startPosition = token2.position + 1;\n      } else if (\n        token1.type === CssTokenizer.TokenType.O_PAR ||\n        token1.type === CssTokenizer.TokenType.FUNC ||\n        (token1.type === CssTokenizer.TokenType.IDENT &&\n          token1.text.toLowerCase() === \"not\" &&\n          (token2.type === CssTokenizer.TokenType.O_PAR ||\n            token2.type === CssTokenizer.TokenType.FUNC))\n      ) {\n        return null;\n      } else {\n        // Unknown `(...)` syntax, read until `)` and evaluate to false\n        startPosition = token.position + 1;\n      }\n    } else {\n      return null;\n    }\n    let parLevel = 0;\n    let tokenN: CssTokenizer.Token;\n    while (parLevel >= 0) {\n      tokenizer.consume();\n      tokenN = tokenizer.token();\n      switch (tokenN.type) {\n        case CssTokenizer.TokenType.C_PAR:\n          parLevel--;\n          break;\n        case CssTokenizer.TokenType.O_PAR:\n        case CssTokenizer.TokenType.FUNC:\n          parLevel++;\n          break;\n        case CssTokenizer.TokenType.INVALID:\n        case CssTokenizer.TokenType.EOF:\n          this.exprError(\"E_CSS_UNEXPECTED_EOF\", tokenN);\n          return null;\n      }\n    }\n    tokenizer.consume();\n    const endPosition = tokenN.position;\n    const value = tokenizer.input.substring(startPosition, endPosition).trim();\n    const supportsTest = new Exprs.SupportsTest(\n      this.handler.getScope(),\n      name,\n      value,\n      isFunc,\n    );\n    return supportsTest;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case CssTokenizer.TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case CssTokenizer.TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case CssTokenizer.TokenType.NUM:\n        case CssTokenizer.TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === CssTokenizer.TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === CssTokenizer.TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case CssTokenizer.TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case CssTokenizer.TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === CssTokenizer.TokenType.MINUS;\n          const hasSign =\n            token.type === CssTokenizer.TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === CssTokenizer.TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === CssTokenizer.TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === CssTokenizer.TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case CssTokenizer.TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue: boolean,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery: boolean,\n    parsingFunctionParam: boolean,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n    parserLoop: for (; count > 0; --count) {\n      token = tokenizer.token();\n\n      // Do not stop parsing on invalid property syntax as long as brackets are balanced.\n      if (\n        this.propName &&\n        this.errorBrackets.length > 0 &&\n        (token.type === this.errorBrackets[this.errorBrackets.length - 1] ||\n          token.type === CssTokenizer.TokenType.SEMICOL ||\n          token.type === CssTokenizer.TokenType.BANG)\n      ) {\n        if (token.type === this.errorBrackets[this.errorBrackets.length - 1]) {\n          this.errorBrackets.pop();\n        }\n        valStack.push(new Css.AnyToken(token.toString()));\n        tokenizer.consume();\n        continue;\n      }\n\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          token1 = tokenizer.nthToken(2);\n          if (\n            token1.precededBySpace ||\n            (token1.type != CssTokenizer.TokenType.IDENT &&\n              token1.type != CssTokenizer.TokenType.FUNC)\n          ) {\n            // cannot be a selector\n          } else {\n            // can be either a selector or a property assignment\n            tokenizer.mark();\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case CssTokenizer.TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case CssTokenizer.TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case CssTokenizer.TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"not\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(\"not\");\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  break parserLoop;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === CssTokenizer.TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.BAR) {\n            ns = text ? this.namespacePrefixToURI[text] : text;\n            if (ns == null) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != CssTokenizer.TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.EQ:\n            case CssTokenizer.TokenType.TILDE_EQ:\n            case CssTokenizer.TokenType.BAR_EQ:\n            case CssTokenizer.TokenType.HAT_EQ:\n            case CssTokenizer.TokenType.DOLLAR_EQ:\n            case CssTokenizer.TokenType.STAR_EQ:\n            case CssTokenizer.TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case CssTokenizer.TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                CssTokenizer.TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n            case CssTokenizer.TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != CssTokenizer.TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          valStack.push(new Css.HexColor(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          valStack.push(new Css.Numeric(token.num, token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URANGE:\n          valStack.push(new Css.URange(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == CssTokenizer.TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == CssTokenizer.TokenType.SEMICOL ||\n              token1.type == CssTokenizer.TokenType.EOF ||\n              token1.type == CssTokenizer.TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case CssTokenizer.TokenType.NUM:\n            case CssTokenizer.TokenType.NUMERIC:\n            case CssTokenizer.TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          } else {\n            // this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n            valStack.push(new Css.AnyToken(\"+\"));\n            tokenizer.consume();\n            continue;\n          }\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          if (parsingStyleAttr) {\n            return true;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == CssTokenizer.TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else if (\n              this.exprContext === ExprContext.SUPPORTS &&\n              token.text.toLowerCase() === \"not\" &&\n              valStack[valStack.length - 1] !== OP_MEDIA_AND &&\n              valStack[valStack.length - 1] !== OP_MEDIA_OR &&\n              (token1.type === CssTokenizer.TokenType.O_PAR ||\n                token1.type === CssTokenizer.TokenType.FUNC)\n            ) {\n              // for `@supports not (...)`\n              valStack.push(-OP_MEDIA_NOT);\n              tokenizer.consume();\n              continue;\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports selector(...)`\n            valStack.push(this.readSupportsTest(token));\n            this.actions = actionsExprOp;\n            continue;\n          }\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (\n            token.type != CssTokenizer.TokenType.INT ||\n            token.precededBySpace\n          ) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          // `and` or `or` operator in `@media` or `@supports`\n          if (\n            token.text.toLowerCase() === \"and\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_OR &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else if (\n            token.text.toLowerCase() === \"or\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_AND &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_OR, token);\n            valStack.push(OP_MEDIA_OR);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            this.actions = actionsPropVal;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n              // `@media ...;` and `@supports ...;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports (...)`\n            const supportsTest = this.readSupportsTest(token);\n            if (supportsTest) {\n              valStack.push(supportsTest);\n              this.actions = actionsExprOp;\n              continue;\n            }\n          }\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR ||\n                token.type == CssTokenizer.TokenType.URL\n              ) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == CssTokenizer.TokenType.SEMICOL ||\n                  token.type == CssTokenizer.TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == CssTokenizer.TokenType.STR ||\n                      token.type == CssTokenizer.TokenType.URL) &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case CssTokenizer.TokenType.STR:\n                case CssTokenizer.TokenType.URL:\n                  if (\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  continue;\n                case CssTokenizer.TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == CssTokenizer.TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"supports\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.SUPPORTS;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == CssTokenizer.TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == CssTokenizer.TokenType.COLON &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == CssTokenizer.TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (\n            this.errorBrackets.length == 0 &&\n            token.type == CssTokenizer.TokenType.C_BRC\n          ) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          if (parsingFunctionParam) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n          }\n          return true;\n        default:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            return false;\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else if (this.propName) {\n              // Do not stop parsing on invalid property syntax as long as brackets are balanced.\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_PAR:\n                case CssTokenizer.TokenType.O_BRC:\n                case CssTokenizer.TokenType.O_BRK:\n                  this.errorBrackets.push(token.type + 1);\n                  break;\n              }\n              valStack.push(new Css.AnyToken(token.toString()));\n              tokenizer.consume();\n              continue;\n            } else if (\n              token.type === CssTokenizer.TokenType.O_BRC &&\n              valStack.length > 0\n            ) {\n              // `@media {...}` and `@supports {...}` should be ok\n              handler.startMediaRule(valStack.pop() as Css.Expr);\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n              tokenizer.consume();\n              continue;\n            } else if (token.type === CssTokenizer.TokenType.SEMICOL) {\n              // `@media;` and `@supports;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  override error(mnemonics: string, token: CssTokenizer.Token): void {\n    throw new Error(mnemonics + \" \" + token);\n  }\n\n  override getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.ajax(url).then((xhr) => {\n        if (!xhr.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            xhr.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export type ElementStyle = { [key: string]: any };\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(\n      element: Element,\n      styles: { [key: string]: Css.Val },\n      viewNode: Node,\n    );\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\" units or a number.\n     * @return value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string | number): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    createJustificationAdjustmentElement(\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n      vertical: boolean,\n    ): HTMLElement;\n    addAndAdjustJustificationElement(\n      nodeContext: Vtree.NodeContext,\n      insertAfter: boolean,\n      node: Node,\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n    ): HTMLElement;\n    compensateJustificationLineHeight(\n      span: Element,\n      br: Element,\n      nodeContext: Vtree.NodeContext,\n    ): void;\n    /**\n     * Fix justification of the last line of text broken across pages (if\n     * needed).\n     */\n    fixJustificationIfNeeded(\n      nodeContext: Vtree.NodeContext,\n      endOfColumn: boolean,\n    ): void;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n      edge: number;\n      checkPoint: Vtree.NodeContext | null;\n    };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type Response = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: CssStyler.AbstractStyler;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n    pageType: string | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    /**\n     * Walk up NodeContext tree (starting from itself) and call the callback for\n     * each block.\n     */\n    walkUpBlocks(callback: (p1: NodeContext) => any): void;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\nexport function restoreOriginalText(changes: Change[]): string {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function restoreNewText(changes: Change[]): string {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport {\n  CssStyler,\n  PageFloats,\n  PseudoElement,\n  Selectors,\n  Vtree,\n  XmlDoc,\n} from \"./types\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isBlankPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Zoom page.\n   * @param scale Factor to which the page will be scaled.\n   */\n  zoom(scale: number) {\n    Base.setCSSProperty(this.container, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Returns the page area element.\n   */\n  getPageAreaElement(): HTMLElement {\n    return this.pageAreaElement || this.container;\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n    case \"break-spaces\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace: Whitespace): boolean {\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.IGNORE:\n      return !!text.match(/^\\s*$/);\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t\\f]*$/);\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n  }\n  throw new Error(`Unexpected whitespace: ${whitespace}`);\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    (nps1.node === nps2.node ||\n      // Fix for issue #869\n      (!!nps1.shadowContext &&\n        !!nps2.shadowContext &&\n        nps1.shadowType === Vtree.ShadowType.ROOTLESS &&\n        nps2.shadowType === Vtree.ShadowType.ROOTLESS &&\n        (nps1.node as Element)?.outerHTML ===\n          (nps2.node as Element)?.outerHTML)) &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: CssStyler.AbstractStyler,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: Vtree.ShadowContext,\n  sc2: Vtree.ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: Vtree.ShadowContext;\n  nodeShadow: Vtree.ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n  pageType: string | null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n    this.pageType = parent ? parent.pageType : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      (nc.shadowContext?.styler as PseudoElement.PseudoelementStyler)?.style?.[\n        \"_pseudos\"\n      ]\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Walk up NodeContext tree (starting from itself) and call the callback for\n   * each block.\n   */\n  walkUpBlocks(callback: (p1: NodeContext) => any) {\n    let nodeContext: NodeContext = this;\n    while (nodeContext) {\n      if (!nodeContext.inline) {\n        callback(nodeContext);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startSide: string = \"any\";\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startSide = this.startSide;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n  isBlankPage: boolean = false;\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.isBlankPage = this.isBlankPage;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page\n      // Removed:\n      //   || this.highestSeenOffset !== other.highestSeenOffset\n      // to prevent unnecessary re-layout (Issue #681-case2)\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return \"any\";\n    }\n    return flowPos.startSide;\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical ? box.top : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical ? box.bottom : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      const outerExtent =\n        extent +\n        this.marginLeft +\n        this.marginRight +\n        this.paddingLeft +\n        this.paddingRight +\n        this.borderLeft +\n        this.borderRight;\n      this.setHorizontalPosition(\n        start + outerExtent * this.getBoxDir(),\n        extent,\n      );\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setVerticalPosition(start, extent);\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      if (this.elem.lastChild instanceof Text) {\n        this.elem.lastChild.textContent += str;\n        return;\n      }\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  override visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.empty &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    !Css.isDefaultingValue(val)\n  );\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler } from \"./types\";\n\nexport type ElementStyle = {\n  [key: string]:\n    | CascadeValue\n    | CascadeValue[]\n    | ElementStyleMap\n    | { matcher: Matchers.Matcher; styles: ElementStyle }[];\n};\n\nexport const inheritedProps = {\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant-ligatures\": true,\n  \"font-variant-caps\": true,\n  \"font-variant-numeric\": true,\n  \"font-variant-east-asian\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  \"hanging-punctuation\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  quotes: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"shape-rendering\": true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-orientation\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-spacing\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"box-decoration-break\",\n  // TODO: box-decoration-break should not be inherited.\n  // https://github.com/vivliostyle/vivliostyle.js/issues/259\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map: { [key: string]: string } = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(context: Exprs.Context, propName?: string): Css.Val {\n    if (propName && Css.isCustomPropName(propName)) {\n      return this.value;\n    }\n    return evaluateCSSToCSS(context, this.value, propName);\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  override getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  override filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  override increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    try {\n      return !!this.condition.evaluate(context);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return false;\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((tv == null || av.priority >= tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) == \"_\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) != \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name] || Css.isCustomPropName(name);\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): void {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyle }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyle;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const av = getProp(style, prop).increaseSpecificity(specificity);\n      const tv = getProp(target, prop);\n      setProp(target, prop, cascadeValues(context, tv, av));\n\n      // Expand shorthand property (its value contains variables).\n      const propListLH = (\n        context as Exprs.Context & {\n          style: { validatorSet: CssValidator.ValidatorSet };\n        }\n      ).style?.validatorSet.shorthands[prop]?.propList;\n      if (propListLH) {\n        for (const propLH of propListLH) {\n          const avLH = new CascadeValue(Css.empty, av.priority);\n          const tvLH = getProp(target, propLH);\n          setProp(target, propLH, cascadeValues(context, tvLH, avLH));\n        }\n      }\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    if (!cascval.value.isNumeric()) {\n      // FIXME: cascval may be Ident value e.g. \"smaller\"\n      return Exprs.defaultUnitSizes[\"em\"];\n    }\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit == \"em\" ||\n      numeric.unit == \"ex\" ||\n      numeric.unit == \"rem\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    } else if (numeric.unit == \"%\") {\n      if (this.propName === \"line-height\") {\n        return numeric;\n      }\n      const unit = this.propName.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      return new Css.Numeric(numeric.num, unit);\n    }\n    return numeric;\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  override mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  override clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly localName: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(public readonly epubTypePatt: RegExp) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem && cascadeInstance.currentLocalName == \"a\") {\n      const href = elem.getAttribute(\"href\");\n      if (href && href.match(/^#/)) {\n        const id = href.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (target) {\n          const epubType = target.getAttributeNS(Base.NS.epub, \"type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.hasAttributeNS(this.ns, this.name)\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.getAttributeNS(this.ns, this.name) ==\n        this.value\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const ns = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (ns && supportedNamespaces[ns]) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n\n  override getPriority(): number {\n    return 0;\n  }\n\n  override makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const attr = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (attr && attr.match(this.regexp)) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(public readonly a: number, public readonly b: number) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  override getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  override clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\nexport class NegateActionsSet extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstAction: CascadeAction;\n\n  constructor(list: ChainedAction[]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    this.firstAction = chainActions(list, this.checkAppliedAction);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    this.firstAction.apply(cascadeInstance);\n    if (!this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  override getPriority(): number {\n    return (this.firstAction as ChainedAction).getPriority();\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: CssStyler.AbstractStyler): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CascadeInstance,\n  ): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n    const c = new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n      case \"first-letter\":\n        stringValue = this.element.textContent.trim().replace(/\\s+/g, \" \");\n        if (pseudoName === \"first-letter\") {\n          const r = stringValue.match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val = (pseudos?.[pseudoName]?.[\"content\"] as CascadeValue)\n            ?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n    }\n    // Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return func;\n  }\n}\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 0x100000;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  previousPageType: string | null = null;\n  firstPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    if (this.counters[counterName]) {\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal: Css.Val = Css.ident.inline;\n    const display = props[\"display\"] as CascadeValue;\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    let floatVal: Css.Val = Css.ident.inline;\n    const float = props[\"float\"] as CascadeValue;\n    if (float) {\n      floatVal = float.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"] as CascadeValue;\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"] as CascadeValue;\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"] as CascadeValue;\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"ua-list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"ua-list-item\"] = 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!resetMap) {\n          resetMap = {};\n        }\n        resetMap[\"ua-list-item\"] = (this.currentElement as any).value - 1;\n      }\n    }\n    if (this.currentElement?.parentNode.nodeType === Node.DOCUMENT_NODE) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      // `counter-reset: footnote 0` is implicitly applied on the root element\n      if (resetMap[\"footnote\"] === undefined) {\n        resetMap[\"footnote\"] = 0;\n      }\n    }\n    if (floatVal === Css.ident.footnote) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      // `counter-increment: footnote 1` is implicitly applied on the\n      // element (or pseudo element) with `float: footnote`,\n      // unless `counter-increment: footnote` is explicitly specified\n      // on the element (parent element of the pseudo element).\n      if (incrementMap[\"footnote\"] === undefined) {\n        const incrPropValue = (\n          this.currentStyle[\"counter-increment\"] as CascadeValue\n        )?.value;\n        if (\n          !incrPropValue ||\n          !(\n            incrPropValue === Css.ident.footnote ||\n            (incrPropValue instanceof Css.SpaceList &&\n              incrPropValue.values.includes(Css.ident.footnote))\n          )\n        ) {\n          incrementMap[\"footnote\"] = 1;\n        }\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"ua-list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet = props[\"string-set\"] as CascadeValue;\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(name, stringValue, this);\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    const content = pseudoprops[\"content\"] as CascadeValue;\n    if (content) {\n      pseudoprops[\"content\"] = content.filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    styler: CssStyler.AbstractStyler,\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack =\n      this.followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts =\n      (this.currentFollowingSiblingTypeCounts =\n        followingSiblingTypeCountsStack[\n          followingSiblingTypeCountsStack.length - 1\n        ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n\n    // Substitute var()\n    this.applyVarFilter([this.currentStyle], styler, element);\n\n    // Calculate calc()\n    this.applyCalcFilter(this.currentStyle, this.context);\n\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"] as CascadeValue;\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (\n          quotesVal === Css.ident.auto ||\n          quotesVal === Css.ident.initial\n        ) {\n          this.quotes = [\n            new Css.Str(\"\\u201c\"),\n            new Css.Str(\"\\u201d\"),\n            new Css.Str(\"\\u2018\"),\n            new Css.Str(\"\\u2019\"),\n          ];\n          // FIXME: quotes:auto should be based on the content language\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (\n            (pseudoName === \"before\" || pseudoName === \"after\") &&\n            !Vtree.nonTrivialContent(\n              (pseudoProps[\"content\"] as CascadeValue)?.value,\n            )\n          ) {\n            delete pseudos[pseudoName];\n          } else if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(\n    visitor: Css.Visitor,\n    elementStyle: ElementStyle,\n  ): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName) && !Css.isCustomPropName(propName)) {\n        elementStyle[propName] = (\n          elementStyle[propName] as CascadeValue\n        ).filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element: Element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  /**\n   * Substitute all variables in property values in elementStyle\n   */\n  applyVarFilter(\n    elementStyles: ElementStyle[],\n    styler: CssStyler.AbstractStyler,\n    element: Element | null,\n  ): void {\n    const elementStyle = elementStyles[0];\n    const visitor = new VarFilterVisitor(elementStyles, styler, element);\n    const LIMIT_LOOP = 32; // prevent cyclic or too deep dependency\n    for (const name in elementStyle) {\n      if (isMapName(name)) {\n        const pseudoMap = getStyleMap(elementStyle, name);\n        for (const pseudoName in pseudoMap) {\n          this.applyVarFilter(\n            [pseudoMap[pseudoName], ...elementStyles],\n            styler,\n            element,\n          );\n        }\n      } else if (isPropName(name) && !Css.isCustomPropName(name)) {\n        const cascVal = getProp(elementStyle, name);\n        let value = cascVal.value;\n\n        for (let i = 0; ; i++) {\n          if (i >= LIMIT_LOOP) {\n            value = Css.empty;\n            break;\n          }\n          const after = value.visit(visitor);\n          if (visitor.error) {\n            // invalid or unresolved variable found\n            value = Css.empty;\n            visitor.error = false;\n            break;\n          }\n          if (after === value) {\n            // no variable, or all variables substituted\n            break;\n          }\n          // variables substituted, but the substituted value may contain variables\n          value = after;\n        }\n        if (value !== cascVal.value) {\n          // all variables substituted\n          const validatorSet = (styler as any)\n            .validatorSet as CssValidator.ValidatorSet;\n          const shorthand = validatorSet?.shorthands[name]?.clone();\n          if (shorthand) {\n            if (Css.isDefaultingValue(value)) {\n              for (const nameLH of shorthand.propList) {\n                elementStyle[nameLH] = new CascadeValue(\n                  value,\n                  cascVal.priority,\n                );\n              }\n              delete elementStyle[name];\n            } else {\n              // The var()-substituted value may have complex structure\n              // (e.g. SpaceList in SpaceList) that ShorthandValidator\n              // cannot handle, so use toString and parseValue.\n              const valueSH = CssParser.parseValue(\n                (styler as any).scope,\n                new CssTokenizer.Tokenizer(value.toString(), null),\n                \"\",\n              );\n              if (valueSH) {\n                valueSH.visit(shorthand);\n                if (!shorthand.error) {\n                  for (const nameLH of shorthand.propList) {\n                    elementStyle[nameLH] = new CascadeValue(\n                      shorthand.values[nameLH] ||\n                        validatorSet.defaultValues[nameLH],\n                      cascVal.priority,\n                    );\n                  }\n                  delete elementStyle[name];\n                }\n              }\n            }\n          } else {\n            elementStyle[name] = new CascadeValue(value, cascVal.priority);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Calculate all calc() in property values in elementStyle\n   */\n  applyCalcFilter(elementStyle: ElementStyle, context: Exprs.Context): void {\n    const visitor = new CalcFilterVisitor(context);\n    for (const name in elementStyle) {\n      if (isMapName(name)) {\n        const pseudoMap = getStyleMap(elementStyle, name);\n        for (const pseudoName in pseudoMap) {\n          this.applyCalcFilter(pseudoMap[pseudoName], context);\n        }\n      } else if (isPropName(name) && !Css.isCustomPropName(name)) {\n        const cascVal = getProp(elementStyle, name);\n        const value = cascVal.value.visit(visitor);\n        if (value !== cascVal.value) {\n          elementStyle[name] = new CascadeValue(value, cascVal.priority);\n        }\n      }\n    }\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY: string[] = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\", // content\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n      ? uaBaseCascade.clone()\n      : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  override tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    if (name) {\n      this.specificity += 1;\n    }\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  override classSelector(name: string): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by .${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  override pseudoclassSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by :${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|s)${Base.escapeRegExp(value)}(\\$|s)`);\n          this.chain.push(new CheckTargetEpubTypeAction(patt));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default: // always fails\n        Logging.logger.warn(`unknown pseudo-class selector: ${name}`);\n        this.chain.push(new CheckConditionAction(\"\"));\n        break;\n    }\n    this.specificity += 256;\n  }\n\n  override pseudoelementSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          Logging.logger.warn(\n            `Double pseudoelement ::${this.pseudoelement}::${name}`,\n          );\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              Logging.logger.warn(\n                `Double pseudoelement ::${this.pseudoelement}::${name}`,\n              );\n              this.chain.push(new CheckConditionAction(\"\")); // always fails\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default: // always fails\n        Logging.logger.warn(`Unrecognized pseudoelement: ::${name}`);\n        this.chain.push(new CheckConditionAction(\"\"));\n        break;\n    }\n    this.specificity += 1;\n  }\n\n  override idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  override attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case CssTokenizer.TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case CssTokenizer.TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case CssTokenizer.TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case CssTokenizer.TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          Logging.logger.warn(\"Unsupported :: attr selector op:\", value);\n          action = new CheckConditionAction(\"\"); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(\"Unsupported attr selector:\", op);\n        action = new CheckConditionAction(\"\"); // always fails\n    }\n    this.chain.push(action);\n  }\n\n  override descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  override childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  override adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  override followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  override nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  override startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n  }\n\n  override error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  override startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  override startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  override endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      const specificity: number = this.specificity + this.cascade.nextOrder();\n      this.processChain(this.makeApplyRuleAction(specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  override startFuncWithSelector(funcName: string): void {\n    switch (funcName) {\n      case \"not\": {\n        const notParserHandler = new NotParameterParserHandler(this);\n        notParserHandler.startSelectorRule();\n        this.owner.pushHandler(notParserHandler);\n        break;\n      }\n      default:\n        // TODO\n        break;\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\nexport class NotParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  override startFuncWithSelector(funcName: string): void {\n    if (funcName == \"not\") {\n      this.reportAndSkip(\"E_CSS_UNEXPECTED_NOT\");\n    }\n  }\n\n  override startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  override nextSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_NEXT_SELECTOR\");\n  }\n\n  override endFuncWithSelector(): void {\n    if (this.chain && this.chain.length > 0) {\n      this.parentChain.push(new NegateActionsSet(this.chain));\n    }\n    this.parent.specificity += this.specificity;\n    this.owner.popHandler();\n  }\n\n  override error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.owner.popHandler();\n  }\n}\n\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const av = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, av);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver\n{\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (\n      writingMode &&\n      writingMode !== Css.ident.inherit &&\n      writingMode !== Css.ident.revert &&\n      writingMode !== Css.ident.unset\n    ) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (\n      direction &&\n      direction !== Css.ident.inherit &&\n      direction !== Css.ident.revert &&\n      direction !== Css.ident.unset\n    ) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n    ? couplingMapHorRtl\n    : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n\n/**\n * Convert var() to its value\n */\nexport class VarFilterVisitor extends Css.FilterVisitor {\n  constructor(\n    public elementStyles: ElementStyle[],\n    public styler: CssStyler.AbstractStyler,\n    public element: Element | null,\n  ) {\n    super();\n  }\n\n  private getVarValue(name: string): Css.Val {\n    let elem = this.element ?? ((this.styler as any).root as Element);\n    if (this.elementStyles?.length) {\n      for (const style of this.elementStyles) {\n        const val = (style[name] as CascadeValue)?.value;\n        if (val) {\n          return val;\n        }\n      }\n      if (this.element) {\n        elem = this.element.parentElement;\n      }\n    }\n    for (; elem; elem = elem.parentElement) {\n      const val = (this.styler.getStyle(elem, false)?.[name] as CascadeValue)\n        ?.value;\n      if (val) {\n        return val;\n      }\n    }\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"var\") {\n      return super.visitFunc(func);\n    }\n    const name = func.values[0] instanceof Css.Ident && func.values[0].name;\n    if (!name || !Css.isCustomPropName(name)) {\n      this.error = true;\n      return Css.empty;\n    }\n    const varVal = this.getVarValue(name);\n    if (varVal) {\n      return varVal;\n    }\n    // fallback value\n    if (func.values.length < 2) {\n      this.error = true;\n      return Css.empty;\n    }\n    if (func.values.length === 2) {\n      return func.values[1];\n    } else {\n      return new Css.CommaList(func.values.slice(1));\n    }\n  }\n}\n\n/**\n * Convert calc() to its value\n */\nexport class CalcFilterVisitor extends Css.FilterVisitor {\n  constructor(\n    public context: Exprs.Context,\n    public resolveViewportUnit?: boolean,\n    public percentRef?: number,\n  ) {\n    super();\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    // convert func args\n    let value = super.visitFunc(func);\n    if (func.name !== \"calc\") {\n      return value;\n    }\n    const exprText = value.toString().replace(/^calc\\b/, \"-epubx-expr\");\n    if (/\\d(%|em|ex|cap|ch|ic|lh|p?v[whbi]|p?vmin|p?vmax)\\W/i.test(exprText)) {\n      return value;\n    }\n    const exprVal = CssParser.parseValue(\n      null,\n      new CssTokenizer.Tokenizer(exprText, null),\n      \"\",\n    );\n    if (exprVal instanceof Css.Expr) {\n      const exprResult = exprVal.expr.evaluate(this.context);\n      if (typeof exprResult === \"number\") {\n        value = new Css.Numeric(exprResult, \"px\");\n      }\n    }\n    return value;\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (\n      this.resolveViewportUnit &&\n      Exprs.isViewportRelativeLengthUnit(numeric.unit)\n    ) {\n      return new Css.Numeric(\n        numeric.num * this.context.queryUnitSize(numeric.unit, false),\n        \"px\",\n      );\n    }\n    if (typeof this.percentRef === \"number\" && numeric.unit === \"%\") {\n      return new Css.Numeric((numeric.num * this.percentRef) / 100, \"px\");\n    }\n    return numeric;\n  }\n}\n\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName?: string,\n  percentRef?: number,\n): Css.Val {\n  try {\n    if (val instanceof Css.Expr) {\n      return CssParser.evaluateExprToCSS(context, val.expr, propName);\n    }\n    if (val instanceof Css.Numeric || val instanceof Css.Func) {\n      return val.visit(new CalcFilterVisitor(context, true, percentRef));\n    }\n  } catch (err) {\n    Logging.logger.warn(err);\n    return Css.empty;\n  }\n  return val;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    return getComputedValue(inlineSizeName);\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition =\n  PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext\n{\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent =\n        this.parent.getLastFollowingFloatInFragments(float);\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const logicalFloatSide2 = this.toLogical(fragment.floatSide);\n        if (logicalFloatSide2 === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogical(float.floatSide);\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogical(fragment.floatSide);\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical ? limits.top : limits.left;\n      case \"inline-end\":\n        return this.container.vertical ? limits.bottom : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogical(f.floatSide);\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    let logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSide]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSide === \"block-start\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-start\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSide === \"block-end\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = inlineEnd - inlineStart;\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSide === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSide = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSide = \"block-start\";\n          } else {\n            logicalFloatSide = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSide]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSide = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSide === \"inline-start\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize = inlineEnd - inlineStart;\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n    switch (logicalFloatSide) {\n      case \"inline-start\":\n      case \"block-start\":\n      case \"snap-block\":\n        area.setInlinePosition(inlineStart, inlineSize);\n        area.setBlockPosition(blockStart, blockSize);\n        break;\n      case \"inline-end\":\n      case \"block-end\":\n        area.setInlinePosition(inlineEnd - outerInlineSize, inlineSize);\n        area.setBlockPosition(\n          blockEnd - outerBlockSize * area.getBoxDir(),\n          blockSize,\n        );\n        break;\n      default:\n        throw new Error(`unknown float direction: ${floatSide}`);\n    }\n    return logicalFloatSide;\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogical(floatSide);\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /** @override */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /** @override */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /** @override */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /** @override */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /** @override */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /** @override */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /** @override */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  override isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  override getOrder(): number {\n    return Infinity;\n  }\n\n  override shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint\n{\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy\n{\n  /** @override */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /** @override */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /** @override */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext =\n      pageFloatLayoutContext.getPageFloatLayoutContext(floatReference);\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /** @override */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /** @override */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /** @override */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /** @override */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartSideValue(breakValue: string | null): string {\n  switch (breakValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return breakValue;\n    default:\n      return \"any\";\n  }\n}\n\nexport function startSideValueToBreakValue(\n  startSideValue: string,\n): string | null {\n  switch (startSideValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return startSideValue;\n    default:\n      return null;\n  }\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display.toString();\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Ident): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDislayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Ident } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if (\n    (float && float !== Css.ident.none && !Css.isDefaultingValue(float)) ||\n    isRoot\n  ) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDislayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident | string): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident | string): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none && !Css.isDefaultingValue(float)) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible &&\n      !Css.isDefaultingValue(overflow)) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Display from \"./display\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Though method used to be used as a workaround for Chrome bug, it seems that\n * the bug has been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method as a workaround for Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function fixBoxesForNode(\n  clientLayout: Vtree.ClientLayout,\n  boxes: Vtree.ClientRect[],\n  node: Node,\n): Vtree.ClientRect[] {\n  const fullRange = node.ownerDocument.createRange();\n  fullRange.setStart(node, 0);\n  fullRange.setEnd(node, node.textContent.length);\n  const fullBoxes = clientLayout.getRangeClientRects(fullRange);\n  const result = [];\n  for (const box of boxes) {\n    let k: number;\n    for (k = 0; k < fullBoxes.length; k++) {\n      const fullBox = fullBoxes[k];\n      if (\n        box.top >= fullBox.top &&\n        box.bottom <= fullBox.bottom &&\n        Math.abs(box.left - fullBox.left) < 1\n      ) {\n        result.push({\n          top: box.top,\n          left: fullBox.left,\n          bottom: box.bottom,\n          right: fullBox.right,\n        });\n        break;\n      }\n    }\n    if (k == fullBoxes.length) {\n      Logging.logger.warn(\"Could not fix character box\");\n      result.push(box);\n    }\n  }\n  return result;\n}\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n  const element = node.nodeType == 1 ? (node as Element) : node.parentElement;\n  if (element && element instanceof HTMLElement) {\n    if (element.localName === \"rt\" && element.style[\"zoom\"]) {\n      // \"zoom\" is set in fixRubyTextFontSize() to fix the issue #673 for Chrome.\n      // when zoom is set, it is hard to get the edge value, so return NaN.\n      // (Fix for issues #804 and #808)\n      return NaN;\n    }\n    if (/^([\\d\\.]|super|(text-)?top)/.test(element.style.verticalAlign)) {\n      // (Fix for issue #811)\n      return NaN;\n    }\n  }\n  if (node.nodeType == 1) {\n    if (nodeContext.after || !nodeContext.inline) {\n      const cbox = clientLayout.getElementClientRect(node as Element);\n      if (\n        cbox.left === 0 &&\n        cbox.top === 0 &&\n        cbox.right === 0 &&\n        cbox.bottom === 0\n      ) {\n        // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n        // (Fix for issue #802)\n        return NaN;\n      }\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    if (vertical && Base.checkVerticalBBoxBug(document.body)) {\n      boxes = fixBoxesForNode(clientLayout, boxes, node);\n    }\n    boxes = boxes.filter((box) => box.right > box.left && box.bottom > box.top);\n    if (!boxes.length) {\n      return NaN;\n    }\n    if (vertical) {\n      edge = Math.min.apply(\n        null,\n        boxes.map((box) => box.left),\n      );\n    } else {\n      edge = Math.max.apply(\n        null,\n        boxes.map((box) => box.bottom),\n      );\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  let lastChild: Node;\n  while ((lastChild = parentNode.lastChild) != viewNode) {\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  const viewNode = nodeContext?.viewNode;\n  return viewNode instanceof Element && isSpecial(viewNode);\n}\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  return (\n    display !== \"inline\" &&\n    (Display.isInlineLevel(display) || Display.isRubyInternalDisplay(display))\n  );\n}\n\nexport function findAncestorSpecialInlineNodeContext(\n  nodeContext: Vtree.NodeContext,\n): Vtree.NodeContext | null {\n  for (let p = nodeContext.parent; p; p = p.parent) {\n    if (p.display !== \"inline\" && Display.isInlineLevel(p.display)) {\n      return p;\n    }\n  }\n  return null;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition\n{\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /** @override */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition\n{\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  override findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  override getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  override getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /** @override */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /** @override */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /** @override */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    // Fix for issue #740\n    if (\n      nodeContext.shadowType === Vtree.ShadowType.ROOTLESS &&\n      LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      return;\n    }\n    let node = nodeContext.viewNode;\n    if (node.parentElement?.localName === \"viv-ts-inner\") {\n      // special element for text-spacing\n      node = node.parentElement.parentElement;\n    }\n    const parentNode = node.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, node);\n    if (removeSelf) {\n      parentNode.removeChild(node);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.fixJustificationIfNeeded(nodeContext, true);\n      column.layoutContext.processFragmentedBlockEdge(\n        removeSelf ? nodeContext : nodeContext.parent,\n      );\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /** @override */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /** @override */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /** @override */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext =\n        nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"LayoutIterator\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  override startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  override startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  override afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n","/**\n * Copyright 2021 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TextPolyfill - CSS text-spacing and hanging-punctuation support.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\n\ntype PropertyValue = string | number | Css.Val;\n\ntype HangingPunctuation = {\n  first: boolean;\n  end: boolean; // force-end or allow-end\n  allowEnd: boolean;\n  last: boolean;\n};\n\nconst HANGING_PUNCTUATION_NONE: HangingPunctuation = {\n  first: false,\n  end: false,\n  allowEnd: false,\n  last: false,\n};\n\nfunction hangingPunctuationFromPropertyValue(\n  value: PropertyValue,\n): HangingPunctuation {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n      ? Css.getName(value)\n      : Css.ident.none;\n\n  if (cssval === Css.ident.none) {\n    return HANGING_PUNCTUATION_NONE;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const hangingPunctuation: HangingPunctuation = Object.create(\n    HANGING_PUNCTUATION_NONE,\n  );\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"first\":\n          hangingPunctuation.first = true;\n          break;\n        case \"force-end\":\n          hangingPunctuation.end = true;\n          break;\n        case \"allow-end\":\n          hangingPunctuation.end = true;\n          hangingPunctuation.allowEnd = true;\n          break;\n        case \"last\":\n          hangingPunctuation.last = true;\n          break;\n      }\n    }\n  }\n  return hangingPunctuation;\n}\n\nfunction isHangingPunctuationNone(\n  hangingPunctuation: HangingPunctuation,\n): boolean {\n  return (\n    !hangingPunctuation.first &&\n    !hangingPunctuation.last &&\n    !hangingPunctuation.end\n  );\n}\n\ntype TextSpacing = {\n  trimStart: boolean; // trim-start or space-first (not space-start)\n  spaceFirst: boolean; // space-first (trim-start except at first line)\n  trimEnd: boolean; // trim-end or allow-end (not space-end)\n  allowEnd: boolean; // allow-end (not force-end)\n  trimAdjacent: boolean;\n  ideographAlpha: boolean;\n  ideographNumeric: boolean;\n};\n\n/**\n * text-spacing: none\n * none = space-start space-end space-adjacent\n */\nconst TEXT_SPACING_NONE: TextSpacing = {\n  trimStart: false,\n  spaceFirst: false,\n  trimEnd: false,\n  allowEnd: false,\n  trimAdjacent: false,\n  ideographAlpha: false,\n  ideographNumeric: false,\n};\n\n/**\n * text-spacing: normal\n * normal = space-first trim-end trim-adjacent\n */\nconst TEXT_SPACING_NORMAL: TextSpacing = {\n  trimStart: true,\n  spaceFirst: true,\n  trimEnd: true,\n  allowEnd: false,\n  trimAdjacent: true,\n  ideographAlpha: false,\n  ideographNumeric: false,\n};\n/**\n * text-spacing: auto\n * auto = trim-start trim-end trim-adjacent ideograph-alpha ideograph-numeric\n */\nconst TEXT_SPACING_AUTO: TextSpacing = {\n  trimStart: true,\n  spaceFirst: false,\n  trimEnd: true,\n  allowEnd: false,\n  trimAdjacent: true,\n  ideographAlpha: true,\n  ideographNumeric: true,\n};\n\nfunction textSpacingFromPropertyValue(value: PropertyValue): TextSpacing {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n      ? Css.getName(value)\n      : Css.ident.normal;\n\n  if (cssval === Css.ident.normal) {\n    return TEXT_SPACING_NORMAL;\n  }\n  if (cssval === Css.ident.none) {\n    return TEXT_SPACING_NONE;\n  }\n  if (cssval === Css.ident.auto) {\n    return TEXT_SPACING_AUTO;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const textSpacing: TextSpacing = Object.create(TEXT_SPACING_NORMAL);\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"trim-start\":\n          textSpacing.trimStart = true;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-start\":\n          textSpacing.trimStart = false;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-first\":\n          textSpacing.trimStart = true;\n          textSpacing.spaceFirst = true;\n          break;\n        case \"trim-end\":\n          textSpacing.trimEnd = true;\n          textSpacing.allowEnd = false;\n          break;\n        case \"space-end\":\n          textSpacing.trimEnd = false;\n          textSpacing.allowEnd = false;\n          break;\n        case \"allow-end\":\n          textSpacing.trimEnd = true;\n          textSpacing.allowEnd = true;\n          break;\n        case \"trim-adjacent\":\n          textSpacing.trimAdjacent = true;\n          break;\n        case \"space-adjacent\":\n          textSpacing.trimAdjacent = false;\n          break;\n        case \"ideograph-alpha\":\n          textSpacing.ideographAlpha = true;\n          break;\n        case \"ideograph-numeric\":\n          textSpacing.ideographNumeric = true;\n          break;\n      }\n    }\n  }\n\n  return textSpacing;\n}\n\nfunction isTextSpacingNone(textSpacing: TextSpacing): boolean {\n  return (\n    !textSpacing.trimStart &&\n    !textSpacing.trimEnd &&\n    !textSpacing.trimAdjacent &&\n    !textSpacing.ideographAlpha &&\n    !textSpacing.ideographNumeric\n  );\n}\n\nfunction normalizeLang(lang: string): string | null {\n  if (lang) {\n    // Normalize CJK lang\n    lang = lang.toLowerCase();\n    if (/^zh\\b.*-(hant|tw|hk)\\b/.test(lang)) {\n      return \"zh-hant\";\n    }\n    if (/^zh\\b/.test(lang)) {\n      return \"zh-hans\";\n    }\n    if (/^ja\\b/.test(lang)) {\n      return \"ja\";\n    }\n    if (/^ko\\b/.test(lang)) {\n      return \"ko\";\n    }\n    return lang;\n  }\n  return null;\n}\n\nconst embeddedContentTags = {\n  audio: true,\n  canvas: true,\n  embed: true,\n  iframe: true,\n  img: true,\n  math: true,\n  object: true,\n  picture: true,\n  svg: true,\n  video: true,\n};\n\nclass TextSpacingPolyfill {\n  getPolyfilledInheritedProps() {\n    return [\"hanging-punctuation\", \"text-spacing\"];\n  }\n\n  preprocessSingleDocument(document: Document): void {\n    if (!document.body) {\n      return;\n    }\n    this.preprocessForTextSpacing(document.body);\n  }\n\n  preprocessForTextSpacing(element: Element): void {\n    // Split text nodes by punctuations and ideograph/non-ideograph boundary\n    const nodeIter = element.ownerDocument.createNodeIterator(\n      element,\n      NodeFilter.SHOW_TEXT,\n    );\n    for (let node = nodeIter.nextNode(); node; node = nodeIter.nextNode()) {\n      if (\n        node.parentElement.namespaceURI !== Base.NS.XHTML ||\n        node.parentElement.dataset?.[\"mathTypeset\"] === \"true\"\n      ) {\n        continue;\n      }\n      const textArr = node.textContent\n        .replace(\n          /(?![()\\[\\]{}])[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}、。，．：；､｡]\\p{M}*(?=\\P{M})|.(?=(?![()\\[\\]{}])[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}、。，．：；､｡])|(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*(?=(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}])|(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}]\\p{M}*(?=(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF])/gsu,\n          \"$&\\x00\",\n        )\n        .split(\"\\x00\");\n\n      if (textArr.length > 1) {\n        const lastIndex = textArr.length - 1;\n        for (let i = 0; i < lastIndex; i++) {\n          node.parentNode.insertBefore(\n            document.createTextNode(textArr[i]),\n            node,\n          );\n        }\n        node.textContent = textArr[lastIndex];\n      }\n    }\n  }\n\n  processGeneratedContent(\n    element: HTMLElement,\n    textSpacingVal: Css.Val,\n    hangingPunctuationVal: Css.Val,\n    lang: string,\n    vertical: boolean,\n  ): void {\n    lang = normalizeLang(lang);\n    const textSpacing = textSpacingFromPropertyValue(textSpacingVal);\n    const hangingPunctuation = hangingPunctuationFromPropertyValue(\n      hangingPunctuationVal,\n    );\n\n    if (\n      isHangingPunctuationNone(hangingPunctuation) &&\n      isTextSpacingNone(textSpacing)\n    ) {\n      return;\n    }\n\n    this.preprocessForTextSpacing(element);\n\n    const whiteSpaceSave = element.style.whiteSpace;\n    if ((vertical ? element.offsetHeight : element.offsetWidth) === 0) {\n      // Prevent wrong line wrapping\n      element.style.whiteSpace = \"pre\";\n    }\n\n    const nodeIter = element.ownerDocument.createNodeIterator(\n      element,\n      NodeFilter.SHOW_TEXT,\n    );\n    let prevNode: Node = null;\n    let nextNode: Node = null;\n    for (let node = nodeIter.nextNode(); node; node = nextNode) {\n      nextNode = nodeIter.nextNode();\n      const isFirstInBlock = !prevNode;\n      const isFirstAfterForcedLineBreak =\n        !prevNode || /\\n$/.test(prevNode.textContent);\n      const isLastBeforeForcedLineBreak =\n        !nextNode || /^\\n/.test(nextNode.textContent);\n      const isLastInBlock = !nextNode;\n      this.processTextSpacing(\n        node,\n        isFirstInBlock,\n        isFirstAfterForcedLineBreak,\n        isLastBeforeForcedLineBreak,\n        isLastInBlock,\n        prevNode,\n        nextNode,\n        textSpacing,\n        hangingPunctuation,\n        lang,\n        vertical,\n      );\n      prevNode = node;\n    }\n\n    element.style.whiteSpace = whiteSpaceSave;\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): void {\n    const isFirstFragment = !nodeContext || nodeContext.fragmentIndex === 1;\n    const isAfterForcedLineBreak =\n      isFirstFragment || checkIfAfterForcedLineBreak();\n\n    function checkIfAfterForcedLineBreak(): boolean {\n      let p = checkPoints[0];\n      let prevNode: Node;\n      while (p && p.inline) {\n        prevNode = p.sourceNode?.previousSibling;\n        if (prevNode) {\n          if (\n            prevNode instanceof Text &&\n            /^\\s*$/.test(prevNode.textContent) &&\n            p.whitespace !== Vtree.Whitespace.PRESERVE\n          ) {\n            prevNode = prevNode.previousSibling;\n          }\n          if (prevNode) {\n            break;\n          }\n        }\n        p = p.parent;\n      }\n\n      while (prevNode) {\n        if (prevNode instanceof Element) {\n          if (prevNode.localName === \"br\") {\n            return true;\n          }\n        } else if (prevNode instanceof Text) {\n          if (p.whitespace === Vtree.Whitespace.PRESERVE) {\n            if (/\\n$/.test(prevNode.textContent)) {\n              return true;\n            }\n          } else if (p.whitespace === Vtree.Whitespace.NEWLINE) {\n            if (/\\n\\s*$/.test(prevNode.textContent)) {\n              return true;\n            }\n          }\n        }\n        prevNode = prevNode.lastChild;\n      }\n      return false;\n    }\n\n    for (let i = 0; i < checkPoints.length; i++) {\n      const p = checkPoints[i];\n      if (\n        !p.after &&\n        p.inline &&\n        !p.display &&\n        p.parent &&\n        p.viewNode.parentNode &&\n        p.viewNode.nodeType === Node.TEXT_NODE &&\n        p.viewNode.textContent.trimStart().length > 0\n      ) {\n        const lang = normalizeLang(\n          p.lang ??\n            p.parent.lang ??\n            nodeContext?.lang ??\n            nodeContext?.parent?.lang,\n        );\n        const textSpacing = textSpacingFromPropertyValue(\n          p.inheritedProps[\"text-spacing\"],\n        );\n        const hangingPunctuation = hangingPunctuationFromPropertyValue(\n          p.inheritedProps[\"hanging-punctuation\"],\n        );\n\n        if (\n          isHangingPunctuationNone(hangingPunctuation) &&\n          isTextSpacingNone(textSpacing)\n        ) {\n          continue;\n        }\n        if (/\\b(flex|grid)\\b/.test(p.parent.display)) {\n          // Cannot process if parent is flex or grid. (Issue #926)\n          continue;\n        }\n\n        let prevNode: Node = null;\n        let nextNode: Node = null;\n        let isFirstInBlock = i === 0 && isFirstFragment;\n        let isFirstAfterForcedLineBreak = i === 0 && isAfterForcedLineBreak;\n        let isLastBeforeForcedLineBreak = false;\n        let isLastInBlock = false;\n\n        function checkIfFirstAfterForcedLineBreak(\n          prevP: Vtree.NodeContext,\n        ): boolean {\n          if (prevP.viewNode instanceof Element) {\n            return prevP.viewNode.localName === \"br\";\n          }\n          if (prevP.viewNode instanceof Text) {\n            if (prevP.whitespace === Vtree.Whitespace.PRESERVE) {\n              if (/\\n$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            } else if (prevP.whitespace === Vtree.Whitespace.NEWLINE) {\n              if (/\\n\\s*$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            }\n            if (prevP.viewNode.previousElementSibling?.localName === \"br\") {\n              return Vtree.canIgnore(prevP.viewNode, prevP.whitespace);\n            }\n          }\n          return false;\n        }\n\n        function checkIfLastBeforeForcedLineBreak(\n          nextP: Vtree.NodeContext,\n        ): boolean {\n          if (nextP.viewNode instanceof Element) {\n            return nextP.viewNode.localName === \"br\";\n          }\n          if (nextP.viewNode instanceof Text) {\n            if (nextP.whitespace === Vtree.Whitespace.PRESERVE) {\n              if (/^\\n/.test(nextP.viewNode.textContent)) {\n                return true;\n              }\n            } else if (nextP.whitespace === Vtree.Whitespace.NEWLINE) {\n              if (/^\\s*\\n/.test(nextP.viewNode.textContent)) {\n                return true;\n              }\n            }\n            if (nextP.viewNode.nextElementSibling?.localName === \"br\") {\n              return Vtree.canIgnore(nextP.viewNode, nextP.whitespace);\n            }\n          }\n          return false;\n        }\n\n        for (let prev = i - 1; prev >= 0; prev--) {\n          const prevP = checkPoints[prev];\n          if (checkIfFirstAfterForcedLineBreak(prevP)) {\n            isFirstAfterForcedLineBreak = true;\n            break;\n          }\n          if (\n            !prevP.display &&\n            prevP.viewNode.nodeType === Node.TEXT_NODE &&\n            prevP.viewNode.textContent.length > 0\n          ) {\n            prevNode = prevP.viewNode;\n            break;\n          }\n          if (\n            (prevP.display && !/^(inline|ruby)\\b/.test(prevP.display)) ||\n            (prevP.viewNode instanceof Element &&\n              (prevP.viewNode.localName === \"br\" ||\n                embeddedContentTags[prevP.viewNode.localName]))\n          ) {\n            break;\n          }\n          if (prev === 0 && isFirstFragment) {\n            isFirstInBlock = true;\n            isFirstAfterForcedLineBreak = true;\n          }\n        }\n        for (let next = i + 1; next < checkPoints.length; next++) {\n          const nextP = checkPoints[next];\n          if (checkIfLastBeforeForcedLineBreak(nextP)) {\n            isLastBeforeForcedLineBreak = true;\n            break;\n          }\n          if (\n            nextP.viewNode !== p.viewNode &&\n            !nextP.display &&\n            nextP.viewNode.nodeType === Node.TEXT_NODE &&\n            nextP.viewNode.textContent.length > 0\n          ) {\n            nextNode = nextP.viewNode;\n            break;\n          }\n          if (\n            (nextP.display && !/^(inline|ruby)\\b/.test(nextP.display)) ||\n            (nextP.viewNode instanceof Element &&\n              (nextP.viewNode.localName === \"br\" ||\n                embeddedContentTags[nextP.viewNode.localName]))\n          ) {\n            break;\n          }\n          if (next === checkPoints.length - 1) {\n            isLastInBlock = true;\n            isLastBeforeForcedLineBreak = true;\n          }\n        }\n        this.processTextSpacing(\n          p.viewNode,\n          isFirstInBlock,\n          isFirstAfterForcedLineBreak,\n          isLastBeforeForcedLineBreak,\n          isLastInBlock,\n          prevNode,\n          nextNode,\n          textSpacing,\n          hangingPunctuation,\n          lang,\n          p.vertical,\n        );\n      }\n    }\n  }\n\n  private processTextSpacing(\n    textNode: Node,\n    isFirstInBlock: boolean,\n    isFirstAfterForcedLineBreak: boolean,\n    isLastBeforeForcedLineBreak: boolean,\n    isLastInBlock: boolean,\n    prevNode: Node,\n    nextNode: Node,\n    textSpacing: TextSpacing,\n    hangingPunctuation: HangingPunctuation,\n    lang: string,\n    vertical: boolean,\n  ): void {\n    const text = textNode.textContent;\n    const document = textNode.ownerDocument;\n    let currRange: Range;\n    let prevRange: Range;\n    let nextRange: Range;\n\n    function isAtStartOfLine(): boolean {\n      if (!prevNode) {\n        return false;\n      }\n      if (!currRange) {\n        currRange = document.createRange();\n        currRange.selectNode(textNode);\n      }\n      const rect = currRange.getClientRects()[0];\n      if (!prevRange) {\n        prevRange = document.createRange();\n        prevRange.selectNode(prevNode);\n      }\n      const prevRects = prevRange.getClientRects();\n      const prevRect = prevRects[prevRects.length - 1];\n      if (!rect || !prevRect) {\n        return false;\n      }\n      return vertical\n        ? rect.top < prevRect.top + prevRect.height - rect.width ||\n            rect.left + rect.width < prevRect.left + 1 ||\n            rect.left > prevRect.left + prevRect.width - 1\n        : rect.left < prevRect.left + prevRect.width - rect.height ||\n            rect.top > prevRect.top + prevRect.height - 1 ||\n            rect.top + rect.height < prevRect.top + 1;\n    }\n\n    function isAtEndOfLine(): boolean {\n      if (!nextNode) {\n        return false;\n      }\n      if (!currRange) {\n        currRange = document.createRange();\n        currRange.selectNode(textNode);\n      }\n      const rect = currRange.getClientRects()[0];\n      if (!nextRange) {\n        nextRange = document.createRange();\n        nextRange.selectNode(nextNode);\n      }\n      const nextRect = nextRange.getClientRects()[0];\n      if (!rect || !nextRect) {\n        return false;\n      }\n      return vertical\n        ? rect.top + rect.height > nextRect.top + rect.width ||\n            rect.left > nextRect.left + nextRect.width - 1 ||\n            rect.left + rect.width < nextRect.left + 1\n        : rect.left + rect.width > nextRect.left + rect.height ||\n            rect.top + rect.height < nextRect.top + 1 ||\n            rect.top > nextRect.top + nextRect.height - 1;\n    }\n\n    let punctProcessing = false;\n    let hangingFirst = false;\n    let hangingLast = false;\n    let hangingEnd = false;\n    let tagName: \"viv-ts-open\" | \"viv-ts-close\";\n\n    if (\n      isFirstInBlock &&\n      hangingPunctuation.first &&\n      /^[\\p{Ps}\\p{Pf}\\p{Pi}'\"]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: first\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n      hangingFirst = true;\n    } else if (\n      isLastInBlock &&\n      hangingPunctuation.last &&\n      /^[\\p{Pe}\\p{Pf}\\p{Pi}'\"]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: last\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hangingLast = true;\n    } else if (hangingPunctuation.end && /^[、。，．､｡]\\p{M}*$/u.test(text)) {\n      // hanging-punctuation: force-end | allow-end\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hangingEnd = true;\n    } else if (\n      (textSpacing.trimStart || textSpacing.trimAdjacent) &&\n      /^[‘“〝（［｛｟〈〈《「『【〔〖〘〚]\\p{M}*$/u.test(text)\n    ) {\n      // fullwidth opening punctuation\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n    } else if (\n      (textSpacing.trimEnd || textSpacing.trimAdjacent) &&\n      (/^[’”〞〟）］｝｠〉〉》」』】〕〗〙〛]\\p{M}*$/u.test(text) ||\n        (lang === \"zh-hans\" && /^[：；]\\p{M}*$/u.test(text)) ||\n        (lang !== \"zh-hant\" && /^[、。，．]\\p{M}*$/u.test(text)))\n    ) {\n      // fullwidth closing punctuation\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n    }\n\n    if (punctProcessing) {\n      if (textNode.parentElement.localName === \"viv-ts-inner\") {\n        // Already processed\n        return;\n      }\n      // Wrap the textNode as `<{tagName}><viv-ts-inner>{text}<viv-ts-inner></{tagName}>`\n      const outerElem = document.createElement(tagName);\n      const innerElem = document.createElement(\"viv-ts-inner\");\n      outerElem.appendChild(innerElem);\n      textNode.parentNode.insertBefore(outerElem, textNode);\n      innerElem.appendChild(textNode);\n\n      // Check if che punctuation is almost full width\n      const fontSize = parseFloat(\n        document.defaultView.getComputedStyle(outerElem).fontSize,\n      );\n      const isFullWidth =\n        (vertical ? innerElem.offsetHeight : innerElem.offsetWidth) >\n        fontSize * 0.7;\n\n      if (isFullWidth || hangingFirst || hangingLast || hangingEnd) {\n        if (tagName === \"viv-ts-open\") {\n          if (hangingFirst) {\n            outerElem.className = \"viv-hang-first\";\n          } else if (isFirstInBlock || isFirstAfterForcedLineBreak) {\n            if (textSpacing.trimStart && !textSpacing.spaceFirst) {\n              outerElem.className = \"viv-ts-trim\";\n            } else {\n              outerElem.className = \"viv-ts-space\";\n            }\n          } else if (!textSpacing.trimStart && isAtStartOfLine()) {\n            outerElem.className = \"viv-ts-space\";\n          } else if (\n            textSpacing.trimAdjacent &&\n            prevNode &&\n            /[\\p{Ps}\\p{Pi}\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000：；、。，．]\\p{M}*$/u.test(\n              prevNode.textContent,\n            )\n          ) {\n            outerElem.className = \"viv-ts-trim\";\n          } else {\n            outerElem.className = \"viv-ts-auto\";\n          }\n        } else if (tagName === \"viv-ts-close\") {\n          if (hangingLast) {\n            outerElem.className = isFullWidth\n              ? \"viv-hang-last\"\n              : \"viv-hang-last viv-hang-hw\";\n          } else if (isLastInBlock || isLastBeforeForcedLineBreak) {\n            if (hangingEnd) {\n              outerElem.className = isFullWidth\n                ? \"viv-hang-end\"\n                : \"viv-hang-end viv-hang-hw\";\n            } else if (textSpacing.trimEnd) {\n              outerElem.className = \"viv-ts-trim\";\n            } else {\n              outerElem.className = \"viv-ts-space\";\n            }\n          } else if (\n            nextNode &&\n            /^[\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000：；、。，．]/u.test(\n              nextNode.textContent,\n            )\n          ) {\n            if (isFullWidth && textSpacing.trimAdjacent) {\n              outerElem.className = \"viv-ts-trim\";\n            }\n          } else if (hangingEnd) {\n            const atEnd = isAtEndOfLine();\n            const atEndNoHang = atEnd && hangingPunctuation.allowEnd;\n            if (!atEndNoHang) {\n              outerElem.className = isFullWidth\n                ? \"viv-hang-end\"\n                : \"viv-hang-end viv-hang-hw\";\n            }\n            if (!isFullWidth) {\n              if (!atEnd && !isAtEndOfLine()) {\n                outerElem.className = \"\";\n              }\n            } else if (\n              atEndNoHang\n                ? textSpacing.trimEnd && !textSpacing.allowEnd\n                : !isAtEndOfLine()\n            ) {\n              outerElem.className = \"viv-ts-auto\";\n            } else if (!atEnd && hangingPunctuation.allowEnd) {\n              if (!textSpacing.trimEnd || textSpacing.allowEnd) {\n                outerElem.className = \"viv-ts-space\";\n                if (!isAtEndOfLine()) {\n                  if (textSpacing.trimEnd) {\n                    outerElem.className = \"viv-ts-auto\";\n                    if (!isAtEndOfLine()) {\n                      outerElem.className = \"viv-hang-end\";\n                    }\n                  } else {\n                    outerElem.className = \"viv-hang-end\";\n                  }\n                }\n              } else {\n                outerElem.className = \"viv-ts-auto\";\n                if (!isAtEndOfLine()) {\n                  outerElem.className = \"viv-hang-end\";\n                }\n              }\n            }\n          } else if (textSpacing.trimEnd) {\n            if (textSpacing.allowEnd && isAtEndOfLine()) {\n              outerElem.className = \"viv-ts-space\";\n            } else {\n              outerElem.className = \"viv-ts-auto\";\n            }\n          }\n        }\n      }\n    }\n\n    let spaceIdeoAlnumProcessing = false;\n\n    function checkUpright(elem: Element): boolean {\n      const style = elem?.ownerDocument.defaultView?.getComputedStyle(elem);\n      return (\n        !!style &&\n        (style.textOrientation === \"upright\" ||\n          style.textCombineUpright === \"all\" ||\n          style[\"-webkit-text-combine\"] === \"horizontal\")\n      );\n    }\n\n    if (textSpacing.ideographAlpha || textSpacing.ideographNumeric) {\n      if (\n        prevNode &&\n        /^(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]/u.test(text) &&\n        ((textSpacing.ideographAlpha &&\n          /(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}\\p{M}*$/u.test(\n            prevNode.textContent,\n          )) ||\n          (textSpacing.ideographNumeric &&\n            /(?![\\uFF01-\\uFF60])\\p{Nd}\\p{M}*$/u.test(prevNode.textContent))) &&\n        !(vertical && checkUpright(prevNode.parentElement))\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n      if (\n        nextNode &&\n        /(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*$/u.test(text) &&\n        ((textSpacing.ideographAlpha &&\n          /^(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}/u.test(\n            nextNode.textContent,\n          )) ||\n          (textSpacing.ideographNumeric &&\n            /^(?![\\uFF01-\\uFF60])\\p{Nd}/u.test(nextNode.textContent))) &&\n        !(vertical && checkUpright(nextNode.parentElement))\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode.nextSibling,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n    }\n  }\n\n  registerHooks() {\n    Plugin.registerHook(\n      Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n      this.getPolyfilledInheritedProps.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT,\n      this.preprocessSingleDocument.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n      this.postLayoutBlock.bind(this),\n    );\n  }\n}\n\nconst textPolyfill = new TextSpacingPolyfill();\ntextPolyfill.registerHooks();\n\nexport function preprocessForTextSpacing(element: Element): void {\n  textPolyfill.preprocessForTextSpacing(element);\n}\n\nexport function processGeneratedContent(\n  element: HTMLElement,\n  textSpacing: Css.Val,\n  hangingPunctuation: Css.Val,\n  lang: string,\n  vertical: boolean,\n): void {\n  textPolyfill.processGeneratedContent(\n    element,\n    textSpacing,\n    hangingPunctuation,\n    lang,\n    vertical,\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as TextPolyfill from \"./text-polyfill\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /** @override */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /** @override */\n  processContent(\n    element: Element,\n    styles: { [key: string]: Css.Val },\n    viewNode: Node,\n  ) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n          // text-spacing & hanging-punctuation support\n          TextPolyfill.preprocessForTextSpacing(element);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset\n{\n  constructor(public nodeContext, public pseudoElementHeight) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\nexport const mediaTags = {\n  img: true,\n  svg: true,\n  audio: true,\n  video: true,\n};\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /** @override */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition\n{\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  override findAcceptableBreak(\n    column: Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated = true;\n    }\n    return this.breakNodeContext;\n  }\n\n  override getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  override getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null =\n    null;\n  blockDistanceToBlockEndFloats: number = NaN;\n  breakAtTheEdgeBeforeFloat: string | null = null;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical ? this.startEdge : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical ? this.endEdge : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical ? this.afterEdge : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical ? this.beforeEdge : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions =\n      this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode =\n              this.calculateOffsetInNodeForNodeContext(position);\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        let firstLetterLength = r ? r[0].length : 0;\n        if (\n          !r &&\n          position.sourceNode instanceof Text &&\n          position.sourceNode.nextSibling instanceof Text &&\n          text === position.sourceNode.textContent\n        ) {\n          // The text '“Foo' may be split to '“' and 'Foo'\n          const text2 = text + position.sourceNode.nextSibling.textContent;\n          const r2 = text2.match(Base.firstLetterPattern);\n          if (r2) {\n            const firstLetterText = r2[0];\n            firstLetterLength = firstLetterText.length;\n            position.sourceNode.textContent = firstLetterText;\n            position.viewNode.textContent = firstLetterText;\n            position.sourceNode.nextSibling.textContent =\n              text2.substr(firstLetterLength);\n          }\n        }\n        return this.layoutContext.peelOff(position, firstLetterLength);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (position.viewNode && !LayoutHelper.isSpecialNodeContext(position)) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (this.isFloatNodeContext(position) && !this.vertical) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\" units or a number.\n   * @return value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string | number): number {\n    if (typeof val == \"number\") {\n      return val;\n    }\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return parseFloat(r[0]);\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = PageFloats.resolveInlineFloatDirection(\n      nodeContext.floatSide,\n      nodeContext.vertical,\n      nodeContext.direction,\n    );\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.startEdge;\n      let x2 = this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(this.getStartEdge(parentBox), x1);\n        x2 = Math.min(this.getEndEdge(parentBox), x2);\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        if (!nodeContext.firstPseudo) {\n          // Unless float is specified on ::first-letter (Fix for issue #923)\n          parent.viewNode.appendChild(nodeContext.viewNode);\n        }\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe =\n          containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n            \"div\",\n          );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft =\n      area.paddingRight =\n      area.paddingTop =\n      area.paddingBottom =\n        0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext =\n      this.pageFloatLayoutContext.getPageFloatLayoutContext(\n        float.floatReference,\n      );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments =\n      context.getStashedFloatFragments(floatReference);\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n            stashedFragment.continuations[0].float,\n          );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy =\n      new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n        nodeContext,\n      );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  createJustificationAdjustmentElement(\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n    vertical: boolean,\n  ): HTMLElement {\n    const span = doc.createElement(\"span\") as HTMLElement;\n    span.style.visibility = \"hidden\";\n    span.style.verticalAlign = \"top\";\n    span.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    const inner = doc.createElement(\"span\") as HTMLElement;\n    inner.style.fontSize = \"0\";\n    inner.style.lineHeight = \"0\";\n    inner.textContent = \" #\";\n    span.appendChild(inner);\n\n    // Measure inline-start and inline-end edge positions of the line box,\n    // taking (exclusion) floats into consideration\n    span.style.display = \"block\";\n    span.style.textIndent = \"0\";\n    span.style.textAlign = \"left\";\n    parentNode.insertBefore(span, insertionPoint);\n    const leftPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"right\";\n    const rightPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"\";\n    if (Base.checkInlineBlockJustificationBug(document.body)) {\n      // For Chrome\n      span.style.display = \"inline\";\n    } else {\n      // For Firefox, Edge and IE\n      span.style.display = \"inline-block\";\n    }\n    const padding = vertical\n      ? rightPos.top - leftPos.top\n      : rightPos.left - leftPos.left;\n    const paddingStr = padding >= 1 ? `${padding - 1}px` : \"100%\";\n    if (vertical) {\n      span.style.paddingTop = paddingStr;\n    } else {\n      span.style.paddingLeft = paddingStr;\n    }\n    return span;\n  }\n\n  addAndAdjustJustificationElement(\n    nodeContext: Vtree.NodeContext,\n    insertAfter: boolean,\n    node: Node,\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n  ): HTMLElement {\n    fixJustificationOnHyphen(nodeContext, insertAfter, node, insertionPoint);\n    return this.createJustificationAdjustmentElement(\n      insertionPoint,\n      doc,\n      parentNode,\n      nodeContext.vertical,\n    );\n  }\n\n  compensateJustificationLineHeight(\n    span: Element,\n    br: Element,\n    nodeContext: Vtree.NodeContext,\n  ) {\n    const spanRect = this.clientLayout.getElementClientRect(span);\n    const brRect = this.clientLayout.getElementClientRect(br);\n    if (nodeContext.vertical) {\n      (br as HTMLElement).style.marginRight = `${\n        brRect.right - spanRect.right\n      }px`;\n      (br as HTMLElement).style.width = \"0px\";\n    } else {\n      (br as HTMLElement).style.marginTop = `${spanRect.top - brRect.top}px`;\n      (br as HTMLElement).style.height = \"0px\";\n    }\n    br.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n  }\n\n  /**\n   * Fix justification of the last line of text broken across pages (if\n   * needed).\n   */\n  fixJustificationIfNeeded(\n    nodeContext: Vtree.NodeContext,\n    endOfColumn: boolean,\n  ): void {\n    if (nodeContext.after && !nodeContext.inline) {\n      return;\n    }\n    if (endOfColumn) {\n      const parentElem = nodeContext.parent?.viewNode as Element;\n      const textAlign =\n        parentElem &&\n        this.clientLayout.getElementComputedStyle(parentElem).textAlign;\n      if (textAlign !== \"justify\") {\n        return;\n      }\n    }\n    let node = nodeContext.viewNode;\n    if (node.parentElement?.localName === \"viv-ts-inner\") {\n      // special element for text-spacing\n      node = node.parentElement.parentElement;\n    }\n    const doc = node.ownerDocument;\n    const insertAfter =\n      endOfColumn && (nodeContext.after || node.nodeType != 1);\n    let insertionPoint = insertAfter ? node.nextSibling : node;\n    if (insertionPoint && !insertionPoint.parentNode) {\n      // Possible if removeSelf = false in finishBreak()\n      insertionPoint = null;\n    }\n    const parentNode =\n      node.parentNode || (nodeContext.parent && nodeContext.parent.viewNode);\n    if (!parentNode) {\n      // Possible if nothing was added to the column\n      return;\n    }\n    const span = this.addAndAdjustJustificationElement(\n      nodeContext,\n      insertAfter,\n      node,\n      insertionPoint,\n      doc,\n      parentNode,\n    );\n    if (!endOfColumn) {\n      const br = doc.createElement(\"div\") as HTMLElement;\n      parentNode.insertBefore(br, insertionPoint);\n      this.compensateJustificationLineHeight(span, br, nodeContext);\n    }\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"processLineStyling\");\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              this.fixJustificationIfNeeded(nodeContext, false);\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos + minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Text-spacing etc. must be done before calculating edge. (Issue #898)\n        this.postLayoutBlock(nodeContext, checkPoints);\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          // Text-spacing etc. must be done before calculating edge. (Issue #898)\n          // this.postLayoutBlock(nodeContext, checkPoints);\n\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n    const viewNode = nodeContext.viewNode;\n    if (\n      viewNode.nodeType != 1 &&\n      viewNode.parentElement?.localName !== \"viv-ts-inner\"\n    ) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    } else {\n      // Fix for issue #821, #885\n      const p = LayoutHelper.findAncestorSpecialInlineNodeContext(nodeContext);\n      if (p) {\n        nodeContext = p;\n      }\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elments\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        if (node.nodeType != 1) {\n          if (!haveStart) {\n            if (node.parentNode == null) {\n              endNotReached = false;\n            } else {\n              range.setStartBefore(node);\n              haveStart = true;\n            }\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(node as Element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          /^r(uby|[bt]c?)$/.test((node as Element).localName) ||\n          LayoutHelper.isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(node as Element).display,\n          )\n        ) {\n          // ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    nodeContext.walkUpBlocks((block) => {\n      if (block.inheritedProps[\"box-decoration-break\"] === \"clone\") {\n        Asserts.assert(block.viewNode instanceof Element);\n        const paddingBorders = this.getComputedPaddingBorder(\n          block.viewNode as Element,\n        );\n        clonedPaddingBorder += block.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (block.display === \"table\") {\n          clonedPaddingBorder += block.blockBorderSpacing;\n        }\n      }\n    });\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    // Workaround for issue #816 (Text with ruby overflowed at column/page break)\n    const parentNode = this.element.parentNode;\n    const nextSibling = this.element.nextSibling;\n    parentNode.removeChild(this.element);\n    parentNode.insertBefore(this.element, nextSibling);\n\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing =\n      this.findFirstOverflowingEdgeAndCheckPoint(checkPoints);\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && blockEdge < edge) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n    edge: number;\n    checkPoint: Vtree.NodeContext | null;\n  } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch ((flowPosition.sourceNode as Element).namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    switch (clear) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (!nodeContext.floatSide) {\n        if (this.vertical) {\n          let wAdj = afterEdge + margin.right - clearEdge;\n          if (wAdj > 0 == margin.right >= 0) {\n            // In addition to collapsed portion\n            wAdj += margin.right;\n          }\n          spacer.style.marginLeft = `${wAdj}px`;\n        } else {\n          let hAdj = clearEdge - (afterEdge + margin.top);\n          if (hAdj > 0 == margin.top >= 0) {\n            // In addition to collapsed portion\n            hAdj += margin.top;\n          }\n          spacer.style.marginBottom = `${hAdj}px`;\n        }\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent?.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak() {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge && Break.isForcedBreakValue(breakAtTheEdge))\n      );\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              nodeContext.formattingContext,\n            );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (nodeContext.floatSide) {\n                // Save break-after:avoid* value at before the float\n                // (Fix for issue #904)\n                this.breakAtTheEdgeBeforeFloat = Break.isAvoidBreakValue(\n                  breakAtTheEdge,\n                )\n                  ? breakAtTheEdge\n                  : null;\n              }\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // new formatting context, or float or flex container\n                // (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              if (nodeContext.floatSide) {\n                // Restore break-after:avoid* value at before the float\n                // (Fix for issue #904)\n                breakAtTheEdge =\n                  breakAtTheEdge ?? this.breakAtTheEdgeBeforeFloat;\n                this.breakAtTheEdgeBeforeFloat = null;\n              }\n              const element = nodeContext.sourceNode as Element;\n              // Make breakable after svg and math elements\n              // (Fix for issue #750)\n              if (\n                element.localName === \"svg\" ||\n                element.localName === \"math\" ||\n                element.getAttribute(\"data-math-typeset\") === \"true\"\n              ) {\n                onStartEdges = false;\n                lastAfterNodeContext = nodeContext.copy();\n                trailingEdgeContexts.push(lastAfterNodeContext);\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  null,\n                  nodeContext.breakAfter,\n                );\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                break;\n              }\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (\n                (nodeContext.pageType != nodeContext.parent?.pageType || // Fix for issue #771\n                  !Break.isForcedBreakValue(breakAtTheEdge)) && // Fix for issue #722\n                !this.layoutConstraint.allowLayout(nodeContext)\n              ) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              formattingContext,\n            );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor =\n        new LayoutProcessor.LayoutProcessorResolver().find(formattingContext);\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.top\n        : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.bottom\n        : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    let penalty = checkPoints[0].breakPenalty;\n    if (penalty) {\n      // Fix for issue #546\n      let block = checkPoints[0];\n      while (block.parent && block.inline) {\n        block = block.parent;\n      }\n      penalty = block.breakPenalty;\n    }\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext =\n                  this.nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats =\n      this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder =\n      this.column.calculateClonedPaddingBorder(parentNodeContext);\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\nexport function fixJustificationOnHyphen(\n  nodeContext: Vtree.NodeContext,\n  insertAfter: boolean,\n  node: Node,\n  insertionPoint: Node,\n): void {\n  if (Base.checkSoftWrapOpportunityAfterHyphenBug(document.body)) {\n    const hyphenChar = resolveHyphenateCharacter(nodeContext);\n    const prevSibling = insertAfter ? node : node.previousSibling;\n    const prevText = prevSibling ? prevSibling.textContent : \"\";\n    if (prevText.charAt(prevText.length - 1) === hyphenChar) {\n      const doc = node.ownerDocument;\n      const parent = node.parentNode;\n      if (Base.checkSoftWrapOpportunityByWbrBug(document.body)) {\n        // For IE\n        parent.insertBefore(doc.createTextNode(\" \"), insertionPoint);\n      } else {\n        // For Edge\n        parent.insertBefore(doc.createElement(\"wbr\"), insertionPoint);\n      }\n    }\n  }\n}\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord ? resolveHyphenateCharacter(nodeContext) : \"\",\n    );\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  override resolveLayoutMode(\n    nodeContext: Vtree.NodeContext,\n  ): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  override prepareLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  override clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  override saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  override restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /** @override */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /** @override */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /** @override */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  override openAllViews(\n    position: Vtree.NodePosition,\n  ): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n{\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /** @override */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /** @override */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /** @override */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements\n{\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (nodeContext && this.isAfterLastContent(nodeContext)) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /** @override */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /** @override */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /** @override */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /** @override */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /** @override */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /** @override */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  override doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  override accept(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  override doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  override resolveLayoutMode(\n    nodeContext: Vtree.NodeContext,\n  ): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  override startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode =\n          nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  override afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor\n{\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext =\n      getRepetitiveElementsOwnerFormattingContextOrNull(nodeContext);\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  override finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  override clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as Element;\n    const verticalAlign = this.cellNodeContext.verticalAlign;\n    if (verticalAlign === \"middle\" || verticalAlign === \"bottom\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext =\n      position.formattingContext as TableFormattingContext;\n  }\n\n  override findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  override getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  override findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  override getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = 0;\n    if (!formattingContext.isFreelyFragmentableRow(row)) {\n      penalty += 10;\n    }\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  override getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  override isFirstTime(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n  ): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  override getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  isFreelyFragmentableRow(row: TableRow): boolean {\n    return row.getMinimumHeight() > this.tableWidth / 2;\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  override saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  override restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset\n{\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  override startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode =\n              nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  override afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  override startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  override afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  override startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  override afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer =\n      cellViewNode.ownerDocument.createElement(\"div\");\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions =\n      this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy =\n                  rowNodeContext.viewNode.ownerDocument.createElement(\"td\");\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext =\n                VtreeImpl.makeNodeContextFromNodePositionStep(\n                  cellNodePosition.steps[0],\n                  rowNodeContext,\n                );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(\n      this.currentRowIndex,\n    ).cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions[cell.columnIndex];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (\n          this.column.layoutContext as Vgen.ViewFactory\n        ).xmldoc.getElementOffset(tdNodeStep.node as Element);\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    if (!cell) {\n      // Fix for Issue #712\n      state.break = true;\n      return Task.newResult(true);\n    }\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      const width = vertical ? rect[\"height\"] : rect[\"width\"];\n      // Workaround for issue #958\n      // Non-integer width causes problem, so return rounded-up value.\n      return Math.ceil(width);\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /** @override */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /** @override */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /** @override */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /** @override */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells =\n          formattingContext.getRowSpanningCellsOverflowingTheRow(rowIndex);\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext =\n              cellFragment.findAcceptableBreakPosition().nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode =\n              cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (!repetitiveElements) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n  Base.setCSSProperty(cellContentElement, \"overflow\", \"hidden\");\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  override resolveLayoutMode(\n    nodeContext: Vtree.NodeContext,\n  ): LayoutType.LayoutMode {\n    const repetitiveElements =\n      this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  override clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode =\n      this.tableFormattingContext.getRootViewNode(initialPosition);\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  override restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  override doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  override getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  override breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  override doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  override allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  override nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  override postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints =\n      this.collectCellFragmentLayoutConstraints(\n        positionAfter,\n        formattingContext,\n      );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  override finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints:\n          entry.fragment.pseudoColumn.getColumn().fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  override equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Ident,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  override preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  override calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  override hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  override updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n  return otherColumns.every((c) => lastColumnBlockSize > c.computedBlockSize);\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  override calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  override hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  override updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Logging from \"./logging\";\nimport { ValidationTxt } from \"./assets\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(public where: number, public success: boolean) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (\n        this.nodes[0].validator as PrimitiveValidator\n      ).combine(group.nodes[0].validator as PrimitiveValidator);\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 0x01;\n\nexport const ALLOW_STR = 0x02;\n\nexport const ALLOW_IDENT = 0x04;\n\nexport const ALLOW_POS_NUMERIC = 0x08;\n\nexport const ALLOW_POS_NUM = 0x10;\n\nexport const ALLOW_POS_INT = 0x20;\n\nexport const ALLOW_COLOR = 0x40;\n\nexport const ALLOW_URL = 0x80;\n\nexport const ALLOW_NEGATIVE = 0x100;\n\nexport const ALLOW_ZERO = 0x200;\n\nexport const ALLOW_ZERO_PERCENT = 0x400;\n\nexport const ALLOW_SLASH = 0x800;\n\nexport const ALLOW_URANGE = 0x1000;\n\nexport const ALLOW_IMAGE = 0x2000;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  override visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  override visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  override visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    if (this.allowed & ALLOW_COLOR) {\n      if (CSS.supports(\"color\", ident.name)) {\n        return ident;\n      }\n    }\n    return null;\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  override visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  override visitHexColor(color: Css.HexColor): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      if (/^([0-9A-F]{3,4}|([0-9A-F]{2}){3,4})$/i.test(color.hex)) {\n        return color;\n      }\n    }\n    return null;\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  override visitURange(urange: Css.URange): Css.Val {\n    if (this.allowed & ALLOW_URANGE) {\n      return urange;\n    }\n    return null;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      if (CSS.supports(\"color\", func.toString())) {\n        return func;\n      }\n    }\n    if (this.allowed & ALLOW_IMAGE) {\n      if (CSS.supports(\"background-image\", func.toString())) {\n        return func;\n      }\n    }\n    if (\n      func.name === \"calc\" &&\n      this.allowed &\n        (ALLOW_POS_NUMERIC |\n          ALLOW_POS_NUM |\n          ALLOW_POS_INT |\n          ALLOW_NEGATIVE |\n          ALLOW_ZERO |\n          ALLOW_ZERO_PERCENT)\n    ) {\n      return func;\n    }\n    return null;\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS: ValueMap = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  override visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  override visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  override visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  override visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  override visitHexColor(color: Css.HexColor): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  override visitURange(urange: Css.URange): Css.Val {\n    return this.validateSingle(urange);\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  override validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  override validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(public readonly name: string, group: ValidatingGroup) {\n    super(group);\n  }\n\n  override validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(validatorSet: ValidatorSet, public readonly name: string) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  override tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  override success(\n    rval: Css.Val,\n    shorthandValidator: ShorthandValidator,\n  ): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(validatorSet: ValidatorSet, public readonly names: string[]) {\n    super(validatorSet, names[0]);\n  }\n\n  override success(\n    rval: Css.Val,\n    shorthandValidator: ShorthandValidator,\n  ): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  override tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] || this.validatorSet.defaultValues[name],\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateDefaultingValue(\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, value, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  override visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  override visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  override visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  override visitHexColor(color: Css.HexColor): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    return this.validateSingle(expr);\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val = values[name] || this.validatorSet.defaultValues[name];\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\n      \"font-family\",\n      \"line-height\",\n      \"font-size\",\n      \"font-stretch\",\n      \"font-variant-ligatures\",\n      \"font-variant-caps\",\n      \"font-variant-numeric\",\n      \"font-variant-east-asian\",\n    );\n  }\n\n  override validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    const fontVariant = this.values[\"font-variant_css2\"];\n    if (fontVariant) {\n      delete this.values[\"font-variant_css2\"];\n      this.values[\"font-variant-caps\"] = fontVariant;\n    }\n    const fontStretch = this.values[\"font-stretch_css3\"];\n    if (fontStretch) {\n      delete this.values[\"font-stretch_css3\"];\n      this.values[\"font-stretch\"] = fontStretch;\n    }\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nconst propsExcludedFromAll = [\n  \"unicode-bidi\",\n  \"direction\",\n\n  // excludes css-logical\n  \"margin-block-start\",\n  \"margin-block-end\",\n  \"margin-inline-start\",\n  \"margin-inline-end\",\n  \"padding-block-start\",\n  \"padding-block-end\",\n  \"padding-inline-start\",\n  \"padding-inline-end\",\n  \"border-block-start-color\",\n  \"border-block-end-color\",\n  \"border-inline-start-color\",\n  \"border-inline-end-color\",\n  \"border-block-start-style\",\n  \"border-block-end-style\",\n  \"border-inline-start-style\",\n  \"border-inline-end-style\",\n  \"border-block-start-width\",\n  \"border-block-end-width\",\n  \"border-inline-start-width\",\n  \"border-inline-end-width\",\n  \"block-start\",\n  \"block-end\",\n  \"inline-start\",\n  \"inline-end\",\n  \"block-size\",\n  \"inline-size\",\n  \"max-block-size\",\n  \"max-inline-size\",\n  \"min-block-size\",\n  \"min-inline-size\",\n\n  // excludes non-standards and special\n  \"behavior\",\n  \"bleed\",\n  \"conflicting-partitions\",\n  \"crop-offset\",\n  \"enabled\",\n  \"flow-consume\",\n  \"flow-from\",\n  \"flow-into\",\n  \"flow-linger\",\n  \"flow-options\",\n  \"flow-priority\",\n  \"font-display\",\n  \"font-size-adjust\",\n  \"font-stretch_css3\",\n  \"font-variant_css2\",\n  \"glyph-orientation-vertical\",\n  \"marks\",\n  \"min-page-height\",\n  \"min-page-width\",\n  \"repeat-on-break\",\n  \"required\",\n  \"required-partitions\",\n  \"ruby-align\",\n  \"shape-inside\",\n  \"snap-height\",\n  \"snap-width\",\n  \"template\",\n  \"text-decoration-skip\",\n  \"text-justify\",\n  \"text-zoom\",\n  \"unicode-range\",\n  \"utilization\",\n  \"wrap-flow\",\n];\n\nexport class AllShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    for (const name in this.validatorSet.validators) {\n      if (!propsExcludedFromAll.includes(name)) {\n        this.propList.push(name);\n      }\n    }\n  }\n\n  override validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n  ALL: AllShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == CssTokenizer.TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == CssTokenizer.TokenType.HASH) {\n      cssval = new Css.HexColor(token.text);\n    } else if (token.type == CssTokenizer.TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"COLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IMAGE_FUNCTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IMAGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"URANGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URANGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == CssTokenizer.TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == CssTokenizer.TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != CssTokenizer.TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == CssTokenizer.TokenType.COMMA);\n      if (token.type != CssTokenizer.TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != CssTokenizer.TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != CssTokenizer.TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != CssTokenizer.TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents: ValueMap = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case CssTokenizer.TokenType.INT: {\n            const idents: ValueMap = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.BAR:\n            setop(\"|\");\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case CssTokenizer.TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != CssTokenizer.TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == CssTokenizer.TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != CssTokenizer.TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != CssTokenizer.TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == CssTokenizer.TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case CssTokenizer.TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case CssTokenizer.TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case CssTokenizer.TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (\n        token.type == CssTokenizer.TokenType.IDENT &&\n        shorthandValidators[token.text]\n      ) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              // `font-variant_css2` and `font-stretch_css3` are not real properties\n              if (!token.text.includes(\"_\")) {\n                propList.push(token.text);\n              }\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        const pval = this.defaultValues[pname];\n        if (!pval) {\n          Logging.logger.warn(\"Unknown property in makePropSet:\", pname);\n        } else {\n          map[pname] = pval;\n        }\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    if (Css.isCustomPropName(name)) {\n      receiver.simpleProperty(name, value, important);\n      return;\n    }\n    if (containsVar(value)) {\n      // Set the specified property containing `var(…)`\n      receiver.simpleProperty(name, value, important);\n      return;\n    }\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      if (CSS.supports(name, value.toString())) {\n        // Browser supports this property\n        receiver.simpleProperty(origName, value, important);\n      } else {\n        receiver.unknownProperty(origName, value);\n      }\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        Css.isDefaultingValue(value) || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else if (!prefix && CSS.supports(name, value.toString())) {\n        // Browser supports this property value\n        receiver.simpleProperty(name, value, important);\n        return;\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (Css.isDefaultingValue(value)) {\n        shorthand.propagateDefaultingValue(value, important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n\nclass VarCheckVisitor extends Css.Visitor {\n  varFound = false;\n\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name === \"var\") {\n      this.varFound = true;\n    } else if (!this.varFound) {\n      this.visitValues(func.values);\n    }\n    return null;\n  }\n}\n\nexport function containsVar(val: Css.Val): boolean {\n  const varCheckVisitor = new VarCheckVisitor();\n  val.visit(varCheckVisitor);\n  return varCheckVisitor.varFound;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): void;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv = this.style[name] as CssCascade.CascadeValue;\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed && this.displayValue() !== Css.ident.none;\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if (\n      (node.nodeType === Node.TEXT_NODE ||\n        node.nodeType === Node.CDATA_SECTION_NODE) &&\n      (this.atBlockStart || this.atFlowStart) &&\n      box.hasBox()\n    ) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      if (whitespace && !Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this, this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name] as CssCascade.CascadeValue;\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    if (isBody) {\n      for (const propName of [\"writing-mode\", \"direction\"]) {\n        if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n          // Copy it over, but keep it at the root element as well.\n          this.rootStyle[propName] = elemStyle[propName];\n        }\n      }\n    } else {\n      for (const propName in elemStyle) {\n        if (CssCascade.isInherited(propName)) {\n          this.rootStyle[propName] = elemStyle[propName];\n        }\n      }\n    }\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? (elemStyle[\"background-color\"] as CssCascade.CascadeValue).evaluate(\n            this.context,\n          )\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? (elemStyle[\"background-image\"] as CssCascade.CascadeValue).evaluate(\n            this.context,\n          )\n        : (null as Css.Val);\n      if (\n        (backgroundColor && !Css.isDefaultingValue(backgroundColor)) ||\n        (backgroundImage && !Css.isDefaultingValue(backgroundImage))\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      const fontSize = elemStyle[\"font-size\"] as CssCascade.CascadeValue;\n      let isRelativeFontSize = true;\n      if (fontSize && !Css.isDefaultingValue(fontSize.value)) {\n        const val = fontSize.evaluate(this.context);\n        if (val instanceof Css.Numeric) {\n          let px = val.num;\n          switch (val.unit) {\n            case \"em\":\n            case \"rem\":\n              px *= this.context.initialFontSize;\n              break;\n            case \"ex\":\n              px *=\n                (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n                Exprs.defaultUnitSizes[\"em\"];\n              break;\n            case \"%\":\n              px *= this.context.initialFontSize / 100;\n              break;\n            default: {\n              const unitSize = Exprs.defaultUnitSizes[val.unit];\n              if (unitSize) {\n                px *= unitSize;\n              }\n              isRelativeFontSize = false;\n            }\n          }\n          this.context.rootFontSize = px;\n          this.context.isRelativeRootFontSize = isRelativeFontSize;\n        }\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"] as CssCascade.CascadeValue;\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"] as CssCascade.CascadeValue;\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"] as CssCascade.CascadeValue;\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"] as CssCascade.CascadeValue;\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore =\n                box.afterBox.getBreakValue(\"before\");\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(this, elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"] as CssCascade.CascadeValue;\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n\n        if (blockStartOffset === 0) {\n          // Named page type at first page\n          const pageCV = style[\"page\"] as CssCascade.CascadeValue;\n          const pageType =\n            pageCV &&\n            !Css.isDefaultingValue(pageCV.value) &&\n            pageCV.value.toString();\n          if (pageType && pageType.toLowerCase() !== \"auto\") {\n            this.cascade.firstPageType = pageType;\n          }\n        }\n\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (this.bodyReached && blockStartOffset === 0) {\n          // body reached but the named page type at first page is not determined\n          // (Fix for issue #770)\n          continue;\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /** @override */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /** @override */\n  processContent(\n    element: Element,\n    styles: { [key: string]: Css.Val },\n    viewNode: Node,\n  ) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const traitProps: { [key: string]: Css.Val } = {\n  \"font-style\": Css.ident.normal,\n  \"font-stretch\": Css.ident.normal,\n  \"font-weight\": Css.ident.normal,\n  \"unicode-range\": Css.fullURange,\n};\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop in traitProps) {\n    sb.append(\" \");\n    sb.append(properties[prop].toString());\n  }\n  return sb.toString();\n}\n\nexport function fillDefaults(properties: { [key: string]: Css.Val }): void {\n  for (const prop in traitProps) {\n    if (!properties[prop]) {\n      properties[prop] = traitProps[prop];\n    }\n  }\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  fillDefaults(result);\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop in traitProps) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop in traitProps) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const style = this.head.ownerDocument.createElement(\"style\");\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    this.head.appendChild(style);\n    Logging.logger.debug(\"Load font:\", src);\n    frame.finish(viewFontFace);\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    const srcFamilySrc = srcFace.family + \";\" + src;\n    let fetcher = this.srcURLMap[srcFamilySrc];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.debug(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(src)\n          : null;\n        if (deobfuscator) {\n          Net.ajax(src, Net.XMLHttpRequestResponseType.BLOB).then((xhr) => {\n            if (!xhr.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(xhr.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[srcFamilySrc] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers).thenAsync(() =>\n      this.waitFontLoading(),\n    );\n  }\n\n  waitFontLoading(): Task.Result<boolean> {\n    const fonts = this.head.ownerDocument.fonts; // FontFaceSet\n    let unloadedCount = 0;\n    fonts.forEach((fontFace) => {\n      if (fontFace.status === \"unloaded\") {\n        unloadedCount++;\n        fontFace.load();\n      }\n    });\n    if (unloadedCount === 0) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"waitFontLoading\");\n    frame\n      .loop(() => {\n        return frame.sleep(20).thenAsync(() => {\n          if (fonts.status === \"loading\") {\n            return Task.newResult(true); // continue\n          }\n          return Task.newResult(false); // break\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>,\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(scope: Exprs.LexicalScope, public pageMaster: PageMaster) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>,\n> extends PageBox<I> {\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  override createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  override clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  override createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  override clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance,\n> extends PageBox<I> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  override createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  override clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto || Css.isDefaultingValue(val)) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal || Css.isDefaultingValue(val)) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (!val && CssCascade.isInherited(name)) {\n      // inherit from root style\n      if (\n        name === \"font-size\" &&\n        context.isRelativeRootFontSize &&\n        context.rootFontSize\n      ) {\n        val = new Css.Numeric(context.rootFontSize, \"px\");\n      } else {\n        const rootStyle = (\n          context as Exprs.Context & {\n            styler: { rootStyle: { [key: string]: CssCascade.CascadeValue } };\n          }\n        ).styler?.rootStyle;\n        val = rootStyle[name]?.value;\n      }\n    }\n    if (val) {\n      val = CssCascade.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      let percentRef = /\\b(height|top|bottom)\\b/.test(name)\n        ? context.pageAreaHeight ?? context.pageHeight()\n        : context.pageAreaWidth ?? context.pageWidth();\n      val = CssCascade.evaluateCSSToCSS(context, val, name, percentRef);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSinglUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      this.propagatePropertyToElement(\n        context,\n        element,\n        passSingleUriContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos =\n            ((containerSize + columnGap) * i) / columnCount -\n            columnGap / 2 +\n            container.paddingLeft -\n            ruleWidth / 2;\n          const size =\n            container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    const content = style[\"content\"] as CssCascade.CascadeValue;\n    if (content) {\n      style[\"content\"] = content.filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-ligatures\",\n  \"font-variant-caps\",\n  \"font-variant-numeric\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-orientation\",\n  \"text-shadow\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  override applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  override boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  override boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  override prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  override startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  override startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  override startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  override startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  const writingMode = (style[\"writing-mode\"] as CssCascade.CascadeValue)?.value;\n  const direction = (style[\"direction\"] as CssCascade.CascadeValue)?.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a10: { width: new Css.Numeric(26, \"mm\"), height: new Css.Numeric(37, \"mm\") },\n  a9: { width: new Css.Numeric(37, \"mm\"), height: new Css.Numeric(52, \"mm\") },\n  a8: { width: new Css.Numeric(52, \"mm\"), height: new Css.Numeric(74, \"mm\") },\n  a7: { width: new Css.Numeric(74, \"mm\"), height: new Css.Numeric(105, \"mm\") },\n  a6: { width: new Css.Numeric(105, \"mm\"), height: new Css.Numeric(148, \"mm\") },\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  a2: { width: new Css.Numeric(420, \"mm\"), height: new Css.Numeric(594, \"mm\") },\n  a1: { width: new Css.Numeric(594, \"mm\"), height: new Css.Numeric(841, \"mm\") },\n  a0: {\n    width: new Css.Numeric(841, \"mm\"),\n    height: new Css.Numeric(1189, \"mm\"),\n  },\n  b10: { width: new Css.Numeric(31, \"mm\"), height: new Css.Numeric(44, \"mm\") },\n  b9: { width: new Css.Numeric(44, \"mm\"), height: new Css.Numeric(62, \"mm\") },\n  b8: { width: new Css.Numeric(62, \"mm\"), height: new Css.Numeric(88, \"mm\") },\n  b7: { width: new Css.Numeric(88, \"mm\"), height: new Css.Numeric(125, \"mm\") },\n  b6: { width: new Css.Numeric(125, \"mm\"), height: new Css.Numeric(176, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  b3: { width: new Css.Numeric(353, \"mm\"), height: new Css.Numeric(500, \"mm\") },\n  b2: { width: new Css.Numeric(500, \"mm\"), height: new Css.Numeric(707, \"mm\") },\n  b1: {\n    width: new Css.Numeric(707, \"mm\"),\n    height: new Css.Numeric(1000, \"mm\"),\n  },\n  b0: {\n    width: new Css.Numeric(1000, \"mm\"),\n    height: new Css.Numeric(1414, \"mm\"),\n  },\n  c10: { width: new Css.Numeric(28, \"mm\"), height: new Css.Numeric(40, \"mm\") },\n  c9: { width: new Css.Numeric(40, \"mm\"), height: new Css.Numeric(57, \"mm\") },\n  c8: { width: new Css.Numeric(57, \"mm\"), height: new Css.Numeric(81, \"mm\") },\n  c7: { width: new Css.Numeric(81, \"mm\"), height: new Css.Numeric(114, \"mm\") },\n  c6: { width: new Css.Numeric(114, \"mm\"), height: new Css.Numeric(162, \"mm\") },\n  c5: { width: new Css.Numeric(162, \"mm\"), height: new Css.Numeric(229, \"mm\") },\n  c4: { width: new Css.Numeric(229, \"mm\"), height: new Css.Numeric(324, \"mm\") },\n  c3: { width: new Css.Numeric(324, \"mm\"), height: new Css.Numeric(458, \"mm\") },\n  c2: { width: new Css.Numeric(458, \"mm\"), height: new Css.Numeric(648, \"mm\") },\n  c1: { width: new Css.Numeric(648, \"mm\"), height: new Css.Numeric(917, \"mm\") },\n  c0: {\n    width: new Css.Numeric(917, \"mm\"),\n    height: new Css.Numeric(1297, \"mm\"),\n  },\n  \"jis-b10\": {\n    width: new Css.Numeric(32, \"mm\"),\n    height: new Css.Numeric(45, \"mm\"),\n  },\n  \"jis-b9\": {\n    width: new Css.Numeric(45, \"mm\"),\n    height: new Css.Numeric(64, \"mm\"),\n  },\n  \"jis-b8\": {\n    width: new Css.Numeric(64, \"mm\"),\n    height: new Css.Numeric(91, \"mm\"),\n  },\n  \"jis-b7\": {\n    width: new Css.Numeric(91, \"mm\"),\n    height: new Css.Numeric(128, \"mm\"),\n  },\n  \"jis-b6\": {\n    width: new Css.Numeric(128, \"mm\"),\n    height: new Css.Numeric(182, \"mm\"),\n  },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  \"jis-b3\": {\n    width: new Css.Numeric(364, \"mm\"),\n    height: new Css.Numeric(515, \"mm\"),\n  },\n  \"jis-b2\": {\n    width: new Css.Numeric(515, \"mm\"),\n    height: new Css.Numeric(728, \"mm\"),\n  },\n  \"jis-b1\": {\n    width: new Css.Numeric(728, \"mm\"),\n    height: new Css.Numeric(1030, \"mm\"),\n  },\n  \"jis-b0\": {\n    width: new Css.Numeric(1030, \"mm\"),\n    height: new Css.Numeric(1456, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n  cropOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n    cropOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marksCV = style[\"marks\"];\n  const bleedCV = style[\"bleed\"];\n  const marks =\n    marksCV && !Css.isDefaultingValue(marksCV.value)\n      ? marksCV.value\n      : Css.ident.none;\n  const bleed =\n    bleedCV && !Css.isDefaultingValue(bleedCV.value)\n      ? bleedCV.value\n      : Css.ident.auto;\n  if (bleed === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks !== Css.ident.none) {\n      let hasCrop = false;\n      if (marks.isSpaceList()) {\n        hasCrop = (marks as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed as Css.Numeric;\n  }\n\n  // crop-offset (Issue #913)\n  const cropOffsetCV = style[\"crop-offset\"];\n  const cropOffset =\n    cropOffsetCV && !Css.isDefaultingValue(cropOffsetCV.value)\n      ? cropOffsetCV.value\n      : Css.ident.auto;\n  if (cropOffset === Css.ident.auto) {\n    if (marks !== Css.ident.none) {\n      pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n    }\n  } else if (cropOffset.isNumeric()) {\n    pageSizeAndBleed.cropOffset = cropOffset as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    Math.max(0, pageSizeAndBleed.bleed.num) *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    !pageSizeAndBleed.cropOffset.num && pageSizeAndBleed.bleedOffset.num\n      ? pageSizeAndBleed.bleedOffset.num *\n        context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false)\n      : Math.max(\n          0,\n          pageSizeAndBleed.cropOffset.num *\n            context.queryUnitSize(pageSizeAndBleed.cropOffset.unit, false) -\n            bleed,\n        );\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\"stroke\", \"#010101\");\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"] as CssCascade.CascadeValue;\n  if (marks) {\n    const value = marks.value;\n    if (value instanceof Css.SpaceList) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  if (bleed) {\n    const bgcolor = cascadedPageStyle[\n      \"background-color\"\n    ] as CssCascade.CascadeValue;\n    if (bgcolor && bgcolor.value) {\n      page.bleedBox.style.backgroundColor = bgcolor.value.stringValue();\n    }\n  }\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Math.max(\n    0,\n    evaluatedPageSizeAndBleed.bleedOffset -\n      Css.toNumber(defaultPrinterMarkLineLength, context),\n  );\n  const lineLength = evaluatedPageSizeAndBleed.bleedOffset - printerMarkOffset;\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  override createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  override createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (\n          val &&\n          val.value !== Css.empty &&\n          val.value !== Css.ident.inherit &&\n          val.value !== Css.ident.unset &&\n          val.value !== Css.ident.revert\n        ) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  override createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  override applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  override initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  override initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  override adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  override prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    const val = style[isHorizontal ? \"width\" : \"height\"];\n    this.hasAutoSize_ =\n      !val || val === Css.ident.auto || Css.isDefaultingValue(val);\n  }\n\n  /** @override */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /** @override */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /** @override */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /** @override */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /** @override */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /** @override */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /** @override */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /** @override */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  override hasAutoSize(): boolean {\n    return false;\n  }\n\n  override getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  override getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  override getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  override applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  override initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  override initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n    style[startSide] = new Css.Expr(marginStart);\n    style[endSide] = new Css.Expr(marginEnd);\n    style[`margin-${startSide}`] = Css.numericZero;\n    style[`margin-${endSide}`] = Css.numericZero;\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n    style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  override prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n    page.pageAreaElement = container.element as HTMLElement;\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  override prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(\n        element,\n        \"flex-flow\",\n        this.vertical ? \"row\" : \"column\",\n      );\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n      if (this.vertical) {\n        let align = \"center\";\n        if (this.boxInfo.isInTopRow || this.boxInfo.isInBottomRow) {\n          if (\n            this.boxInfo.isInLeftColumn ||\n            this.boxInfo.positionAlongVariableDimension ===\n              MarginBoxPositionAlongVariableDimension.END\n          ) {\n            align = \"start\";\n          } else if (\n            this.boxInfo.isInRightColumn ||\n            this.boxInfo.positionAlongVariableDimension ===\n              MarginBoxPositionAlongVariableDimension.START\n          ) {\n            align = \"end\";\n          }\n        }\n        Base.setCSSProperty(element, \"align-items\", align);\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(context: Exprs.Context): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  override initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  override initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  override finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(pageType: string): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], pageType, style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop] as CssCascade.CascadeValue;\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size = style[\"size\"] as CssCascade.CascadeValue;\n    if (size && !Css.isDefaultingValue(size.value)) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      pageMasterStyle[\"width\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"width\"] as CssCascade.CascadeValue,\n        new CssCascade.CascadeValue(pageSize.width, priority),\n      );\n      pageMasterStyle[\"height\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"height\"] as CssCascade.CascadeValue,\n        new CssCascade.CascadeValue(pageSize.height, priority),\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 3;\n  }\n\n  override makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsBlankPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const blankPage = new Exprs.Named(this.scope, \"blank-page\");\n    if (blankPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, parent?.condition, parent, null, validatorSet, false);\n  }\n\n  override startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  override tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  override pseudoclassSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"blank\":\n          this.chain.push(new IsBlankPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  override nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  override startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  override simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        let result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(\n                  props,\n                  n,\n                  noPageSelectorProps[n] as CssCascade.CascadeValue,\n                );\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          const prevCascVal = CssCascade.getProp(props, name);\n          result = prevCascVal\n            ? CssCascade.cascadeValues(null, result, prevCascVal)\n            : result;\n          CssCascade.setProp(props, name, result);\n        }\n      });\n    }\n  }\n\n  override insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  override makeApplyRuleAction(\n    specificity: number,\n  ): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  override startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n","/**\n * Copyright 2022 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Scripts - Supports JavaScript in source document.\n */\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Task from \"./task\";\nimport * as Logging from \"./logging\";\nimport * as TaskUtil from \"./task-util\";\n\n/**\n * Enable or disable JavaScript in html support\n */\nexport let allowScripts = true;\nexport function setAllowScripts(value: boolean): void {\n  allowScripts = value;\n}\n\nconst deferredScripts: HTMLScriptElement[] = [];\n\nfunction sameScripts(s1: HTMLScriptElement, s2: HTMLScriptElement): boolean {\n  return (\n    s1 === s2 ||\n    (s1.src || s2.src ? s1.src === s2.src : s1.textContent === s2.textContent)\n  );\n}\n\nfunction getScriptsInOrNearHead(document: Document): HTMLScriptElement[] {\n  // To support Chrome < 88 and Firefox < 84, we cannot use\n  // the selector \"body > script:not(:not(script, link, style) ~ *)\".\n  // (Issue #919)\n  const scriptsInBodyNotNearHead = Array.from(\n    document.querySelectorAll(\n      \"body > :not(script):not(link):not(style) ~ script\",\n    ),\n  ) as HTMLScriptElement[];\n  return (\n    Array.from(\n      document.querySelectorAll(\"head > script, body > script\"),\n    ) as HTMLScriptElement[]\n  ).filter((script) => !scriptsInBodyNotNearHead.includes(script));\n}\n\nexport function loadScript(\n  srcScriptElem: HTMLScriptElement,\n  window: Window,\n  flags?: { inHead?: boolean; atEnd?: boolean; forceDefer?: boolean },\n): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  if (\n    !flags?.inHead &&\n    !flags?.atEnd &&\n    getScriptsInOrNearHead(srcScriptElem.ownerDocument).includes(srcScriptElem)\n  ) {\n    // The script elements at beginning of body have already been processed.\n    return Task.newResult(false);\n  }\n\n  const scriptContent = srcScriptElem.textContent;\n  const src = srcScriptElem.src;\n  const isModule = srcScriptElem.type === \"module\";\n  const async = (isModule || src) && srcScriptElem.async;\n  const defer = (isModule && !async) || (src && srcScriptElem.defer);\n  const needDefer = !flags?.atEnd && (flags?.forceDefer || defer || async);\n\n  if (!hasScripts(window)) {\n    // `window.onload = startViewer`, which was set by vivliostyle-viewer,\n    // has to be unset to prevent `startViewer` restarting because of\n    // `window.dispatchEvent(new Event(\"load\"))` in `loadScriptsAtEnd()`.\n    window.onload = null;\n  }\n\n  if (needDefer) {\n    if (!deferredScripts.some((s) => sameScripts(s, srcScriptElem))) {\n      deferredScripts.push(srcScriptElem);\n    }\n    return Task.newResult(true);\n  }\n\n  if (src.includes(\"/mathjax\")) {\n    const builtinMathJax2 = window.document.head.querySelector(\n      \"script[src*='MathJax.js']:not([data-vivliostyle-scripting])\",\n    );\n    if (builtinMathJax2) {\n      if (src.includes(\"/mathjax@3\")) {\n        // Remove the builtin MathJax 2 when MathJax 3 is specified\n        window.document.head.removeChild(builtinMathJax2);\n        if (window[\"MathJax\"]?.version?.startsWith(\"2.\")) {\n          delete window[\"MathJax\"];\n        }\n      } else if (src.includes(\"/MathJax.js\")) {\n        // Ignore the specified MathJax 2, and use the builtin MathJax 2\n        return Task.newResult(true);\n      }\n    }\n  }\n\n  for (const s of window.document.head.getElementsByTagName(\"script\")) {\n    if (\n      s.hasAttribute(\"data-vivliostyle-scripting\") &&\n      sameScripts(s, srcScriptElem)\n    ) {\n      // If same script is already loaded, remove the already loaded one before load the new one.\n      window.document.head.removeChild(s);\n    }\n  }\n\n  const scriptElem = window.document.createElement(\"script\");\n  scriptElem.textContent = scriptContent;\n  if (src) {\n    scriptElem.src = src;\n  }\n  scriptElem.async = async;\n  scriptElem.defer = defer;\n  scriptElem.setAttribute(\"data-vivliostyle-scripting\", \"true\");\n\n  for (const attr of srcScriptElem.attributes) {\n    if (![\"src\", \"async\", \"defer\"].includes(attr.name)) {\n      scriptElem.setAttribute(attr.name, attr.value);\n    }\n  }\n  Logging.logger.debug(\"script:\", src);\n  if (!src) {\n    window.document.head.appendChild(scriptElem);\n    return Task.newResult(true);\n  } else {\n    const fetcher = TaskUtil.loadElement(scriptElem);\n    window.document.head.appendChild(scriptElem);\n    return TaskUtil.waitForFetchers([fetcher]);\n  }\n}\n\nfunction getAllFontFamilyList(\n  srcDocument: Document,\n  styler: CssStyler.Styler,\n): string {\n  const fontFamilySet = {};\n  const findFontFamilyInStyle = (style: any): void => {\n    const fontFamily = style[\"font-family\"]?.value;\n    if (fontFamily) {\n      if (fontFamily.values) {\n        for (const family1 of fontFamily.values) {\n          fontFamilySet[family1.stringValue()] = true;\n        }\n      } else {\n        fontFamilySet[fontFamily.stringValue()] = true;\n      }\n    }\n    const marginBoxes = style[\"_marginBoxes\"];\n    if (marginBoxes) {\n      for (const marginBoxStyle of Object.values(marginBoxes)) {\n        findFontFamilyInStyle(marginBoxStyle);\n      }\n    }\n  };\n  const findAllFontFamily = (arg: any): void => {\n    if (arg instanceof CssCascade.ApplyRuleAction) {\n      findFontFamilyInStyle(arg.style);\n    } else if (arg instanceof CssCascade.CascadeAction || Array.isArray(arg)) {\n      for (const v of Object.values(arg)) {\n        findAllFontFamily(v);\n      }\n    }\n  };\n  // Find all font-family values in stylesheets.\n  for (const obj of Object.values(styler.cascade.code)) {\n    for (const arg of Object.values(obj ?? {})) {\n      findAllFontFamily(arg);\n    }\n  }\n  // Find all font-family values in inline style.\n  for (const elem of srcDocument.querySelectorAll(\"[style]\")) {\n    if (elem instanceof HTMLElement && elem.style.fontFamily) {\n      fontFamilySet[elem.style.fontFamily] = true;\n    }\n  }\n  return Object.keys(fontFamilySet).join(\",\");\n}\n\nfunction prepareTextContentForWebFonts(\n  srcDocument: Document,\n  window: Window,\n  styler: CssStyler.Styler,\n): HTMLElement {\n  const textContentDiv: HTMLElement =\n    window.document.querySelector(\"[data-vivliostyle-textcontent]\") ??\n    window.document.createElement(\"div\");\n  textContentDiv.style.position = \"fixed\";\n  textContentDiv.style.fontSize = \"0\";\n  textContentDiv.setAttribute(\"data-vivliostyle-textcontent\", \"true\");\n  textContentDiv.setAttribute(\"aria-hidden\", \"true\");\n  textContentDiv.style.fontFamily = getAllFontFamilyList(srcDocument, styler);\n  textContentDiv.textContent = srcDocument.documentElement.textContent;\n  window.document.body.appendChild(textContentDiv);\n  return textContentDiv;\n}\n\nexport function loadScriptsInHead(\n  srcDocument: Document,\n  window: Window,\n  styler: CssStyler.Styler,\n): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  // Process script elements in head and also beginning of body\n  const srcScripts: HTMLScriptElement[] = getScriptsInOrNearHead(srcDocument);\n  if (srcScripts.length === 0) {\n    return Task.newResult(false);\n  }\n  const needPrepareForWebFonts = srcScripts.some(\n    (s) => !(s.async || s.defer || s.type === \"module\"),\n  );\n\n  // Web fonts needs text content of the document\n  const textContentDiv = needPrepareForWebFonts\n    ? prepareTextContentForWebFonts(srcDocument, window, styler)\n    : null;\n  const fonts = window.document.fonts; // FontFaceSet\n  const savedDollar = window[\"$\"];\n  let forceDefer = false;\n  const frame: Task.Frame<boolean> = Task.newFrame(\"loadScripts\");\n  frame\n    .loop(() => {\n      if (srcScripts.length === 0) {\n        if (!needPrepareForWebFonts) {\n          return Task.newResult(false); // break\n        }\n        return frame.sleep(20).thenAsync(() => {\n          if (\n            fonts.status === \"loading\" ||\n            // for Typekit Web Font Loader (Adobe Fonts)\n            window.document.documentElement.classList.contains(\"wf-loading\") ||\n            // For DynaFont\n            // FIXME: checking the global variable `ret` set in https://dfo.dynacw.co.jp/JSDynaFont/DynaFont.js\n            // would be not very good, because it seems to have been made global by mistake.\n            (window[\"FontJSON\"]?.Font &&\n              window[\"ret\"]?.readyState &&\n              window[\"ret\"].readyState < 4)\n          ) {\n            return Task.newResult(true); // continue\n          }\n          return Task.newResult(false); // break\n        });\n      }\n      const srcScriptElem = srcScripts.shift();\n      return loadScript(srcScriptElem, window, {\n        inHead: true,\n        forceDefer,\n      }).thenAsync(() => {\n        if (!forceDefer && window[\"$\"] !== savedDollar) {\n          // jQuery `$(…)` does not work before document is loaded, so need to defer\n          deferredScripts.push(srcScriptElem);\n          forceDefer = true;\n        }\n        if (srcScripts.length === 0) {\n          if (needPrepareForWebFonts) {\n            // Some web font loaders (DynaFont, FONTPLUS) need DOMContentLoaded event\n            Logging.logger.debug(\"dispatchEvent: DOMContentLoaded (document)\");\n            window.document.dispatchEvent(new Event(\"DOMContentLoaded\"));\n          }\n        }\n        return Task.newResult(true); // continue\n      });\n    })\n    .then(() => {\n      if (textContentDiv) {\n        textContentDiv.remove();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function loadScriptsAtEnd(window: Window): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  const frame: Task.Frame<boolean> = Task.newFrame(\"loadScripts\");\n  frame\n    .loop(() => {\n      if (deferredScripts.length === 0) {\n        return Task.newResult(false);\n      }\n      return loadScript(deferredScripts.shift(), window, {\n        atEnd: true,\n      }).thenReturn(deferredScripts.length > 0);\n    })\n    .then(() => {\n      Logging.logger.debug(\"dispatchEvent: DOMContentLoaded (window)\");\n      window.dispatchEvent(new Event(\"DOMContentLoaded\"));\n      Logging.logger.debug(\"dispatchEvent: load (window)\");\n      window.dispatchEvent(new Event(\"load\"));\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function hasScripts(window: Window) {\n  if (!allowScripts) {\n    return false;\n  }\n  return (\n    deferredScripts.length > 0 ||\n    !!window.document.head.querySelector(\"script[data-vivliostyle-scripting]\")\n  );\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap: { [key: string]: string } = {};\n\nexport const frontEdgeBlackListHor: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-top\": \"0px\",\n  \"padding-top\": \"0px\",\n  \"border-top-width\": \"0px\",\n  \"border-top-style\": \"none\",\n  \"border-top-color\": \"transparent\",\n  \"border-top-left-radius\": \"0px\",\n  \"border-top-right-radius\": \"0px\",\n};\n\nexport const frontEdgeBlackListVert: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-right\": \"0px\",\n  \"padding-right\": \"0px\",\n  \"border-right-width\": \"0px\",\n  \"border-right-style\": \"none\",\n  \"border-right-color\": \"transparent\",\n  \"border-top-right-radius\": \"0px\",\n  \"border-bottom-right-radius\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListHor: { [key: string]: string } = {\n  \"margin-top\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListVert: { [key: string]: string } = {\n  \"margin-right\": \"0px\",\n};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext\n{\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /** @override */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n          const child = element.firstElementChild;\n          if (child && !child.previousSibling?.textContent.trim()) {\n            const childStyle = styler.getStyle(child, false);\n            if (childStyle) {\n              const childDisplay = CssCascade.getProp(childStyle, \"display\");\n              if (\n                childDisplay?.value &&\n                childDisplay.value !== Css.ident.inline\n              ) {\n                continue;\n              }\n            }\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"] as CssCascade.CascadeValue;\n          if (!content || !Vtree.nonTrivialContent(content.value)) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ): CssCascade.ElementStyleMap {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap: CssCascade.ElementStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle: { [key: string]: CssCascade.CascadeValue } =\n        (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createRefShadow\");\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createShadows\");\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (templateURLVal instanceof Css.URL) {\n      const url = (templateURLVal as Css.URL).url;\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n      });\n      cont2.then((shadow) => {\n        shadow = this.createPseudoelementShadow(\n          element,\n          isRoot,\n          cascStyle,\n          computedStyle,\n          styler,\n          context,\n          shadowContext,\n          shadow,\n        );\n        frame.finish(shadow);\n      });\n    });\n    return frame.result();\n  }\n\n  /** @override */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      (name, cascVal) => {\n        let value = cascVal.evaluate(context, name);\n        if (name == \"font-family\") {\n          value = this.docFaces.filterFontFamily(value);\n        }\n        return value;\n      },\n    );\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"] as Css.Ident;\n    const displayValues = Display.getComputedDislayValue(\n      (computedStyle[\"display\"] as Css.Ident) || Css.ident.inline,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(elementStyle: CssCascade.ElementStyle): {\n    lang: string | null;\n    elementStyle: CssCascade.ElementStyle;\n  } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const value = CssCascade.getProp(style, name);\n        if (!Css.isDefaultingValue(value.value)) {\n          if (\n            name === \"font-size\" &&\n            i === styles.length - 1 &&\n            this.context.isRelativeRootFontSize &&\n            this.context.rootFontSize\n          ) {\n            // Fix for issue #608, #549\n            props[name] = new CssCascade.CascadeValue(\n              new Css.Numeric(this.context.rootFontSize, \"px\"),\n              value.priority,\n            );\n            continue;\n          }\n          props[name] = value.filterValue(inheritanceVisitor);\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps =\n      CssCascade.getPolyfilledInheritedProps().filter(\n        (name) => computedStyle[name],\n      );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (Css.isDefaultingValue(value)) {\n            if (value === Css.ident.initial) {\n              props[name] = undefined;\n            }\n          } else if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n              default:\n                props[name] = value;\n            }\n          } else {\n            props[name] = value;\n          }\n          delete computedStyle[name];\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Ident,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? this.nodeContext.shadowContext.styler\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle: { [key: string]: Css.Val } = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const floatReferenceCV: CssCascade.CascadeValue =\n      elementStyle[\"float-reference\"];\n    const floatReference =\n      floatReferenceCV && !Css.isDefaultingValue(floatReferenceCV.value)\n        ? PageFloats.floatReferenceOf(floatReferenceCV.value.toString())\n        : null;\n    if (\n      this.nodeContext.parent &&\n      floatReference &&\n      PageFloats.isPageFloat(floatReference)\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    styler.processContent(\n      element,\n      computedStyle,\n      this.nodeContext.viewNode ?? this.nodeContext.parent?.viewNode,\n    );\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    if (Scripts.allowScripts && element instanceof HTMLScriptElement) {\n      Scripts.loadScript(element, this.viewport.window).thenFinish(frame);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"] as Css.Ident;\n    if (Css.isDefaultingValue(display)) {\n      if (display === Css.ident.initial || display === Css.ident.unset) {\n        display = Css.ident.inline;\n      } else if (display === Css.ident.inherit) {\n        display =\n          this.nodeContext.parent?.display &&\n          Css.getName(this.nodeContext.parent?.display);\n      } else {\n        display = null;\n      }\n    }\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext as Vtree.ShadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"] as Css.Ident;\n      let floatSide = computedStyle[\"float\"] as Css.Ident;\n      let clearSide = computedStyle[\"clear\"] as Css.Ident;\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"] as Css.Ident,\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute =\n        Display.establishesCBForAbsolute(position);\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      const breakInside = computedStyle[\"break-inside\"];\n      if (\n        floating ||\n        (breakInside &&\n          !Css.isDefaultingValue(breakInside) &&\n          breakInside !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      const floatMinWrapBlock = computedStyle[\"float-min-wrap-block\"];\n      this.nodeContext.floatMinWrapBlock =\n        floatMinWrapBlock && !Css.isDefaultingValue(floatMinWrapBlock)\n          ? (floatMinWrapBlock as Css.Numeric)\n          : null;\n      const columnSpan = computedStyle[\"column-span\"];\n      this.nodeContext.columnSpan =\n        columnSpan && !Css.isDefaultingValue(columnSpan) ? columnSpan : null;\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (breakAfter && !Css.isDefaultingValue(breakAfter)) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (breakBefore && !Css.isDefaultingValue(breakBefore)) {\n          this.nodeContext.breakBefore = breakBefore.toString();\n        }\n        // Named page type\n        const pageVal: Css.Val = computedStyle[\"page\"];\n        let pageType =\n          pageVal && !Css.isDefaultingValue(pageVal) && pageVal.toString();\n        if (!pageType || pageType.toLowerCase() === \"auto\") {\n          pageType = this.nodeContext.pageType;\n        } else {\n          this.nodeContext.pageType = pageType;\n        }\n        if (this.styler.cascade.currentPageType !== pageType) {\n          if (!this.isAtForcedBreak()) {\n            this.nodeContext.breakBefore = \"page\";\n          }\n          this.styler.cascade.previousPageType =\n            this.styler.cascade.currentPageType;\n          this.styler.cascade.currentPageType = pageType;\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing: Css.Val;\n        let blockBorderSpacing: Css.Val;\n        if (borderSpacing) {\n          if (borderSpacing instanceof Css.SpaceList) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      const footnotePolicy = computedStyle[\"footnote-policy\"] as Css.Ident;\n      this.nodeContext.footnotePolicy =\n        footnotePolicy && !Css.isDefaultingValue(footnotePolicy)\n          ? footnotePolicy\n          : null;\n      const firstPseudo = computedStyle[\"x-first-pseudo\"] as Css.Int;\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter instanceof Css.Str) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const lineBreak = computedStyle[\"line-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"];\n      this.nodeContext.breakWord =\n        wordBreak === Css.ident.break_all ||\n        lineBreak === Css.ident.anywhere ||\n        overflowWrap === Css.ident.break_word ||\n        overflowWrap === Css.ident.anywhere;\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak =\n          this.processRepeatOnBreak(computedStyle);\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (elementStyle[\"content\"]?.value?.url) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.NCX) {\n        ns = Base.NS.XHTML;\n        if (tag == \"ncx\" || tag == \"navPoint\") {\n          tag = \"div\";\n        } else if (tag == \"navLabel\") {\n          // Cheat here. Translate source to HTML, so it will plug\n          // in into the rest of the pipeline.\n          tag = \"span\";\n          const navParent = element.parentNode;\n          if (navParent) {\n            // find the content element\n            let href: string | null = null;\n            for (let c: Node = navParent.firstChild; c; c = c.nextSibling) {\n              if (c.nodeType != 1) {\n                continue;\n              }\n              const childElement = c as Element;\n              if (\n                childElement.namespaceURI == Base.NS.NCX &&\n                childElement.localName == \"content\"\n              ) {\n                href = childElement.getAttribute(\"src\");\n                break;\n              }\n            }\n            if (href) {\n              tag = \"a\";\n              element = element.ownerDocument.createElementNS(ns, \"a\");\n              element.setAttribute(\"href\", href);\n            }\n          }\n        } else {\n          tag = \"span\";\n        }\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else if (computedStyle[\"display\"] === Css.ident.none) {\n          // No element should be created if display:none is set.\n          // (Fix issue #924)\n          frame.finish(false);\n          return;\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (!Scripts.allowScripts && attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                const transformedValue =\n                  this.documentURLTransformer.transformFragment(\n                    attributeValue,\n                    this.xmldoc.url,\n                  );\n                if (\n                  Scripts.allowScripts &&\n                  !(\n                    result.namespaceURI === Base.NS.SVG &&\n                    result.localName !== \"svg\"\n                  ) &&\n                  !result.ownerDocument.getElementById(attributeValue)\n                ) {\n                  // Keep original id value so that JavaScript can manipulate it\n                  result.setAttribute(attributeName, attributeValue);\n                  result.setAttribute(\"data-vivliostyle-id\", transformedValue);\n\n                  // Create an anchor element with transformed id, necessary for internal links in output PDF\n                  // (issue #877)\n                  const anchorElem = result.ownerDocument.createElement(\"a\");\n                  anchorElem.setAttribute(attributeName, transformedValue);\n                  anchorElem.style.position = \"absolute\";\n                  result.appendChild(anchorElem);\n                } else {\n                  result.setAttribute(attributeName, transformedValue);\n                }\n                this.page.registerElementWithId(result, transformedValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = TaskUtil.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.resolveURL(attributeValue);\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(\n              TaskUtil.loadElement(result, attributeValue),\n            );\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              try {\n                result.setAttribute(attributeName, attributeValue);\n              } catch (err) {\n                Logging.logger.warn(err);\n              }\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = TaskUtil.loadElement(image, delayedSrc);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          if (!hasAutoWidth && !hasAutoHeight) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(TaskUtil.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n        if (!this.nodeContext.inline) {\n          let blackList: { [key: string]: string } = null;\n          if (!firstTime) {\n            if (\n              this.nodeContext.inheritedProps[\"box-decoration-break\"] !==\n              \"clone\"\n            ) {\n              blackList = this.nodeContext.vertical\n                ? frontEdgeBlackListVert\n                : frontEdgeBlackListHor;\n            } else {\n              // When box-decoration-break: clone, cloned margins are always\n              // truncated to zero.\n              blackList = this.nodeContext.vertical\n                ? frontEdgeUnforcedBreakBlackListVert\n                : frontEdgeUnforcedBreakBlackListHor;\n            }\n          } else if (atUnforcedBreak && !this.isAtForcedBreak()) {\n            blackList = this.nodeContext.vertical\n              ? frontEdgeUnforcedBreakBlackListVert\n              : frontEdgeUnforcedBreakBlackListHor;\n          }\n          if (blackList) {\n            for (const propName in blackList) {\n              // Fix for issue #737\n              if (propName === \"text-indent\" && !this.isParagraph(element)) {\n                continue;\n              }\n              Base.setCSSProperty(result, propName, blackList[propName]);\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  private isParagraph(element: Element): boolean {\n    switch (element.localName) {\n      case \"p\":\n        return true;\n      case \"html\":\n      case \"body\":\n      case \"main\":\n      case \"article\":\n      case \"section\":\n        return false;\n    }\n    const textLevelElements = {\n      a: true,\n      abbr: true,\n      b: true,\n      bdi: true,\n      bdo: true,\n      cite: true,\n      code: true,\n      data: true,\n      del: true,\n      dfn: true,\n      em: true,\n      i: true,\n      ins: true,\n      kbd: true,\n      mark: true,\n      q: true,\n      ruby: true,\n      s: true,\n      samp: true,\n      small: true,\n      span: true,\n      strong: true,\n      sub: true,\n      sup: true,\n      time: true,\n      u: true,\n      var: true,\n    };\n    for (\n      let childNode = element.firstChild;\n      childNode;\n      childNode = childNode.nextSibling\n    ) {\n      switch (childNode.nodeType) {\n        case Node.TEXT_NODE:\n          if (childNode.nodeValue.trim().length > 0) {\n            return true;\n          }\n          break;\n        case Node.ELEMENT_NODE:\n          if (textLevelElements[(childNode as Element).localName]) {\n            return true;\n          }\n          break;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the current position is at a forced break\n   * (Fix for Issue #690)\n   */\n  private isAtForcedBreak(): boolean {\n    for (\n      let nodeContext = this.nodeContext;\n      nodeContext && !nodeContext.after;\n      nodeContext = nodeContext.parent\n    ) {\n      if (Break.isForcedBreakValue(nodeContext.breakBefore)) {\n        return true;\n      }\n      if (\n        nodeContext.parent &&\n        (nodeContext.parent.sourceNode as Element).firstElementChild !==\n          nodeContext.sourceNode\n      ) {\n        break;\n      }\n    }\n    return false;\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle: { [key: string]: Css.Val } = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext =\n        new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n          parentFormattingContext,\n          this.nodeContext.sourceNode as Element,\n        );\n      (\n        this.nodeContext\n          .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n      ).initializeRepetitiveElements(this.nodeContext.vertical);\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (\n        repeatOnBreak === Css.ident.auto ||\n        Css.isDefaultingValue(repeatOnBreak)\n      ) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const parent = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : this.viewRoot;\n        if (parent) {\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /** @override */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      (pos.sourceNode as Element).namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    const contentShadow = shadow.subShadow || shadow.parentShadow;\n    if (shadow.subShadow) {\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /** @override */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(TaskUtil.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    const isRoot =\n      this.nodeContext?.parent === null &&\n      this.sourceNode?.parentElement === null &&\n      !!this.viewRoot?.parentElement;\n\n    for (const propName in computedStyle) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      if (!value || (value === Css.empty && !Css.isCustomPropName(propName))) {\n        continue;\n      }\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value.isNumeric() &&\n        Exprs.needUnitConversion((value as Css.Numeric).unit)\n      ) {\n        // font-size for the root element is already converted to px\n        value = Css.convertNumericToPx(value, this.context);\n      }\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      if (target.localName === \"rt\" && propName === \"font-size\") {\n        // Fix for Issue #673\n        if (this.fixRubyTextFontSize(target, value)) {\n          continue;\n        }\n      }\n      if (\n        isRoot &&\n        this.page.pageAreaElement &&\n        CssCascade.isInherited(propName)\n      ) {\n        // Fix for Issue #568\n        Base.setCSSProperty(\n          this.page.pageAreaElement.parentElement,\n          propName,\n          value.toString(),\n        );\n      } else {\n        Base.setCSSProperty(target, propName, value.toString());\n      }\n    }\n  }\n\n  /**\n   * Fix ruby text font size.\n   * Issue #673: Minimum font size setting in Chrome causes ruby font size problem\n   * @param target the rt element\n   * @param value the font-size value\n   * @returns true if the font-size fix is done\n   */\n  fixRubyTextFontSize(target: Element, value: Css.Val): boolean {\n    if (!/Chrome/.test(navigator.userAgent)) {\n      // Do nothing if the browser engine is not \"Chrome\"\n      return false;\n    }\n    if (!value.isNumeric()) {\n      return false;\n    }\n    const numeric = value as Css.Numeric;\n    let fontSizeInPx: number;\n    if (numeric.unit === \"%\" || numeric.unit === \"em\") {\n      const parentElem = this.nodeContext?.parent?.viewNode as Element;\n      const parentFontSize =\n        parentElem &&\n        parseFloat(this.viewport.window.getComputedStyle(parentElem).fontSize);\n      fontSizeInPx =\n        (parentFontSize * numeric.num) / (numeric.unit === \"%\" ? 100 : 1);\n    } else {\n      fontSizeInPx = Css.convertNumericToPx(numeric, this.context).num;\n    }\n    if (!fontSizeInPx) {\n      return false;\n    }\n    const minFontSizeInPx = 10; // Default minimum font size setting in Chrome\n    if (fontSizeInPx >= minFontSizeInPx) {\n      return false;\n    }\n    if (!(target instanceof HTMLElement && \"zoom\" in target.style)) {\n      return false;\n    }\n    const zoom = fontSizeInPx / minFontSizeInPx;\n    Base.setCSSProperty(target, \"font-size\", `${minFontSizeInPx}px`);\n    Base.setCSSProperty(target, \"zoom\", `${zoom}`);\n    return true;\n  }\n\n  /** @override */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle: { [key: string]: Css.Val } = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /** @override */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /** @override */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle: { [key: string]: Css.Val } = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle: { [key: string]: Css.Val } = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /** @override */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    if (nodeContext) {\n      nodeContext.walkUpBlocks((block) => {\n        const boxDecorationBreak = block.inheritedProps[\"box-decoration-break\"];\n        if (!boxDecorationBreak || boxDecorationBreak === \"slice\") {\n          const elem = block.viewNode as Element;\n          Asserts.assert(elem instanceof Element);\n          if (block.vertical) {\n            Base.setCSSProperty(elem, \"padding-left\", \"0\");\n            Base.setCSSProperty(elem, \"border-left\", \"none\");\n            Base.setCSSProperty(elem, \"border-top-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n          } else {\n            Base.setCSSProperty(elem, \"padding-bottom\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom\", \"none\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-right-radius\", \"0\");\n          }\n        }\n      });\n    }\n  }\n\n  /** @override */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /** @override */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"box-decoration-break\": true,\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  page: true,\n};\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /** @override */\n  getRangeClientRects(range: Range): Vtree.ClientRect[] {\n    const rects = range.getClientRects();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.subtractOffsets(rect, layoutBoxRect),\n    );\n  }\n\n  /** @override */\n  getElementClientRect(element: Element): Vtree.ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    if (\n      rect.left === 0 &&\n      rect.top === 0 &&\n      rect.right === 0 &&\n      rect.bottom === 0\n    ) {\n      // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n      // (Fix for issue #802)\n      return rect;\n    }\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.subtractOffsets(rect, layoutBoxRect);\n  }\n\n  /** @override */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: Element;\n  width: number;\n  height: number;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n    let outerZoomBox = this.root.firstElementChild;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n    let layoutBox = outerZoomBox.nextElementSibling;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox as HTMLElement;\n    this.contentContainer = contentContainer as HTMLElement;\n    this.layoutBox = layoutBox as HTMLElement;\n    const clientLayout = new DefaultClientLayout(this);\n    const computedStyle = clientLayout.getElementComputedStyle(this.root);\n    this.width =\n      opt_width || parseFloat(computedStyle[\"width\"]) || window.innerWidth;\n    this.height =\n      opt_height || parseFloat(computedStyle[\"height\"]) || window.innerHeight;\n\n    // Use the fallbackPageSize if window size is 0 or browser is in headless mode.\n    const fallbackPageSize = {\n      // compromise between A4 (210mm 297mm) and letter (8.5in 11in)\n      width: 794, // 210mm (8.27in)\n      height: 1056, // 279.4mm (11in)\n    };\n    const isHeadlessBrowser =\n      (!window.outerWidth && !window.outerHeight) ||\n      /Headless/.test(navigator.userAgent) ||\n      (navigator.webdriver &&\n        window.innerWidth === 800 &&\n        window.innerHeight === 600);\n\n    if (!this.width || (!opt_width && isHeadlessBrowser)) {\n      this.width = fallbackPageSize.width;\n    }\n    if (!this.height || (!opt_height && isHeadlessBrowser)) {\n      this.height = fallbackPageSize.height;\n    }\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n    Base.setCSSProperty(this.contentContainer, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.Response): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.Response,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.XMLHttpRequestResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as TextPolyfill from \"./text-polyfill\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> =\n  new TaskUtil.Fetcher(() => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  }, \"uaStylesheetBaseFetcher\");\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n    this.pageScope.defineName(\n      \"blank-page\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          const cp = styleInstance.currentLayoutPosition;\n          return cp?.isBlankPage;\n        },\n        \"blank-page\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"] as CssCascade.CascadeValue;\n      const height = viewportProps[\"height\"] as CssCascade.CascadeValue;\n      const textZoom = viewportProps[\"text-zoom\"] as CssCascade.CascadeValue;\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer\n{\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n\n    // Named page type at first page\n    this.styler.cascade.currentPageType = this.styler.cascade.firstPageType;\n\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).then(() => {\n      // JavaScript in HTML documents support\n      Scripts.loadScriptsInHead(\n        this.xmldoc.document,\n        this.viewport.window,\n        this.styler,\n      ).thenFinish(frame);\n    });\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    if (!pageProps[\"\"]) {\n      pageProps[\"\"] = {};\n    }\n    Object.keys(pageProps).forEach((selector) => {\n      let pageStyle = pageProps[selector] as {\n        [key: string]: CssCascade.CascadeValue;\n      };\n\n      // Substitute var() in @page\n      this.styler.cascade.applyVarFilter([pageStyle], this.styler, null);\n\n      // Calculate calc()\n      this.styler.cascade.applyCalcFilter(pageStyle, this.styler.context);\n\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageStyle),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /** @override */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /** @override */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /** @override */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /** @override */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): void {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  override evalSupportsTest(\n    name: string,\n    value: string,\n    isFunc: boolean,\n  ): boolean {\n    if (isFunc) {\n      if (name === \"selector\") {\n        // TODO: `@supports selector(...)`\n      }\n      return false;\n    }\n    if (!name) {\n      // `(...)` without `name:`\n      return false;\n    }\n\n    let supported = true;\n\n    class SupportsReceiver implements CssValidator.PropertyReceiver {\n      unknownProperty(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      invalidPropertyValue(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      simpleProperty(name: string, value: Css.Val, important): void {}\n    }\n\n    const supportsReceiver = new SupportsReceiver();\n    const val = CssParser.parseValue(\n      this.style.rootScope,\n      new CssTokenizer.Tokenizer(value, null),\n      \"\",\n    );\n    if (!val) {\n      return false;\n    }\n    const validatorSet = (this.xmldoc.store as OPSDocStore).validatorSet;\n    validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      val,\n      false,\n      supportsReceiver,\n    );\n    return supported;\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = Break.startSideValueToBreakValue(\n            flowPos.startSide,\n          );\n          flowPos.startSide = Break.breakValueToStartSideValue(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          const size = cascadedPageStyle[\"size\"];\n          cascadedPageStyle = {}; // clear margin boxes\n          if (size) {\n            // Restore page size (fix for issue #743)\n            cascadedPageStyle[\"size\"] = size;\n          }\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition =\n        this.layoutPositionAtPageStart.flowPositions[parentFlowName];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startSide);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats. (Issue #681)\n    const checkPageFloatForLaterPage = (\n      float: PageFloats.PageFloat,\n    ): boolean => {\n      // FIXME: This check is incomplete when float-reference is other than \"page\".\n      // so give up for now to prevent another problem (Issue #962).\n      if (\n        !this.pageAreaWidth &&\n        !this.pageAreaHeight &&\n        float.floatReference !== PageFloats.FloatReference.PAGE\n      ) {\n        return false;\n      }\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      const deferredFloatOffset = this.xmldoc.getNodeOffset(\n        float.nodePosition.steps[0].node,\n        0,\n        false,\n      );\n      return (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      );\n    };\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n\n        // Prevent deferred page floats from appearing in the preceding pages\n        // (Issue #681)\n        if (checkPageFloatForLaterPage(float)) {\n          loopFrame.breakLoop();\n          return;\n        }\n\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(float);\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated =\n              pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startSide)) {\n      return Task.newResult(true);\n    }\n    flowPosition.startSide = \"any\";\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition =\n                    this.getLastAfterPositionIfDeferredFloatsExists(\n                      column,\n                      newPosition,\n                    );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    if (column.pageBreakType) {\n                      // forced break\n                      flowPosition.startSide = Break.breakValueToStartSideValue(\n                        column.pageBreakType,\n                      );\n                    }\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint =\n      this.counterStore.createLayoutConstraint(pageIndex);\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            const outerWidth = parseFloat(\n              (boxContainer as HTMLElement).style.width,\n            );\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft + outerWidth - layoutContainer.width,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if (column.width >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition =\n        this.currentLayoutPosition.flowPositions[flowNameStr];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> =\n      Task.newFrame(\"layoutFlowColumns\");\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n\n    if (\n      boxInstance instanceof CssPage.PageRuleMasterInstance &&\n      (layoutContainer.width <= 0 || layoutContainer.height <= 0)\n    ) {\n      Logging.logger.warn(\"Negative or zero page area size\");\n    }\n\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer =\n          this.viewport.document.createElement(innerContainerTag);\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSinglUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n        if (innerContainerTag == \"span\") {\n          // text-spacing & hanging-punctuation on margin boxes\n          TextPolyfill.processGeneratedContent(\n            innerContainer,\n            boxInstance.getProp(this, \"text-spacing\"),\n            boxInstance.getProp(this, \"hanging-punctuation\"),\n            this.lang,\n            boxInstance.vertical,\n          );\n        }\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition =\n            this.currentLayoutPosition.flowPositions[flowNameStr];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n\n          // Though it seems that LShapeFloatBug still exists in Firefox, it\n          // apparently does not occur on exclusion floats. See the test file:\n          // test/files/column-break-bug.html\n          // if (Base.checkLShapeFloatBug(this.viewport.root)) {\n          // \t// Simplistic bug workaround: add a copy of the shape translated up.\n          //     exclusions.push(outerShape.withOffset(0, -1.25 * this.queryUnitSize(\"em\", false)));\n          // }\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n\n    // Limit number of pages to prevent endless page generation\n    const LIMIT_PAGES = 10000;\n    if (cp.page > LIMIT_PAGES) {\n      throw new Error(`Too many pages generated (over ${LIMIT_PAGES} pages)`);\n    }\n    cp.page++;\n\n    const startSide = cp.flowPositions[\"body\"]?.startSide;\n    cp.isBlankPage =\n      startSide && startSide !== \"any\" && this.matchPageSide(startSide);\n    page.isBlankPage = cp.isBlankPage;\n\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle(\n          (page.isBlankPage\n            ? this.styler.cascade.previousPageType\n            : this.styler.cascade.currentPageType) ?? \"\",\n        );\n\n    // Substitute var()\n    this.styler.cascade.applyVarFilter([cascadedPageStyle], this.styler, null);\n\n    // Calculate calc()\n    this.styler.cascade.applyCalcFilter(cascadedPageStyle, this.styler.context);\n\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        (pageMaster.pageBox.specified[\"width\"] as CssCascade.CascadeValue)\n          .value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        (pageMaster.pageBox.specified[\"height\"] as CssCascade.CascadeValue)\n          .value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> =\n      Task.newFrame(\"layoutNextPage\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  override startPageTemplateRule(): void {}\n\n  override startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  override startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  override startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  override startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  override startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  override startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  override startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  override startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  override startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  override startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\n// override, so we don't register an error\nexport function processViewportMeta(meta: Element): string {\n  let content = meta.getAttribute(\"content\");\n  if (!content) {\n    return \"\";\n  }\n  const vals = {};\n  let r: RegExpMatchArray;\n  while (\n    (r = content.match(\n      /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n    )) != null\n  ) {\n    content = content.substr(r[0].length);\n    vals[r[1]] = r[2];\n  }\n  const width = vals[\"width\"] - 0;\n  const height = vals[\"height\"] - 0;\n  if (width && height) {\n    return `@-epubx-viewport{width:${width}px;height:${height}px;}`;\n  }\n  return \"\";\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n\n  override error(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(\"CSS parser:\", mnemonics, token);\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.Response,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.XMLHttpRequestResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const userAgentXML = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.load(userAgentXML).then(() => {\n        this.triggerSingleDocumentPreprocessing = true;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(response: Net.Response): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> =\n      Task.newFrame(\"OPSDocStore.load\");\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] =\n            Plugin.getHooksForName(Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT);\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        const userAgentURL = Base.resolveURL(\n          \"user-agent-page.css\",\n          Base.resourceBaseURL,\n        );\n        sources.push({\n          url: userAgentURL,\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (!isTocBox) {\n          const elemList =\n            xmldoc.document.querySelectorAll(\"style, link, meta\");\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const rel = elem.getAttribute(\"rel\");\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  rel == \"stylesheet\" ||\n                  (rel == \"alternate stylesheet\" && classes)\n                ) {\n                  let src = elem.getAttribute(\"href\");\n                  src = Base.resolveURL(src, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> =\n              Task.newFrame(\"fetchStylesheet\");\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sha1 - Calculate SHA1 hash of the given content.\n */\nimport * as Base from \"./base\";\n\n/**\n * @return big-endian byte sequence\n */\nexport function encode32(n: number): string {\n  return String.fromCharCode(\n    (n >>> 24) & 255,\n    (n >>> 16) & 255,\n    (n >>> 8) & 255,\n    n & 255,\n  );\n}\n\n/**\n * @param bytes big-endian byte sequence\n */\nexport function decode32(bytes: string): number {\n  // Important facts: \"\".charCodeAt(0) == NaN, NaN & 0xFF == 0\n  const b0 = bytes.charCodeAt(0) & 255;\n  const b1 = bytes.charCodeAt(1) & 255;\n  const b2 = bytes.charCodeAt(2) & 255;\n  const b3 = bytes.charCodeAt(3) & 255;\n  return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return big-endian uint32 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int32(bytes: string): number[] {\n  const sb = new Base.StringBuffer();\n  sb.append(bytes);\n  let appendCount = (55 - bytes.length) & 63;\n  sb.append(\"\\u0080\");\n  while (appendCount > 0) {\n    appendCount--;\n    sb.append(\"\\x00\");\n  }\n  sb.append(\"\\x00\\x00\\x00\\x00\");\n  sb.append(encode32(bytes.length * 8));\n  bytes = sb.toString();\n  const h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  const w =\n    /** @type Array.<number> */\n    [] as number[];\n  let i: number;\n  for (let bi = 0; bi < bytes.length; bi += 64) {\n    for (i = 0; i < 16; i++) {\n      w[i] = decode32(bytes.substr(bi + 4 * i, 4));\n    }\n    for (; i < 80; i++) {\n      const q = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n      w[i] = (q << 1) | (q >>> 31);\n    }\n    let a = h[0];\n    let b = h[1];\n    let c = h[2];\n    let d = h[3];\n    let e = h[4];\n    let f: number;\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = ((b & c) | (~b & d)) + 1518500249;\n      } else if (i < 40) {\n        f = (b ^ c ^ d) + 1859775393;\n      } else if (i < 60) {\n        f = ((b & c) | (b & d) | (c & d)) + 2400959708;\n      } else {\n        f = (b ^ c ^ d) + 3395469782;\n      }\n      f += ((a << 5) | (a >>> 27)) + e + w[i];\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = f;\n    }\n    h[0] = (h[0] + a) | 0;\n    h[1] = (h[1] + b) | 0;\n    h[2] = (h[2] + c) | 0;\n    h[3] = (h[3] + d) | 0;\n    h[4] = (h[4] + e) | 0;\n  }\n  return h;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return uint8 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int8(bytes: string): number[] {\n  const h = bytesToSHA1Int32(bytes);\n  const res = [];\n  for (const n of h) {\n    res.push((n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, n & 255);\n  }\n  return res;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return chars with codes 0 - 255 equal to SHA1 hash of the input\n */\nexport function bytesToSHA1Bytes(bytes: string): string {\n  const h = bytesToSHA1Int32(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < h.length; i++) {\n    sb.append(encode32(h[i]));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return hex-encoded SHA1 hash\n */\nexport function bytesToSHA1Hex(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < sha1.length; i++) {\n    sb.append((sha1.charCodeAt(i) | 256).toString(16).substr(1));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return base64-encoded SHA1 hash of the input\n */\nexport function bytesToSHA1Base64(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  Base.appendBase64(sb, sha1);\n  return sb.toString();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /** @override */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"body-child\":\n            if (\n              !srcElem.querySelector(\n                \"[role=doc-toc], [role=directory], nav li a, .toc, #toc\",\n              )\n            ) {\n              // hide elements not containing TOC.\n              computedStyle[\"display\"] = Css.ident.none;\n            }\n            break;\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        firstChild.textContent.trim() === \"\"\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = Base.stripFragment(this.url) + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      // Mark if this doc is the primary entry page.\n      const nonTocBoxDoc = this.store.resources[this.url];\n\n      // Make hidden TOC visible in TOC box\n      for (const elem of xmldoc.document.querySelectorAll(\n        \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n      )) {\n        if (elem.hasAttribute(\"hidden\")) {\n          elem.removeAttribute(\"hidden\");\n        }\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          Array.from(\n            page.container.querySelectorAll(\n              \"[data-vivliostyle-toc-box]>*>*>*>*>*[style*='display: none']\",\n            ),\n          ).forEach((bodyChildElem) => {\n            bodyChildElem.setAttribute(\"aria-hidden\", \"true\");\n            bodyChildElem.setAttribute(\"hidden\", \"hidden\");\n          });\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#?(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as SHA1 from \"./sha1\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  startLoadingAsJSON(url: string): void {\n    this.jsonStore.fetch(url);\n  }\n\n  loadPubDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.ajax(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root, haveZipMetadata).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    if (haveZipMetadata) {\n      this.startLoadingAsJSON(url + \"?r=list\");\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root, haveZipMetadata).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(\n    pubURL: string,\n    root: string,\n    haveZipMetadata: boolean,\n  ): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              const zipMetadataResult = haveZipMetadata\n                ? this.loadAsJSON(`${pubURL}?r=list`)\n                : Task.newResult(null);\n              zipMetadataResult.then((zipMetadata) => {\n                opf = new OPFDoc(this, pubURL);\n                opf\n                  .initWithXMLDoc(\n                    opfXML,\n                    encXML,\n                    zipMetadata,\n                    `${pubURL}?r=manifest`,\n                  )\n                  .then(() => {\n                    this.opfByURL[url] = opf;\n                    this.primaryOPFByEPubURL[pubURL] = opf;\n                    frame.finish(opf);\n                  });\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        if (doc.body) {\n          doc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n        }\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(\n              manifestUrl,\n              true,\n              `Failed to fetch Publication Manifest ${manifestUrl}`,\n            ).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.xhtmlToc && opf.xhtmlToc.src === xmldoc.url) {\n              // xhtmlToc is the primari entry (X)HTML\n              if (\n                !doc.querySelector(\n                  \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n                )\n              ) {\n                // TOC is not found in the primari entry (X)HTML\n                opf.xhtmlToc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  override load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  // TODO: use UTF8 of uid\n  const sha1Sum = SHA1.bytesToSHA1Int8(uid);\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    let head: Blob;\n    let tail: Blob;\n    if (blob.slice) {\n      head = blob.slice(0, 1040);\n      tail = blob.slice(1040, blob.size);\n    } else {\n      head = blob[\"webkitSlice\"](0, 1040);\n      tail = blob[\"webkitSlice\"](1040, blob.size - 1040);\n    }\n    Net.readBlob(head).then((buf) => {\n      const dataView = new DataView(buf);\n      for (let k = 0; k < dataView.byteLength; k++) {\n        let b = dataView.getUint8(k);\n        b ^= sha1Sum[k % 20];\n        dataView.setUint8(k, b);\n      }\n      frame.finish(Net.makeBlob([dataView, tail]));\n    });\n    return frame.result();\n  };\n}\n\nexport function makeObfuscationKey(uid: string): string {\n  return `1040:${SHA1.bytesToSHA1Hex(uid)}`;\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport function checkMathJax(): void {\n  if (getMathJaxHub()) {\n    CssCascade.supportedNamespaces[Base.NS.MATHML] = true;\n  }\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  ncxToc: OPFItem = null;\n  xhtmlToc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n    checkMathJax();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /** @override */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /** @override */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.items.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /** @override */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURIComponent(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n    zipMetadata: Base.JSON,\n    manifestURL: string,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.xhtmlToc && item.itemProperties[\"nav\"]) {\n          this.xhtmlToc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const tocAttr = pkg.child(\"spine\").attribute(\"toc\")[0];\n    if (tocAttr) {\n      this.ncxToc = this.itemMap[tocAttr];\n    }\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (!zipMetadata) {\n      if (idpfObfURLs.length > 0 && this.uid) {\n        // Have to deobfuscate in JavaScript\n        const deobfuscator = makeDeobfuscator(this.uid);\n        for (let i = 0; i < idpfObfURLs.length; i++) {\n          this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n        }\n      }\n      if (this.prePaginated) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n    const manifestText = new Base.StringBuffer();\n    const obfuscations = {};\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Deobfuscate in the server.\n      const obfuscationKey = makeObfuscationKey(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        obfuscations[idpfObfURLs[i]] = obfuscationKey;\n      }\n    }\n    for (let i = 0; i < zipMetadata.length; i++) {\n      const entry = zipMetadata[i];\n      const encodedPath = entry[\"n\"];\n      if (encodedPath) {\n        const path = decodeURIComponent(encodedPath);\n        const item = this.itemMapByPath[path];\n        let mediaType: string | null = null;\n        if (item) {\n          item.compressed = entry[\"m\"] != 0;\n          item.compressedSize = entry[\"c\"];\n          if (item.mediaType) {\n            mediaType = item.mediaType.replace(/\\s+/g, \"\");\n          }\n        }\n        const obfuscation = obfuscations[path];\n        if (mediaType || obfuscation) {\n          manifestText.append(encodedPath);\n          manifestText.append(\" \");\n          manifestText.append(mediaType || \"application/octet-stream\");\n          if (obfuscation) {\n            manifestText.append(\" \");\n            manifestText.append(obfuscation);\n          }\n          manifestText.append(\"\\n\");\n        }\n      }\n    }\n    this.assignAutoPages();\n    return Net.ajax(\n      manifestURL,\n      Net.XMLHttpRequestResponseType.DEFAULT,\n      \"POST\",\n      manifestText.toString(),\n      \"text/plain\",\n    );\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      manifestObj[\"name\"] || manifestObj[\"metadata\"]?.[\"title\"] || doc?.title;\n    if (title) {\n      this.metadata[metaTerms.title] = (\n        Array.isArray(title) ? title : [title]\n      ).map((item) => ({ v: item.value ?? item }));\n    }\n    const author =\n      manifestObj[\"author\"] ||\n      manifestObj[\"creator\"] ||\n      manifestObj[\"metadata\"]?.[\"author\"] ||\n      Array.from(\n        doc?.querySelectorAll(\"meta[name='author'], meta[name='DC.Creator']\") ??\n          [],\n      ).map((meta: HTMLMetaElement) => meta.content);\n    if (author && author.length !== 0) {\n      this.metadata[metaTerms.creator] = (\n        Array.isArray(author) ? author : [author]\n      ).map((item) => ({ v: item.name ?? item }));\n    }\n    const language =\n      manifestObj[\"inLanguage\"] ||\n      manifestObj[\"metadata\"]?.[\"language\"] ||\n      doc?.documentElement.lang ||\n      doc?.documentElement.getAttribute(\"xml:lang\");\n    if (language) {\n      this.metadata[metaTerms.language] = (\n        Array.isArray(language) ? language : [language]\n      ).map((item) => ({ v: item }));\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      const selector =\n        \"[role=doc-toc] a[href],\" +\n        \"[role=directory] a[href],\" +\n        \"nav li a[href],\" +\n        \".toc a[href],\" +\n        \"#toc a[href]\";\n      for (const anchorElem of doc.querySelectorAll(selector)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        if (/\\.(jpe?g|png|gif|pdf|svg|mml)([#?]|$)/.test(href)) {\n          // Avoid link to non-HTML resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder =\n              manifestObj[\"readingOrder\"].includes(itemObj);\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url)\n            ) {\n              const baseUrl = manifestUrl\n                ? manifestUrl.replace(/\\/[^/]+$/, \"/\")\n                : this.pubURL;\n              const param = {\n                url: Base.resolveURL(Base.convertSpecialURL(url), baseUrl),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n\n              //TODO: items not in readingOrder should be excluded from linear reading but available with internal link navigation.\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.xhtmlToc = this.items[tocFound];\n      }\n\n      if (!this.xhtmlToc) {\n        this.xhtmlToc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> =\n      Task.newFrame(\"renderSinglePage\");\n    let page = this.makePage(viewItem, pos);\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  private findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    return this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    );\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPagesUpto\");\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult({ left: null, right: null });\n    }\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getSpread\");\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToEPage\");\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToCFI\");\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateTo\");\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      this.findPage(\n        {\n          spineIndex: item.spineIndex,\n          pageIndex: -1,\n          offsetInItem: target ? viewItem.xmldoc.getElementOffset(target) : 0,\n        },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (\n      page.offset === 0 &&\n      !(viewItem.instance.blankPageAtStart && viewItem.pages.length === 0)\n    ) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"span\");\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /** @override */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[spineIndex] =\n        [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties =\n        item.itemRefElement.getAttribute(\"properties\");\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.xhtmlToc || opf.ncxToc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(350, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    pageCont.style.visibility = \"hidden\";\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 10}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport {\n  TextPolyfillCss,\n  VivliostyleViewportCss,\n  VivliostyleViewportScreenCss,\n} from \"./assets\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  haveZipMetadata: boolean;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    const document = viewportElement.ownerDocument;\n    const findOrCreateStyleElement = (\n      id: string,\n      cssText?: string,\n    ): HTMLElement => {\n      let styleElement = document.getElementById(id);\n      if (!styleElement) {\n        styleElement = document.createElement(\"style\");\n        styleElement.id = id;\n        if (cssText) {\n          styleElement.textContent = cssText;\n        }\n        document.head.appendChild(styleElement);\n      }\n      return styleElement;\n    };\n    findOrCreateStyleElement(\n      \"vivliostyle-viewport-screen-css\",\n      VivliostyleViewportScreenCss,\n    );\n    findOrCreateStyleElement(\n      \"vivliostyle-viewport-css\",\n      VivliostyleViewportCss,\n    );\n    findOrCreateStyleElement(\"vivliostyle-text-polyfill-css\", TextPolyfillCss);\n\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = findOrCreateStyleElement(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.haveZipMetadata = false;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const haveZipMetadata = !!command[\"zipmeta\"];\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL, haveZipMetadata).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    // JavaScript in HTML documents support\n    if (\n      typeof command[\"allowScripts\"] == \"boolean\" &&\n      command[\"allowScripts\"] !== Scripts.allowScripts\n    ) {\n      Scripts.setAllowScripts(command[\"allowScripts\"]);\n      this.needRefresh = true;\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(this.window, this.fontSize, viewportElement);\n    }\n  }\n\n  private resolveSpreadView(viewport: Vgen.Viewport): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        // wide enough for a pair of pages of A/B paper sizes, but not too\n        // narrow\n        return viewport.width / viewport.height >= 1.45 && viewport.width > 800;\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const spreadView = this.resolveSpreadView(viewport);\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n    if (\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (\n      this.opfView &&\n      this.opfView.hasPages() &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    // In this implementation, it generates one page rule with the largest\n    // page size both in width and height in the multiple page sizes.\n    // (Resolve issue #751)\n    if (\n      this.pageRuleStyleElement &&\n      (!this.pageSheetSizeAlreadySet ||\n        this.pageSizes[pageIndex].width !==\n          this.pageSizes[pageIndex - 1]?.width ||\n        this.pageSizes[pageIndex].height !==\n          this.pageSizes[pageIndex - 1]?.height)\n    ) {\n      const widthMax = Math.max(...this.pageSizes.map((p) => p.width));\n      const heightMax = Math.max(...this.pageSizes.map((p) => p.height));\n\n      function convertSize(px: number): number {\n        const pt = px * 0.75;\n        // Workaround for Chromium's rounded page size problem.\n        // (Fix for issue #934 and #936)\n        return Math.ceil(pt);\n      }\n      function extraHeightAdj(): number {\n        // Workaround for issue #947,\n        // only necessary if used with Vivliostyle CLI (LayoutNGPrinting enabled)\n        if (navigator.webdriver) {\n          return 1;\n        }\n        return 0;\n      }\n      const widthPt = convertSize(widthMax);\n      const heightPt = convertSize(heightMax) + extraHeightAdj();\n      const styleText = `@page {margin:0;size:${widthPt}pt ${heightPt}pt;}`;\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.isTOCVisible();\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.hideTOC();\n      this.opfView.removeRenderedPages();\n    }\n    this.pageSizes = [];\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n    if (this.pref.spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          if (!spread.left && !spread.right) {\n            return Task.newResult(null);\n          }\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage =\n            page.side === Constants.PageSide.LEFT ? spread.left : spread.right;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle:\n                          this.opf.spine[this.pagePosition.spineIndex].title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] =\n                          this.opf.spine[this.pagePosition.spineIndex].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          // JavaScript in HTML documents support\n                          if (\n                            Scripts.allowScripts &&\n                            Scripts.hasScripts(this.window)\n                          ) {\n                            Scripts.loadScriptsAtEnd(this.window).then(() => {\n                              if (this.renderAllPages) {\n                                this.setReadyState(\n                                  Constants.ReadyState.COMPLETE,\n                                );\n                              }\n                              this.callback({ t: \"loaded\" });\n                              frame.finish(p);\n                            });\n                          } else {\n                            if (this.renderAllPages) {\n                              this.setReadyState(Constants.ReadyState.COMPLETE);\n                            }\n                            this.callback({ t: \"loaded\" });\n                            frame.finish(p);\n                          }\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> =\n          Task.newFrame(\"moveTo.showCurrent\");\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer\n                .showCurrent(viewer.currentPage, !this.renderAllPages)\n                .then(() => {\n                  loopFrame.continueLoop();\n                });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> =\n              Task.newFrame(\"waitForCommand\");\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: string;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n  allowScripts?: boolean;\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n    allowScripts: true,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!singleDocumentOptions) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      (this.adaptViewer_.opfView.opf.xhtmlToc ||\n        this.adaptViewer_.opfView.opf.ncxToc)\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n","// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer({\n        viewportElement: this.iframeWin.document.body\n          .firstElementChild as HTMLElement,\n        window: this.iframeWin,\n        debug: true,\n      });\n    return new Promise<void>((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n","import {\n    printHTML\n} from \"../src\"\n\n\ndocument.getElementById('print').addEventListener('click', () => {\n    const html = document.getElementById('html').value,\n        css = document.getElementById('css').value,\n        title = document.getElementById('title').value,\n        htmlDoc = `\n        <!doctype html>\n        <html>\n            <head>\n                <meta charset=\"UTF-8\">\n                <title>${title}</title>\n                <style>${css}</style>\n            <head>\n            <body>${html}</body>\n        </html>`,\n        printCallback = iframeWin => {\n            const pageCount = iframeWin.document.querySelectorAll('[data-vivliostyle-page-container]').length\n            console.log(`page count: ${pageCount}`)\n            iframeWin.print()\n        }\n\n    printHTML(htmlDoc, {\n        title,\n        printCallback,\n        hideIframe: true, // Whether to use a hidden iframe (default: true)\n        removeIframe: true // Whether to remove the iframe after use (default: true)\n    })\n})\n"],"names":["DIFF_DELETE","diff_main","text1","text2","cursor_pos","_fix_unicode","editdiff","oldText","newText","oldRange","index","length","newRange","oldLength","newLength","oldCursor","oldBefore","slice","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","Math","min","oldPrefix","newPrefix","make_edit_splice","cursor","suffixLength","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","i","indexOf","hm","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","j","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","mid_common","diff_halfMatch_","diffs_a","diffs_b","concat","text1_length","text2_length","max_d","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","unshift","push","diff_cleanupMerge","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","pointerend","is_surrogate_pair_end","fix_unicode","pointer","count_delete","count_insert","text_delete","text_insert","splice","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","n","pop","changes","charCode","str","before","oldMiddle","newMiddle","after","tuples","ret","remove_empty_tuples","diff","INSERT","DELETE","EQUAL","PageSide","ReadyState","LogLevel","setDebug","value","isDebug","pageProgressionOf","PageProgression","LTR","RTL","Error","argumentsToErrorInfo","args","a","from","e","shift","error","messages","stack","frameTrace","toString","LEFT","RIGHT","LOADING","INTERACTIVE","COMPLETE","DEBUG","INFO","WARN","ERROR","HOOKS","logger","opt_console","listeners","this","consoleDebug","msg","_this$opt_console","_this$opt_console2","_console","debug","log","console","apply","_proto","consoleInfo","_console2","info","consoleWarn","_this$opt_console5","_this$opt_console6","warn","consoleError","_this$opt_console7","_this$opt_console8","_console4","triggerListeners","level","forEach","listener","addListener","arguments","buildMessageAndStackTrace","SIMPLE_PROPERTY","PREPROCESS_SINGLE_DOCUMENT","PREPROCESS_TEXT_CONTENT","PREPROCESS_ELEMENT_STYLE","POLYFILLED_INHERITED_PROPS","CONFIGURATION","RESOLVE_TEXT_NODE_BREAKER","RESOLVE_FORMATTING_CONTEXT","RESOLVE_LAYOUT_PROCESSOR","POST_LAYOUT_BLOCK","hooks","registerHook","name","fn","hooksForName","Logging","getHooksForName","plugin","removeHook","Profiler","performanceInstance","timestamps","registerTiming","registerStartTiming","registerEndTiming","noop","prototype","forceRegisterStartTiming","timestamp","call","forceRegisterEndTiming","printTimings","st","Object","keys","stamps","l","t","start","end","disable","enable","isEnabled","startEnd","now","fallbackPerformanceInstance","Date","profiler","window","performance","profile","firstLetterPattern","emptyObj","stringToJSON","JSON","parse","stripFragment","url","r","match","baseURL","location","href","NS","resourceBaseURL","setResourceBaseURL","resolveURL","relURL","test","toLowerCase","substr","stripFragmentAndQuery","lastIndexOf","urlOption","replace","convertSpecialURL","exec","asString","v","epub","EV","MATHML","XML","XHTML","XLINK","SHADOW","SVG","DC","NCX","PriorityQueue","queue","add","item","parent","parentIndex","compare","peek","remove","curr","size","childIndex","result","knownPrefixes","propNameMap","checkIfPropertySupported","prefix","prop","CSS","supports","prefixed","_step","_iterator","done","elem","elemStyle","style","startsWith","setProperty","prefixedPropertyNames","getPrefixedPropertyNames","_step2","_iterator2","opt_value","getPropertyValue","propertyNames","err","getLangAttribute","element","lang","getAttributeNS","namespaceURI","getAttribute","StringBuffer","list","_proto2","append","clear","join","escapeChar","escapeCSSIdent","escapeCSSStr","lightURLEncode","encodeURIComponent","isLetter","ch","escapeNameStrToHex","s","escapeRegExp","binarySearch","high","good","h","m","numberCompare","b","indexArray","arr","key","_step3","map","_iterator3","_createForOfIteratorHelperLoose","multiIndexArray","_step4","_iterator4","dispatchEvent","evt","type","target","currentTarget","_proto3","addEventListener","capture","removeEventListener","SimpleEventTarget","hasVerticalBBoxBug","hasInlineBlockJustificationBug","hasSoftWrapOpportunityAfterHyphenBug","hasSoftWrapOpportunityByWbrBug","getId","node","nodeType","idtxt","unescapeChar","unescape","parseExtVal","extstr","p","parseExt","ext","appendTo","sb","applyTo","pos","RefStep","ChildStep","id","sideBias","child","childElements","children","childElementCount","firstChild","next","nextSibling","movedNode","ownerDocument","getElementById","OffsetStep","offset","textBefore","textAfter","textLength","textContent","escape","Fragment","steps","fromString","fragstr","decodeURIComponent","parseInt","Base","navigate","doc","documentElement","ref","trim","text","prependPathFromNode","parentNode","previousSibling","reverse","clonePreferences","pref","fontFamily","lineHeight","margin","hyphenate","columnWidth","horizontal","nightMode","spreadView","pageBorder","enabledMediaTypes","assign","defaultPaperSize","defaultPreferencesInstance","vivliostyle","print","viewW","viewH","objW","objH","scale","cssIdent","makeQualifiedName","objName","memberName","nextKeyIndex","LexicalScope","resolver","scopeKey","zero","one","_true","_false","values","funcs","builtIns","Const","round","sqrt","max","letterbox","cssString","typeof","defineBuiltInName","pageWidth","pageHeight","fontSize","pubTitle","docTitle","Native","defineName","qualifiedName","val","defineFunc","defineBuiltIn","isViewportRelativeLengthUnit","unit","defaultUnitSizes","px","in","pt","pc","cm","mm","q","em","rem","ex","dppx","dpi","dpcm","needUnitConversion","Context","rootScope","viewportWidth","viewportHeight","actualPageWidth","actualPageHeight","initialFontSize","rootFontSize","isRelativeRootFontSize","scopes","pageAreaWidth","pageAreaHeight","pageVertical","getScopeContext","scope","clearScope","queryUnitSize","isRoot","pvw","vh","pvh","vw","evalName","evalCall","params","noBuiltInEval","body","evaluate","evalMediaName","not","enabled","evalMediaTest","feature","req","actual","screen","availWidth","availHeight","pixelDepth","evalSupportsTest","isFunc","queryVal","storeVal","Val","buf","priority","evaluateCore","context","expand","dependCore","other","dependencyCache","dependOuter","cached","Special","depend","isMediaName","Prefix","_Val","_this","_inheritsLoose","getOp","evalPrefix","_proto4","constructor","Infix","lhs","rhs","_this2","_proto5","getPriority","evalInfix","thisPriority","Logical","Comparison","_Infix2","Additive","_Infix4","Multiplicative","Not","_Prefix","_proto10","_Not","NotMedia","Negate","_Prefix2","And","_proto13","AndMedia","_And","Or","Comma","_Or","OrMedia","_Or2","_Comparison","Lt","Le","_Comparison2","Gt","_Comparison3","_proto20","Ge","_Comparison4","Eq","_Comparison6","Ne","_proto23","Add","_Additive","_Additive2","Subtract","_proto25","Multiply","_Multiplicative","Divide","_proto27","_Multiplicative3","Modulo","Numeric","_Val3","num","_this3","Named","_Val4","_this4","_proto30","_Val5","MediaName","_this5","_proto31","_Val6","_this6","_proto32","_Val7","Call","_this7","_proto33","expandedParams","expanded","Cond","_Val8","cond","ifTrue","ifFalse","_this8","_proto34","_Val9","_this9","_proto35","MediaTest","_this10","_proto36","SupportsTest","_this11","_proto37","Param","_Val12","_this12","Visitor","visitValues","visit","visitEmpty","empty","visitSlash","slash","visitStr","visitIdent","ident","visitNumeric","numeric","visitNum","visitInt","visitHexColor","color","visitURL","visitURange","urange","visitSpaceList","visitCommaList","visitFunc","func","visitExpr","expr","FilterVisitor","_Visitor","SpaceList","CommaList","Func","stringValue","toExpr","isExpr","isNumeric","isNum","isIdent","isSpaceList","visitor","Empty","_createClass","get","instance","_Val2","Slash","Exprs","Str","_proto6","nameTable","Ident","_assertThisInitialized","Exprs.Const","_proto7","getName","Exprs.Multiply","_proto8","Num","_proto9","_Num","Int","HexColor","hex","URL","_proto12","URange","urangeText","appendList","separator","_values$","_values$i","_Val10","_proto14","_Val11","_Val13","Expr","_proto17","AnyToken","_Val14","_this13","convertNumericToPx","toNumber","absolute","all","always","anywhere","auto","avoid","balance","balance_all","block","block_end","block_start","both","bottom","border_box","break_all","break_word","crop","cross","column","exclusive","fixed","flex","footnote","footer","header","hidden","horizontal_tb","inherit","initial","inline","inline_block","inline_end","inline_start","landscape","left","line","list_item","ltr","manual","none","normal","oeb_page_foot","oeb_page_head","page","relative","revert","right","same","snap_block","spread","_static","rtl","table","table_caption","table_cell","table_footer_group","table_header_group","table_row","top","transparent","unset","vertical_lr","vertical_rl","visible","hundredPercent","fullHeight","numericZero","processingOrder","isDefaultingValue","name1","name2","Number","MAX_VALUE","isCustomPropName","Rect","Point","Insets","Segment","low","winding","shapeId","Band","segmentCompare","s1","s2","Shape","points","addSegments","prev","withOffset","offsetX","offsetY","shapeForEllipse","cx","cy","rx","ry","PI","sin","cos","shapeForRect","lowOrHigh","isNaN","addBandIntersections","intersections","w1","intersectY","w2","BandIntersection","mergeIntersections","includeCount","excludeCount","shapeCount","windings1","windings2","xranges","inside","intersectionCount","intersection","stillInside","rotateBox","box","unrotateBox","rotateShape","shape","point","rotatePoint","normalize","bands","currBand","prevBand","findBand","mid","rect","band","topEdge","bottomEdge","SetVisitor","_Css$Visitor","propSet","Css","IntVisitor","_Css$Visitor2","toInt","def","ShapeVisitor","_Css$Visitor3","collect","coords","getShape","width","height","numbers","coord","GeometryUtil.Point","GeometryUtil.Shape","GeometryUtil.shapeForRect","GeometryUtil.shapeForEllipse","GeometryUtil","toShape","CountersVisitor","_Css$Visitor4","reset","counters","toCounters","UrlTransformVisitor","_Css$FilterVisitor","baseUrl","transformer","Css.URL","transformURL","TokenType","TargetCounterReference","targetId","resolved","pageCounters","spineIndex","pageIndex","equals","isResolved","resolve","unresolve","CounterListener","counterStore","countersOfId","documentURLTransformer","transformFragment","countersById","getExprContentListener","CounterResolver","pageScope","styler","namedStringValues","setStyler","getFragment","getTransformedId","transformedId","getPageCounterVal","format","currentPageCounters","registerPageCounterExpr","getPageCountersVal","getTargetCounters","lookForElement","targetCounters","styleUntilIdIsReached","getTargetPageCounters","currentPage","elementsById","pageCountersById","getTargetCounterVal","countersOfName","_countersOfName","resolveReference","pageCountersOfName","saveReferenceOfCurrentPage","getTargetCountersVal","Exprs.Native","elementCounters","getNamedStringVal","retrievePosition","stringValues","offsets","sort","pageStartOffset","isBlankPage","container","querySelectorAll","firstOffset","startOffset","lastOffset","firstExceptOffset","offsetPrev","pageLastOffset","querySelector","elementAtOffset","elementAtPageStartOffset","firstElementChild","offsetNext","first","last","setNamedString","cascadeInstance","currentElementOffset","CounterStore","previousPageCounters","currentPageCountersStack","pageIndicesById","newReferencesOfCurrentPage","referencesToSolve","referencesToSolveStack","unresolvedReferences","resolvedReferences","pagesCounterExprs","createCounterListener","createCounterResolver","setCurrentPage","definePageCounter","counterName","forceSetPageCounter","pageNumber","updatePageCounters","cascadedPageStyle","resetMap","cloneCounterValues","resetVal","CssProp","resetCounterName","increment","incrementVal","incrementMap","incrementCounterName","counterValues","pushPageCounters","popPageCounters","unresolvedRefs","resolvedRefs","pushed","some","finishPage","ids","oldPageIndex","prevPageCounters","every","getUnresolvedRefsToPage","refs","idRefs","r1","r2","o","pushReferencesToSolve","popReferencesToSolve","exprContentListener","bind","document","findIndex","createElement","setAttribute","PAGES_COUNTER_ATTR","finishLastPage","viewport","nodes","root","pages","_loop","createLayoutConstraint","LayoutConstraint","allowLayout","nodeContext","viewNode","escapeParseSingle","code","String","fromCodePoint","escapeParse","EOF","IDENT","STR","NUMERIC","NUM","INT","FUNC","HASH","CLASS","O_PAR","C_PAR","O_BRC","C_BRC","O_BRK","C_BRK","COMMA","SEMICOL","COLON","SLASH","AT","PERCENT","QMARK","PLUS","MINUS","BAR_BAR","AMP_AMP","URANGE","BANG","DOLLAR","HAT","BAR","TILDE","STAR","GT","LT","EQ","BANG_EQ","DOLLAR_EQ","HAT_EQ","BAR_EQ","TILDE_EQ","STAR_EQ","GT_EQ","LT_EQ","EQ_EQ","COL_COL","CDO","CDC","UNKNOWN","INVALID","LAST","Token","Action","precededBySpace","position","makeActions","spec","NaN","END","SPACE","AMP","DOT","BSLASH","STR1","STR2","EQTAIL","ENDINT","ENDNUM","CONT","UNIT","PCUNIT","NUMBER","ENDIDNT","IDNTESC","ENDIDES","ENDSTR","ENDESTR","STR1ESC","STR2ESC","FUNCES","COMMENT","COMMST","ENDNOTK","MINMIN","TOINT","TONUM","TOIDENT","TOIDES","KILL1","KILL2","URL1","URL2","ENDURL","TERMURL","FINURL","LT_BG","LT_BG_M","CHKPOSS","CHKPOSN","URLESC","IDESCH","TOCLASS","CHKSP","actionsNormal","actionsIdent","actionsNumOrClass","actionsMinus","actionsIdentEsc","actionsInt","actionsNumber","actionsColon","actionsBar","actionsAmp","actionsSlash","actionsComment","actionsCommentStar","actionsMinusMinus","actionsLt","actionsLtBang","actionsLtBangMinus","actionsIdentEscChr","actionsStr1","actionsStr2","actionsStr1Esc","actionsStr2Esc","actionsURL","actionsURLInside","actionsURLInside1","actionsURLInside2","actionsURLTail","Tokenizer","input","handler","indexMask","buffer","head","tail","token","fillBuffer","nthToken","consume","mark","unmark","hasMark","reallocate","newIndexMask","newBuffer","oldIndex","newIndex","mnemonics","actions","tokenType","tokenPosition","tokenText","tokenNum","backslashPos","seenSpace","actionsCheckEq","parseFloat","privateCurrentTask","primaryScheduler","newFrame","task","frame","Frame","state","FrameState","ACTIVE","newResult","SyncResultImpl","handle","onErr","raise","INIT","FINISHED","DEAD","currentTime","valueOf","setTimeout","_setTimeout","_x","_x2","delay","clearTimeout","TimerImpl","Scheduler","timer","timeout","sliceOverTime","wakeupTime","timeoutToken","inTimeSlice","order","setSlice","isTimeSliceOver","arm","newTime","scheduledTime","doTimeSlice","schedule","continuation","opt_delay","c","canceled","resumeInternal","run","opt_name","Task","then","running","callbacks","callback","savedTask","suspend","Continuation","otherComp","getTask","scheduler","finish","cancel","exception","waitTarget","interrupt","getScheduler","isRunning","whenDone","unwind","opt_frame","fillStack","f","out","thenAsync","thenReturn","thenFinish","isPending","ResultImpl","res1","res2","res","checkEnvironment","timeSlice","sleep","loop","step","more","loopWithFrame","opt_waitTarget","LoopBodyFrame","continueLoop","breakLoop","Fetcher","fetch","arrived","resource","piggybacks","piggibacks","piggyback","Task.newResult","hasArrived","waitForFetchers","fetchers","fetcher","loadElement","src","setAttributeNS","localName","XMLHttpRequestResponseType","VivliostyleViewportScreenCss","VivliostyleViewportCss","ValidationTxt","UserAgentXml","UserAgentPageCss","UserAgentBaseCss","ajax","opt_type","opt_method","opt_data","opt_contentType","request","XMLHttpRequest","response","status","statusText","contentType","responseText","responseXML","responseBlob","open","responseType","onreadystatechange","readyState","DOCUMENT","HTMLDocument","TEXT","makeBlob","contentTypeHeader","getResponseHeader","setRequestHeader","send","overrideMimeType","parts","Blob","DEFAULT","ARRAYBUFFER","BLOB","ResourceStore","StylesheetFlavor","parser","resources","load","opt_required","opt_message","fetchInner","isTocBox","endsWith","isUserAgentXml","userAgentXmlUrl","TaskUtil","delete","store","USER_AGENT","USER","AUTHOR","ParserHandler","flavor","getCurrentToken","getScope","startStylesheet","tagSelector","ns","classSelector","pseudoclassSelector","pseudoelementSelector","idSelector","attributeSelector","op","descendantSelector","childSelector","adjacentSiblingSelector","followingSiblingSelector","nextSelector","startSelectorRule","startFontFaceRule","startFootnoteRule","pseudoelem","startViewportRule","startDefineRule","startRegionRule","startPageRule","startPageMarginBoxRule","startWhenRule","startMediaRule","startFlowRule","flowName","startPageTemplateRule","startPageMasterRule","pseudoName","classes","startPartitionRule","startPartitionGroupRule","startRuleBody","property","important","endRule","startFuncWithSelector","funcName","endFuncWithSelector","getImportantSpecificity","getBaseSpecificity","DispatchParserHandler","_ParserHandler","tokenizer","slave","pushHandler","popHandler","errorMsg","SkippingParserHandler","_ParserHandler2","owner","topLevel","depth","_SkippingParserHandle","SlaveParserHandler","report","message","reportAndSkip","actionsBase","actionsStyleAttribute","actionsSelector","actionsSelectorCont","actionsSelectorStart","actionsPropVal","actionsExprVal","actionsExprOp","actionsErrorSelector","SELECTOR_NAME_1","SELECTOR_NAME","SELECTOR_ANY_1","SELECTOR_ANY","SELECTOR_ID_1","SELECTOR_ID","SELECTOR_CLASS_1","SELECTOR_CLASS","SELECTOR_ATTR_1","SELECTOR_ATTR","SELECTOR_CHILD","SELECTOR_SIBLING","SELECTOR_BODY","SELECTOR_PSEUDOCLASS","VAL_IDENT","VAL_HASH","VAL_NUM","VAL_INT","VAL_NUMERIC","VAL_STR","VAL_URL","VAL_COMMA","VAL_SLASH","VAL_FUNC","VAL_C_PAR","VAL_END","RULE_END","SELECTOR_START","EXPR_IDENT","EXPR_NUM","EXPR_NUMERIC","EXPR_STR","EXPR_PARAM","EXPR_PREFIX","EXPR_INFIX","EXPR_FUNC","EXPR_C_PAR","EXPR_O_PAR","SELECTOR_NEXT","SELECTOR_PSEUDOELEM","EXPR_O_BRC","VAL_FINISH","EXPR_INFIX_NAME","PROP","VAL_BANG","VAL_BRC","EXPR_SEMICOL","ERROR_PUSH","ERROR_POP","ERROR_POP_DECL","ERROR_SEMICOL","VAL_PLUS","SELECTOR_PSEUDOCLASS_1","SELECTOR_FOLLOWING_SIBLING","VAL_URANGE","DONE","OP_MEDIA_AND","CssTokenizer","OP_MEDIA_OR","actionsSelectorInFunc","actionsError","actionsErrorDecl","ExprContext","WHEN","MEDIA","IMPORT","SUPPORTS","Parser","valStack","namespacePrefixToURI","defaultNamespaceURI","propName","propImportant","exprContext","importReady","importURL","importCondition","errorBrackets","ruleStack","regionRule","pageRule","extractVals","sep","valStackReduce","count","Css.SpaceList","Css.Func","Css.AnyToken","Css.empty","exprError","exprStackReduce","val2","tok","e1","e2","er","OP_MEDIA_NOT","CssTokenizer.TokenType","Exprs.Gt","Exprs.Ne","Exprs.Subtract","Exprs.Modulo","Exprs.MediaTest","readSupportsTest","startPosition","token1","token2","tokenN","parLevel","readPseudoParams","readNthPseudoParams","hasLeadingPlus","hasMinusSign","hasSign","_a","makeCondition","condition","classList","split","Exprs.Not","isInsidePropertyOnlyRule","runParser","parsingValue","parsingStyleAttr","parsingMediaQuery","parsingFunctionParam","parserLoop","pseudoclassType","POSITIVE_INFINITY","Css.HexColor","Css.Str","Exprs.Named","Exprs.Param","supportsTest","rulePseudoName","ruleName","ErrorHandler","_ParserHandler3","parseStylesheetFromText","media","Task.handle","CssTokenizer.Tokenizer","_ret","resolvedURL","parseStylesheetFromURL","innerFrame","Net","xhr","numProp","opacity","utilization","AnyMatcher","matchers","matches","matcher","AllMatcher","NthFragmentMatcher","elementOffset","registerFragmentIndex","fragmentIndex","indices","fragmentIndices","clearFragmentIndices","entry","matchANPlusB","MatcherBuilder","Selectors","RepetitiveElement","Vtree","buildViewConditionMatcher","viewCondition","strs","buildAllMatcher","buildAnyMatcher","restoreNewText","reduce","fastdiff","default","coef","current","change","LayoutProcessor","isInstanceOfBlockFormattingContext","object","formattingContextType","PageFloats","FloatReference","INLINE","COLUMN","REGION","PAGE","isInstanceOfAfterIfContinuesLayoutConstraint","flagmentLayoutConstraintType","isInstanceOfRepetitiveElementsOwnerFormattingContext","Table","isInstanceOfTableFormattingContext","isInstanceOfRepetitiveElementsOwnerLayoutConstraint","isInstanceOfTableRowLayoutConstraint","Whitespace","IGNORE","NEWLINE","PRESERVE","ShadowType","NONE","CONTENT","ROOTLESS","ROOTED","delayedProps","transform","show","obj","visibility","hide","play","pause","resume","mute","muted","unmute","makeListener","action","actionFn","Page","_Base$SimpleEventTarg","bleedBox","pageAreaElement","delayedItems","hrefHandler","dimensions","isFirstPage","isLastPage","isAutoPageWidth","isAutoPageHeight","side","marginBoxes","anchorElement","preventDefault","setAutoPageWidth","isAuto","AUTO_PAGE_WIDTH_ATTRIBUTE","removeAttribute","setAutoPageHeight","AUTO_PAGE_HEIGHT_ATTRIBUTE","registerElementWithId","triggers","clientLayout","elems","contains","getElementClientRect","_i","trigger","observers","observer","event","zoom","getPageAreaElement","whitespaceFromPropertyValue","whitespace","canIgnore","Flow","parentFlowName","forcedBreakOffsets","formattingContext","FlowChunk","linger","repeated","breakBefore","startPage","isBetter","clientrectIncreasingTop","clientrectDecreasingRight","isSameNodePositionStep","nps1","nps2","shadowContext","shadowType","outerHTML","_nps1$node","_nps2$node","isSameShadowContext","nodeShadow","shadowSibling","isSameNodePosition","np1","np2","offsetInNode","newNodePositionFromNodeContext","initialFragmentIndex","sourceNode","preprocessedTextContent","makeNodeContextFromNodePositionStep","NodeContext","copy","ShadowContext","xmldoc","parentShadow","superShadow","subShadow","sc1","sc2","FirstPseudo","outer","boxOffset","shared","overflow","breakPenalty","display","floatReference","floatSide","clearSide","floatMinWrapBlock","columnSpan","verticalAlign","captionSide","inlineBorderSpacing","blockBorderSpacing","flexContainer","hyphenateCharacter","breakWord","establishesBFC","containingBlockForAbsolute","breakAfter","clearSpacer","inheritedProps","vertical","direction","firstPseudo","repeatOnBreak","pluginProps","afterIfContinues","footnotePolicy","pageType","resetView","cloneItem","np","create","modify","clone","npp","npc","toNodePositionStep","toNodePosition","nc","_nc$shadowContext$sty","_nc$shadowContext","_nc$shadowContext$sty2","_pseudos","resolveIndex","isInsideBFC","getContainingBlockForAbsolute","walkUpBlocks","belongsTo","ChunkPosition","primary","floats","isSamePosition","FlowChunkPosition","chunkPosition","flowChunk","FlowPosition","positions","startSide","newfp","newarr","hasContent","LayoutPosition","flows","flowPositions","highestSeenOffset","highestSeenNode","lookupPositionOffset","newcp","thisFlowNames","otherFlowNames","_i2","_thisFlowNames","flowPos","startSideOfFlow","firstFlowChunkOfFlow","flowChunkPosition","Container","marginLeft","marginRight","marginTop","marginBottom","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","originX","originY","exclusions","innerShape","computedBlockSize","snapWidth","snapHeight","snapOffsetX","snapOffsetY","getInsetTop","getInsetBottom","getInsetLeft","getInsetRight","getInsetBefore","getInsetAfter","getInsetStart","getInsetEnd","getBeforeEdge","getAfterEdge","getStartEdge","getEndEdge","getInlineSize","getBoxSize","getBoxDir","getInlineDir","copyFrom","setVerticalPosition","setHorizontalPosition","setBlockPosition","extent","setInlinePosition","lastChild","removeChild","getInnerShape","getInnerRect","getPaddingRect","paddingX","paddingY","getOuterShape","outerShapeProp","getOuterRect","outerY","outerWidth","outerHeight","outerX","ContentPropertyHandler","rootContentValue","visitStrInner","Text","createTextNode","appendChild","img","createElementNS","CssParser","nonTrivialContent","fill","hyphens","marker","orphans","quotes","stroke","widows","polyfilledInheritedProps","supportedNamespaces","coupledPatterns","coupledExtentPatterns","geomNames","sides","names","buildCouplingMap","sideMap","extentMap","pattern","extentPattern","_name","_name2","couplingMapVert","couplingMapHor","couplingMapVertRtl","couplingMapHorRtl","CascadeValue","getBaseValue","filterValue","increaseSpecificity","specificity","evaluateCSSToCSS","ConditionalCascadeValue","_CascadeValue","cascadeValues","tv","av","SPECIALS","isMapName","isPropName","isInherited","getProp","getStyleMap","getMutableStyleMap","getViewConditionalStyleMap","_viewConditionalStyles","getSpecial","getMutableSpecial","mergeIn","pseudoelement","regionId","viewConditionMatcher","styleKey","styleMap","styles","as","ts","_context$style","_context$style$valida","setProp","propListLH","validatorSet","shorthands","propList","propLH","avLH","tvLH","chainActions","chain","chained","InheritanceVisitor","props","setPropName","getFontSize","cascval","Exprs.defaultUnitSizes","isAbsoluteLengthUnit","parentFontSize","convertFontRelativeLengthToPx","Css.Numeric","baseFontSize","CascadeAction","mergeWith","CompoundAction","ConditionItemAction","_CascadeAction","conditionItem","pushConditionItem","fresh","_CascadeAction2","ApplyRuleAction","_CascadeAction3","viewConditionId","currentStyle","ChainedAction","_CascadeAction4","makePrimary","cascade","CheckClassAction","_ChainedAction","className","currentClassNames","includes","insertInTable","CheckIdAction","_ChainedAction2","currentId","currentXmlId","CheckLocalNameAction","_ChainedAction3","_proto11","currentLocalName","tags","CheckNSTagAction","_ChainedAction4","currentNamespace","nsPrefix","nsCount","nstags","CheckTargetEpubTypeAction","_ChainedAction5","epubTypePatt","currentElement","epubType","CheckNamespaceAction","_ChainedAction6","CheckAttributePresentAction","_ChainedAction7","hasAttributeNS","CheckAttributeEqAction","_ChainedAction8","_this14","_proto16","epubtypes","CheckNamespaceSupportedAction","_ChainedAction9","_this15","CheckAttributeRegExpAction","_ChainedAction10","regexp","_this16","attr","CheckLangAction","_ChainedAction11","langRegExp","_this17","IsFirstAction","_ChainedAction12","isFirst","IsRootAction","_ChainedAction13","_proto21","IsNthAction","_ChainedAction14","_this18","Matchers.matchANPlusB","IsNthSiblingAction","_IsNthAction","currentSiblingOrder","IsNthSiblingOfTypeAction","_IsNthAction2","_proto24","currentSiblingTypeCounts","IsNthLastSiblingAction","_IsNthAction3","currentFollowingSiblingOrder","IsNthLastSiblingOfTypeAction","_IsNthAction4","_proto26","counts","currentFollowingSiblingTypeCounts","nsCounts","nextElementSibling","IsEmptyAction","_ChainedAction15","Node","ELEMENT_NODE","TEXT_NODE","IsEnabledAction","_ChainedAction16","disabled","_proto28","IsDisabledAction","_ChainedAction17","_proto29","IsCheckedAction","_ChainedAction18","selected","checked","CheckConditionAction","_ChainedAction19","_this19","conditions","dependentConditions","CheckAppliedAction","_CascadeAction5","_this20","applied","cloned","NegateActionsSet","_ChainedAction20","_this21","checkAppliedAction","firstAction","AbstractConditionItem","decrement","DescendantConditionItem","_AbstractConditionIte","ChildConditionItem","_AbstractConditionIte2","AdjacentSiblingConditionItem","_AbstractConditionIte3","_this22","fired","FollowingSiblingConditionItem","_AbstractConditionIte4","_this23","_proto38","AfterPseudoelementItem","afterprop","processPseudoelementProps","RestoreLangItem","QuotesScopeItem","oldQuotes","AttrValueFilterVisitor","_Css$FilterVisitor2","_this24","_proto42","createValueFromString","defaultValue","attributeName","hasAttribute","getStringValueFromCssContentVal","ContentPropVisitor","counterResolver","_this25","_Css$FilterVisitor3","_proto43","maxDepth","quoteDepth","upper","lower","additiveNumbering","additiveFormat","entries","alphabeticNumbering","alphabetStr","alphabet","fromCharCode","digit","numbering","digits","negative","formal","markers","thousands","hundreds","tens","ones","chineseTradInformal","toUpperCase","visitFuncCounter","_this26","numval","visitFuncCounters","_this27","Css.Expr","numvals","visitFuncTargetCounter","targetUrlStr","_this28","targetUrl","visitFuncTargetCounters","_this29","visitFuncString","visitFuncContent","_pseudos$pseudoName","_pseudos$pseudoName$c","pseudos","content","roman","armenian","georgian","hebrew","latin","alpha","greek","russian","square","disc","circle","copyTable","dst","ParseState","Cascade","pagetypes","_proto44","createInstance","counterListener","CascadeInstance","nextOrder","currentNSTag","currentEpubTypes","currentPageType","previousPageType","firstPageType","counterScoping","siblingOrderStack","siblingTypeCountsStack","followingSiblingOrderStack","followingSiblingTypeCountsStack","viewConditions","elementStack","filter","_proto45","_this30","Matchers","dependentConditionMatchers","conditionId","Matchers.MatcherBuilder","applyAction","pushRule","baseStyle","EMPTY","applyActions","defineCounter","scoping","pushCounters","_this$currentElement3","displayVal","floatVal","_float","float","setMap","set","setVal","_this$currentElement$","_this$currentElement","_this$currentElement$2","_this$currentElement2","DOCUMENT_NODE","_this$currentStyle$co","incrPropValue","setCounterName","_counterValues","listItemCounts","popCounters","setNamedStrings","stringSet","Css.CommaList","pseudoprops","pushElement","_this31","types","currentNamespaceTypeCounts","applyVarFilter","applyCalcFilter","applyAttrFilter","quotesCasc","itemToPushLast","quotesVal","_step5","_iterator5","pseudoNames","_pseudoProps$content","pseudoProps","applyAttrFilterInner","elementStyle","pseudoMap","elementStyles","VarFilterVisitor","cascVal","_validatorSet$shortha","shorthand","_step6","_iterator6","valueSH","_step7","_iterator7","nameLH","defaultValues","CalcFilterVisitor","popRule","popElement","TOP","SELECTOR","RULE","uaBaseCascade","CascadeParserHandler","_CssParser$SlaveParse","_this32","conditionCount","footnoteContent","insideSelectorRule","insertNonPrimary","processChain","_proto46","isInsideSelectorRule","patt","RegExp","ActionClass","nthSelectorActionClasses","finishChain","makeApplyRuleAction","special","validatePropertyAndHandleShorthand","invalidPropertyValue","unknownProperty","simpleProperty","Plugin","hook","converted","notParserHandler","NotParameterParserHandler","_CascadeParserHandler","_this33","parentChain","_proto47","DefineParserHandler","_CssParser$SlaveParse2","dim","Exprs.Numeric","PropSetParserHandler","_CssParser$SlaveParse3","_this34","_proto49","PropertyParserHandler","_CssParser$ErrorHandl","_this35","_proto50","forEachViewConditionalStyles","viewConditionalStyles","mergeViewConditionalStyles","cascMap","mergeStyle","cascaded","writingModeCasc","writingMode","isRtl","directionCasc","flattenCascadedStyle","regionIds","isFootnote","forEachStylesInRegion","regionStyle","regions","footnoteRegion","_step8","_iterator8","to","newVal","convertToPhysical","dest","couplingMap","hasOwnProperty","coupledName","targetName","coupledCascVal","_Css$FilterVisitor4","_this36","getVarValue","_this$element","_this$elementStyles","_step9","_iterator9","_style$name","parentElement","_this$styler$getStyle","_this$styler$getStyle2","getStyle","_proto51","_Css$FilterVisitor5","resolveViewportUnit","percentRef","_this37","_proto52","exprText","exprVal","exprResult","Css.Int","createRegExpMap","valueMaps","toPhysical","physical","logical","maps","maps2","replaced","toPhysicalMaps","convert","toLogicalMaps","Size","sizes","original","maxWidth","minWidth","maxHeight","minHeight","getComputedValue","getElementComputedStyle","insertBefore","writingModeProperty","writingModeValue","inlineSizeName","isVertical","blockSizeName","getFillAvailableInline","getMaxContentInline","getMinContentInline","getFitContentInline","fillAvailableInline","minContentInline","parsedFillAvailable","maxContentInline","getIdealBlock","getFillAvailableBlock","FILL_AVAILABLE_INLINE_SIZE","MAX_CONTENT_INLINE_SIZE","MIN_CONTENT_INLINE_SIZE","FIT_CONTENT_INLINE_SIZE","FILL_AVAILABLE_BLOCK_SIZE","MAX_CONTENT_BLOCK_SIZE","MIN_CONTENT_BLOCK_SIZE","FIT_CONTENT_BLOCK_SIZE","FILL_AVAILABLE_WIDTH","FILL_AVAILABLE_HEIGHT","MAX_CONTENT_WIDTH","MAX_CONTENT_HEIGHT","MIN_CONTENT_WIDTH","MIN_CONTENT_HEIGHT","FIT_CONTENT_WIDTH","FIT_CONTENT_HEIGHT","isPageFloat","PageFloat","nodePosition","getOrder","isAllowedOnContext","pageFloatLayoutContext","isAnchorAlreadyAppeared","isAllowedToPrecede","PageFloatStore","nextPageFloatIndex","createPageFloatId","addPageFloat","findPageFloatByNodePosition","VtreeImpl.isSameNodePosition","findPageFloatById","PageFloatFragment","continuations","area","continues","hasFloat","findNotAllowedFloat","shouldBeStashedBefore","addContinuations","getFlowName","PageFloatContinuation","VtreeImpl","PageFloatLayoutContext","generatingNodePosition","invalidated","floatStore","forbiddenFloats","floatFragments","stashedFloatFragments","floatAnchors","floatsDeferredToNext","floatsDeferredFromPrevious","layoutConstraints","locked","getPreviousSibling","getParent","getPreviousSiblingOf","getContainer","setContainer","reattachFloatFragments","getPageFloatLayoutContext","forbid","findByFloat","isForbidden","addPageFloatFragment","floatFragment","dontInvalidate","fr1","fr2","invalidate","removePageFloatFragment","fragment","findPageFloatFragment","hasFloatFragments","hasContinuingFloatFragmentsInFlow","registerPageFloatAnchor","anchorViewNode","collectPageFloatAnchors","anchors","floatId","getDeferredPageFloatContinuations","cont","deferPageFloat","_float10","hasPrecedingFloatsDeferredToNext","ignoreReference","getLastFollowingFloatInFragments","lastFollowing","lastFollowingOfParent","c1","c2","getPageFloatContinuationsDeferredToNext","getFloatsDeferredToNextInChildContexts","checkAndForbidNotAllowedFloat","checkAndForbidFloatFollowingDeferredFloat","notAllowedFloat","removeEndFloatFragments","deferredFloats","floatsInFragments","fr","f1","f2","_float13","hasSameContainerAs","detachChildren","attachChildren","isInvalidated","validate","toLogical","CssLogicalUtil.toLogical","CssLogicalUtil.toPhysical","logicalFloatSide","stashEndFloatFragments","fragmentFloatSide","restoreStashedFragments","stashed","discardStashedFragments","getStashedFloatFragments","getLimitValue","layoutContext","physicalSide","limit","getLimitValueInner","logicalSide","parentLimit","getLimitValuesInner","limits","paddingRect","floatMinWrapBlockStart","floatMinWrapBlockEnd","resolveLengthPercentage","containerLength","convertLengthToPx","fragments","rootViewNodes","setFloatAreaDimensions","anchorEdge","init","force","inlineSize","outerBlockSize","outerInlineSize","blockStart","blockEnd","inlineStart","inlineEnd","blockOffset","inlineOffset","limitBlockStartEndValueWithOpenRect","getRect","openRect","blockSize","availableBlockSize","containerRect","Sizing","adjustContentRelativeSize","getContentInlineSize","getFloatFragmentExclusions","getMaxReachedAfterEdge","edge","Infinity","getBlockStartEdgeOfBlockEndFloats","getPageFloatClearEdge","isContinuationOfAlreadyAppearedFloat","isFragmentWithAlreadyAppearedFloat","columnRect","columnBlockEnd","blockStartLimit","getPageFloatPlacementCondition","logicalClearSide","logicalSides","floatOrder","isPrecedingFragment","hasPrecedingFragmentInChildren","hasPrecedingFragmentInParents","getLayoutConstraints","addLayoutConstraint","layoutConstraint","isColumnFullWithPageFloats","getMaxBlockSizeOfPageFloats","lock","unlock","isLocked","pageFloatLayoutStrategies","PageFloatLayoutStrategyResolver","register","strategy","findByNodeContext","appliesToNodeContext","appliesToFloat","createPageFloat","resolveFloatReferenceFromColumnSpan","createPageFloatFragment","floatArea","adjustPageFloatArea","floatContainer","NormalPageFloatLayoutStrategy","Footnote","_PageFloats$PageFloat","FootnoteFragment","_PageFloatFragment","LineFootnotePolicyLayoutConstraint","FootnoteLayoutStrategy","regionContext","applyFootnoteStyle","convertPercentageSizesToPx","setComputedInsets","setComputedWidthAndHeight","constraint","forcedBreakValues","recto","verso","region","isForcedBreakValue","spreadBreakValues","isSpreadBreakValue","avoidBreakValues","isAvoidBreakValue","resolveEffectiveBreakValue","second","firstIsForcedBreakValue","secondIsForcedBreakValue","breakValue","startSideValueToBreakValue","startSideValue","blockify","blockifiedStr","displayStr","Css.getName","isAbsolutelyPositioned","getComputedDislayValue","isBlock","isInlineLevel","isRubyInternalDisplay","extraOffset","cbox","range","createRange","setStart","setEnd","boxes","getRangeClientRects","setCSSProperty","getBoundingClientRect","fullRange","fullBoxes","fullBox","abs","getComputedMargin","isOrphan","removeFollowingSiblings","isSpecial","isSpecialNodeContext","convertPageBreakAliases","AbstractBreakPosition","calculateOffset","_calculateOffset","getNodeContext","collectElementsOffset","breakPositionChosen","elementsOffsets","repetitiveElement","minimum","calculateMinimumOffset","EdgeBreakPosition","_AbstractBreakPositio","breakOnEdge","overflows","overflowIfRepetitiveElementsDropped","isEdgeUpdated","findAcceptableBreak","penalty","updateOverflows","getMinBreakPenalty","findEdgeBreakPosition","preferDropping","isFirstContentOfRepetitiveElementsOwner","Break","updateEdge","clonedPaddingBorder","calculateClonedPaddingBorder","LayoutHelper","isOverflown","repetitiveElements","getRepetitiveElements","isFirstContentNode","LayoutProcessorResolver","find","processor","BlockLayoutProcessor","layout","leadingEdge","isFloatNodeContext","layoutFloatOrFootnote","isBreakable","layoutBreakableBlock","layoutUnbreakable","createEdgeBreakPosition","columnBlockSize","BreakPosition.EdgeBreakPosition","startNonInlineElementNode","afterNonInlineElementNode","stopAtOverflow","clearOverflownViewNodes","parentNodeContext","removeSelf","_node$parentElement","finishBreak","forceRemoveSelf","endOfColumn","fixJustificationIfNeeded","processFragmentedBlockEdge","BlockFormattingContext","isFirstTime","firstTime","saveState","restoreState","blockLayoutProcessor","Display","AbstractLayoutRetryer","initialBreakPositions","initialStateOfFormattingContext","initialPosition","initialFragmentLayoutConstraints","prepareLayout","tryLayout","mode","resolveLayoutMode","doLayout","positionAfter","accept","accepted","postLayout","clearNodes","sibling","breakPositions","fragmentLayoutConstraints","LayoutIteratorStrategy","initialState","initialNodeContext","atUnforcedBreak","break","startNonDisplayableNode","afterNonDisplayableNode","startIgnoredTextNode","afterIgnoredTextNode","startNonElementNode","afterNonElementNode","startInlineElementNode","afterInlineElementNode","LayoutIterator","iterate","loopFrame","nextResult","nextInTree","nextNodeContext","_LayoutIteratorStrate","EdgeSkipper","startNonInlineBox","endEmptyNonInlineBox","endNonInlineBox","breakAtTheEdge","onStartEdges","leadingEdgeContexts","lastAfterNodeContext","processForcedBreak","needForcedBreak","pageBreakType","saveEdgeAndProcessOverflow","checkOverflowAndSaveEdgeAndBreakPosition","processLayoutConstraint","violateConstraint","repetitiveElementsCache","allowEnd","hangingPunctuationFromPropertyValue","Css.Val","cssval","HANGING_PUNCTUATION_NONE","hangingPunctuation","Css.Ident","isHangingPunctuationNone","trimStart","spaceFirst","trimEnd","trimAdjacent","ideographAlpha","ideographNumeric","TEXT_SPACING_NORMAL","textSpacingFromPropertyValue","TEXT_SPACING_NONE","TEXT_SPACING_AUTO","textSpacing","isTextSpacingNone","normalizeLang","audio","canvas","embed","iframe","math","picture","svg","video","textPolyfill","getPolyfilledInheritedProps","preprocessSingleDocument","preprocessForTextSpacing","nodeIter","createNodeIterator","NodeFilter","SHOW_TEXT","nextNode","_node$parentElement$d","dataset","mathTypeset","textArr","lastIndex","processGeneratedContent","textSpacingVal","hangingPunctuationVal","whiteSpaceSave","whiteSpace","offsetHeight","offsetWidth","prevNode","isFirstInBlock","isFirstAfterForcedLineBreak","isLastBeforeForcedLineBreak","processTextSpacing","postLayoutBlock","checkPoints","isAfterForcedLineBreak","isFirstFragment","_p$sourceNode","Element","_ref","_ref2","_p$lang","_nodeContext$parent","prevP","_prevP$viewNode$previ","previousElementSibling","Vtree.canIgnore","checkIfLastBeforeForcedLineBreak","nextP","_nextP$viewNode$nextE","checkIfFirstAfterForcedLineBreak","embeddedContentTags","isLastInBlock","textNode","currRange","prevRange","nextRange","isAtEndOfLine","selectNode","getClientRects","nextRect","tagName","punctProcessing","hangingFirst","hangingLast","hangingEnd","outerElem","innerElem","defaultView","getComputedStyle","isFullWidth","prevRects","prevRect","atEndNoHang","atEnd","_elem$ownerDocument$d","textOrientation","textCombineUpright","checkUpright","registerHooks","DOMParser","parseFromString","getPseudoName","setPseudoName","PseudoelementStyler","contentProcessed","deep","CssCascade","nest","CssCascade.CascadeValue","processContent","contentVal","AfterIfContinues","viewRoot","pseudoColumn","PseudoColumn","initialPageBreakType","getColumn","createNodePositionForPseudoElement","pseudoElement","PseudoElement","createShadowContext","VtreeImpl.ChunkPosition","VtreeImpl.ShadowContext","AfterIfContinuesLayoutConstraint","pseudoElementHeight","overflownNodeContext","nextCandidate","allowed","affectTo","AfterIfContinuesElementsOffset","equalsTo","getPriorityOfFinishBreak","processAfterIfContinuesOfNodeContext","processAfterIfContinues","mediaTags","AllLayoutConstraint","constraints","BoxBreakPosition","_BreakPosition$Abstra","alreadyEvaluated","breakNodeContext","findBoxBreakPosition","BreakPosition","Column","_VtreeImpl$Container","viewDocument","flowRootFormattingContext","isFloat","startEdge","endEdge","beforeEdge","afterEdge","footnoteEdge","chunkPositions","overflown","forceNonfitting","leftFloatEdge","rightFloatEdge","bottommostFloatTop","lastAfterPosition","pseudoParent","nodeContextOverflowingDueToRepetitiveElements","blockDistanceToBlockEndFloats","breakAtTheEdgeBeforeFloat","getTopEdge","getBottomEdge","getLeftEdge","getRightEdge","stopByOverflow","getExclusions","pageFloatExclusions","openAllViews","setViewRoot","stepIndex","calculateOffsetInNodeForNodeContext","setCurrent","maybePeelOff","firstLetterLength","firstLetterText","peelOff","buildViewToNextBlockEdge","bodyFrame","position1Param","positionParam","buildDeepElementView","position1","createFloat","div","killFloats","cssFloat","createFloats","calculateEdge","parseComputedLength","insets","getComputedPaddingBorder","GeometryUtil.Insets","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","getComputedInsets","boxSizing","nodeContextIn","layoutFloat","resolveInlineFloatDirection","CssLogicalUtil","lineRelativeValue","toLineRelative","lineRelativeValues","nodeContextAfter","floatBBox","floatBox","GeometryUtil.Rect","probe","parentBox","floatBoxMeasure","floatHorBox","dir","boxExtent","floatHeight","floatBottom","floatWidth","_probe","floatBoxEdge","floatBoxTop","addFloatToBands","floatBands","lastY","floatBand","updateMaxReachedAfterEdge","setupFloatArea","floatLayoutContext","containingBlockRect","fitWithinContainer","createPageFloatArea","floatAreaElement","parentPageFloatLayoutContext","PageFloats.PageFloatLayoutContext","parentContainer","PageFloatArea","layoutSinglePageFloatFragment","allowFragmented","pageFloatFragment","firstFloat","newPosition","failed","floatChunkPosition","newFragment","layoutPageFloatInner","cancelLayout","layoutStashedPageFloats","success","_continuation","excluded","newFloatAreas","newFragments","stashedFragment","PageFloats.PageFloatLayoutStrategyResolver","setFloatAnchorViewNode","anchor","applyPseudoelementStyle","columnContext","layoutPageFloat","_float3","PageFloats.PageFloatContinuation","createJustificationAdjustmentElement","insertionPoint","span","inner","textIndent","textAlign","leftPos","rightPos","inlineBlock","padding","paddingStr","addAndAdjustJustificationElement","insertAfter","checkSoftWrapOpportunityAfterHyphenBug","hyphenChar","resolveHyphenateCharacter","prevSibling","prevText","compensateJustificationLineHeight","br","spanRect","brRect","parentElem","processLineStyling","resNodeContext","lastCheckPoints","totalLineCount","linePositions","findLinePositions","lineBreak","findAcceptableBreakInside","resNodeContextParam","isLoneImage","getTrailingMarginEdgeAdjustment","trailingEdgeContexts","maxPos","minNeg","checkPointIndex","saveBoxBreakPosition","findEndOfLine","linePosition","isUpdateMaxReachedAfterEdge","effectiveLinePosition","lowCP","low1","highCP","high1","mid1","edgePosition","_viewNode$parentEleme","resolveTextNodeBreaker","breakTextNode","findAncestorSpecialInlineNodeContext","TextNodeBreaker","getRangeBoxes","wentUp","lastGood","haveStart","endNotReached","seekRange","setStartBefore","setEndAfter","boxList","lineBefore","lineAfter","lineEnd","lineLength","overlap","boxSize","paddingBorders","getOffsetByRepetitiveElements","bp","repetitiveElementsOffset","firstOverflowing","findFirstOverflowingEdgeAndCheckPoint","lineIndex","forceCutBeforeOverflowing","checkPoint","blockEdge","getAfterEdgeOfBlockContainer","blockParent","LayoutHelper.calculateEdge","cp","findAcceptableBreakPosition","nextPenalty","minPenalty","breakPosition","doFinishBreak","initialComputedBlockSize","skipTailEdges","flowPosition","Base.NS","zeroIndent","checkOverflowAndSaveEdge","marginEdge","saveEvenOverflown","saveEdgeBreakPosition","applyClearance","spacer","spacerBox","clearEdge","wAdj","hAdj","isBFC","skipEdges","forcedBreakValue","_nodeContext$parent2","fc","layoutProcessor","LayoutProcessor.LayoutProcessorResolver","_breakAtTheEdge","_nodeContext$parent3","nodeContextParam","resultNodeContext","layoutNext","initGeom","columnBBox","include","exclude","granularity","segments","segmentCount","lowestIncludeIndex","segmentIndex","activeSegments","segment","y2min","yn","bandIntersections","bi1","bi2","rw","breakAtEdge","isFullWithPageFloats","nextInTreeListener","retryer","ColumnLayoutRetryer","doFinishBreakOfFragmentLayoutConstraints","sortedFragmentLayoutConstraints","pending","redoLayout","isPseudoelement","saveDistanceToBlockEndFloats","blockStartEdgeOfBlockEndFloats","isFinite","getElementsOffsetsForTableCell","startNodeContexts","parentClonedPaddingBorder","allowBreakAtStartPosition","startNodeContext","isStartNodeContext","isLastAfterNodeContext","getColumnElement","checkpointIndex","viewIndex","data","breakAfterSoftHyphen","breakAfterOtherCharacter","updateNodeContext","replaceData","ch0","ch1","_LayoutRetryers$Abstr","initialOverflown","LayoutRetryers","DefaultLayoutMode","hasNextCandidate","_Column","floatMargins","fixFloatSizeAndPosition","refWidth","refHeight","convertPercentageToPx","refValue","valueString","percentageValue","rootViewNode","RepetitiveElementsOwnerFormattingContext","rootSourceNode","getRootViewNode","getRootNodeContext","initializeRepetitiveElements","Shared","elements","RepetitiveElements","ownerSourceNode","headerSourceNode","footerSourceNode","headerViewNode","footerViewNode","headerNodePosition","footerNodePosition","headerHeight","footerHeight","isSkipHeader","isSkipFooter","enableSkippingFooter","enableSkippingHeader","doneInitialLayout","firstContentSourceNode","lastContentSourceNode","affectedNodeCache","afterLastContentNodeCache","allowInsert","allowInsertRepeatitiveElements","setHeaderNodeContext","setFooterNodeContext","updateHeight","prepareLayoutFragment","appendHeaderToFragment","rootNodeContext","appendElementToFragment","appendFooterToFragment","Layout.PseudoColumn","moveChildren","isAfterLastContent","findResultFromCache","isAfterNodeContextOf","cache","calculator","cacheEntry","includeChildren","parentsOfNode","currentParent","isEnableToUpdateState","updateState","preventSkippingHeader","preventSkippingFooter","isHeaderRegistered","isFooterRegistered","isHeaderSourceNode","isFooterSourceNode","LayoutEntireBlock","LayoutFragmentedBlock","LayoutEntireOwnerBlock","_LayoutEntireBlock","doInitialLayout","_LayoutFragmentedBloc","LayoutFragmentedOwnerBlock","RepetitiveElementsOwnerLayoutConstraint","appendFooter","RepetitiveElementsOwnerLayoutRetryer","EntireBlockLayoutStrategy","_LayoutUtil$EdgeSkipp","LayoutUtil","LayoutUtil.EdgeSkipper","appendHeaderToAncestors","repetitiveLayoutProcessor","LayoutProcessor.BlockLayoutProcessor","layoutEntireBlock","LayoutUtil.LayoutIterator","Layout","TableRow","rowIndex","cells","addCell","cell","getMinimumHeight","TableCell","columnIndex","viewElement","colSpan","rowSpan","anchorSlot","setHeight","setAnchorSlot","slot","TableSlot","TableCellFragment","pseudoColumnContainer","cellNodeContext","TableCaptionView","BetweenTableRowBreakPosition","_BreakPosition$EdgeBr","acceptableCellBreakPositions","getAcceptableCellBreakPositions","cellFragments","getCellFragments","cellFragment","getRowIndex","findRowIndexBySourceNode","getRowSpanningCellsOverflowingTheRow","getCellFragmentOfCell","InsideTableRowBreakPosition","beforeNodeContext","allCellsBreakable","row","getRowByIndex","isFreelyFragmentableRow","getCellsFallingOnRow","TableFormattingContext","_RepetitiveElementImp","tableSourceNode","columnCount","tableWidth","captions","colGroups","colWidths","rows","slots","lastRowViewNode","cellBreakPositions","cellNodePosition","finishFragment","addRow","getRowSlots","rowSlots","rowUpper","startColIndex","addCellFragment","uniqueCells","getColumnCount","sum","updateCellSizes","findCellFromColumn","tableCell","col","collectElementsOffsetOfUpperCells","collected","collectElementsOffsetFromColumn","collectElementsOffsetOfHighestColumn","elementsInColumn","ElementsOffsetOfTableCell","RepetitiveElementImpl","repeatitiveElementsInColumns","calculateMaxOffsetOfColumn","maxOffset","isValidParentOfTableRow","skipNestedTable","isNestedInlineTable","parentDisplay","EntireTableLayoutStrategy","inRow","inHeaderOrFooter","postLayoutBlockContents","captionView","computedStyle","registerCheckPoint","TableLayoutStrategy","_LayoutUtil$EdgeSkipp2","currentRowIndex","currentColumnIndex","originalStopAtOverflow","inHeader","inFooter","resetColumn","getColSpanningCellWidth","layoutCell","startChunkPosition","cellViewNode","hasBrokenCellAtSlot","slotIndex","cellBreakPosition","extractRowSpanningCellBreakPositions","rowSpanningCellBreakPositions","layoutRowSpanningCellsFromPreviousFragment","rowCount","currentRow","spanningCellRowIndex","occupiedSlotIndices","rowCellBreakPositions","rowNodeContext","cont1","addDummyCellUntil","upperColumnIndex","dummy","breakChunkPosition","startTableRow","registerCellFragmentIndex","getElementOffset","tdNodeStep","startTableCell","afterNodeContext","startNodePosition","ignoreList","tableLayoutOptionCache","TableLayoutProcessor","layoutEntireTable","getColumnWidths","lastRow","dummyRow","dummyCells","getColGroupElements","tableElement","normalizeAndGetColElements","cols","colGroup","cloneNode","addMissingColElements","normalizeColGroups","createDocumentFragment","tableRootSourceNode","pair","tableLayoutOption","tableBBox","calculateBreakPositionsInside","EntireTableBreakPosition","addCaptions","caption","addColGroups","removeColGroups","iterator","LayoutRetryer","cellContentElement","cellElement","cellElementRect","LayoutProcessor.blockLayoutProcessor","tableFormattingContext","LayoutFragmentedTable","LayoutEntireTable","_RepetitiveElementImp2","_BreakPosition$EdgeBr2","tableNodeContext","EntireTableLayoutConstraint","tableRootNode","_RepetitiveElementImp3","TableRowLayoutConstraint","_RepetitiveElementImp4","cellFragmentLayoutConstraints","collectCellFragmentLayoutConstraints","removeDummyRowNodes","array","dummyNode","getCellFragemnts","tableLayoutProcessor","mean","ColumnBalancingTrialResult","layoutResult","getBlockSize","setBlockSize","ColumnBalancer","layoutContainer","columnGenerator","regionPageFloatLayoutContext","originalContainerBlockSize","balanceColumns","preBalance","savePageFloatLayoutContexts","candidates","createTrialResult","updateCondition","restoreContents","postBalance","calculatePenalty","columnPageFloatLayoutContexts","newLayoutResult","columns","canReduceContainerSize","lastCandidate","secondLastCandidate","newEdge","BalanceLastColumnBalancer","_ColumnBalancer","originalPosition","foundUpperBound","totalBlockSize","checkPosition","isLastColumnLongerThanAnyOtherColumn","reduceContainerSize","lastColumnBlockSize","_ColumnBalancer2","BalanceNonLastColumnBalancer","meanValue","computedBlockSizes","SlipRange","endStuckFixed","endFixed","endSlipped","SlipMap","getMaxFixed","getMaxSlipped","addStuckRange","addSlippedRange","slippedByFixed","fixedBySlipped","slipped","Box","atBlockStart","atFlowStart","isParentBoxDisplayed","isBlockValue","hasBoxValue","styleValues","beforeBox","afterBox","hasBox","styleValue","getBreakValue","buildAfterPseudoElementBox","cv","displayValue","BoxStack","atStartStack","lastBox","lastFlowName","isCurrentBoxDisplayed","newFlowChunk","isAtFlowStart","encounteredTextNode","CDATA_SECTION_NODE","atStart","nearestBlockStartOffset","Styler","primaryFlows","cascadeHolder","rootStyle","flowChunks","flowListener","flowToReach","idToReach","offsetMap","primaryStack","rootBackgroundAssigned","rootLayoutAssigned","breakBeforeValues","boxStack","bodyReached","rootOffset","getAttrStyle","postprocessTopStyle","replayFlowElementsFromOffset","hasProp","transferPropsToRoot","srcStyle","pname","isBody","_arr","backgroundColor","backgroundProps","backgroundImage","columnProps","layoutProps","isRelativeFontSize","unitSize","getTopContainerStyle","styleUntil","CSSStyleDeclaration","styleAttrValue","parseStyleAttribute","getReachedOffset","flowNameStr","encounteredFlowElement","getNodeByOffset","nodeOffset","getNodeOffset","_flowName","resetFlowChunkStream","encounteredFlowChunk","styleUntilFlowIsReached","optionsCV","options","static","lingerCV","priorityCV","flow","registerForcedBreakOffset","lookup","targetSlippedOffset","afterPseudoBreakBefore","_box","blockStartOffset","pageCV","beforePseudoBreakAfter","validator","failure","markAsStartGroup","isStartGroup","markAsEndGroup","isEndGroup","markAsStartAlternate","isStartAlternate","markAsEndAlternate","isEndAlternate","getAlternate","Connection","where","what","FOLLOW","OPTIONAL","REPEATED","ALTERNATE","ValidatingGroup","connections","nomatch","emptyHead","connect","nodeIndex","_group$match","_group$nomatch","_group$error","group","clonedNode","connection","groupConnection","addSpecialToArr","clause","ALWAYS_FAIL","endSpecialGroup","arrs","startSpecialGroup","endClause","startClause","addPrimitive","isSimple","isPrimitive","PrimitiveValidator","addGroup","how","combine","connectionIndex","_i4","_i6","_i7","successTerminal","failTerminal","PropertyValidator","validateForShorthand","rval","_PropertyValidator","idents","units","NO_IDENTS","ListValidator","_PropertyValidator2","failureTerminal","validateList","startIndex","alternativeStack","alternatives","inval","outval","SpaceListValidator","CommaListValidator","validateSingle","hasCommaListValidator","_ListValidator2","FuncValidator","_ListValidator3","ShorthandSyntaxNode","tryParse","shorthandValidator","ShorthandSyntaxProperty","_ShorthandSyntaxNode","validators","rvals","len","ShorthandSyntaxPropertyN","_ShorthandSyntaxPrope","ShorthandSyntaxCompound","_ShorthandSyntaxNode2","index0","syntax","setOwner","syntaxNodeForProperty","receiver","propagateDefaultingValue","ShorthandValidator","SimpleShorthandValidator","_ShorthandValidator","InsetsShorthandValidator","_ShorthandValidator2","_proto15","createSyntaxNode","InsetsSlashShorthandValidator","_ShorthandValidator3","slashIndex","_i8","index1","CommaShorthandValidator","_SimpleShorthandValid","acc","FontShorthandValidator","_SimpleShorthandValid2","_proto18","fontVariant","fontStretch","familyList","family","systemFonts","propsExcludedFromAll","shorthandValidators","SIMPLE","INSETS","INSETS_SLASH","FONT","ALL","_SimpleShorthandValid3","AllShorthandValidator","_proto19","prefixes","namedValidators","addReplacement","newGroup","vals","subgroup","_i9","addCounts","_i10","primitive","newFunc","initBuiltInValidators","COLOR","IMAGE_FUNCTION","POS_INT","POS_NUM","POS_PERCENTAGE","NEGATIVE","ZERO","ZERO_PERCENTAGE","POS_LENGTH","vi","vb","vmin","vmax","pvi","pvb","pvmin","pvmax","POS_ANGLE","deg","grad","rad","turn","POS_TIME","ms","FREQUENCY","Hz","kHz","RESOLUTION","URI","STRING","stdfont","icon","menu","isBuiltIn","readNameAndPrefixes","section","rulePrefixes","parseValidators","setop","currop","expectval","builtIn","parseDefaults","parseShorthands","insetShorthand","compound","makePropSet","pval","varCheckVisitor","varFound","origName","rvalue","ValidatorSet","traitProps","properties","Face","fontTraitKey","blobURLs","blobs","Base.StringBuffer","traitsEqual","makeAtRule","fontBytes","blobURL","webkitURL","createObjectURL","DocumentFaces","deobfuscator","familyMap","registerFamily","srcFace","viewFace","srcFamily","viewFamilyFromView","viewFamilyFromSrc","filterFontFamily","newValues","rf","Mapper","opt_familyPrefix","srcURLMap","familyPrefix","familyCounter","getViewFontFamily","documentFaces","viewFamily","initFont","viewFontFace","loadFont","srcFamilySrc","viewFaceParam","TaskUtil.Fetcher","findOrLoadFonts","srcFaces","waitFontLoading","fonts","fontFace","unloadedCount","keyCount","PageBox","specified","pageMaster","_scope","parentInstance","param","copySpecified","destSpecified","cloneChildren","RootPageBox","_PageBox","PageMasterScope","_Exprs$LexicalScope","self","keyMap","boxInstance","lookupInstance","resolveFunc","resolveName","PageMaster","_PageBox2","PageMasterInstance","resetScope","PartitionGroup","_PageBox3","PartitionGroupInstance","Partition","_PageBox4","PartitionInstance","toExprZeroAuto","toExprZeroBorder","styleVal","toExprBool","PageBoxInstance","pageBox","autoWidth","autoHeight","isAutoWidth","isAutoHeight","isTopDependentOnAutoHeight","isRightDependentOnAutoWidth","calculatedWidth","calculatedHeight","pageMasterInstance","namedValues","namedFuncs","suppressEmptyBoxGeneration","addNamedValues","Exprs.add","altName","columnGap","Exprs.Call","initEnabled","toExprAuto","minPageWidth","minPageHeight","Exprs.Ge","boxSpecificEnabled","initHorizontal","parentWidth","toExprZero","leftBP","rightBP","extra","remains","initVertical","parentHeight","topBP","bottomBP","initColumns","toExprNormal","depends","registerInstance","getActiveRegions","_context$styler","_rootStyle$name","getPropAsNumber","_context$pageAreaHeig","_context$pageAreaWidt","Css.toNumber","propagateProperty","docFaces","propagatePropertyToElement","propagateDelayedProperty","Vtree.DelayedItem","assignLeftPosition","assignRightPosition","xpos","assignTopPosition","ypos","assignBottomPosition","assignBeforePosition","assignAfterPosition","assignStartEndPosition","sizeWithMaxHeight","sizeWithMaxWidth","prepareContainer","passPreProperties","transferContentProps","passContentProperties","transferSinglUriContentProps","passSingleUriContentProperties","finishContainer","readHeight","readWidth","bbox","ruleWidth","ruleStyle","ruleColor","containerSize","border","rule","passPostProperties","delayedProperties","applyCascadeAndInit","docElementStyle","userAgentPageMasterPseudo","resolveAutoSizing","RootPageBoxInstance","_PageBoxInstance","_PageBoxInstance2","adjustPageLayout","_PageBoxInstance3","_PageBoxInstance4","processPartitionList","listVal","conflicting","qname","term","required","toExprIdent","pmEnabledVal","pmEnabled","PageBoxParserHandler","PartitionParserHandler","_PageBoxParserHandler","PartitionGroupParserHandler","_PageBoxParserHandler2","partition","partitionGroup","PageMasterParserHandler","_PageBoxParserHandler3","_style$writingMode","_style$direction","a10","a9","a8","a7","a6","a5","a4","a3","a2","a1","a0","b10","b9","b8","b7","b6","b5","b4","b3","b2","b1","b0","c10","c9","c8","c7","c6","c5","c4","c3","c0","letter","legal","ledger","CornerMarkPosition","CrossMarkPosition","defaultPrinterMarkLineLength","bleed","bleedOffset","cropOffset","val1","pageSizeAndBleed","pageSizes","marks","bleedCV","marksCV","cropOffsetCV","defaultBleedOffset","evaluated","lineWidth","elementType","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM","propertiesAppliedToPartition","MarginBoxPositionAlongVariableDimension","outline","START","CENTER","isInTopRow","isInBottomRow","isInLeftColumn","isInRightColumn","positionAlongVariableDimension","pageMarginBoxes","_PageMaster$PageMaste","PageRuleMaster","bodyPartitionKey","resolvePageSizeAndBleed","PageRulePartition","pageSize","createPageMarginBoxes","applySpecified","marginBoxesMap","_marginBoxes","pageMarginBoxNames","PageMarginBoxPartition","PageRuleMasterInstance","_PageMaster$Partition","PageRulePartitionInstance","marginBoxName","_PageMaster$Partition2","ownStyle","ownVal","_prop","_val","_PageMaster$PageMaste2","pageRuleMaster","pageAreaDimension","pageMarginBoxInstances","setPageAreaDimension","borderBoxWidth","borderBoxHeight","marginBoxContainers","verticalDimensions","sizeMarginBoxesAlongVariableDimension","horizontalDimensions","isHorizontal","containers","boxParams","boxInfo","boxParam","SingleBoxMarginBoxSizingParam","boxInstances","getSizesOfMarginBoxesAlongVariableDimension","evaluatedDim","maxOuterSizes","maxSize","evaluatedMaxSize","FixedSizeMarginBoxSizingParam","getOuterSize","needRecalculate","minSize","evaluatedMinSize","minOuterSizes","startEndSum","outerSize","_container","availableSize","centerBoxParam","endBoxParam","startBoxParam","startEndBoxParam","centerSizes","distributeAutoMarginBoxSizes","xSize","startEndAutoSize","hasAutoSize","startEndSizes","ySize","xOuterMaxContentSize","getOuterMaxContentSize","yOuterMaxContentSize","maxContentSizeSum","xOuterMinContentSize","getOuterMinContentSize","minContentSizeSum","hasAutoSize_","getSize","MultipleBoxesMarginBoxSizingParam","fixedSize","_PageMaster$Partition3","pageRulePartition","resolvePageBoxDimensions","borderBoxExtent","marginStart","marginEnd","endSide","pageExtent","extentName","paddingStart","borderStartWidth","borderEndWidth","paddingEnd","_PageMaster$Partition4","PageMarginBoxPartitionInstance","pageMarginBoxPartition","applyVerticalAlign","flexAlign","align","availableExtent","outerExtent","positionAndSizeAlongFixedDimension","insideName","outside","pageMargin","outsideName","marginOutside","paddingInside","borderInsideWidth","getComputedValues","marginInside","pageMarginValue","borderAndPadding","paddingOutside","borderOutsideWidth","PageManager","rootPageBoxInstance","pageMasterCache","definePageProgression","styleInstance","isVersoFirstPage","isVersoPage","pageProgression","resolvePageProgression","Constants","getCascadedPageStyle","getPageRulePageMaster","makeCacheKey","generatePageRuleMaster","generateCascadedPageMaster","propsStr","makeCascadeValueObjectKey","newPageMaster","pageMasterStyle","CheckPageTypeAction","_CssCascade$ChainedAc","_CssCascade$ChainedAc2","IsFirstPageAction","IsBlankPageAction","_CssCascade$ChainedAc3","IsLeftPageAction","_CssCascade$ChainedAc4","_CssCascade$ChainedAc5","IsRightPageAction","_CssCascade$ChainedAc6","IsRectoPageAction","_CssCascade$ChainedAc7","IsVersoPageAction","_CssCascade$IsNthActi","IsNthPageAction","layoutPositionAtPageStart","blankPageAtStart","ApplyPageRuleAction","mergeInPageRule","targetMap","boxName","targetBox","_CssCascade$CascadePa","PageParserHandler","pageProps","currentPageSelectors","currentNamedPageSelector","currentPseudoPageClassSelectors","finishSelector","selectors","selector","noPageSelectorProps","prevCascVal","boxStyle","marginBoxMap","PageMarginBoxParserHandler","allowScripts","scriptsInBodyNotNearHead","script","srcScriptElem","flags","inHead","getScriptsInOrNearHead","isModule","async","defer","forceDefer","hasScripts","onload","needDefer","deferredScripts","builtinMathJax2","_window$MathJax","MathJax","_window$MathJax$versi","version","getElementsByTagName","sameScripts","scriptElem","scriptContent","attributes","transformURIs","attributeValue","m1","namespacePrefixMap","frontEdgeBlackListHor","frontEdgeBlackListVert","frontEdgeUnforcedBreakBlackListHor","ViewFactory","footnoteStyle","stylerProducer","customRenderer","fallbackMap","createPseudoelementShadow","cascStyle","getPseudoMap","addedNames","att","_child$previousSiblin","childStyle","childDisplay","shadowStyler","Vtree.ShadowContext","computedPseudoStyleMap","computedPseudoStyle","createRefShadow","refDocParam","refDoc","refElement","getElement","getStylerForDoc","refStyler","createShadows","template","templateURLVal","shadow","cont2","computeStyle","displayValues","inheritFromSourceParent","shadowRoot","nodeStyle","inheritanceVisitor","_propList","sname","inheritLangAttribute","transferPolyfilledInheritedProps","numericVal","resolveFormattingContext","createElementView","_this$nodeContext$vie","_this$nodeContext$par","needToProcessChildren","inheritedValues","floatReferenceCV","floatReferenceOf","Scripts","HTMLScriptElement","_this$nodeContext$par2","_this$nodeContext$par3","shadowParam","parentWritingMode","isFlowRoot","establishesCBForAbsolute","floating","listItem","breakInside","pageVal","isAtForcedBreak","borderCollapse","borderSpacing","processAfterIfcontinues","whitespaceValue","overflowWrap","processRepeatOnBreak","findAndProcessRepeatingElements","_elementStyle$content","_elementStyle$content2","custom","tag","navParent","hp","behavior","contentWindow","navigator","epubReadingSystem","layoutStyle","hasFeature","imageResolution","images","cssWidth","cssHeight","attrWidth","attrHeight","attributeCount","delayedSrc","attribute","attributeNS","nodeValue","transformedValue","anchorElem","hasAutoWidth","hasAutoHeight","image","Image","isSVGUrlAttribute","Urls","attributePrefix","_image","imageFetcher","listStyleImage","listStyleURL","preprocessElementStyle","applyComputedStyles","blackList","frontEdgeUnforcedBreakBlackListVert","isParagraph","modifyElemDimensionWithImageResolution","textLevelElements","abbr","bdi","bdo","cite","del","dfn","ins","kbd","ruby","samp","small","strong","sub","sup","time","u","var","childNode","SVG_URL_ATTRIBUTES","scaledWidth","scaledHeight","numericMaxHeight","numericMinWidth","numericMinHeight","createTextNodeView","preprocessTextContent","Diff","originl","processedText","createNodeView","processChildren","processShadowContent","contentNode","contentShadowType","contentShadow","nextPositionInTree","shadowNode","sr","isTransclusion","transclusionType","proc","addImageFetchers","bg","_this$nodeContext","_this$sourceNode","_this$viewRoot","propertiesNotPassedToDOM","CssProp.UrlTransformVisitor","isRelativePositioned","fixRubyTextFontSize","userAgent","fontSizeInPx","_this$nodeContext2","_this$nodeContext2$pa","HTMLElement","minFontSizeInPx","pn","Vtree.NodeContext","childComputedStyle","boxDecorationBreak","CssCascade.convertFontRelativeLengthToPx","step1","step2","elem2","nodePosition1","nodePosition2","DOMParserSupportedType","DefaultClientLayout","layoutBox","subtractOffsets","originRect","viewportLeft","viewportTop","rects","layoutBoxRect","Viewport","opt_root","opt_width","opt_height","outerZoomBox","contentContainer","innerWidth","innerHeight","webdriver","isHeadlessBrowser","resetZoom","XMLDocHolder","totalOffset","idMap","NodeList","offsetStr","srcNode","getTotalOffset","buildIdMap","xmlid","getElementsByName","parseAndReturnNullIfError","opt_parser","docElement","errorTagName","parseXMLResource","supportedKeys","APPLICATION_XML","TEXT_HTML","APPLICATION_XHTML_XML","IMAGE_SVG_XML","TEXT_XML","Predicate","predicate","check","withAttribute","withChild","opt_childPredicate","asArray","pr","forEachNode","forEachNonNull","uaStylesheetBaseFetcher","CssValidator","Style","rootBox","fontFaces","footnoteProps","flowProps","viewportProps","fontDeobfuscator","currentLayoutPosition","matchPageSide","lookupOffset","flowChunkIsAfterParentFlowForcedBreak","pageNumberOffset","sizeViewport","textZoom","defaultFontSize","scaleFactor","heightVal","widthVal","_Exprs$Context","StyleInstance","defaultLang","fontMapper","stylerMap","faces","pageBoxInstances","pageManager","rootPageFloatLayoutContext","pageBreaks","pageSheetSize","pageSheetHeight","pageSheetWidth","Font","CssStyler","CssPage","matchStartPageSide","CssPage.PageManager","srcDocument","srcScripts","needPrepareForWebFonts","textContentDiv","_window$document$quer","fontFamilySet","findFontFamilyInStyle","_style$fontFamily","_Object$values","findAllFontFamily","arg","isArray","_Object$values2","_i3","_Object$values3","_Object$values4","getAllFontFamilyList","savedDollar","$","_window$FontJSON","_window$ret","FontJSON","Event","pageStyle","isRectoStart","isLTR","getStyleForDoc","CssStyler.Styler","Vtree.ChunkPosition","supported","supportsReceiver","SupportsReceiver","getConsumedOffset","chunkOffset","getPosition","layoutPosition","noLookAhead","currentPosition","consumedOffset","dumpLocation","updateStartSide","flowChunkBreakBefore","flowBreakAfter","selectPageMaster","pageMasters","coeff","pageArea","initLingering","breakOffsetBeforeStartIndex","breakOffsetBeforeStart","parentFlowPosition","parentStartOffset","setFormattingContextToColumn","layoutDeferredPageFloats","_float2","pageStartPos","deferredFloatOffset","parentInvalidated","getLastAfterPositionIfDeferredFloatsExists","layoutColumn","repeatedIndices","removedIndices","alt","counterConstraint","Layout.AllLayoutConstraint","createAndLayoutColumn","forceNonFitting","dontApplyExclusions","columnPageFloatLayoutContext","positionAtColumnStart","columnContainer","boxContainer","columnY","columnX","Layout.Column","setPagePageFloatLayoutContextContainer","pagePageFloatLayoutContext","getRegionPageFloatLayoutContext","layoutFlowColumnsWithBalancing","positionAtContainerStart","layoutColumns","layoutFlowColumns","generatorResult","columnFill","columnBalancer","createColumnBalancer","lastColumn","Vtree.Container","removed","innerContainerTag","innerContainer","Vtree.ContentPropertyHandler","dontExclude","outerShape","forwardOrderInLayout","processLinger","noMorePrimaryFlows","layoutNextPage","Vtree.LayoutPosition","LIMIT_PAGES","_cp$flowPositions$bod","bleedBoxPaddingEdge","evaluatedPageSizeAndBleed","setPageSizeAndBleed","bgcolor","defaultPrinterMarkLineWidth","printerMarkOffset","cropMarkLineLength","bleedMarkLineLength","maxLineLength","svgWidth","createPrinterMarkSvg","points1","points2","createPrinterMarkElement","line1","line2","createCrossMark","longLineLength","horizontalLine","verticalLine","opposite","isLeftPage","getTriggersForDoc","BaseParserHandler","masterHandler","insideRegion","CssCascade.DefineParserHandler","CssCascade.PropSetParserHandler","pageHandler","regionCount","regionHandler","processViewportMeta","meta","StyleParserHandler","_CssParser$DispatchPa","cascadeParserHandler","Exprs.LexicalScope","PageMaster.RootPageBox","parseOPSResource","OPSDocStore","_Net$ResourceStore","styleByKey","styleFetcherByKey","styleByDocURL","triggersByDocURL","styleSheets","triggerSingleDocumentPreprocessing","authorStyleSheets","userStyleSheets","setStyleSheets","userAgentXML","clearStyleSheets","addAuthorStyleSheet","addUserStyleSheet","stylesheet","XmlDoc","getElementsByTagNameNS","triggerList","triggerElem","sources","userAgentURL","elemList","title","rel","sph","source","CssParser.parseStylesheetFromText","decode32","bytes","bytesToSHA1Int32","appendCount","encode32","w","bi","TOCView","rendererFactory","setAutoHeight","makeCustomRenderer","renderer","srcElem","viewParent","replaceChild","createComment","adaptParentClass","button","toggleNodeExpansion","tabIndex","showTOC","tocBoxUrl","Vgen","viewportSize","OPS.StyleInstance","bodyChildElem","hideTOC","isTOCVisible","getTOC","exportTree","links","exportLink","hash","innerText","tocNodeElem","adaptClass","ce","elem1","stopPropagation","EPUBDocStore","plainXMLStore","jsonStore","opfByURL","primaryOPFByEPubURL","deobfuscators","documents","makeDeobfuscatorFactory","Net.ResourceStore","parseJSONResource","loadAsPlainXML","startLoadingAsPlainXML","loadAsJSON","startLoadingAsJSON","loadPubDoc","haveZipMetadata","loadEPUBDoc","opf","_url$match","loadOPF","manifestObj","reportLoadError","initWithWebPubManifest","loadWebPub","containerXML","pubURL","opfXML","encXML","zipMetadata","OPFDoc","initWithXMLDoc","manifestLink","manifestUrl","xhtmlToc","addDocument","docURL","domain","removePath","_OPS$OPSDocStore","OPS","OPFItem","mediaType","itemRefElement","compressedSize","compressed","epage","epageCount","skipPagesBefore","itemProperties","initWithElement","itemElem","opfURL","propStr","arrayToSet","initWithParam","dcterms","marc","rendition","onix","xsd","defaultIRI","metaTerms","language","predefinedPrefixes","creator","titleType","displaySeq","alternateScript","role","getMetadataComparator","item1","item2","_r1$metaTerms$display","_r2$metaTerms$display","_r1$metaTerms$titleTy","_r2$metaTerms$titleTy","i1","i2","Hub","PageViewMode","supportedMediaTypes","items","spine","itemMap","itemMapByPath","uid","bindings","prePaginated","epageIsRenderedPage","epageCountCallback","metadata","ncxToc","cover","createDocumentURLTransformer","getMathJaxHub","path","restoreURL","encoded","OPFDocumentURLTransformer","getMetadata","getPathFromURL","epubBaseURL","manifestURL","uidref","pkg","uidElem","fallback","srcToFallbackId","nav","getOPFItemId","fallbackSrc","tocAttr","pageProgressionAttr","idpfObfURLs","mediaTypeElems","handlerId","mroot","prefixMap","resolveProperty","iri","rawItems","refines","scheme","rawItem","rawItemsByTarget","entryMap","makeMetadata","sortMetadata","_r2","blob","webkitSlice","FileReader","fileReader","readAsArrayBuffer","dataView","byteLength","getUint8","setUint8","sha1Sum","assignAutoPages","manifestText","obfuscationKey","bytesToSHA1Hex","sha1","obfuscations","encodedPath","obfuscation","setEPageCountMode","countEPages","offsetPerEPage","initWithChapters","itemref","_manifestObj$metadata","_manifestObj$metadata2","_doc$querySelectorAll","_manifestObj$metadata3","readingProgression","author","_item$name","inLanguage","primaryEntryPath","readingOrder","encodeURI","hrefNoFragment","itemCount","tocFound","readingOrderOrResources","itemObj","isInReadingOrder","encodingFormat","_this12$items","getCFI","offsetInItem","cfi","CFI","resolveFragment","CFI.Fragment","opfNav","idref","nodeNav","resolveEPage","getEPageFromPosition","OPFView","pageSheetSizeReporter","spineItems","spineItemLoadingContinuations","tocAutohide","tocView","Vgen.DefaultClientLayout","getPage","viewItem","getCurrentPageProgression","finishPageContainer","prevItem","oldPage","newPage","insertPos","renderSinglePage","makePage","posParam","layoutPositions","prevPos","getPageViewItem","resultPosition","pageAndPosition","makePageAndPosition","nextLayoutPosition","normalizeSeekPosition","seekOffset","seekOffsetPageIndex","complete","findPage","sync","resultPage","normalizedPosition","renderPage","renderAllPages","renderPagesUpto","notAllPages","lastResult","firstPage","lastPage","nextPage","nextViewItem","previousPage","isRectoPage","isLeft","getSpread","otherPageAndPosition","otherPage","thisPage","nextSpread","isRecto","next2","result2","previousSpread","oldPrevPageCont","navigateToEPage","navigateToFragment","navigateTo","restored","pageCont","cssMatrix","matrix","makeObjectView","handlerSrc","srcParam","typeParam","pvalue","makeMathJaxView","hub","clonedMath","importNode","resolveURLsInMathML","Push","attrs","_attrs","newUrl","loadingContinuations","epubSpineProperties","pageCounterOffset","_this27$spineItems$","previousViewItem","pubTitles","removeRenderedPages","hasAutoSizedPages","hasPages","autohide","toc","Toc","tocWidth","tocHeight","SINGLE_PAGE","SPREAD","AUTO_SPREAD","AdaptiveViewer","viewportElement","instanceId","callbackFn","kick","sendCommand","resizeListener","hyperlinkListener","pageRuleStyleElement","pageSheetSizeAlreadySet","renderTask","packageURL","touchActive","touchX","touchY","needResize","needRefresh","currentSpread","pagePosition","fitToScreen","pageViewMode","waitForLoading","opfView","cssText","styleElement","findOrCreateStyleElement","TextPolyfillCss","pageReplacedListener","loadPublication","loadXML","configure","moveTo","addLogListeners","logLevel","setReadyState","command","Profile","zipmeta","authorStyleSheet","userStyleSheet","Epub","render","resolvedParams","Epub.OPFDoc","cancelRenderingTask","resize","resolveLength","matched","autoresize","vp","userAgentRootURL","rootURL","configurePlugins","showCurrent","forCurrentPages","removePageListeners","hidePages","showSinglePage","showPage","showSpread","leftWidth","rightWidth","reportPosition","sendLocationNotification","createViewport","vs","resolveSpreadView","updateSpreadView","sizeIsGood","spreadViewChanged","setPageSize","setPageSizePageRules","_this$pageSizes","_this$pageSizes2","convertSize","widthMax","heightMax","widthPt","heightPt","removePageSizePageRules","tocVisible","setSpreadZoom","setPageZoom","getAdjustedZoomFactor","getSpreadDimensions","pageDimension","calculateZoomFactorToFitInsideViewPort","queryZoomFactor","pageDim","FIT_INSIDE_VIEWPORT","RenderingCanceledError","resizeTask","notification","loadScriptsAtEnd","loadScript","method","currentVisibility","changeAutohide","runCommand","actionName","initEmbed","cmd","maybeParse","viewer","hrefEvent","internal","_cmd","frameInternal","adapt_command","ZoomType","_Error","setPrototypeOf","convertViewerOptions","Navigation","CoreViewer","settings","opt_options","initialized","adaptViewer_","eventTarget","dispatcher","autoResize","pageBorderWidth","setOptions","defineProperty","removeListener","loadDocument","singleDocumentOptions","opt_documentOptions","opt_viewerOptions","loadDocumentOrPublication","pubUrl","convertStyleSheetArray","documentOptions","convertSingleDocumentOptions","documentObject","resolveNavigation","PREVIOUS","NEXT","navigateToPage","opt_epage","EPAGE","navigateToInternalUrl","opt_show","opt_autohide","getPageSizes","_this$adaptViewer_$op","_this$adaptViewer_$op2","getCover","toNumberOrNull","opt","FIRST","VivliostylePrint","htmlDoc","_ref$title","printCallback","_ref$printCallback","iframeWin","hideIframe","_ref$hideIframe","removeIframe","_ref$removeIframe","borderWidth","printInstance","srcdoc","runInIframe","preparePrint","browserPrint","cleanUp","docBlob","Viewer","config","html","css","printHTML"],"mappings":"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QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAO9C,KACP8C,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOgB,KACPhB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOoB,QACPpB,GAAOqB,QACPrB,GAAOoB,QACPpB,GAAOoB,QACPpB,GAAOgB,KACPhB,GAAOoB,QACPpB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAAOgB,KACPhB,GAA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AU,EACxB,YAAYsnE,wBAAwB/8C,EAAK5N,QAE3C,MACF,IAAK,SACH,GAAI4N,EAAK5N,OAAO3c,QAAU,EACxB,YAAYwnE,gBAAgBj9C,EAAK5N,QAEnC,MACF,IAAK,UACH,GAAI4N,EAAK5N,OAAO3c,QAAU,EACxB,YAAYynE,iBAAiBl9C,EAAK5N,QAKxC,OACD4N,GA9PqCsM,GAAAA,IAgSV2uC,GAAG,CAC/BsC,MAAO,CACL,KACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,IACA,GACA,KACA,GACA,IACA,GACA,KACA,GACA,IACA,EACA,KACA,EACA,IACA,EACA,KACA,EACA,KAEFC,SAAU,CACR,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,SAAU,CACR,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,OAAQ,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IA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"}