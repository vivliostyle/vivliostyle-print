{"version":3,"file":"bundle.js","sources":["../node_modules/fast-diff/diff.js","../node_modules/@vivliostyle/core/src/vivliostyle/constants.ts","../node_modules/@vivliostyle/core/src/vivliostyle/logging.ts","../node_modules/@vivliostyle/core/src/vivliostyle/plugin.ts","../node_modules/@vivliostyle/core/src/vivliostyle/profile.ts","../node_modules/@vivliostyle/core/src/vivliostyle/base.ts","../node_modules/@vivliostyle/core/src/vivliostyle/cfi.ts","../node_modules/@vivliostyle/core/src/vivliostyle/exprs.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css.ts","../node_modules/@vivliostyle/core/src/vivliostyle/geometry-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-prop.ts","../node_modules/@vivliostyle/core/src/vivliostyle/counters.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-tokenizer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/net.ts","../node_modules/@vivliostyle/core/src/vivliostyle/assets.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-parser.ts","../node_modules/@vivliostyle/core/src/vivliostyle/matchers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/types.ts","../node_modules/@vivliostyle/core/src/vivliostyle/diff.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vtree.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-cascade.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-logical-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sizing.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-floats.ts","../node_modules/@vivliostyle/core/src/vivliostyle/footnotes.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-helper.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break-position.ts","../node_modules/@vivliostyle/core/src/vivliostyle/display.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-processor.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-retryers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/shared.ts","../node_modules/@vivliostyle/core/src/vivliostyle/pseudo-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout.ts","../node_modules/@vivliostyle/core/src/vivliostyle/repetitive-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/table.ts","../node_modules/@vivliostyle/core/src/vivliostyle/math-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/columns.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-validator.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-styler.ts","../node_modules/@vivliostyle/core/src/vivliostyle/font.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-master.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-page.ts","../node_modules/@vivliostyle/core/src/vivliostyle/urls.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vgen.ts","../node_modules/@vivliostyle/core/src/vivliostyle/xml-doc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/ops.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sha1.ts","../node_modules/@vivliostyle/core/src/vivliostyle/toc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/epub.ts","../node_modules/@vivliostyle/core/src/vivliostyle/adaptive-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/core-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/print.ts","index.js"],"sourcesContent":["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 !== 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length && y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length && y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i), shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i), shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(\n          j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a, best_longtext_b,\n        best_shorttext_a, best_shorttext_b, best_common\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(0, -1);\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n        diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(0, diffs[pointer][1].length -\n            diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n};\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xD800 && charCode <= 0xDBFF;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xDC00 && charCode <= 0xDFFF;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after]\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange = typeof cursor_pos === 'number' ?\n    { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === 'number' ?\n    null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: ((p1: ErrorInfo) => void)[] } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listeners = this.listeners[level];\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(args);\n      });\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    let listeners = this.listeners[level];\n    if (!listeners) {\n      listeners = this.listeners[level] = [];\n    }\n    listeners.push(listener);\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (p1: Base.JSON) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Ident,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n */\nexport function registerHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    hooksForName.push(fn);\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming =\n      registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern =\n  /^[\\s\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:[\\s\\p{Zs}]*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  if (i < baseURL.length - 1) {\n    const j = baseURL.lastIndexOf(\".\");\n    if (j < i) {\n      // Assume the last part without '.' to be a directory name.\n      if (relURL == \"\") {\n        return baseURL;\n      }\n      baseURL += \"/\";\n      i = baseURL.length - 1;\n    }\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r =\n      /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n        url,\n      ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n  NCX = \"http://www.daisy.org/z3986/2005/ncx/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\n/**\n * @return ?string\n */\nexport function asString(v: any): any {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\n/**\n * @param prefix Prefix (containing leading and trailing hyphens)\n * @param cssPropName CSS property name\n * @return JavaScript property name\n */\nexport function cssToJSProp(prefix: string, cssPropName: string): string {\n  if (prefix) {\n    cssPropName = `-${cssPropName}`;\n    prefix = prefix.replace(/-/g, \"\");\n    if (prefix === \"moz\") {\n      prefix = \"Moz\";\n    }\n  }\n  return (\n    prefix +\n    cssPropName.replace(/-[a-z]/g, (txt) => txt.substr(1).toUpperCase())\n  );\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\"];\n\nexport const propNameMap = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  const style = document.documentElement.style;\n  return typeof style[cssToJSProp(prefix, prop)] === \"string\";\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"behavior\":\n      propNameMap[prop] = null;\n      return null;\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n    case \"filter\":\n      // Special case: prefer '-webkit-filter' to 'filter'\n      if (checkIfPropertySupported(\"-webkit-\", \"filter\")) {\n        propNameMap[prop] = [\"-webkit-filter\"];\n        return [\"-webkit-filter\"];\n      }\n      break;\n    case \"clip-path\":\n      // Special case for chrome.\n      if (checkIfPropertySupported(\"-webkit-\", \"clip-path\")) {\n        return (propNameMap[prop] = [\"-webkit-clip-path\", \"clip-path\"]);\n      }\n      break;\n    case \"margin-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-start\")) {\n        propNameMap[prop] = [\"-webkit-margin-start\"];\n        return [\"-webkit-margin-start\"];\n      }\n      break;\n    case \"margin-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-end\")) {\n        propNameMap[prop] = [\"-webkit-margin-end\"];\n        return [\"-webkit-margin-end\"];\n      }\n      break;\n    case \"padding-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-start\")) {\n        propNameMap[prop] = [\"-webkit-padding-start\"];\n        return [\"-webkit-padding-start\"];\n      }\n      break;\n    case \"padding-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-end\")) {\n        propNameMap[prop] = [\"-webkit-padding-end\"];\n        return [\"-webkit-padding-end\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = prefix + prop;\n      propNameMap[prop] = [prefixed];\n      return [prefixed];\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  try {\n    const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n    if (!prefixedPropertyNames) {\n      return;\n    }\n    const elemStyle = (elem as HTMLElement)?.style;\n    if (!elemStyle) {\n      return;\n    }\n    prefixedPropertyNames.forEach((prefixed) => {\n      switch (prefixed) {\n        case \"-webkit-text-combine\": // for Safari\n          switch (value) {\n            case \"all\":\n              value = \"horizontal\";\n              break;\n          }\n          break;\n        case \"text-combine-upright\":\n          switch (value) {\n            case \"all\":\n              // workaround for Chrome 93 bug https://crbug.com/1242755\n              elemStyle.setProperty(\"text-indent\", \"0\");\n              break;\n          }\n          break;\n      }\n      elemStyle.setProperty(prefixed, value);\n    });\n  } catch (err) {\n    Logging.logger.warn(err);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\nexport const base64Chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nexport function appendBase64(sb: StringBuffer, data: string): void {\n  const length = data.length;\n  const length3 = Math.floor(length / 3) * 3;\n  for (let i = 0; i < length3; i += 3) {\n    const c1 = data.charCodeAt(i) & 255;\n    const c2 = data.charCodeAt(i + 1) & 255;\n    const c3 = data.charCodeAt(i + 2) & 255;\n    sb.append(base64Chars.charAt(c1 >> 2));\n    sb.append(base64Chars.charAt(((c1 << 4) | (c2 >> 4)) & 63));\n    sb.append(base64Chars.charAt(((c2 << 2) | (c3 >> 6)) & 63));\n    sb.append(base64Chars.charAt(c3 & 63));\n  }\n  switch (length - length3) {\n    case 1: {\n      const p1 = data.charCodeAt(length3) & 255;\n      sb.append(base64Chars.charAt(p1 >> 2));\n      sb.append(base64Chars.charAt((p1 << 4) & 63));\n      sb.append(\"==\");\n      break;\n    }\n    case 2: {\n      const q1 = data.charCodeAt(length3) & 255;\n      const q2 = data.charCodeAt(length3 + 1) & 255;\n      sb.append(base64Chars.charAt(q1 >> 2));\n      sb.append(base64Chars.charAt(((q1 << 4) | (q2 >> 4)) & 63));\n      sb.append(base64Chars.charAt((q2 << 2) & 63));\n      sb.append(\"=\");\n      break;\n    }\n  }\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      list.push(listener);\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n\nexport let hasLShapeFloatBug: boolean | null = null;\n\n/**\n * Check if there is a bug with L-shape floats overlapping text.\n */\nexport function checkLShapeFloatBug(body: HTMLElement): boolean {\n  if (hasLShapeFloatBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    body.appendChild(container);\n    const f1 = doc.createElement(\"div\") as HTMLElement;\n    f1.style.width = \"0px\";\n    f1.style.height = \"14px\";\n    f1.style.cssFloat = \"left\";\n    container.appendChild(f1);\n    const f2 = doc.createElement(\"div\") as HTMLElement;\n    f2.style.width = \"50px\";\n    f2.style.height = \"50px\";\n    f2.style.cssFloat = \"left\";\n    f2.style.clear = \"left\";\n    container.appendChild(f2);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const leftEdge = range.getBoundingClientRect().left;\n    hasLShapeFloatBug = leftEdge < 40;\n    body.removeChild(container);\n  }\n  return hasLShapeFloatBug;\n}\n\nexport let hasVerticalBBoxBug: boolean | null = null;\n\n/**\n * Check if there is a bug with the bounding boxes of vertical text characters.\n * Though method used to be used check Chrome bug, it seems that the bug has\n * been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method to check Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function checkVerticalBBoxBug(body: HTMLElement): boolean {\n  if (hasVerticalBBoxBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    setCSSProperty(container, \"writing-mode\", \"vertical-rl\");\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const box = range.getBoundingClientRect();\n    hasVerticalBBoxBug = box.right - box.left < 10;\n    body.removeChild(container);\n  }\n  return hasVerticalBBoxBug;\n}\n\nexport let hasInlineBlockJustificationBug: boolean | null = null;\n\nexport function checkInlineBlockJustificationBug(body: HTMLElement): boolean {\n  if (hasInlineBlockJustificationBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"30px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a | \");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"30px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 3);\n    const box = range.getBoundingClientRect();\n    hasInlineBlockJustificationBug = box.right < 27;\n    body.removeChild(container);\n  }\n  return hasInlineBlockJustificationBug;\n}\n\nexport let hasSoftWrapOpportunityAfterHyphenBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityAfterHyphenBug(\n  body: HTMLElement,\n): boolean {\n  if (hasSoftWrapOpportunityAfterHyphenBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityAfterHyphenBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityAfterHyphenBug;\n}\n\nexport let hasSoftWrapOpportunityByWbrBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityByWbrBug(body: HTMLElement): boolean {\n  if (hasSoftWrapOpportunityByWbrBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    container.appendChild(doc.createElement(\"wbr\"));\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityByWbrBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityByWbrBug;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      throw new Error(\"E_CFI_ID_MISMATCH\");\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  isRelativeRootFontSize: boolean | null = null;\n  fontSize: () => number;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return this.pageVertical ? vh : vw;\n        case \"vb\":\n          return this.pageVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return this.pageVertical ? pvh : pvw;\n        case \"pvb\":\n          return this.pageVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= req;\n        case \"max\":\n          return actual <= req;\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    context.storeVal(this.scope, this.key, result);\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(scope: LexicalScope, public val: Val) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(scope: LexicalScope, public lhs: Val, public rhs: Val) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class NotMedia extends Not {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"not \";\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"-\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"&&\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"||\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class Comma extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \", \";\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" or \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"==\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"+\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" - \";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"*\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"/\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"%\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(scope: LexicalScope, public num: number, unit: string) {\n    super(scope);\n    this.unit = unit.toLowerCase();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(scope: LexicalScope, public qualifiedName: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  constructor(scope: LexicalScope, public not: boolean, public name: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  /**\n   * @override\n   */\n  isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(scope: LexicalScope, public val: Result) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(scope: LexicalScope, public name: MediaName, public value: Val) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class SupportsTest extends Val {\n  constructor(\n    scope: LexicalScope,\n    public name: string,\n    public value: string,\n    public isFunc: boolean,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.isFunc) {\n      buf.append(this.name);\n    }\n    buf.append(\"(\");\n    if (!this.isFunc && this.name) {\n      buf.append(this.name);\n      buf.append(\":\");\n    }\n    buf.append(this.value);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalSupportsTest(this.name, this.value, this.isFunc);\n  }\n}\n\nexport class Param extends Val {\n  constructor(scope: LexicalScope, public index: number) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  /**\n   * @return void\n   */\n  visitValues(values: Val[]): any {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n  }\n\n  visitEmpty(empty: Val): Val {\n    throw new Error(\"E_CSS_EMPTY_NOT_ALLOWED\");\n  }\n\n  visitSlash(slash: Val): Val {\n    throw new Error(\"E_CSS_SLASH_NOT_ALLOWED\");\n  }\n\n  visitStr(str: Str): Val {\n    throw new Error(\"E_CSS_STR_NOT_ALLOWED\");\n  }\n\n  visitIdent(ident: Ident): Val {\n    throw new Error(\"E_CSS_IDENT_NOT_ALLOWED\");\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    throw new Error(\"E_CSS_NUMERIC_NOT_ALLOWED\");\n  }\n\n  visitNum(num: Num): Val {\n    throw new Error(\"E_CSS_NUM_NOT_ALLOWED\");\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitColor(color: Color): Val {\n    throw new Error(\"E_CSS_COLOR_NOT_ALLOWED\");\n  }\n\n  visitURL(url: URL): Val {\n    throw new Error(\"E_CSS_URL_NOT_ALLOWED\");\n  }\n\n  visitURange(urange: URange): Val {\n    throw new Error(\"E_CSS_URANGE_NOT_ALLOWED\");\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    throw new Error(\"E_CSS_LIST_NOT_ALLOWED\");\n  }\n\n  visitCommaList(list: CommaList): Val {\n    throw new Error(\"E_CSS_COMMA_NOT_ALLOWED\");\n  }\n\n  visitFunc(func: Func): Val {\n    throw new Error(\"E_CSS_FUNC_NOT_ALLOWED\");\n  }\n\n  visitExpr(expr: Expr): Val {\n    throw new Error(\"E_CSS_EXPR_NOT_ALLOWED\");\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  constructor() {\n    super();\n  }\n\n  visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Str): Val {\n    return str;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Num): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Int): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Color): Val {\n    return color;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: URL): Val {\n    return url;\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: URange): Val {\n    return urange;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: any): any {\n    throw new Error(\"F_ABSTRACT\");\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitIdent(this);\n  }\n\n  /**\n   * @override\n   */\n  isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(public num: number, unit: string) {\n    super();\n    this.unit = unit.toLowerCase(); // units are case-insensitive in CSS\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNumeric(this);\n  }\n\n  /**\n   * @override\n   */\n  isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNum(this);\n  }\n\n  /**\n   * @override\n   */\n  isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class Color extends Val {\n  constructor(public rgb: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    const str = this.rgb.toString(16);\n    buf.append(\"000000\".substr(str.length));\n    buf.append(str);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURL(this);\n  }\n}\n\nexport class URange extends Val {\n  constructor(public urangeText: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.urangeText);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURange(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0].appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i].appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSpaceList(this);\n  }\n\n  /**\n   * @override\n   */\n  isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(public name: string, public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"-epubx-expr(\");\n    this.expr.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitExpr(this);\n  }\n\n  /**\n   * @override\n   */\n  isExpr(): boolean {\n    return true;\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  anywhere: getName(\"anywhere\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const fullURange: URange = new URange(\"U+0-10FFFF\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  color: 2,\n};\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  /** @override */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  /** @override */\n  visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters and named strings\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(public readonly targetId: string, public resolved: boolean) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /**\n   * @override\n   */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedStringValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedStringValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /**\n   * @override\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr) => {\n      return format(arr[0]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /**\n   * @override\n   */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * @override\n   */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const stringValues = this.namedStringValues[name];\n        if (!stringValues) {\n          return \"\";\n        }\n        const offsets = Object.keys(stringValues)\n          .map((a) => parseInt(a, 10))\n          .sort(Base.numberCompare);\n\n        const currentPage = this.counterStore.currentPage;\n        const pageStartOffset = currentPage.isBlankPage\n          ? currentPage.offset - 1\n          : currentPage.offset;\n        const pageLastOffset = currentPage.isBlankPage\n          ? pageStartOffset\n          : Math.max(\n              pageStartOffset,\n              ...Array.from(\n                currentPage.container.querySelectorAll(\n                  `[${Base.ELEMENT_OFFSET_ATTR}]`,\n                ),\n              ).map((e) =>\n                parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10),\n              ),\n            );\n\n        let firstOffset = -1;\n        let startOffset = -1;\n        let lastOffset = -1;\n        let firstExceptOffset = -1;\n\n        for (let i = 0; i < offsets.length; i++) {\n          const offset = offsets[i];\n          const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n          const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n          if (offset > pageLastOffset) {\n            break;\n          }\n          if (offset >= pageStartOffset) {\n            if (firstOffset < 0) {\n              firstOffset = offset;\n              firstExceptOffset = -1;\n            }\n            if (startOffset < 0) {\n              if (offset === pageStartOffset) {\n                startOffset = offset;\n              } else {\n                if (offsetPrev < firstOffset) {\n                  startOffset = offsetPrev;\n                }\n                // Check if the element at the offset is at beginning of the page\n                const elementAtOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n                );\n                if (!elementAtOffset) {\n                  // title or meta elements are not output, but should be treated as start\n                  if (startOffset < 0) {\n                    startOffset = offset;\n                  }\n                } else {\n                  let elementAtPageStartOffset =\n                    currentPage.container.querySelector(\n                      `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                    );\n                  if (!elementAtPageStartOffset) {\n                    // The element at pageStartOffset is not found when page break occured\n                    // within an element, so use the ancestor element with offset 0 instead.\n                    elementAtPageStartOffset =\n                      currentPage.container.querySelector(\n                        `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                      );\n                  }\n                  if (elementAtPageStartOffset) {\n                    // Find if the element at the offset is (the first child of)* the element at page start\n                    for (\n                      let element = elementAtPageStartOffset;\n                      element;\n                      element = element.firstElementChild\n                    ) {\n                      if (element === elementAtOffset) {\n                        startOffset = offset;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            lastOffset = offset;\n          } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n            firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n          }\n        }\n\n        const stringValue =\n          stringValues[\n            {\n              first: firstOffset,\n              start: startOffset,\n              last: lastOffset,\n              \"first-except\": firstExceptOffset,\n            }[retrievePosition]\n          ] || \"\";\n\n        return stringValue;\n      },\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CssCascade.CascadeInstance,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[cascadeInstance.currentElementOffset] = stringValue;\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(page: Vtree.Page): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    }\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(expr, val, document) {\n    const found = this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    if (found) {\n      const node = document.createElement(\"span\");\n      node.textContent = val;\n      node.setAttribute(PAGES_COUNTER_ATTR, expr.key);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = this.currentPageCounters[\"page\"][0];\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code <= 65535) {\n    return String.fromCharCode(code);\n  }\n  if (code <= 1114111) {\n    // non-BMP characters: convert to a surrogate pair\n    return String.fromCharCode(\n      55296 | ((code >> 10) & 1023),\n      56320 | (code & 1023),\n    );\n  }\n\n  // not a valid Unicode value\n  return \"\\ufffd\";\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{0,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n  URANGE,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  INVALID,\n  LAST = 51,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n}\n\nexport function makeActions(def: Action, spec: Action[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.ENDNOTK,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  9 /*tab*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  32 /*sp*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  head: number = -1; // saved, occupied if >= 0\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(public input: string, public readonly handler: TokenizerHandler) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  mark(): void {\n    if (this.head >= 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL mark\");\n    }\n    this.head = this.curr;\n  }\n\n  reset(): void {\n    if (this.head < 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL reset\");\n    }\n    this.curr = this.head;\n    this.head = -1;\n  }\n\n  unmark(): void {\n    this.head = -1;\n  }\n\n  hasMark(): boolean {\n    return this.head >= 0;\n  }\n\n  private reallocate(): void {\n    const newIndexMask = 2 * (this.indexMask + 1) - 1;\n    const newBuffer: Token[] = Array(newIndexMask + 1);\n    let oldIndex = this.head;\n    let newIndex = 0;\n    while (oldIndex != this.tail) {\n      newBuffer[newIndex] = this.buffer[oldIndex];\n      if (oldIndex == this.curr) {\n        this.curr = newIndex;\n      }\n      oldIndex = (oldIndex + 1) & this.indexMask;\n      newIndex++;\n    }\n    this.head = 0;\n    this.tail = newIndex;\n    this.indexMask = newIndexMask;\n    this.buffer = newBuffer;\n    while (newIndex <= newIndexMask) {\n      newBuffer[newIndex++] = new Token();\n    }\n  }\n\n  private error(position, token, mnemonics) {\n    if (this.handler) {\n      this.handler.error(mnemonics, token);\n    }\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.head >= 0 ? this.head : this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      // only expect to get here when mark is in effect\n      if (this.head < 0) {\n        throw new Error(\"F_CSSTOK_INTERNAL\");\n      }\n      this.reallocate();\n      tail = this.tail;\n      indexMask = this.indexMask;\n      head = indexMask; // this.head is zero\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenType = TokenType.INVALID;\n          if (isNaN(charCode)) {\n            tokenText = \"E_CSS_UNEXPECTED_EOF\";\n          } else {\n            tokenText = \"E_CSS_UNEXPECTED_CHAR\";\n          }\n          actions = actionsNormal;\n          position++;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = input.substring(tokenPosition, position);\n\n          // unicode-range support\n          if (\n            (tokenType === TokenType.URANGE && charCode === 63) ||\n            (tokenType === TokenType.IDENT &&\n              tokenText.toLowerCase() === \"u\" &&\n              /^\\+[?0-9a-fA-F]/.test(input.substr(position, 2)) &&\n              /\\bunicode-range\\s*:\\s*(u\\+[-?0-9a-f]+\\s*,\\s*)*u$/i.test(\n                input.substr(0, position),\n              ))\n          ) {\n            tokenType = TokenType.URANGE;\n            position++;\n            continue;\n          }\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          continue;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   * @return.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err as Error, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /**\n   * @override\n   */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /**\n   * @override\n   */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /**\n   * @override\n   */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err as Error);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /**\n   * @override\n   */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(public scheduler: Scheduler, public name: string) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /**\n   * @override\n   */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /**\n   * @override\n   */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(public task: Task, public parent: Frame<T>, public name: string) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err as Error, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err as Error, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err as Error, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(public readonly fetch: () => Task.Result<T>, opt_name?: string) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(elem: Element, src: string): Fetcher<string> {\n  let width: string | null = null;\n  let height: string | null = null;\n  if (elem.localName == \"img\") {\n    width = elem.getAttribute(\"width\");\n    height = elem.getAttribute(\"height\");\n  }\n  const fetcher = new Fetcher(() => {\n    const frame: Task.Frame<string> = Task.newFrame(\"loadImage\");\n    const continuation = frame.suspend(elem);\n    let done = false;\n    const handler = (evt: Event) => {\n      if (done) {\n        return;\n      } else {\n        done = true;\n      }\n      if (elem.localName == \"img\") {\n        // IE puts these bogus attributes, even if they were not present\n        if (!width) {\n          elem.removeAttribute(\"width\");\n        }\n        if (!height) {\n          elem.removeAttribute(\"height\");\n        }\n      }\n      continuation.schedule(evt ? evt.type : \"timeout\");\n    };\n    elem.addEventListener(\"load\", handler, false);\n    elem.addEventListener(\"error\", handler, false);\n    elem.addEventListener(\"abort\", handler, false);\n    if (elem.namespaceURI == Base.NS.SVG) {\n      elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n\n      // SVG handlers are not reliable\n      setTimeout(handler, 300);\n    } else {\n      (elem as any).src = src;\n    }\n    return frame.result();\n  }, `loadElement ${src}`);\n  fetcher.start();\n  return fetcher;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum XMLHttpRequestResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type Response = Net.Response;\n\nexport function ajax(\n  url: string,\n  opt_type?: XMLHttpRequestResponseType,\n  opt_method?: string,\n  opt_data?: string,\n  opt_contentType?: string,\n): Task.Result<Response> {\n  const frame: Task.Frame<Response> = Task.newFrame(\"ajax\");\n  const request = new XMLHttpRequest();\n  const continuation = frame.suspend(request);\n  const response: Response = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n  request.open(opt_method || \"GET\", url, true);\n  if (opt_type) {\n    request.responseType = opt_type;\n  }\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      response.status = request.status;\n      response.statusText =\n        request.statusText || (request.status == 404 && \"Not Found\") || \"\";\n      if (response.status == 200 || response.status == 0) {\n        if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.responseXML &&\n          request.responseXML.documentElement.localName != \"parsererror\"\n        ) {\n          response.responseXML = request.responseXML;\n          response.contentType = (request.responseXML as any).contentType;\n        } else if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.response instanceof HTMLDocument\n        ) {\n          response.responseXML = request.response;\n          response.contentType = (request.response as any).contentType;\n        } else {\n          const text = request.response;\n          if (\n            (!opt_type || opt_type === XMLHttpRequestResponseType.TEXT) &&\n            typeof text == \"string\"\n          ) {\n            response.responseText = text;\n          } else if (!text) {\n            Logging.logger.warn(\"Unexpected empty success response for\", url);\n          } else {\n            if (typeof text == \"string\") {\n              response.responseBlob = makeBlob([text]);\n            } else {\n              response.responseBlob = text as Blob;\n            }\n          }\n          const contentTypeHeader = request.getResponseHeader(\"Content-Type\");\n          if (contentTypeHeader) {\n            response.contentType = contentTypeHeader.replace(/(.*);.*$/, \"$1\");\n          }\n        }\n      }\n      continuation.schedule(response);\n    }\n  };\n  try {\n    if (opt_data) {\n      request.setRequestHeader(\n        \"Content-Type\",\n        opt_contentType || \"text/plain; charset=UTF-8\",\n      );\n      request.send(opt_data);\n    } else {\n      if (\n        /^file:|^https?:\\/\\/[^/]+\\.githubusercontent\\.com|\\.(xhtml|xht|opf)$/i.test(\n          url,\n        )\n      ) {\n        // File or GitHub raw URL or .xht(ml) or .opf\n        if (\n          /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n        ) {\n          // Aozorabunko's (X)HTML support\n          request.overrideMimeType(\"text/html; charset=Shift_JIS\");\n        } else if (/\\.(html|htm)$/i.test(url)) {\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        } else if (/\\.(xhtml|xht|xml|opf)$/i.test(url)) {\n          request.overrideMimeType(\"application/xml; charset=UTF-8\");\n        } else if (/\\.(txt|css)$/i.test(url)) {\n          request.overrideMimeType(\"text/plain; charset=UTF-8\");\n        } else {\n          // fallback to HTML\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        }\n      } else if (/^data:,(<|%3c)/i.test(url)) {\n        request.overrideMimeType(\"text/html; charset=UTF-8\");\n      } else if (/^data:,/i.test(url)) {\n        request.overrideMimeType(\"text/plain; charset=UTF-8\");\n      }\n      request.send(null);\n    }\n  } catch (e) {\n    Logging.logger.warn(e, `Error fetching ${url}`);\n    continuation.schedule(response);\n  }\n  return frame.result();\n}\n\n/**\n * @return Blob\n */\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): any {\n  const type = opt_type || \"application/octet-stream\";\n  const builderCtr = window[\"WebKitBlobBuilder\"] || window[\"MSBlobBuilder\"]; // deprecated\n  if (builderCtr) {\n    const builder = new builderCtr();\n    for (let i = 0; i < parts.length; i++) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(type);\n  }\n  return new Blob(parts, { type });\n}\n\n/**\n * @return Task.Result.<ArrayBuffer>\n */\nexport function readBlob(blob: Blob): any {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  (window[\"URL\"] || window[\"webkitURL\"]).revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return (window[\"URL\"] || window[\"webkitURL\"]).createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: XMLHttpRequestResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    ajax(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: Response,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, XMLHttpRequestResponseType.TEXT);\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n// vivliostyle-viewport-screen.css\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    display: -webkit-flex;\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    -webkit-flex: none;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: -webkit-flex;\n    display: flex;\n    -webkit-flex: none;\n    flex: none;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -moz-transform-origin: left top;\n    -webkit-transform-origin: left top;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row;\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row-reverse;\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    -webkit-flex: none;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n// vivliostyle-viewport.css\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n  overflow: hidden;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  overflow: hidden;\n  max-width: 100%;\n  max-height: 100%;\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container],\n  [data-vivliostyle-page-container] {\n    -moz-transform: none !important;\n    -webkit-transform: none !important;\n    transform: none !important;\n  }\n\n  [data-vivliostyle-page-container] {\n    display: block !important;\n    max-width: 100%;\n    height: 100% !important;\n    max-height: 100%;\n  }\n\n  /* Workaround for Chrome printing problem */\n  /* [data-vivliostyle-page-box] {\n        padding-bottom: 0 !important;\n        overflow: visible !important;\n    } */\n  [data-vivliostyle-bleed-box] > div > div::before {\n    display: block;\n    content: \"\";\n    padding-top: 0.015625px;\n    margin-bottom: -0.015625px;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document regexp('.*') {\n    [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n  }\n}\n`;\n\n// validation.txt\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO | NEGATIVE;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nMIN_MAX_FIT_CONTENT = min-content | max-content | fit-content;\nSCOLOR = HASHCOLOR | aliceblue: #F0F8FF | antiquewhite: #FAEBD7 | aqua: #00FFFF | aquamarine: #7FFFD4 | azure: #F0FFFF |\n    beige: #F5F5DC | bisque: #FFE4C4 | black: #000000 | blanchedalmond: #FFEBCD | blue: #0000FF | blueviolet: #8A2BE2 | brown: #A52A2A |\n    burlywood: #DEB887 | cadetblue: #5F9EA0 | chartreuse: #7FFF00 | chocolate: #D2691E | coral: #FF7F50 | cornflowerblue: #6495ED |\n    cornsilk: #FFF8DC | crimson: #DC143C | cyan: #00FFFF | darkblue: #00008B | darkcyan: #008B8B | darkgoldenrod: #B8860B |\n    darkgray: #A9A9A9 | darkgreen: #006400 | darkgrey: #A9A9A9 | darkkhaki: #BDB76B | darkmagenta: #8B008B | darkolivegreen: #556B2F |\n    darkorange: #FF8C00 | darkorchid: #9932CC | darkred: #8B0000 | darksalmon: #E9967A | darkseagreen: #8FBC8F | darkslateblue: #483D8B |\n    darkslategray: #2F4F4F | darkslategrey: #2F4F4F | darkturquoise: #00CED1 | darkviolet: #9400D3 | deeppink: #FF1493 |\n    deepskyblue: #00BFFF | dimgray: #696969 | dimgrey: #696969 | dodgerblue: #1E90FF | firebrick: #B22222 | floralwhite: #FFFAF0 |\n    forestgreen: #228B22 | fuchsia: #FF00FF | gainsboro: #DCDCDC | ghostwhite: #F8F8FF | gold: #FFD700 | goldenrod: #DAA520 |\n    gray: #808080 | green: #008000 | greenyellow: #ADFF2F | grey: #808080 | honeydew: #F0FFF0 | hotpink: #FF69B4 | indianred: #CD5C5C |\n    indigo: #4B0082 | ivory: #FFFFF0 | khaki: #F0E68C | lavender: #E6E6FA | lavenderblush: #FFF0F5 | lawngreen: #7CFC00 |\n    lemonchiffon: #FFFACD | lightblue: #ADD8E6 | lightcoral: #F08080 | lightcyan: #E0FFFF | lightgoldenrodyellow: #FAFAD2 |\n    lightgray: #D3D3D3 | lightgreen: #90EE90 | lightgrey: #D3D3D3 | lightpink: #FFB6C1 | lightsalmon: #FFA07A | lightseagreen: #20B2AA |\n    lightskyblue: #87CEFA | lightslategray: #778899 | lightslategrey: #778899 | lightsteelblue: #B0C4DE | lightyellow: #FFFFE0 |\n    lime: #00FF00 | limegreen: #32CD32 | linen: #FAF0E6 | magenta: #FF00FF | maroon: #800000 | mediumaquamarine: #66CDAA |\n    mediumblue: #0000CD | mediumorchid: #BA55D3 | mediumpurple: #9370DB | mediumseagreen: #3CB371 | mediumslateblue: #7B68EE |\n    mediumspringgreen: #00FA9A | mediumturquoise: #48D1CC | mediumvioletred: #C71585 | midnightblue: #191970 | mintcream: #F5FFFA |\n    mistyrose: #FFE4E1 | moccasin: #FFE4B5 | navajowhite: #FFDEAD | navy: #000080 | oldlace: #FDF5E6 | olive: #808000 |\n    olivedrab: #6B8E23 | orange: #FFA500 | orangered: #FF4500 | orchid: #DA70D6 | palegoldenrod: #EEE8AA | palegreen: #98FB98 |\n    paleturquoise: #AFEEEE | palevioletred: #DB7093 | papayawhip: #FFEFD5 | peachpuff: #FFDAB9 | peru: #CD853F | pink: #FFC0CB |\n    plum: #DDA0DD | powderblue: #B0E0E6 | purple: #800080 | rebeccapurple: #663399 | red: #FF0000 | rosybrown: #BC8F8F | royalblue: #4169E1 |\n    saddlebrown: #8B4513 | salmon: #FA8072 | sandybrown: #F4A460 | seagreen: #2E8B57 | seashell: #FFF5EE | sienna: #A0522D |\n    silver: #C0C0C0 | skyblue: #87CEEB | slateblue: #6A5ACD | slategray: #708090 | slategrey: #708090 | snow: #FFFAFA |\n    springgreen: #00FF7F | steelblue: #4682B4 | tan: #D2B48C | teal: #008080 | thistle: #D8BFD8 | tomato: #FF6347 |\n    turquoise: #40E0D0 | violet: #EE82EE | wheat: #F5DEB3 | white: #FFFFFF | whitesmoke: #F5F5F5 | yellow: #FFFF00 |\n    yellowgreen: #9ACD32 | transparent | currentcolor;\nRGBCOLOR = rgb(INT{3}) | rgb(STRICT_PERCENTAGE{3});\nRGBACOLOR = rgba(NUM{4}) | rgba(STRICT_PERCENTAGE{3} NUM);\nHSLCOLOR = hsl(NUM PERCENTAGE{2});\nHSLACOLOR = hsl(NUM PERCENTAGE{2} NUM);\nCOLOR = SCOLOR | RGBCOLOR | RGBACOLOR | HSLCOLOR | HSLACOLOR;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nSIDE_OR_CORNER =  [left | right] || [top | bottom];\nCOLOR_STOP = SPACE(COLOR [PERCENTAGE | LENGTH]?);\nLINEAR_GRADIENT = linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |\n                  repeating-linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |;\nGRADIENT_EXTENT = closest-corner | closest-side | farthest-corner | farthest-side;\nGRADIENT_POSITION = at BG_POSITION_TERM{1,4};\nGRADIENT_SHAPE = SPACE(circle LENGTH? GRADIENT_POSITION?) | SPACE(ellipse PLENGTH{2}? GRADIENT_POSITION?)| SPACE([circle | ellipse] GRADIENT_EXTENT? GRADIENT_POSITION?);\nRADIAL_GRADIENT = radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+) |\n                  repeating-radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+);\nURI_OR_NONE = URI | none;\nIMAGE =  URI | LINEAR_GRADIENT | RADIAL_GRADIENT | none;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = disc | circle | square | decimal | decimal-leading-zero | lower-roman |\n    upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha |\n    upper-alpha | russian | upper-russian | lower-russian | cjk-ideographic | trad-chinese-informal |\n    hebrew | none;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH | POS_NUM;\nfont-style = normal | italic | oblique;\nfont-weight = normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;\nheight = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-width = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-height = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-width = APLENGTH | MIN_MAX_FIT_CONTENT;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nposition = static | relative | absolute | fixed;\nquotes = [STRING STRING]+ | none;\nright = APLENGTH;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-decoration = none | [ underline || overline || line-through || blink ];\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line | break-spaces;\nwidows = POS_INT;\nwidth = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\ninline-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-block-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-inline-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-block-size = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-inline-size = APLENGTH | MIN_MAX_FIT_CONTENT;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub]transform = none | TRANSFORM_FUNCTION+;\n[epub]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto | IDENT; /* page: IDENT is for CSS Paged Media */\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nCOMMON_LIG_VALUES        = [ common-ligatures | no-common-ligatures ];\nDISCRETIONARY_LIG_VALUES = [ discretionary-ligatures | no-discretionary-ligatures ];\nHISTORICAL_LIG_VALUES    = [ historical-ligatures | no-historical-ligatures ];\nCONTEXTUAL_ALT_VALUES    = [ contextual | no-contextual ];\nfont-variant-ligatures = normal | none | [ COMMON_LIG_VALUES || DISCRETIONARY_LIG_VALUES || HISTORICAL_LIG_VALUES || CONTEXTUAL_ALT_VALUES ];\nfont-variant-caps = normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps;\nNUMERIC_FIGURE_VALUES   = [ lining-nums | oldstyle-nums ];\nNUMERIC_SPACING_VALUES  = [ proportional-nums | tabular-nums ];\nNUMERIC_FRACTION_VALUES = [ diagonal-fractions | stacked-fractions ];\nfont-variant-numeric = normal | [ NUMERIC_FIGURE_VALUES || NUMERIC_SPACING_VALUES || NUMERIC_FRACTION_VALUES || ordinal || slashed-zero ];\nEAST_ASIAN_VARIANT_VALUES = [ jis78 | jis83 | jis90 | jis04 | simplified | traditional ];\nEAST_ASIAN_WIDTH_VALUES   = [ full-width | proportional-width ];\nfont-variant-east-asian = normal | [ EAST_ASIAN_VARIANT_VALUES || EAST_ASIAN_WIDTH_VALUES || ruby ];\nfont-variant_css2 = normal | small-caps; /* for font shorthand */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nFONT_STRETCH_CSS3_VALUES = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\nfont-stretch = FONT_STRETCH_CSS3_VALUES | PERCENTAGE;\nfont-stretch_css3 = FONT_STRETCH_CSS3_VALUES; /* for font shorthand */\nunicode-range = COMMA( URANGE+ );\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a10 | a9 | a8 | a7 | a6 | a5 | a4 | a3 | a2 | a1 | a0\n          | b10 | b9 | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0\n          | c10 | c9 | c8 | c7 | c6 | c5 | c4 | c3 | c2 | c1 | c0\n          | jis-b10 | jis-b9 | jis-b8 | jis-b7 | jis-b6 | jis-b5 | jis-b4 | jis-b3 | jis-b2 | jis-b1 | jis-b0\n          | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = block-start | block-end | inline-start | inline-end | snap-block | snap-inline | left | right | top | bottom | none | footnote;\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[webkit]line-break = auto | loose | normal | strict | anywhere;\noverflow-wrap = normal | break-word | anywhere;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz]text-align-last = auto | start | end | left | right | center | justify;\ntext-justify = auto | none | inter-word | inter-character;\nword-break = normal | keep-all | break-all | break-word;\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\nbox-sizing = content-box | padding-box | border-box;\ntext-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[epub,webkit]text-combine = none | horizontal;\ntext-combine-upright = none | all; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\ntouch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-size-adjust: none;\nfont-kerning: auto;\nfont-feature-settings: normal;\nfont-variant-ligatures: normal;\nfont-variant-caps: normal;\nfont-variant-numeric: normal;\nfont-variant-east-asian: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-type list-style-position list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\nfont = FONT font-style font-variant_css2 font-weight font-stretch_css3 /* font-size line-height font-family are special-cased */;\nfont-variant = font-variant-ligatures font-variant-caps font-variant-numeric font-variant-east-asian;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\n\n/* old names  */\nword-wrap = overflow-wrap;\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n// user-agent.xml\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.footnote-content {\n  float: footnote;\n}\n\n.table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n// user-agent-page.css\nexport const UserAgentPageCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n// user-agent-base.css\nexport const UserAgentBaseCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\nhtml|html,\nhtml|address,\nhtml|blockquote,\nhtml|body,\nhtml|dd,\nhtml|div,\nhtml|dl,\nhtml|dt,\nhtml|fieldset,\nhtml|form,\nhtml|frame,\nhtml|frameset,\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|noframes,\nhtml|ol,\nhtml|p,\nhtml|ul,\nhtml|center,\nhtml|dir,\nhtml|hr,\nhtml|menu,\nhtml|pre,\nhtml|article,\nhtml|section,\nhtml|nav,\nhtml|aside,\nhtml|hgroup,\nhtml|footer,\nhtml|header,\nhtml|figure,\nhtml|figcaption,\nhtml|main {\n  display: block;\n  unicode-bidi: normal;\n}\nhtml|li {\n  display: list-item;\n}\nhtml|head {\n  display: none !important;\n}\nhtml|table {\n  display: table;\n}\nhtml|tr {\n  display: table-row;\n}\nhtml|thead {\n  display: table-header-group;\n  break-after: avoid;\n}\nhtml|tbody {\n  display: table-row-group;\n}\nhtml|tfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\nhtml|col {\n  display: table-column;\n}\nhtml|colgroup {\n  display: table-column-group;\n}\nhtml|td,\nhtml|th {\n  display: table-cell;\n}\nhtml|caption {\n  display: table-caption;\n  text-align: center;\n}\nhtml|th {\n  font-weight: bolder;\n  text-align: center;\n}\nhtml|*[hidden],\nhtml|link,\nhtml|style,\nhtml|script {\n  display: none;\n}\nhtml|h1 {\n  font-size: 2em;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h2 {\n  font-size: 1.5em;\n  margin-block-start: 0.75em;\n  margin-block-end: 0.75em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h3 {\n  font-size: 1.17em;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h4,\nhtml|p,\nhtml|blockquote,\nhtml|ul,\nhtml|fieldset,\nhtml|form,\nhtml|ol,\nhtml|dl,\nhtml|dir,\nhtml|menu,\nhtml|h5,\nhtml|h6 {\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h5 {\n  font-size: 0.83em;\n}\nhtml|h6 {\n  font-size: 0.75em;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|b,\nhtml|strong {\n  font-weight: bolder;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6 {\n  break-after: avoid;\n}\nhtml|blockquote {\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n}\nhtml|i,\nhtml|cite,\nhtml|em,\nhtml|var,\nhtml|address {\n  font-style: italic;\n}\nhtml|pre,\nhtml|tt,\nhtml|code,\nhtml|kbd,\nhtml|samp {\n  font-family: monospace;\n}\nhtml|pre {\n  white-space: pre;\n}\nhtml|button,\nhtml|textarea,\nhtml|input,\nhtml|select {\n  display: inline-block;\n}\nhtml|big {\n  font-size: 1.17em;\n}\nhtml|small,\nhtml|sub,\nhtml|sup {\n  font-size: 0.83em;\n}\nhtml|sub {\n  vertical-align: sub;\n}\nhtml|sup {\n  vertical-align: super;\n}\nhtml|table {\n  border-spacing: 2px;\n}\nhtml|thead,\nhtml|tbody,\nhtml|tfoot {\n  vertical-align: middle;\n}\n/* for XHTML tables without tbody */\nhtml|table > html|tr {\n  vertical-align: middle;\n}\nhtml|td,\nhtml|th {\n  vertical-align: inherit;\n}\nhtml|s,\nhtml|strike,\nhtml|del {\n  text-decoration: line-through;\n}\nhtml|hr {\n  border: 1px inset;\n}\nhtml|ol,\nhtml|ul,\nhtml|dir,\nhtml|menu,\nhtml|dd {\n  margin: 0px;\n  margin-inline-start: 40px;\n}\nhtml|ol html|ul,\nhtml|ul html|ol,\nhtml|ul html|ul,\nhtml|ol html|ol {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\nhtml|u,\nhtml|ins {\n  text-decoration: underline;\n}\nhtml|center {\n  text-align: center;\n}\nhtml|q:before {\n  content: open-quote;\n}\nhtml|q:after {\n  content: close-quote;\n}\n\nhtml|audio,\nhtml|video {\n  break-inside: avoid;\n}\n\nhtml|ruby {\n  display: ruby;\n}\nhtml|rp {\n  display: none;\n}\nhtml|rbc {\n  display: ruby-base-container;\n}\nhtml|rtc {\n  display: ruby-text-container;\n}\nhtml|rb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nhtml|rt {\n  display: ruby-text;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-variant-east-asian: ruby;\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\n\nhtml|rtc:lang(zh),\nhtml|rt:lang(zh) {\n  ruby-align: center;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-size: 50%;\n}\n\nhtml|rtc:lang(zh-TW),\nhtml|rt:lang(zh-TW) {\n  font-size: 30%;\n}\n\nhtml|rtc > html|rt,\nhtml|rtc > html|rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nhtml|bdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nhtml|bdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\nhtml|*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: embed;\n}\nhtml|*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: embed;\n}\n\n/*------------------ epub-specific ---------------------*/\n\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml|a[epub|type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\nhtml|a[epub|type=\"noteref\"]:href-epub-type(footnote) {\n  -adapt-template: url(user-agent.xml#footnote);\n  text-decoration: none;\n}\n\nhtml|aside[epub|type=\"footnote\"] {\n  display: none;\n}\n\nhtml|aside[epub|type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n\n/*--------------- ncx and toc ----------------------*/\n\n@namespace ncx \"http://www.daisy.org/z3986/2005/ncx/\";\n\nncx|ncx {\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nncx|content {\n  display: none;\n}\n\nbody > * {\n  -adapt-behavior: body-child;\n}\n\n[role=\"doc-toc\"],\n[role=\"directory\"],\nnav,\n.toc,\n#toc,\n#table-of-contents,\n#contents {\n  -adapt-behavior: toc-root;\n}\n\n[role=\"doc-toc\"] a,\n[role=\"directory\"] a,\nnav a,\n.toc a,\n#toc a,\nncx|navLabel {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[role=\"doc-toc\"] li,\n[role=\"directory\"] li,\nnav li,\n.toc li,\n#toc li,\nncx|navPoint {\n  -adapt-behavior: toc-node;\n}\n\n[role=\"doc-toc\"] li > *:first-child,\n[role=\"directory\"] li > *:first-child,\nnav li > *:first-child,\n.toc li > *:first-child,\n#toc li > *:first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[role=\"doc-toc\"] ol,\n[role=\"directory\"] ol,\nnav ol,\n.toc ol,\n#toc ol,\n[role=\"doc-toc\"] ul,\n[role=\"directory\"] ul,\nnav ul,\n.toc ul,\n#toc ul,\nol[role=\"doc-toc\"],\nol[role=\"directory\"],\nol.toc,\nol#toc,\nul[role=\"doc-toc\"],\nul[role=\"directory\"],\nul.toc,\nul#toc {\n  -adapt-behavior: toc-container;\n}\n`;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 16777216;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 33554432;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 50331648;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 67108864;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 83886080;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 100663296;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\n/**\n * CSS Color value from hash text (without '#' character).\n */\nexport function colorFromHash(text: string): Css.Color {\n  let num = parseInt(text, 16);\n  if (isNaN(num)) {\n    throw new Error(\"E_CSS_COLOR\");\n  }\n  if (text.length == 6) {\n    return new Css.Color(num);\n  }\n  if (text.length == 3) {\n    num =\n      (num & 15) |\n      ((num & 15) << 4) |\n      ((num & 240) << 4) |\n      ((num & 240) << 8) |\n      ((num & 3840) << 8) |\n      ((num & 3840) << 12);\n    return new Css.Color(num);\n  }\n  throw new Error(\"E_CSS_COLOR\");\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as an\n   *     argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    this.slave.endRule();\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    return this.owner.getCurrentToken();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner.errorMsg(mnemonics, token);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.depth++;\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  VAL_URANGE,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = CssTokenizer.TokenType.LAST + 1;\nexport const OP_MEDIA_OR: number = CssTokenizer.TokenType.LAST + 2;\nexport const OP_MEDIA_NOT: number = CssTokenizer.TokenType.LAST + 3;\n\n(() => {\n  actionsBase[CssTokenizer.TokenType.IDENT] = Action.IDENT;\n  actionsBase[CssTokenizer.TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.AT] = Action.AT;\n  actionsBase[CssTokenizer.TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[CssTokenizer.TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n\n  actionsSelector[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[CssTokenizer.TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[CssTokenizer.TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelector[CssTokenizer.TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelectorInFunc[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.C_PAR] = Action.DONE;\n  actionsSelectorInFunc[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COL_COL] =\n    Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[CssTokenizer.TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[CssTokenizer.TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[CssTokenizer.TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[CssTokenizer.TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[CssTokenizer.TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[CssTokenizer.TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[CssTokenizer.TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[CssTokenizer.TokenType.URANGE] = Action.VAL_URANGE;\n  actionsPropVal[CssTokenizer.TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[CssTokenizer.TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[CssTokenizer.TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[CssTokenizer.TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[CssTokenizer.TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[CssTokenizer.TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[CssTokenizer.TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[CssTokenizer.TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[CssTokenizer.TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[CssTokenizer.TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[CssTokenizer.TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[CssTokenizer.TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[CssTokenizer.TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[CssTokenizer.TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[CssTokenizer.TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[CssTokenizer.TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[CssTokenizer.TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[CssTokenizer.TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[CssTokenizer.TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsError[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  priority[CssTokenizer.TokenType.C_PAR] = 0;\n  priority[CssTokenizer.TokenType.COMMA] = 0;\n  priority[CssTokenizer.TokenType.QMARK] = 1;\n  priority[CssTokenizer.TokenType.COLON] = 1;\n  priority[CssTokenizer.TokenType.AMP_AMP] = 2;\n  priority[CssTokenizer.TokenType.BAR_BAR] = 2;\n  priority[CssTokenizer.TokenType.LT] = 3;\n  priority[CssTokenizer.TokenType.GT] = 3;\n  priority[CssTokenizer.TokenType.LT_EQ] = 3;\n  priority[CssTokenizer.TokenType.GT_EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ_EQ] = 3;\n  priority[CssTokenizer.TokenType.BANG_EQ] = 3;\n  priority[CssTokenizer.TokenType.PLUS] = 4;\n  priority[CssTokenizer.TokenType.MINUS] = 4;\n  priority[CssTokenizer.TokenType.STAR] = 5;\n  priority[CssTokenizer.TokenType.SLASH] = 5;\n  priority[CssTokenizer.TokenType.PERCENT] = 5;\n  priority[CssTokenizer.TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n  priority[OP_MEDIA_OR] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n  SUPPORTS,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index == valStack.length) {\n        break;\n      }\n      if (valStack[index++] != sep) {\n        throw new Error(\"Unexpected state\");\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let v;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n        this.actions = actionsErrorDecl;\n        return null;\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n      return null;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    return valStack[0] as Css.Val;\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    // this.handler.error(mnemonics, token);\n    // (should not throw error by expression syntax errors)\n    Logging.logger.warn(mnemonics);\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == CssTokenizer.TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == CssTokenizer.TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.Comma(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = CssTokenizer.TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == CssTokenizer.TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = CssTokenizer.TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -CssTokenizer.TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -CssTokenizer.TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else if (tok == -OP_MEDIA_NOT) {\n          // `not` operator in `@media` or `@supports`\n          val = new Exprs.NotMedia(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case CssTokenizer.TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            // `and` operator in `@media` or `@supports`\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_OR:\n            // `or` operator in `@media` or `@supports`\n            val = new Exprs.OrMedia(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.EQ:\n          case CssTokenizer.TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case CssTokenizer.TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case CssTokenizer.TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (op != CssTokenizer.TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case CssTokenizer.TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readSupportsTest(token: CssTokenizer.Token): Exprs.SupportsTest {\n    // `@supports (prop-name:...)`\n    // `@supports func-name(...)`\n    const isFunc = token.type === CssTokenizer.TokenType.FUNC;\n    const tokenizer = this.tokenizer;\n    let startPosition: number;\n    let name: string;\n    if (isFunc) {\n      name = token.text;\n      startPosition = token.position + name.length + 1;\n    } else if (token.type === CssTokenizer.TokenType.O_PAR) {\n      const token1 = tokenizer.nthToken(1);\n      const token2 = tokenizer.nthToken(2);\n      if (\n        token1.type === CssTokenizer.TokenType.IDENT &&\n        token2.type === CssTokenizer.TokenType.COLON\n      ) {\n        tokenizer.consume();\n        tokenizer.consume();\n        name = token1.text;\n        startPosition = token2.position + 1;\n      } else if (\n        token1.type === CssTokenizer.TokenType.O_PAR ||\n        token1.type === CssTokenizer.TokenType.FUNC ||\n        (token1.type === CssTokenizer.TokenType.IDENT &&\n          token1.text.toLowerCase() === \"not\" &&\n          (token2.type === CssTokenizer.TokenType.O_PAR ||\n            token2.type === CssTokenizer.TokenType.FUNC))\n      ) {\n        return null;\n      } else {\n        // Unknown `(...)` syntax, read until `)` and evaluate to false\n        startPosition = token.position + 1;\n      }\n    } else {\n      return null;\n    }\n    let parLevel = 0;\n    let tokenN: CssTokenizer.Token;\n    while (parLevel >= 0) {\n      tokenizer.consume();\n      tokenN = tokenizer.token();\n      switch (tokenN.type) {\n        case CssTokenizer.TokenType.C_PAR:\n          parLevel--;\n          break;\n        case CssTokenizer.TokenType.O_PAR:\n        case CssTokenizer.TokenType.FUNC:\n          parLevel++;\n          break;\n        case CssTokenizer.TokenType.INVALID:\n        case CssTokenizer.TokenType.EOF:\n          this.exprError(\"E_CSS_UNEXPECTED_EOF\", tokenN);\n          return null;\n      }\n    }\n    tokenizer.consume();\n    const endPosition = tokenN.position;\n    const value = tokenizer.input.substring(startPosition, endPosition).trim();\n    const supportsTest = new Exprs.SupportsTest(\n      this.handler.getScope(),\n      name,\n      value,\n      isFunc,\n    );\n    return supportsTest;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case CssTokenizer.TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case CssTokenizer.TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case CssTokenizer.TokenType.NUM:\n        case CssTokenizer.TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === CssTokenizer.TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === CssTokenizer.TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case CssTokenizer.TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case CssTokenizer.TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === CssTokenizer.TokenType.MINUS;\n          const hasSign =\n            token.type === CssTokenizer.TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === CssTokenizer.TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === CssTokenizer.TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === CssTokenizer.TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case CssTokenizer.TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue: boolean,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery: boolean,\n    parsingFunctionParam: boolean,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n    parserLoop: for (; count > 0; --count) {\n      token = tokenizer.token();\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          token1 = tokenizer.nthToken(2);\n          if (\n            token1.precededBySpace ||\n            (token1.type != CssTokenizer.TokenType.IDENT &&\n              token1.type != CssTokenizer.TokenType.FUNC)\n          ) {\n            // cannot be a selector\n          } else {\n            // can be either a selector or a property assignment\n            tokenizer.mark();\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case CssTokenizer.TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case CssTokenizer.TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case CssTokenizer.TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"not\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(\"not\");\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  break parserLoop;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === CssTokenizer.TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.BAR) {\n            ns = text ? this.namespacePrefixToURI[text] : text;\n            if (ns == null) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != CssTokenizer.TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.EQ:\n            case CssTokenizer.TokenType.TILDE_EQ:\n            case CssTokenizer.TokenType.BAR_EQ:\n            case CssTokenizer.TokenType.HAT_EQ:\n            case CssTokenizer.TokenType.DOLLAR_EQ:\n            case CssTokenizer.TokenType.STAR_EQ:\n            case CssTokenizer.TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case CssTokenizer.TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                CssTokenizer.TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n            case CssTokenizer.TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != CssTokenizer.TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          try {\n            valStack.push(colorFromHash(token.text));\n          } catch (err) {\n            if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n              tokenizer.reset();\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n              continue;\n            }\n            handler.error(\"E_CSS_COLOR\", token);\n            this.actions = actionsError;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          if (Exprs.isViewportRelativeLengthUnit(token.text)) {\n            // Treat numeric value with viewport unit as numeric in expr.\n            valStack.push(\n              new Css.Expr(\n                new Exprs.Numeric(handler.getScope(), token.num, token.text),\n              ),\n            );\n          } else {\n            valStack.push(new Css.Numeric(token.num, token.text));\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URANGE:\n          valStack.push(new Css.URange(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"calc\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == CssTokenizer.TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == CssTokenizer.TokenType.SEMICOL ||\n              token1.type == CssTokenizer.TokenType.EOF ||\n              token1.type == CssTokenizer.TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case CssTokenizer.TokenType.NUM:\n            case CssTokenizer.TokenType.NUMERIC:\n            case CssTokenizer.TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          } else {\n            this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n            continue;\n          }\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          if (parsingStyleAttr) {\n            return true;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == CssTokenizer.TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else if (\n              this.exprContext === ExprContext.SUPPORTS &&\n              token.text.toLowerCase() === \"not\" &&\n              valStack[valStack.length - 1] !== OP_MEDIA_AND &&\n              valStack[valStack.length - 1] !== OP_MEDIA_OR &&\n              (token1.type === CssTokenizer.TokenType.O_PAR ||\n                token1.type === CssTokenizer.TokenType.FUNC)\n            ) {\n              // for `@supports not (...)`\n              valStack.push(-OP_MEDIA_NOT);\n              tokenizer.consume();\n              continue;\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports selector(...)`\n            valStack.push(this.readSupportsTest(token));\n            this.actions = actionsExprOp;\n            continue;\n          }\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (\n            token.type != CssTokenizer.TokenType.INT ||\n            token.precededBySpace\n          ) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          // `and` or `or` operator in `@media` or `@supports`\n          if (\n            token.text.toLowerCase() === \"and\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_OR &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else if (\n            token.text.toLowerCase() === \"or\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_AND &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_OR, token);\n            valStack.push(OP_MEDIA_OR);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            this.actions = actionsPropVal;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n              // `@media ...;` and `@supports ...;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports (...)`\n            const supportsTest = this.readSupportsTest(token);\n            if (supportsTest) {\n              valStack.push(supportsTest);\n              this.actions = actionsExprOp;\n              continue;\n            }\n          }\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR ||\n                token.type == CssTokenizer.TokenType.URL\n              ) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == CssTokenizer.TokenType.SEMICOL ||\n                  token.type == CssTokenizer.TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == CssTokenizer.TokenType.STR ||\n                      token.type == CssTokenizer.TokenType.URL) &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case CssTokenizer.TokenType.STR:\n                case CssTokenizer.TokenType.URL:\n                  if (\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  continue;\n                case CssTokenizer.TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == CssTokenizer.TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"supports\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.SUPPORTS;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == CssTokenizer.TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == CssTokenizer.TokenType.COLON &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == CssTokenizer.TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (\n            this.errorBrackets.length == 0 &&\n            token.type == CssTokenizer.TokenType.C_BRC\n          ) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          if (parsingFunctionParam) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n          }\n          return true;\n        default:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            return false;\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else if (token.type === CssTokenizer.TokenType.O_BRC) {\n              // `@media {...}` and `@supports {...}` should be ok\n              handler.startMediaRule(valStack.pop() as Css.Expr);\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n              tokenizer.consume();\n              continue;\n            } else if (token.type === CssTokenizer.TokenType.SEMICOL) {\n              // `@media;` and `@supports;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    throw new Error(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.ajax(url).then((xhr) => {\n        if (!xhr.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            xhr.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n\n/**\n * @return val\n */\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName: string,\n): Css.Val {\n  if (val.isExpr()) {\n    try {\n      return evaluateExprToCSS(context, (val as Css.Expr).expr, propName);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return Css.empty;\n  }\n  return val;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export interface ElementStyle {}\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(element: Element, styles: { [key: string]: Css.Val });\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\" units or a number.\n     * @return value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string | number): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    createJustificationAdjustmentElement(\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n      vertical: boolean,\n    ): HTMLElement;\n    addAndAdjustJustificationElement(\n      nodeContext: Vtree.NodeContext,\n      insertAfter: boolean,\n      node: Node,\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n    ): HTMLElement;\n    compensateJustificationLineHeight(\n      span: Element,\n      br: Element,\n      nodeContext: Vtree.NodeContext,\n    ): void;\n    /**\n     * Fix justification of the last line of text broken across pages (if\n     * needed).\n     */\n    fixJustificationIfNeeded(\n      nodeContext: Vtree.NodeContext,\n      endOfColumn: boolean,\n    ): void;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n      edge: number;\n      checkPoint: Vtree.NodeContext | null;\n    };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type Response = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: object;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n    pageType: string | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    /**\n     * Walk up NodeContext tree (starting from itself) and call the callback for\n     * each block.\n     */\n    walkUpBlocks(callback: (p1: NodeContext) => any): void;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\n/**\n * @returns string\n */\nexport function restoreOriginalText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\n/**\n * @returns string\n */\nexport function restoreNewText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport {\n  CssStyler,\n  PageFloats,\n  PseudoElement,\n  Selectors,\n  Vtree,\n  XmlDoc,\n} from \"./types\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isBlankPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Zoom page.\n   * @param scale Factor to which the page will be scaled.\n   */\n  zoom(scale: number) {\n    Base.setCSSProperty(this.container, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Returns the page area element.\n   */\n  getPageAreaElement(): HTMLElement {\n    return this.pageAreaElement || this.container;\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n    case \"break-spaces\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace: Whitespace): boolean {\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.IGNORE:\n      return !!text.match(/^\\s*$/);\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t\\f]*$/);\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n  }\n  throw new Error(`Unexpected whitespace: ${whitespace}`);\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    nps1.node === nps2.node &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: CssStyler.AbstractStyler,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: Vtree.ShadowContext,\n  sc2: Vtree.ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: Vtree.ShadowContext;\n  nodeShadow: Vtree.ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n  pageType: string | null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n    this.pageType = parent ? parent.pageType : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      (nc.shadowContext?.styler as PseudoElement.PseudoelementStyler)?.style?.[\n        \"_pseudos\"\n      ]\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Walk up NodeContext tree (starting from itself) and call the callback for\n   * each block.\n   */\n  walkUpBlocks(callback: (p1: NodeContext) => any) {\n    let nodeContext: NodeContext = this;\n    while (nodeContext) {\n      if (!nodeContext.inline) {\n        callback(nodeContext);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startSide: string = \"any\";\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startSide = this.startSide;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n  isBlankPage: boolean = false;\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.isBlankPage = this.isBlankPage;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page ||\n      this.highestSeenOffset !== other.highestSeenOffset\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return \"any\";\n    }\n    return flowPos.startSide;\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical ? box.top : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical ? box.bottom : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setHorizontalPosition(start + extent * this.getBoxDir(), extent);\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setVerticalPosition(start, extent);\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  /** @override */\n  visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /** @override */\n  visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.empty &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    val !== Css.ident.inherit\n  );\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssCascade } from \"./types\";\n\nexport interface ElementStyle extends CssCascade.ElementStyle {}\n\nexport const inheritedProps = {\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant-ligatures\": true,\n  \"font-variant-caps\": true,\n  \"font-variant-numeric\": true,\n  \"font-variant-east-asian\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  quotes: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"shape-rendering\": true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"box-decoration-break\",\n  // TODO: box-decoration-block should not be inherited.\n  // https://github.com/vivliostyle/vivliostyle.js/issues/259\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(context: Exprs.Context, propName: string): Css.Val {\n    return CssParser.evaluateCSSToCSS(context, this.value, propName);\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  /**\n   * @override\n   */\n  getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  /**\n   * @override\n   */\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  /**\n   * @override\n   */\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    try {\n      return !!this.condition.evaluate(context);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return false;\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((tv == null || av.priority > tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) == \"_\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) != \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name];\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\n/**\n * @return void\n */\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): any {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyleMap }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyleMap;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target as ElementStyleMap,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const av = getProp(style, prop).increaseSpecificity(specificity);\n      const tv = getProp(target, prop);\n      setProp(target, prop, cascadeValues(context, tv, av));\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    if (!cascval.value.isNumeric()) {\n      // FIXME: cascval may be Ident value e.g. \"smaller\"\n      return Exprs.defaultUnitSizes[\"em\"];\n    }\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit == \"em\" ||\n      numeric.unit == \"ex\" ||\n      numeric.unit == \"rem\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    } else if (numeric.unit == \"%\") {\n      if (this.propName === \"line-height\") {\n        return numeric;\n      }\n      const unit = this.propName.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      return new Css.Numeric(numeric.num, unit);\n    }\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = CssParser.evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(public readonly epubTypePatt: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem && cascadeInstance.currentLocalName == \"a\") {\n      const href = elem.getAttribute(\"href\");\n      if (href && href.match(/^#/)) {\n        const id = href.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (target) {\n          const epubType = target.getAttributeNS(Base.NS.epub, \"type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.hasAttributeNS(this.ns, this.name)\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.getAttributeNS(this.ns, this.name) ==\n        this.value\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const ns = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (ns && supportedNamespaces[ns]) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const attr = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (attr && attr.match(this.regexp)) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(public readonly a: number, public readonly b: number) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\nexport class NegateActionsSet extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstAction: CascadeAction;\n\n  constructor(list: ChainedAction[]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    this.firstAction = chainActions(list, this.checkAppliedAction);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.firstAction.apply(cascadeInstance);\n    if (!this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return (this.firstAction as ChainedAction).getPriority();\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: any): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CascadeInstance,\n  ): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n    const c = new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n      case \"first-letter\":\n        stringValue = this.element.textContent.trim().replace(/\\s+/g, \" \");\n        if (pseudoName === \"first-letter\") {\n          const r = stringValue.match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val: Css.Val = pseudos?.[pseudoName]?.[\"content\"]?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n    }\n    Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return new Css.Str(\"\");\n  }\n}\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 1048576;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  previousPageType: string | null = null;\n  firstPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    if (this.counters[counterName]) {\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal = Css.ident.inline;\n    const display = props[\"display\"];\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    let floatVal = Css.ident.inline;\n    const float = props[\"float\"];\n    if (float) {\n      floatVal = float.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"];\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"ua-list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"ua-list-item\"] = 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!resetMap) {\n          resetMap = {};\n        }\n        resetMap[\"ua-list-item\"] = (this.currentElement as any).value - 1;\n      }\n    }\n    if (this.currentElement?.parentNode.nodeType === Node.DOCUMENT_NODE) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      // `counter-reset: footnote 0` is implicitly applied on the root element\n      if (resetMap[\"footnote\"] === undefined) {\n        resetMap[\"footnote\"] = 0;\n      }\n    }\n    if (floatVal === Css.ident.footnote) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      // `counter-increment: footnote 1` is implicitly applied on the\n      // element (or pseudo element) with `float: footnote`,\n      // unless `counter-increment: footnote` is explicitly specified\n      // on the element (parent element of the pseudo element).\n      if (incrementMap[\"footnote\"] === undefined) {\n        const incrPropValue = this.currentStyle[\"counter-increment\"]?.value;\n        if (\n          !incrPropValue ||\n          !(\n            incrPropValue === Css.ident.footnote ||\n            incrPropValue.values?.includes(Css.ident.footnote)\n          )\n        ) {\n          incrementMap[\"footnote\"] = 1;\n        }\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"ua-list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet: CascadeValue = props[\"string-set\"];\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(name, stringValue, this);\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    if (pseudoprops[\"content\"]) {\n      pseudoprops[\"content\"] = pseudoprops[\"content\"].filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack =\n      this.followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts =\n      (this.currentFollowingSiblingTypeCounts =\n        followingSiblingTypeCountsStack[\n          followingSiblingTypeCountsStack.length - 1\n        ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"];\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(visitor, elementStyle): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName)) {\n        elementStyle[propName] = elementStyle[propName].filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\",\n  /* content */\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n      ? uaBaseCascade.clone()\n      : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    this.specificity += 1;\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by .${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by :${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|s)${Base.escapeRegExp(value)}(\\$|s)`);\n          this.chain.push(new CheckTargetEpubTypeAction(patt));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fais\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default:\n        Logging.logger.warn(`unknown pseudo-class selector: ${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 256;\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          Logging.logger.warn(\n            `Double pseudoelement ::${this.pseudoelement}::${name}`,\n          );\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              Logging.logger.warn(\n                `Double pseudoelement ::${this.pseudoelement}::${name}`,\n              );\n              this.chain.push(new CheckConditionAction(\"\")); // always fails\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(`Unrecognized pseudoelement: ::${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 1;\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case CssTokenizer.TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case CssTokenizer.TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case CssTokenizer.TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case CssTokenizer.TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          Logging.logger.warn(\"Unsupported :: attr selector op:\", value);\n          action = new CheckConditionAction(\"\"); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(\"Unsupported attr selector:\", op);\n        action = new CheckConditionAction(\"\"); // always fails\n    }\n    this.chain.push(action);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      const specificity: number = this.specificity + this.cascade.nextOrder();\n      this.processChain(this.makeApplyRuleAction(specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    switch (funcName) {\n      case \"not\": {\n        const notParserHandler = new NotParameterParserHandler(this);\n        notParserHandler.startSelectorRule();\n        this.owner.pushHandler(notParserHandler);\n        break;\n      }\n      default:\n        // TODO\n        break;\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\nexport class NotParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    if (funcName == \"not\") {\n      this.reportAndSkip(\"E_CSS_UNEXPECTED_NOT\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_NEXT_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    if (this.chain && this.chain.length > 0) {\n      this.parentChain.push(new NegateActionsSet(this.chain));\n    }\n    this.parent.specificity += this.specificity;\n    this.owner.popHandler();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.owner.popHandler();\n  }\n}\n\n/**\n * @override\n */\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const av = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, av);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver\n{\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (writingMode && writingMode !== Css.ident.inherit) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (direction && direction !== Css.ident.inherit) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n    ? couplingMapHorRtl\n    : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    return getComputedValue(inlineSizeName);\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition =\n  PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext\n{\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent =\n        this.parent.getLastFollowingFloatInFragments(float);\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const logicalFloatSide2 = this.toLogical(fragment.floatSide);\n        if (logicalFloatSide2 === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogical(float.floatSide);\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogical(fragment.floatSide);\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical ? limits.top : limits.left;\n      case \"inline-end\":\n        return this.container.vertical ? limits.bottom : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogical(f.floatSide);\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    let logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSide]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSide === \"block-start\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-start\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSide === \"block-end\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = inlineEnd - inlineStart;\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSide === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSide = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSide = \"block-start\";\n          } else {\n            logicalFloatSide = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSide]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSide = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSide === \"inline-start\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize = inlineEnd - inlineStart;\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n    switch (logicalFloatSide) {\n      case \"inline-start\":\n      case \"block-start\":\n      case \"snap-block\":\n        area.setInlinePosition(inlineStart, inlineSize);\n        area.setBlockPosition(blockStart, blockSize);\n        break;\n      case \"inline-end\":\n      case \"block-end\":\n        area.setInlinePosition(inlineEnd - outerInlineSize, inlineSize);\n        area.setBlockPosition(\n          blockEnd - outerBlockSize * area.getBoxDir(),\n          blockSize,\n        );\n        break;\n      default:\n        throw new Error(`unknown float direction: ${floatSide}`);\n    }\n    return logicalFloatSide;\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogical(floatSide);\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /**\n   * @override\n   */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  /**\n   * @override\n   */\n  isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  /**\n   * @override\n   */\n  getOrder(): number {\n    return Infinity;\n  }\n\n  /**\n   * @override\n   */\n  shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint\n{\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy\n{\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext =\n      pageFloatLayoutContext.getPageFloatLayoutContext(floatReference);\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /**\n   * @override\n   */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartSideValue(breakValue: string | null): string {\n  switch (breakValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return breakValue;\n    default:\n      return \"any\";\n  }\n}\n\nexport function startSideValueToBreakValue(\n  startSideValue: string,\n): string | null {\n  switch (startSideValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return startSideValue;\n    default:\n      return null;\n  }\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Though method used to be used as a workaround for Chrome bug, it seems that\n * the bug has been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method as a workaround for Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function fixBoxesForNode(\n  clientLayout: Vtree.ClientLayout,\n  boxes: Vtree.ClientRect[],\n  node: Node,\n): Vtree.ClientRect[] {\n  const fullRange = node.ownerDocument.createRange();\n  fullRange.setStart(node, 0);\n  fullRange.setEnd(node, node.textContent.length);\n  const fullBoxes = clientLayout.getRangeClientRects(fullRange);\n  const result = [];\n  for (const box of boxes) {\n    let k: number;\n    for (k = 0; k < fullBoxes.length; k++) {\n      const fullBox = fullBoxes[k];\n      if (\n        box.top >= fullBox.top &&\n        box.bottom <= fullBox.bottom &&\n        Math.abs(box.left - fullBox.left) < 1\n      ) {\n        result.push({\n          top: box.top,\n          left: fullBox.left,\n          bottom: box.bottom,\n          right: fullBox.right,\n        });\n        break;\n      }\n    }\n    if (k == fullBoxes.length) {\n      Logging.logger.warn(\"Could not fix character box\");\n      result.push(box);\n    }\n  }\n  return result;\n}\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n  if (node.nodeType == 1) {\n    if (nodeContext.after || !nodeContext.inline) {\n      const cbox = clientLayout.getElementClientRect(node as Element);\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    if (vertical && Base.checkVerticalBBoxBug(document.body)) {\n      boxes = fixBoxesForNode(clientLayout, boxes, node);\n    }\n    boxes = boxes.filter((box) => box.right > box.left && box.bottom > box.top);\n    if (!boxes.length) {\n      return NaN;\n    }\n    if (vertical) {\n      edge = Math.min.apply(\n        null,\n        boxes.map((box) => box.left),\n      );\n    } else {\n      edge = Math.max.apply(\n        null,\n        boxes.map((box) => box.bottom),\n      );\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  let lastChild: Node;\n  while ((lastChild = parentNode.lastChild) != viewNode) {\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  if (!nodeContext) {\n    return false;\n  }\n  const viewNode = nodeContext.viewNode;\n  if (viewNode && viewNode.nodeType === 1) {\n    return isSpecial(viewNode as Element);\n  } else {\n    return false;\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition\n{\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition\n{\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display.toString();\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Ident): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDislayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Ident } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if ((float && float !== Css.ident.none) || isRoot) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDislayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    // Fix for issue #740\n    if (\n      nodeContext.shadowType === Vtree.ShadowType.ROOTLESS &&\n      LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      return;\n    }\n    const parentNode = nodeContext.viewNode.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, nodeContext.viewNode);\n    if (removeSelf) {\n      parentNode.removeChild(nodeContext.viewNode);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.fixJustificationIfNeeded(nodeContext, true);\n      column.layoutContext.processFragmentedBlockEdge(\n        removeSelf ? nodeContext : nodeContext.parent,\n      );\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext =\n        nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"LayoutIterator\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  /**\n   * @override\n   */\n  startNonElementNode(state: LayoutIteratorState): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset\n{\n  constructor(public nodeContext, public pseudoElementHeight) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\nexport const mediaTags = {\n  img: true,\n  svg: true,\n  audio: true,\n  video: true,\n};\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition\n{\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated = true;\n    }\n    return this.breakNodeContext;\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  switch (display) {\n    case \"ruby\":\n    case \"ruby-base\":\n    case \"ruby-base-container\":\n    case \"ruby-text\":\n    case \"ruby-text-container\":\n    case \"inline-block\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"inline-list-item\":\n    case \"inline-table\":\n      return true;\n  }\n  return false;\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null =\n    null;\n  blockDistanceToBlockEndFloats: number = NaN;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical ? this.startEdge : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical ? this.endEdge : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical ? this.afterEdge : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical ? this.beforeEdge : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions =\n      this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode =\n              this.calculateOffsetInNodeForNodeContext(position);\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        return this.layoutContext.peelOff(position, r ? r[0].length : 0);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (position.viewNode && !LayoutHelper.isSpecialNodeContext(position)) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (this.isFloatNodeContext(position) && !this.vertical) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\" units or a number.\n   * @return value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string | number): number {\n    if (typeof val == \"number\") {\n      return val;\n    }\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return parseFloat(r[0]);\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = PageFloats.resolveInlineFloatDirection(\n      nodeContext.floatSide,\n      nodeContext.vertical,\n      nodeContext.direction,\n    );\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.startEdge;\n      let x2 = this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(this.getStartEdge(parentBox), x1);\n        x2 = Math.min(this.getEndEdge(parentBox), x2);\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        parent.viewNode.appendChild(nodeContext.viewNode);\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe =\n          containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n            \"div\",\n          );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft =\n      area.paddingRight =\n      area.paddingTop =\n      area.paddingBottom =\n        0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext =\n      this.pageFloatLayoutContext.getPageFloatLayoutContext(\n        float.floatReference,\n      );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments =\n      context.getStashedFloatFragments(floatReference);\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n            stashedFragment.continuations[0].float,\n          );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy =\n      new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n        nodeContext,\n      );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  createJustificationAdjustmentElement(\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n    vertical: boolean,\n  ): HTMLElement {\n    const span = doc.createElement(\"span\") as HTMLElement;\n    span.style.visibility = \"hidden\";\n    span.style.verticalAlign = \"top\";\n    span.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    const inner = doc.createElement(\"span\") as HTMLElement;\n    inner.style.fontSize = \"0\";\n    inner.style.lineHeight = \"0\";\n    inner.textContent = \" #\";\n    span.appendChild(inner);\n\n    // Measure inline-start and inline-end edge positions of the line box,\n    // taking (exclusion) floats into consideration\n    span.style.display = \"block\";\n    span.style.textIndent = \"0\";\n    span.style.textAlign = \"left\";\n    parentNode.insertBefore(span, insertionPoint);\n    const leftPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"right\";\n    const rightPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"\";\n    if (Base.checkInlineBlockJustificationBug(document.body)) {\n      // For Chrome\n      span.style.display = \"inline\";\n    } else {\n      // For Firefox, Edge and IE\n      span.style.display = \"inline-block\";\n    }\n    const padding = vertical\n      ? rightPos.top - leftPos.top\n      : rightPos.left - leftPos.left;\n    const paddingStr = padding >= 1 ? `${padding - 1}px` : \"100%\";\n    if (vertical) {\n      span.style.paddingTop = paddingStr;\n    } else {\n      span.style.paddingLeft = paddingStr;\n    }\n    return span;\n  }\n\n  addAndAdjustJustificationElement(\n    nodeContext: Vtree.NodeContext,\n    insertAfter: boolean,\n    node: Node,\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n  ): HTMLElement {\n    fixJustificationOnHyphen(nodeContext, insertAfter, node, insertionPoint);\n    return this.createJustificationAdjustmentElement(\n      insertionPoint,\n      doc,\n      parentNode,\n      nodeContext.vertical,\n    );\n  }\n\n  compensateJustificationLineHeight(\n    span: Element,\n    br: Element,\n    nodeContext: Vtree.NodeContext,\n  ) {\n    const spanRect = this.clientLayout.getElementClientRect(span);\n    const brRect = this.clientLayout.getElementClientRect(br);\n    if (nodeContext.vertical) {\n      (br as HTMLElement).style.marginRight = `${\n        brRect.right - spanRect.right\n      }px`;\n      (br as HTMLElement).style.width = \"0px\";\n    } else {\n      (br as HTMLElement).style.marginTop = `${spanRect.top - brRect.top}px`;\n      (br as HTMLElement).style.height = \"0px\";\n    }\n    br.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n  }\n\n  /**\n   * Fix justification of the last line of text broken across pages (if\n   * needed).\n   */\n  fixJustificationIfNeeded(\n    nodeContext: Vtree.NodeContext,\n    endOfColumn: boolean,\n  ): void {\n    if (nodeContext.after && !nodeContext.inline) {\n      return;\n    }\n    if (endOfColumn) {\n      let textAlign = \"\";\n      for (\n        let parent = nodeContext.parent;\n        parent && !textAlign;\n        parent = parent.parent\n      ) {\n        if (!parent.inline && parent.viewNode) {\n          textAlign = (parent.viewNode as HTMLElement).style.textAlign;\n        }\n      }\n      if (textAlign !== \"justify\") {\n        return;\n      }\n    }\n    const node = nodeContext.viewNode;\n    const doc = node.ownerDocument;\n    const insertAfter =\n      endOfColumn && (nodeContext.after || node.nodeType != 1);\n    let insertionPoint = insertAfter ? node.nextSibling : node;\n    if (insertionPoint && !insertionPoint.parentNode) {\n      // Possible if removeSelf = false in finishBreak()\n      insertionPoint = null;\n    }\n    const parentNode =\n      node.parentNode || (nodeContext.parent && nodeContext.parent.viewNode);\n    if (!parentNode) {\n      // Possible if nothing was added to the column\n      return;\n    }\n    const span = this.addAndAdjustJustificationElement(\n      nodeContext,\n      insertAfter,\n      node,\n      insertionPoint,\n      doc,\n      parentNode,\n    );\n    if (!endOfColumn) {\n      const br = doc.createElement(\"div\") as HTMLElement;\n      parentNode.insertBefore(br, insertionPoint);\n      this.compensateJustificationLineHeight(span, br, nodeContext);\n    }\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"processLineStyling\");\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              this.fixJustificationIfNeeded(nodeContext, false);\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos - minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          this.postLayoutBlock(nodeContext, checkPoints);\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n    const viewNode = nodeContext.viewNode;\n    if (viewNode.nodeType != 1) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elments\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        if (node.nodeType != 1) {\n          if (!haveStart) {\n            if (node.parentNode == null) {\n              endNotReached = false;\n            } else {\n              range.setStartBefore(node);\n              haveStart = true;\n            }\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(node as Element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          /^r(uby|[bt]c?)$/.test((node as Element).localName) ||\n          isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(node as Element).display,\n          )\n        ) {\n          // ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    nodeContext.walkUpBlocks((block) => {\n      if (block.inheritedProps[\"box-decoration-break\"] === \"clone\") {\n        Asserts.assert(block.viewNode instanceof Element);\n        const paddingBorders = this.getComputedPaddingBorder(\n          block.viewNode as Element,\n        );\n        clonedPaddingBorder += block.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (block.display === \"table\") {\n          clonedPaddingBorder += block.blockBorderSpacing;\n        }\n      }\n    });\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing =\n      this.findFirstOverflowingEdgeAndCheckPoint(checkPoints);\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && blockEdge < edge) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n    edge: number;\n    checkPoint: Vtree.NodeContext | null;\n  } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch ((flowPosition.sourceNode as Element).namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    switch (clear) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (this.vertical) {\n        let wAdj = afterEdge + margin.right - clearEdge;\n        if (wAdj > 0 == margin.right >= 0) {\n          // In addition to collapsed portion\n          wAdj += margin.right;\n        }\n        spacer.style.marginLeft = `${wAdj}px`;\n      } else {\n        let hAdj = clearEdge - (afterEdge + margin.top);\n        if (hAdj > 0 == margin.top >= 0) {\n          // In addition to collapsed portion\n          hAdj += margin.top;\n        }\n        spacer.style.marginBottom = `${hAdj}px`;\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent?.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak() {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge && Break.isForcedBreakValue(breakAtTheEdge))\n      );\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              nodeContext.formattingContext,\n            );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // new formatting context, or float or flex container\n                // (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              const element = nodeContext.sourceNode as Element;\n              // Make breakable after svg and math elements\n              // (Fix for issue #750)\n              if (\n                element.localName === \"svg\" ||\n                element.localName === \"math\" ||\n                element.getAttribute(\"data-math-typeset\") === \"true\"\n              ) {\n                onStartEdges = false;\n                lastAfterNodeContext = nodeContext.copy();\n                trailingEdgeContexts.push(lastAfterNodeContext);\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  null,\n                  nodeContext.breakAfter,\n                );\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                break;\n              }\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (\n                (nodeContext.pageType != nodeContext.parent?.pageType || // Fix for issue #771\n                  !Break.isForcedBreakValue(breakAtTheEdge)) && // Fix for issue #722\n                !this.layoutConstraint.allowLayout(nodeContext)\n              ) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              formattingContext,\n            );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor =\n        new LayoutProcessor.LayoutProcessorResolver().find(formattingContext);\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.top\n        : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.bottom\n        : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    let penalty = checkPoints[0].breakPenalty;\n    if (penalty) {\n      // Fix for issue #546\n      let block = checkPoints[0];\n      while (block.parent && block.inline) {\n        block = block.parent;\n      }\n      penalty = block.breakPenalty;\n    }\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext =\n                  this.nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats =\n      this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder =\n      this.column.calculateClonedPaddingBorder(parentNodeContext);\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\nexport function fixJustificationOnHyphen(\n  nodeContext: Vtree.NodeContext,\n  insertAfter: boolean,\n  node: Node,\n  insertionPoint: Node,\n): void {\n  if (Base.checkSoftWrapOpportunityAfterHyphenBug(document.body)) {\n    const hyphenChar = resolveHyphenateCharacter(nodeContext);\n    const prevSibling = insertAfter ? node : node.previousSibling;\n    const prevText = prevSibling ? prevSibling.textContent : \"\";\n    if (prevText.charAt(prevText.length - 1) === hyphenChar) {\n      const doc = node.ownerDocument;\n      const parent = node.parentNode;\n      if (Base.checkSoftWrapOpportunityByWbrBug(document.body)) {\n        // For IE\n        parent.insertBefore(doc.createTextNode(\" \"), insertionPoint);\n      } else {\n        // For Edge\n        parent.insertBefore(doc.createElement(\"wbr\"), insertionPoint);\n      }\n    }\n  }\n}\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord ? resolveHyphenateCharacter(nodeContext) : \"\",\n    );\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  /**\n   * @override\n   */\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  /**\n   * @override\n   */\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  /**\n   * @override\n   */\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n{\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements\n{\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  /**\n   * @return\n   */\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (nodeContext && this.isAfterLastContent(nodeContext)) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode =\n          nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor\n{\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext =\n      getRepetitiveElementsOwnerFormattingContextOrNull(nodeContext);\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as Element;\n    const verticalAlign = this.cellNodeContext.verticalAlign;\n    if (verticalAlign === \"middle\" || verticalAlign === \"bottom\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext =\n      position.formattingContext as TableFormattingContext;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = 0;\n    if (!formattingContext.isFreelyFragmentableRow(row)) {\n      penalty += 10;\n    }\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  isFreelyFragmentableRow(row: TableRow): boolean {\n    return row.getMinimumHeight() > this.tableWidth / 2;\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  /** @override */\n  saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  /** @override */\n  restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset\n{\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode =\n              nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  /** @override */\n  startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer =\n      cellViewNode.ownerDocument.createElement(\"div\");\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions =\n      this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy =\n                  rowNodeContext.viewNode.ownerDocument.createElement(\"td\");\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext =\n                VtreeImpl.makeNodeContextFromNodePositionStep(\n                  cellNodePosition.steps[0],\n                  rowNodeContext,\n                );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(\n      this.currentRowIndex,\n    ).cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions[cell.columnIndex];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (\n          this.column.layoutContext as Vgen.ViewFactory\n        ).xmldoc.getElementOffset(tdNodeStep.node as Element);\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    if (!cell) {\n      // Fix for Issue #712\n      state.break = true;\n      return Task.newResult(true);\n    }\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      return vertical ? rect[\"height\"] : rect[\"width\"];\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells =\n          formattingContext.getRowSpanningCellsOverflowingTheRow(rowIndex);\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext =\n              cellFragment.findAcceptableBreakPosition().nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode =\n              cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (!repetitiveElements) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n  Base.setCSSProperty(cellContentElement, \"overflow\", \"hidden\");\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements =\n      this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode =\n      this.tableFormattingContext.getRootViewNode(initialPosition);\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /**\n   * @override\n   */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /**\n   * @override\n   */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /**\n   * @override\n   */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints =\n      this.collectCellFragmentLayoutConstraints(\n        positionAfter,\n        formattingContext,\n      );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints:\n          entry.fragment.pseudoColumn.getColumn().fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Ident,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n  return otherColumns.every((c) => lastColumnBlockSize > c.computedBlockSize);\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Logging from \"./logging\";\nimport { ValidationTxt } from \"./assets\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(public where: number, public success: boolean) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (\n        this.nodes[0].validator as PrimitiveValidator\n      ).combine(group.nodes[0].validator as PrimitiveValidator);\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 1;\n\nexport const ALLOW_STR = 2;\n\nexport const ALLOW_IDENT = 4;\n\nexport const ALLOW_POS_NUMERIC = 8;\n\nexport const ALLOW_POS_NUM = 16;\n\nexport const ALLOW_POS_INT = 32;\n\nexport const ALLOW_COLOR = 64;\n\nexport const ALLOW_URL = 128;\n\nexport const ALLOW_NEGATIVE = 256;\n\nexport const ALLOW_ZERO = 512;\n\nexport const ALLOW_ZERO_PERCENT = 1024;\n\nexport const ALLOW_SLASH = 2048;\n\nexport const ALLOW_URANGE = 4096;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      return color;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: Css.URange): Css.Val {\n    if (this.allowed & ALLOW_URANGE) {\n      return urange;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: Css.URange): Css.Val {\n    return this.validateSingle(urange);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(public readonly name: string, group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(validatorSet: ValidatorSet, public readonly name: string) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(validatorSet: ValidatorSet, public readonly names: string[]) {\n    super(validatorSet, names[0]);\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] || this.validatorSet.defaultValues[name],\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateInherit(important: boolean, receiver: PropertyReceiver): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, Css.ident.inherit, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    this.error = true;\n    return null;\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val = values[name] || this.validatorSet.defaultValues[name];\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\n      \"font-family\",\n      \"line-height\",\n      \"font-size\",\n      \"font-stretch\",\n      \"font-variant-ligatures\",\n      \"font-variant-caps\",\n      \"font-variant-numeric\",\n      \"font-variant-east-asian\",\n    );\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    const fontVariant = this.values[\"font-variant_css2\"];\n    if (fontVariant) {\n      delete this.values[\"font-variant_css2\"];\n      this.values[\"font-variant-caps\"] = fontVariant;\n    }\n    const fontStretch = this.values[\"font-stretch_css3\"];\n    if (fontStretch) {\n      delete this.values[\"font-stretch_css3\"];\n      this.values[\"font-stretch\"] = fontStretch;\n    }\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == CssTokenizer.TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == CssTokenizer.TokenType.HASH) {\n      cssval = CssParser.colorFromHash(token.text);\n    } else if (token.type == CssTokenizer.TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"HASHCOLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"URANGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URANGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == CssTokenizer.TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == CssTokenizer.TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != CssTokenizer.TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == CssTokenizer.TokenType.COMMA);\n      if (token.type != CssTokenizer.TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != CssTokenizer.TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != CssTokenizer.TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != CssTokenizer.TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case CssTokenizer.TokenType.INT: {\n            const idents = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.BAR:\n            setop(\"|\");\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case CssTokenizer.TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != CssTokenizer.TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == CssTokenizer.TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != CssTokenizer.TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != CssTokenizer.TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == CssTokenizer.TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case CssTokenizer.TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case CssTokenizer.TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case CssTokenizer.TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (\n        token.type == CssTokenizer.TokenType.IDENT &&\n        shorthandValidators[token.text]\n      ) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              // `font-variant_css2` and `font-stretch_css3` are not real properties\n              if (!token.text.includes(\"_\")) {\n                propList.push(token.text);\n              }\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        const pval = this.defaultValues[pname];\n        if (!pval) {\n          Logging.logger.warn(\"Unknown property in makePropSet:\", pname);\n        } else {\n          map[pname] = pval;\n        }\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      receiver.unknownProperty(origName, value);\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        value === Css.ident.inherit || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (value === Css.ident.inherit) {\n        shorthand.propagateInherit(important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  /**\n   * @return void\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv = this.style[name];\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed && this.displayValue() !== Css.ident.none;\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if (\n      (node.nodeType === Node.TEXT_NODE ||\n        node.nodeType === Node.CDATA_SECTION_NODE) &&\n      (this.atBlockStart || this.atFlowStart) &&\n      box.hasBox()\n    ) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      Asserts.assert(whitespace !== null);\n      if (!Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name];\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    [\"writing-mode\", \"direction\"].forEach((propName) => {\n      if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n        // Copy it over, but keep it at the root element as well.\n        this.rootStyle[propName] = elemStyle[propName];\n      }\n    });\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? elemStyle[\"background-color\"].evaluate(this.context)\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? elemStyle[\"background-image\"].evaluate(this.context)\n        : (null as Css.Val);\n      if (\n        (backgroundColor && backgroundColor !== Css.ident.inherit) ||\n        (backgroundImage && backgroundImage !== Css.ident.inherit)\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      const fontSize = elemStyle[\"font-size\"];\n      let isRelativeFontSize = true;\n      if (fontSize) {\n        const val = fontSize.evaluate(this.context);\n        let px = val.num;\n        switch (val.unit) {\n          case \"em\":\n          case \"rem\":\n            px *= this.context.initialFontSize;\n            break;\n          case \"ex\":\n            px *=\n              (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n              Exprs.defaultUnitSizes[\"em\"];\n            break;\n          case \"%\":\n            px *= this.context.initialFontSize / 100;\n            break;\n          default: {\n            const unitSize = Exprs.defaultUnitSizes[val.unit];\n            if (unitSize) {\n              px *= unitSize;\n            }\n            isRelativeFontSize = false;\n          }\n        }\n        this.context.rootFontSize = px;\n        this.context.isRelativeRootFontSize = isRelativeFontSize;\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"];\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"];\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"];\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore =\n                box.afterBox.getBreakValue(\"before\");\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n\n        if (blockStartOffset === 0) {\n          // Named page type at first page\n          const pageType = style[\"page\"]?.value.toString();\n          if (pageType && pageType.toLowerCase() !== \"auto\") {\n            this.cascade.firstPageType = pageType;\n          }\n        }\n\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (this.bodyReached && blockStartOffset === 0) {\n          // body reached but the named page type at first page is not determined\n          // (Fix for issue #770)\n          continue;\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const traitProps: { [key: string]: Css.Val } = {\n  \"font-style\": Css.ident.normal,\n  \"font-stretch\": Css.ident.normal,\n  \"font-weight\": Css.ident.normal,\n  \"unicode-range\": Css.fullURange,\n};\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop in traitProps) {\n    sb.append(\" \");\n    sb.append(properties[prop].toString());\n  }\n  return sb.toString();\n}\n\nexport function fillDefaults(properties: { [key: string]: Css.Val }): void {\n  for (const prop in traitProps) {\n    if (!properties[prop]) {\n      properties[prop] = traitProps[prop];\n    }\n  }\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  fillDefaults(result);\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop in traitProps) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop in traitProps) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const probe = this.body.ownerDocument.createElement(\"span\");\n    probe.textContent = \"M\";\n    const killTime = new Date().valueOf() + 1000;\n    const style = this.head.ownerDocument.createElement(\"style\");\n    const bogusData = bogusFontData + bogusFontCounter++;\n    style.textContent = viewFontFace.makeAtRule(\"\", Net.makeBlob([bogusData]));\n    this.head.appendChild(style);\n    const probeCont = this.body.ownerDocument.createElement(\"span\");\n    probeCont.style.width = \"0\";\n    probeCont.style.height = \"0\";\n    probeCont.style.overflow = \"hidden\";\n    probeCont.appendChild(probe);\n    this.body.appendChild(probeCont);\n    probe.style.visibility = \"hidden\";\n    probe.style.fontFamily = fontFamily;\n    for (const pname in traitProps) {\n      Base.setCSSProperty(probe, pname, props[pname].toString());\n    }\n    const rect = probe.getBoundingClientRect();\n    const initWidth = rect.right - rect.left;\n    const initHeight = rect.bottom - rect.top;\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    Logging.logger.info(\"Starting to load font:\", src);\n    let loaded = false;\n    frame\n      .loop(() => {\n        const rect = probe.getBoundingClientRect();\n        const currWidth = rect.right - rect.left;\n        const currHeight = rect.bottom - rect.top;\n        if (initWidth != currWidth || initHeight != currHeight) {\n          loaded = true;\n          return Task.newResult(false);\n        }\n        const currTime = new Date().valueOf();\n        if (currTime > killTime) {\n          return Task.newResult(false);\n        }\n        return frame.sleep(10);\n      })\n      .then(() => {\n        if (loaded) {\n          Logging.logger.info(\"Loaded font:\", src);\n        } else {\n          Logging.logger.warn(\"Failed to load font:\", src);\n        }\n        this.body.removeChild(probeCont);\n        frame.finish(viewFontFace);\n      });\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    let fetcher = this.srcURLMap[src];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.warn(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(src)\n          : null;\n        if (deobfuscator) {\n          Net.ajax(src, Net.XMLHttpRequestResponseType.BLOB).then((xhr) => {\n            if (!xhr.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(xhr.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[src] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>,\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(scope: Exprs.LexicalScope, public pageMaster: PageMaster) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>,\n> extends PageBox<I> {\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance,\n> extends PageBox<I> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSinglUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      this.propagatePropertyToElement(\n        context,\n        element,\n        passSingleUriContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos =\n            ((containerSize + columnGap) * i) / columnCount -\n            columnGap / 2 +\n            container.paddingLeft -\n            ruleWidth / 2;\n          const size =\n            container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    if (style[\"content\"]) {\n      style[\"content\"] = style[\"content\"].filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-ligatures\",\n  \"font-variant-caps\",\n  \"font-variant-numeric\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-shadow\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    Base.setCSSProperty(container.element, \"overflow\", \"hidden\"); // default value\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  let writingMode = style[\"writing-mode\"];\n  writingMode = writingMode && writingMode.value;\n  let direction = style[\"direction\"];\n  direction = direction && direction.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a10: { width: new Css.Numeric(26, \"mm\"), height: new Css.Numeric(37, \"mm\") },\n  a9: { width: new Css.Numeric(37, \"mm\"), height: new Css.Numeric(52, \"mm\") },\n  a8: { width: new Css.Numeric(52, \"mm\"), height: new Css.Numeric(74, \"mm\") },\n  a7: { width: new Css.Numeric(74, \"mm\"), height: new Css.Numeric(105, \"mm\") },\n  a6: { width: new Css.Numeric(105, \"mm\"), height: new Css.Numeric(148, \"mm\") },\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  a2: { width: new Css.Numeric(420, \"mm\"), height: new Css.Numeric(594, \"mm\") },\n  a1: { width: new Css.Numeric(594, \"mm\"), height: new Css.Numeric(841, \"mm\") },\n  a0: {\n    width: new Css.Numeric(841, \"mm\"),\n    height: new Css.Numeric(1189, \"mm\"),\n  },\n  b10: { width: new Css.Numeric(31, \"mm\"), height: new Css.Numeric(44, \"mm\") },\n  b9: { width: new Css.Numeric(44, \"mm\"), height: new Css.Numeric(62, \"mm\") },\n  b8: { width: new Css.Numeric(62, \"mm\"), height: new Css.Numeric(88, \"mm\") },\n  b7: { width: new Css.Numeric(88, \"mm\"), height: new Css.Numeric(125, \"mm\") },\n  b6: { width: new Css.Numeric(125, \"mm\"), height: new Css.Numeric(176, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  b3: { width: new Css.Numeric(353, \"mm\"), height: new Css.Numeric(500, \"mm\") },\n  b2: { width: new Css.Numeric(500, \"mm\"), height: new Css.Numeric(707, \"mm\") },\n  b1: {\n    width: new Css.Numeric(707, \"mm\"),\n    height: new Css.Numeric(1000, \"mm\"),\n  },\n  b0: {\n    width: new Css.Numeric(1000, \"mm\"),\n    height: new Css.Numeric(1414, \"mm\"),\n  },\n  c10: { width: new Css.Numeric(28, \"mm\"), height: new Css.Numeric(40, \"mm\") },\n  c9: { width: new Css.Numeric(40, \"mm\"), height: new Css.Numeric(57, \"mm\") },\n  c8: { width: new Css.Numeric(57, \"mm\"), height: new Css.Numeric(81, \"mm\") },\n  c7: { width: new Css.Numeric(81, \"mm\"), height: new Css.Numeric(114, \"mm\") },\n  c6: { width: new Css.Numeric(114, \"mm\"), height: new Css.Numeric(162, \"mm\") },\n  c5: { width: new Css.Numeric(162, \"mm\"), height: new Css.Numeric(229, \"mm\") },\n  c4: { width: new Css.Numeric(229, \"mm\"), height: new Css.Numeric(324, \"mm\") },\n  c3: { width: new Css.Numeric(324, \"mm\"), height: new Css.Numeric(458, \"mm\") },\n  c2: { width: new Css.Numeric(458, \"mm\"), height: new Css.Numeric(648, \"mm\") },\n  c1: { width: new Css.Numeric(648, \"mm\"), height: new Css.Numeric(917, \"mm\") },\n  c0: {\n    width: new Css.Numeric(917, \"mm\"),\n    height: new Css.Numeric(1297, \"mm\"),\n  },\n  \"jis-b10\": {\n    width: new Css.Numeric(32, \"mm\"),\n    height: new Css.Numeric(45, \"mm\"),\n  },\n  \"jis-b9\": {\n    width: new Css.Numeric(45, \"mm\"),\n    height: new Css.Numeric(64, \"mm\"),\n  },\n  \"jis-b8\": {\n    width: new Css.Numeric(64, \"mm\"),\n    height: new Css.Numeric(91, \"mm\"),\n  },\n  \"jis-b7\": {\n    width: new Css.Numeric(91, \"mm\"),\n    height: new Css.Numeric(128, \"mm\"),\n  },\n  \"jis-b6\": {\n    width: new Css.Numeric(128, \"mm\"),\n    height: new Css.Numeric(182, \"mm\"),\n  },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  \"jis-b3\": {\n    width: new Css.Numeric(364, \"mm\"),\n    height: new Css.Numeric(515, \"mm\"),\n  },\n  \"jis-b2\": {\n    width: new Css.Numeric(515, \"mm\"),\n    height: new Css.Numeric(728, \"mm\"),\n  },\n  \"jis-b1\": {\n    width: new Css.Numeric(728, \"mm\"),\n    height: new Css.Numeric(1030, \"mm\"),\n  },\n  \"jis-b0\": {\n    width: new Css.Numeric(1030, \"mm\"),\n    height: new Css.Numeric(1456, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marks = style[\"marks\"];\n  if (marks && marks.value !== Css.ident.none) {\n    pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n  }\n  const bleed = style[\"bleed\"];\n  if (!bleed || bleed.value === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks) {\n      let hasCrop = false;\n      if (marks.value.isSpaceList()) {\n        hasCrop = (marks.value as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks.value === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.value && bleed.value.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed.value as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    pageSizeAndBleed.bleed.num *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    pageSizeAndBleed.bleedOffset.num *\n    context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false);\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\"stroke\", \"black\");\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"];\n  if (marks) {\n    const value = marks.value;\n    if (value.isSpaceList()) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Css.toNumber(defaultPrinterMarkOffset, context);\n  const lineLength = Css.toNumber(defaultPrinterMarkLineLength, context);\n\n  if (bleed) {\n    const bgcolor = cascadedPageStyle[\"background-color\"];\n    if (bgcolor && bgcolor.value) {\n      page.bleedBox.style.backgroundColor = bgcolor.value.stringValue();\n    }\n  }\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (val && val.value !== Css.ident.inherit) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    this.hasAutoSize_ = !PageMaster.toExprAuto(\n      scope,\n      style[isHorizontal ? \"width\" : \"height\"],\n      new Exprs.Numeric(scope, 0, \"px\"),\n    );\n  }\n\n  /**\n   *  @override\n   */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /**\n   * @override\n   */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return false;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n    style[startSide] = new Css.Expr(marginStart);\n    style[endSide] = new Css.Expr(marginEnd);\n    style[`margin-${startSide}`] = Css.numericZero;\n    style[`margin-${endSide}`] = Css.numericZero;\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n    style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n    page.pageAreaElement = container.element as HTMLElement;\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(\n        element,\n        \"flex-flow\",\n        this.vertical ? \"row\" : \"column\",\n      );\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(context: Exprs.Context): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(pageType: string): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], pageType, style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop];\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size = style[\"size\"];\n    if (size) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      pageMasterStyle[\"width\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"width\"],\n        new CssCascade.CascadeValue(pageSize.width, priority),\n      );\n      pageMasterStyle[\"height\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"height\"],\n        new CssCascade.CascadeValue(pageSize.height, priority),\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsBlankPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const blankPage = new Exprs.Named(this.scope, \"blank-page\");\n    if (blankPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, parent?.condition, parent, null, validatorSet, false);\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"blank\":\n          this.chain.push(new IsBlankPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        let result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(props, n, noPageSelectorProps[n]);\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          const prevCascVal = CssCascade.getProp(props, name);\n          result = prevCascVal\n            ? CssCascade.cascadeValues(null, result, prevCascVal)\n            : result;\n          CssCascade.setProp(props, name, result);\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  /**\n   * @override\n   */\n  makeApplyRuleAction(specificity: number): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap = {};\n\nexport const frontEdgeBlackListHor: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-top\": \"0px\",\n  \"padding-top\": \"0px\",\n  \"border-top-width\": \"0px\",\n  \"border-top-style\": \"none\",\n  \"border-top-color\": \"transparent\",\n  \"border-top-left-radius\": \"0px\",\n  \"border-top-right-radius\": \"0px\",\n};\n\nexport const frontEdgeBlackListVert: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-right\": \"0px\",\n  \"padding-right\": \"0px\",\n  \"border-right-width\": \"0px\",\n  \"border-right-style\": \"none\",\n  \"border-right-color\": \"transparent\",\n  \"border-top-right-radius\": \"0px\",\n  \"border-bottom-right-radius\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListHor: { [key: string]: string } = {\n  \"margin-top\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListVert: { [key: string]: string } = {\n  \"margin-right\": \"0px\",\n};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext\n{\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /**\n   * @override\n   */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"];\n          if (\n            !content ||\n            content === Css.ident.normal ||\n            content === Css.ident.none\n          ) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle = (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createRefShadow\");\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createShadows\");\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (templateURLVal instanceof Css.URL) {\n      const url = (templateURLVal as Css.URL).url;\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n      });\n      cont2.then((shadow) => {\n        shadow = this.createPseudoelementShadow(\n          element,\n          isRoot,\n          cascStyle,\n          computedStyle,\n          styler,\n          context,\n          shadowContext,\n          shadow,\n        );\n        frame.finish(shadow);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      (name, cascVal) => {\n        let value = cascVal.evaluate(context, name);\n        if (name == \"font-family\") {\n          value = this.docFaces.filterFontFamily(value);\n        }\n        return value;\n      },\n    );\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"] as Css.Ident;\n    const displayValues = Display.getComputedDislayValue(\n      (computedStyle[\"display\"] as Css.Ident) || Css.ident.inline,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(elementStyle: CssCascade.ElementStyle): {\n    lang: string | null;\n    elementStyle: CssCascade.ElementStyle;\n  } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.isRelativeRootFontSize\n      ? this.context.initialFontSize // Fix for issue #549\n      : this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const value = CssCascade.getProp(style, name);\n        if (value.value !== Css.ident.inherit) {\n          props[name] = value.filterValue(inheritanceVisitor);\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps =\n      CssCascade.getPolyfilledInheritedProps().filter(\n        (name) => computedStyle[name],\n      );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n            }\n          } else {\n            props[name] = value;\n          }\n          delete computedStyle[name];\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Ident,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? (this.nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const floatReference =\n      elementStyle[\"float-reference\"] &&\n      PageFloats.floatReferenceOf(\n        elementStyle[\"float-reference\"].value.toString(),\n      );\n    if (\n      this.nodeContext.parent &&\n      floatReference &&\n      PageFloats.isPageFloat(floatReference)\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    styler.processContent(element, computedStyle);\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"];\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext as Vtree.ShadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"];\n      let floatSide = computedStyle[\"float\"];\n      let clearSide = computedStyle[\"clear\"];\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"],\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute =\n        Display.establishesCBForAbsolute(position);\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      if (\n        floating ||\n        (computedStyle[\"break-inside\"] &&\n          computedStyle[\"break-inside\"] !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      this.nodeContext.floatMinWrapBlock =\n        computedStyle[\"float-min-wrap-block\"] || null;\n      this.nodeContext.columnSpan = computedStyle[\"column-span\"];\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (breakAfter) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (breakBefore) {\n          this.nodeContext.breakBefore = breakBefore.toString();\n        }\n        // Named page type\n        let pageType = computedStyle[\"page\"]?.toString() || null;\n        if (!pageType || pageType.toLowerCase() === \"auto\") {\n          pageType = this.nodeContext.pageType;\n        } else {\n          this.nodeContext.pageType = pageType;\n        }\n        if (this.styler.cascade.currentPageType !== pageType) {\n          if (!this.isAtForcedBreak()) {\n            this.nodeContext.breakBefore = \"page\";\n          }\n          this.styler.cascade.previousPageType =\n            this.styler.cascade.currentPageType;\n          this.styler.cascade.currentPageType = pageType;\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing;\n        let blockBorderSpacing;\n        if (borderSpacing) {\n          if (borderSpacing.isSpaceList()) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      this.nodeContext.footnotePolicy = computedStyle[\"footnote-policy\"];\n      const firstPseudo = computedStyle[\"x-first-pseudo\"];\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter !== Css.ident.auto) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const lineBreak = computedStyle[\"line-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"];\n      this.nodeContext.breakWord =\n        wordBreak === Css.ident.break_all ||\n        lineBreak === Css.ident.anywhere ||\n        overflowWrap === Css.ident.break_word ||\n        overflowWrap === Css.ident.anywhere;\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak =\n          this.processRepeatOnBreak(computedStyle);\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (\n            elementStyle[\"content\"] &&\n            elementStyle[\"content\"].value &&\n            elementStyle[\"content\"].value.url\n          ) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.NCX) {\n        ns = Base.NS.XHTML;\n        if (tag == \"ncx\" || tag == \"navPoint\") {\n          tag = \"div\";\n        } else if (tag == \"navLabel\") {\n          // Cheat here. Translate source to HTML, so it will plug\n          // in into the rest of the pipeline.\n          tag = \"span\";\n          const navParent = element.parentNode;\n          if (navParent) {\n            // find the content element\n            let href: string | null = null;\n            for (let c: Node = navParent.firstChild; c; c = c.nextSibling) {\n              if (c.nodeType != 1) {\n                continue;\n              }\n              const childElement = c as Element;\n              if (\n                childElement.namespaceURI == Base.NS.NCX &&\n                childElement.localName == \"content\"\n              ) {\n                href = childElement.getAttribute(\"src\");\n                break;\n              }\n            }\n            if (href) {\n              tag = \"a\";\n              element = element.ownerDocument.createElementNS(ns, \"a\");\n              element.setAttribute(\"href\", href);\n            }\n          }\n        } else {\n          tag = \"span\";\n        }\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                attributeValue = this.documentURLTransformer.transformFragment(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n                result.setAttribute(attributeName, attributeValue);\n                this.page.registerElementWithId(result, attributeValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = TaskUtil.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.resolveURL(attributeValue);\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(\n              TaskUtil.loadElement(result, attributeValue),\n            );\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              try {\n                result.setAttribute(attributeName, attributeValue);\n              } catch (err) {\n                Logging.logger.warn(err);\n              }\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = TaskUtil.loadElement(image, delayedSrc);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          if (!hasAutoWidth && !hasAutoHeight) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(TaskUtil.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n        if (!this.nodeContext.inline) {\n          let blackList: { [key: string]: string } = null;\n          if (!firstTime) {\n            if (\n              this.nodeContext.inheritedProps[\"box-decoration-break\"] !==\n              \"clone\"\n            ) {\n              blackList = this.nodeContext.vertical\n                ? frontEdgeBlackListVert\n                : frontEdgeBlackListHor;\n            } else {\n              // When box-decoration-break: clone, cloned margins are always\n              // truncated to zero.\n              blackList = this.nodeContext.vertical\n                ? frontEdgeUnforcedBreakBlackListVert\n                : frontEdgeUnforcedBreakBlackListHor;\n            }\n          } else if (atUnforcedBreak && !this.isAtForcedBreak()) {\n            blackList = this.nodeContext.vertical\n              ? frontEdgeUnforcedBreakBlackListVert\n              : frontEdgeUnforcedBreakBlackListHor;\n          }\n          if (blackList) {\n            for (const propName in blackList) {\n              // Fix for issue #737\n              if (propName === \"text-indent\" && !this.isParagraph(element)) {\n                continue;\n              }\n              Base.setCSSProperty(result, propName, blackList[propName]);\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  private isParagraph(element: Element): boolean {\n    switch (element.localName) {\n      case \"p\":\n        return true;\n      case \"html\":\n      case \"body\":\n      case \"main\":\n      case \"article\":\n      case \"section\":\n        return false;\n    }\n    const textLevelElements = {\n      a: true,\n      abbr: true,\n      b: true,\n      bdi: true,\n      bdo: true,\n      cite: true,\n      code: true,\n      data: true,\n      del: true,\n      dfn: true,\n      em: true,\n      i: true,\n      ins: true,\n      kbd: true,\n      mark: true,\n      q: true,\n      ruby: true,\n      s: true,\n      samp: true,\n      small: true,\n      span: true,\n      strong: true,\n      sub: true,\n      sup: true,\n      time: true,\n      u: true,\n      var: true,\n    };\n    for (\n      let childNode = element.firstChild;\n      childNode;\n      childNode = childNode.nextSibling\n    ) {\n      switch (childNode.nodeType) {\n        case Node.TEXT_NODE:\n          if (childNode.nodeValue.trim().length > 0) {\n            return true;\n          }\n          break;\n        case Node.ELEMENT_NODE:\n          if (textLevelElements[(childNode as Element).localName]) {\n            return true;\n          }\n          break;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the current position is at a forced break\n   * (Fix for Issue #690)\n   */\n  private isAtForcedBreak(): boolean {\n    for (\n      let nodeContext = this.nodeContext;\n      nodeContext && !nodeContext.after;\n      nodeContext = nodeContext.parent\n    ) {\n      if (Break.isForcedBreakValue(nodeContext.breakBefore)) {\n        return true;\n      }\n      if (\n        nodeContext.parent &&\n        (nodeContext.parent.sourceNode as Element).firstElementChild !==\n          nodeContext.sourceNode\n      ) {\n        break;\n      }\n    }\n    return false;\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  /**\n   * @return isSVGUrlAttribute\n   */\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext =\n        new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n          parentFormattingContext,\n          this.nodeContext.sourceNode as Element,\n        );\n      (\n        this.nodeContext\n          .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n      ).initializeRepetitiveElements(this.nodeContext.vertical);\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (repeatOnBreak === Css.ident.auto) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const parent = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : this.viewRoot;\n        if (parent) {\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      (pos.sourceNode as Element).namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    const contentShadow = shadow.subShadow || shadow.parentShadow;\n    if (shadow.subShadow) {\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /**\n   * @override\n   */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(TaskUtil.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    const isRoot =\n      this.nodeContext?.parent === null &&\n      this.sourceNode?.parentElement === null &&\n      !!this.viewRoot?.parentElement;\n\n    for (const propName in computedStyle) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      if (!value || value === Css.empty) {\n        continue;\n      }\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value.isNumeric() &&\n        Exprs.needUnitConversion((value as Css.Numeric).unit)\n      ) {\n        // font-size for the root element is already converted to px\n        value = Css.convertNumericToPx(value, this.context);\n      }\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      if (target.localName === \"rt\" && propName === \"font-size\") {\n        // Fix for Issue #673\n        if (this.fixRubyTextFontSize(target, value)) {\n          continue;\n        }\n      }\n      if (isRoot && CssCascade.isInherited(propName)) {\n        // Fix for Issue #568\n        Base.setCSSProperty(\n          this.viewRoot.parentElement,\n          propName,\n          value.toString(),\n        );\n      } else {\n        Base.setCSSProperty(target, propName, value.toString());\n      }\n    }\n  }\n\n  /**\n   * Fix ruby text font size.\n   * Issue #673: Minimum font size setting in Chrome causes ruby font size problem\n   * @param target the rt element\n   * @param value the font-size value\n   * @returns true if the font-size fix is done\n   */\n  fixRubyTextFontSize(target: Element, value: Css.Val): boolean {\n    if (!/Chrome/.test(navigator.userAgent)) {\n      // Do nothing if the browser engine is not \"Chrome\"\n      return false;\n    }\n    if (!value.isNumeric()) {\n      return false;\n    }\n    const numeric = value as Css.Numeric;\n    let fontSizeInPx: number;\n    if (numeric.unit === \"%\" || numeric.unit === \"em\") {\n      const parentElem = this.nodeContext?.parent?.viewNode as Element;\n      const parentFontSize =\n        parentElem && parseFloat(window.getComputedStyle(parentElem).fontSize);\n      fontSizeInPx =\n        (parentFontSize * numeric.num) / (numeric.unit === \"%\" ? 100 : 1);\n    } else {\n      fontSizeInPx = Css.convertNumericToPx(numeric, this.context).num;\n    }\n    if (!fontSizeInPx) {\n      return false;\n    }\n    const minFontSizeInPx = 10; // Default minimum font size setting in Chrome\n    if (fontSizeInPx >= minFontSizeInPx) {\n      return false;\n    }\n    if (!(target instanceof HTMLElement && \"zoom\" in target.style)) {\n      return false;\n    }\n    const zoom = fontSizeInPx / minFontSizeInPx;\n    Base.setCSSProperty(target, \"font-size\", `${minFontSizeInPx}px`);\n    Base.setCSSProperty(target, \"zoom\", `${zoom}`);\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /**\n   * @override\n   */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /**\n   * @override\n   */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /**\n   * @override\n   */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    if (nodeContext) {\n      nodeContext.walkUpBlocks((block) => {\n        const boxDecorationBreak = block.inheritedProps[\"box-decoration-break\"];\n        if (!boxDecorationBreak || boxDecorationBreak === \"slice\") {\n          const elem = block.viewNode as Element;\n          Asserts.assert(elem instanceof Element);\n          if (block.vertical) {\n            Base.setCSSProperty(elem, \"padding-left\", \"0\");\n            Base.setCSSProperty(elem, \"border-left\", \"none\");\n            Base.setCSSProperty(elem, \"border-top-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n          } else {\n            Base.setCSSProperty(elem, \"padding-bottom\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom\", \"none\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-right-radius\", \"0\");\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /**\n   * @override\n   */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"box-decoration-break\": true,\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  page: true,\n};\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /**\n   * @override\n   */\n  getRangeClientRects(range: Range): Vtree.ClientRect[] {\n    const rects = range[\"getClientRects\"]();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.subtractOffsets(rect, layoutBoxRect),\n    );\n  }\n\n  /**\n   * @override\n   */\n  getElementClientRect(element: Element): Vtree.ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.subtractOffsets(rect, layoutBoxRect);\n  }\n\n  /**\n   * @override\n   */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: Element;\n  width: number;\n  height: number;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n    let outerZoomBox = this.root.firstElementChild;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n    let layoutBox = outerZoomBox.nextElementSibling;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox as HTMLElement;\n    this.contentContainer = contentContainer as HTMLElement;\n    this.layoutBox = layoutBox as HTMLElement;\n    const clientLayout = new DefaultClientLayout(this);\n    const computedStyle = clientLayout.getElementComputedStyle(this.root);\n    this.width =\n      opt_width || parseFloat(computedStyle[\"width\"]) || window.innerWidth;\n    this.height =\n      opt_height || parseFloat(computedStyle[\"height\"]) || window.innerHeight;\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n    Base.setCSSProperty(this.contentContainer, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.Response): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.Response,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.XMLHttpRequestResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> =\n  new TaskUtil.Fetcher(() => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  }, \"uaStylesheetBaseFetcher\");\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n    this.pageScope.defineName(\n      \"blank-page\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          const cp = styleInstance.currentLayoutPosition;\n          return cp?.isBlankPage;\n        },\n        \"blank-page\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"];\n      const height = viewportProps[\"height\"];\n      const textZoom = viewportProps[\"text-zoom\"];\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer\n{\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n\n    // Named page type at first page\n    this.styler.cascade.currentPageType = this.styler.cascade.firstPageType;\n\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).thenFinish(frame);\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    Object.keys(pageProps).forEach((selector) => {\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageProps[selector] as any),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /**\n   * @override\n   */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /**\n   * @override\n   */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /**\n   * @override\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  /**\n   * @override\n   */\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    if (isFunc) {\n      if (name === \"selector\") {\n        // TODO: `@supports selector(...)`\n      }\n      return false;\n    }\n    if (!name) {\n      // `(...)` without `name:`\n      return false;\n    }\n\n    let supported = true;\n\n    class SupportsReceiver implements CssValidator.PropertyReceiver {\n      unknownProperty(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      invalidPropertyValue(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      simpleProperty(name: string, value: Css.Val, important): void {}\n    }\n\n    const supportsReceiver = new SupportsReceiver();\n    const val = CssParser.parseValue(\n      this.style.rootScope,\n      new CssTokenizer.Tokenizer(value, null),\n      \"\",\n    );\n    if (!val) {\n      return false;\n    }\n    const validatorSet = (this.xmldoc.store as OPSDocStore).validatorSet;\n    validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      val,\n      false,\n      supportsReceiver,\n    );\n    return supported;\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = Break.startSideValueToBreakValue(\n            flowPos.startSide,\n          );\n          flowPos.startSide = Break.breakValueToStartSideValue(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          const size = cascadedPageStyle[\"size\"];\n          cascadedPageStyle = {}; // clear margin boxes\n          if (size) {\n            // Restore page size (fix for issue #743)\n            cascadedPageStyle[\"size\"] = size;\n          }\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition =\n        this.layoutPositionAtPageStart.flowPositions[parentFlowName];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startSide);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Fix for issue #681\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats.\n    if (\n      deferredFloats.length &&\n      deferredFloats[0].float.floatReference === \"page\"\n    ) {\n      const deferredFloatNode =\n        deferredFloats[0].float.nodePosition.steps[0].node;\n      const deferredFloatOffset =\n        deferredFloatNode &&\n        this.xmldoc.getNodeOffset(deferredFloatNode, 0, false);\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      if (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      ) {\n        return Task.newResult(true);\n      }\n    }\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(float);\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated =\n              pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startSide)) {\n      return Task.newResult(true);\n    }\n    flowPosition.startSide = \"any\";\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition =\n                    this.getLastAfterPositionIfDeferredFloatsExists(\n                      column,\n                      newPosition,\n                    );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    if (column.pageBreakType) {\n                      // forced break\n                      flowPosition.startSide = Break.breakValueToStartSideValue(\n                        column.pageBreakType,\n                      );\n                    }\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint =\n      this.counterStore.createLayoutConstraint(pageIndex);\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            const outerWidth = parseFloat(\n              (boxContainer as HTMLElement).style.width,\n            );\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft + outerWidth - layoutContainer.width,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if (column.width >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition =\n        this.currentLayoutPosition.flowPositions[flowNameStr];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> =\n      Task.newFrame(\"layoutFlowColumns\");\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer =\n          this.viewport.document.createElement(innerContainerTag);\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSinglUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition =\n            this.currentLayoutPosition.flowPositions[flowNameStr];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n\n          // Though it seems that LShapeFloatBug still exists in Firefox, it\n          // apparently does not occur on exclusion floats. See the test file:\n          // test/files/column-break-bug.html\n          // if (Base.checkLShapeFloatBug(this.viewport.root)) {\n          // \t// Simplistic bug workaround: add a copy of the shape translated up.\n          //     exclusions.push(outerShape.withOffset(0, -1.25 * this.queryUnitSize(\"em\", false)));\n          // }\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n    cp.page++;\n\n    const startSide = cp.flowPositions[\"body\"]?.startSide;\n    cp.isBlankPage =\n      startSide && startSide !== \"any\" && this.matchPageSide(startSide);\n    page.isBlankPage = cp.isBlankPage;\n\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle(\n          (page.isBlankPage\n            ? this.styler.cascade.previousPageType\n            : this.styler.cascade.currentPageType) ?? \"\",\n        );\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        pageMaster.pageBox.specified[\"width\"].value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        pageMaster.pageBox.specified[\"height\"].value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> =\n      Task.newFrame(\"layoutNextPage\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n\n    // Shift 1px to workaround Chrome printing bug (Canceled because of another Chrome problem)\n    // page.bleedBox.style.paddingTop = `${evaluatedPageSizeAndBleed.bleed+1}px`;\n\n    // Shift 0.01px to workaround Firefox printing problem\n    // (This small value (< 1/64 px) has no effect to Chrome)\n    page.bleedBox.style.paddingTop = `${\n      evaluatedPageSizeAndBleed.bleed + 0.01\n    }px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {}\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\n// override, so we don't register an error\nexport function processViewportMeta(meta: Element): string {\n  let content = meta.getAttribute(\"content\");\n  if (!content) {\n    return \"\";\n  }\n  const vals = {};\n  let r: RegExpMatchArray;\n  while (\n    (r = content.match(\n      /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n    )) != null\n  ) {\n    content = content.substr(r[0].length);\n    vals[r[1]] = r[2];\n  }\n  const width = vals[\"width\"] - 0;\n  const height = vals[\"height\"] - 0;\n  if (width && height) {\n    return `@-epubx-viewport{width:${width}px;height:${height}px;}`;\n  }\n  return \"\";\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(\"CSS parser:\", mnemonics);\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.Response,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.XMLHttpRequestResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const userAgentXML = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.load(userAgentXML).then(() => {\n        this.triggerSingleDocumentPreprocessing = true;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(response: Net.Response): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> =\n      Task.newFrame(\"OPSDocStore.load\");\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] =\n            Plugin.getHooksForName(Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT);\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        const userAgentURL = Base.resolveURL(\n          \"user-agent-page.css\",\n          Base.resourceBaseURL,\n        );\n        sources.push({\n          url: userAgentURL,\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (!isTocBox) {\n          const elemList =\n            xmldoc.document.querySelectorAll(\"style, link, meta\");\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const rel = elem.getAttribute(\"rel\");\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  rel == \"stylesheet\" ||\n                  (rel == \"alternate stylesheet\" && classes)\n                ) {\n                  let src = elem.getAttribute(\"href\");\n                  src = Base.resolveURL(src, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> =\n              Task.newFrame(\"fetchStylesheet\");\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sha1 - Calculate SHA1 hash of the given content.\n */\nimport * as Base from \"./base\";\n\n/**\n * @return big-endian byte sequence\n */\nexport function encode32(n: number): string {\n  return String.fromCharCode(\n    (n >>> 24) & 255,\n    (n >>> 16) & 255,\n    (n >>> 8) & 255,\n    n & 255,\n  );\n}\n\n/**\n * @param bytes big-endian byte sequence\n */\nexport function decode32(bytes: string): number {\n  // Important facts: \"\".charCodeAt(0) == NaN, NaN & 0xFF == 0\n  const b0 = bytes.charCodeAt(0) & 255;\n  const b1 = bytes.charCodeAt(1) & 255;\n  const b2 = bytes.charCodeAt(2) & 255;\n  const b3 = bytes.charCodeAt(3) & 255;\n  return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return big-endian uint32 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int32(bytes: string): number[] {\n  const sb = new Base.StringBuffer();\n  sb.append(bytes);\n  let appendCount = (55 - bytes.length) & 63;\n  sb.append(\"\\u0080\");\n  while (appendCount > 0) {\n    appendCount--;\n    sb.append(\"\\x00\");\n  }\n  sb.append(\"\\x00\\x00\\x00\\x00\");\n  sb.append(encode32(bytes.length * 8));\n  bytes = sb.toString();\n  const h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  const w =\n    /** @type Array.<number> */\n    [] as number[];\n  let i: number;\n  for (let bi = 0; bi < bytes.length; bi += 64) {\n    for (i = 0; i < 16; i++) {\n      w[i] = decode32(bytes.substr(bi + 4 * i, 4));\n    }\n    for (; i < 80; i++) {\n      const q = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n      w[i] = (q << 1) | (q >>> 31);\n    }\n    let a = h[0];\n    let b = h[1];\n    let c = h[2];\n    let d = h[3];\n    let e = h[4];\n    let f: number;\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = ((b & c) | (~b & d)) + 1518500249;\n      } else if (i < 40) {\n        f = (b ^ c ^ d) + 1859775393;\n      } else if (i < 60) {\n        f = ((b & c) | (b & d) | (c & d)) + 2400959708;\n      } else {\n        f = (b ^ c ^ d) + 3395469782;\n      }\n      f += ((a << 5) | (a >>> 27)) + e + w[i];\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = f;\n    }\n    h[0] = (h[0] + a) | 0;\n    h[1] = (h[1] + b) | 0;\n    h[2] = (h[2] + c) | 0;\n    h[3] = (h[3] + d) | 0;\n    h[4] = (h[4] + e) | 0;\n  }\n  return h;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return uint8 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int8(bytes: string): number[] {\n  const h = bytesToSHA1Int32(bytes);\n  const res = [];\n  for (const n of h) {\n    res.push((n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, n & 255);\n  }\n  return res;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return chars with codes 0 - 255 equal to SHA1 hash of the input\n */\nexport function bytesToSHA1Bytes(bytes: string): string {\n  const h = bytesToSHA1Int32(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < h.length; i++) {\n    sb.append(encode32(h[i]));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return hex-encoded SHA1 hash\n */\nexport function bytesToSHA1Hex(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < sha1.length; i++) {\n    sb.append((sha1.charCodeAt(i) | 256).toString(16).substr(1));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return base64-encoded SHA1 hash of the input\n */\nexport function bytesToSHA1Base64(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  Base.appendBase64(sb, sha1);\n  return sb.toString();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"body-child\":\n            if (\n              !srcElem.querySelector(\n                \"[role=doc-toc], [role=directory], nav li a, .toc, #toc\",\n              )\n            ) {\n              // hide elements not containing TOC.\n              computedStyle[\"display\"] = Css.ident.none;\n            }\n            break;\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        firstChild.textContent.trim() === \"\"\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = this.url + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      // Mark if this doc is the primary entry page.\n      const nonTocBoxDoc = this.store.resources[this.url];\n\n      // Make hidden TOC visible in TOC box\n      for (const elem of xmldoc.document.querySelectorAll(\n        \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n      )) {\n        if (elem.hasAttribute(\"hidden\")) {\n          elem.removeAttribute(\"hidden\");\n        }\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          Array.from(\n            page.container.querySelectorAll(\n              \"[data-vivliostyle-toc-box]>*>*>*>*>*[style*='display: none']\",\n            ),\n          ).forEach((bodyChildElem) => {\n            bodyChildElem.setAttribute(\"aria-hidden\", \"true\");\n            bodyChildElem.setAttribute(\"hidden\", \"hidden\");\n          });\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#?(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as SHA1 from \"./sha1\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  startLoadingAsJSON(url: string): void {\n    this.jsonStore.fetch(url);\n  }\n\n  loadPubDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.ajax(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root, haveZipMetadata).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    if (haveZipMetadata) {\n      this.startLoadingAsJSON(url + \"?r=list\");\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root, haveZipMetadata).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(\n    pubURL: string,\n    root: string,\n    haveZipMetadata: boolean,\n  ): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              const zipMetadataResult = haveZipMetadata\n                ? this.loadAsJSON(`${pubURL}?r=list`)\n                : Task.newResult(null);\n              zipMetadataResult.then((zipMetadata) => {\n                opf = new OPFDoc(this, pubURL);\n                opf\n                  .initWithXMLDoc(\n                    opfXML,\n                    encXML,\n                    zipMetadata,\n                    `${pubURL}?r=manifest`,\n                  )\n                  .then(() => {\n                    this.opfByURL[url] = opf;\n                    this.primaryOPFByEPubURL[pubURL] = opf;\n                    frame.finish(opf);\n                  });\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        if (doc.body) {\n          doc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n        }\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(manifestUrl).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.xhtmlToc && opf.xhtmlToc.src === xmldoc.url) {\n              // xhtmlToc is the primari entry (X)HTML\n              if (\n                !doc.querySelector(\n                  \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n                )\n              ) {\n                // TOC is not found in the primari entry (X)HTML\n                opf.xhtmlToc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  // TODO: use UTF8 of uid\n  const sha1Sum = SHA1.bytesToSHA1Int8(uid);\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    let head: Blob;\n    let tail: Blob;\n    if (blob.slice) {\n      head = blob.slice(0, 1040);\n      tail = blob.slice(1040, blob.size);\n    } else {\n      head = blob[\"webkitSlice\"](0, 1040);\n      tail = blob[\"webkitSlice\"](1040, blob.size - 1040);\n    }\n    Net.readBlob(head).then((buf) => {\n      const dataView = new DataView(buf);\n      for (let k = 0; k < dataView.byteLength; k++) {\n        let b = dataView.getUint8(k);\n        b ^= sha1Sum[k % 20];\n        dataView.setUint8(k, b);\n      }\n      frame.finish(Net.makeBlob([dataView, tail]));\n    });\n    return frame.result();\n  };\n}\n\nexport function makeObfuscationKey(uid: string): string {\n  return `1040:${SHA1.bytesToSHA1Hex(uid)}`;\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport function checkMathJax(): void {\n  if (getMathJaxHub()) {\n    CssCascade.supportedNamespaces[Base.NS.MATHML] = true;\n  }\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  ncxToc: OPFItem = null;\n  xhtmlToc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n    checkMathJax();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /**\n       * @override\n       */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /**\n       * @override\n       */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.items.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /**\n       * @override\n       */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURIComponent(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n    zipMetadata: Base.JSON,\n    manifestURL: string,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.xhtmlToc && item.itemProperties[\"nav\"]) {\n          this.xhtmlToc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const tocAttr = pkg.child(\"spine\").attribute(\"toc\")[0];\n    if (tocAttr) {\n      this.ncxToc = this.itemMap[tocAttr];\n    }\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (!zipMetadata) {\n      if (idpfObfURLs.length > 0 && this.uid) {\n        // Have to deobfuscate in JavaScript\n        const deobfuscator = makeDeobfuscator(this.uid);\n        for (let i = 0; i < idpfObfURLs.length; i++) {\n          this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n        }\n      }\n      if (this.prePaginated) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n    const manifestText = new Base.StringBuffer();\n    const obfuscations = {};\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Deobfuscate in the server.\n      const obfuscationKey = makeObfuscationKey(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        obfuscations[idpfObfURLs[i]] = obfuscationKey;\n      }\n    }\n    for (let i = 0; i < zipMetadata.length; i++) {\n      const entry = zipMetadata[i];\n      const encodedPath = entry[\"n\"];\n      if (encodedPath) {\n        const path = decodeURIComponent(encodedPath);\n        const item = this.itemMapByPath[path];\n        let mediaType: string | null = null;\n        if (item) {\n          item.compressed = entry[\"m\"] != 0;\n          item.compressedSize = entry[\"c\"];\n          if (item.mediaType) {\n            mediaType = item.mediaType.replace(/\\s+/g, \"\");\n          }\n        }\n        const obfuscation = obfuscations[path];\n        if (mediaType || obfuscation) {\n          manifestText.append(encodedPath);\n          manifestText.append(\" \");\n          manifestText.append(mediaType || \"application/octet-stream\");\n          if (obfuscation) {\n            manifestText.append(\" \");\n            manifestText.append(obfuscation);\n          }\n          manifestText.append(\"\\n\");\n        }\n      }\n    }\n    this.assignAutoPages();\n    return Net.ajax(\n      manifestURL,\n      Net.XMLHttpRequestResponseType.DEFAULT,\n      \"POST\",\n      manifestText.toString(),\n      \"text/plain\",\n    );\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      (doc && doc.title) ||\n      manifestObj[\"name\"] ||\n      (manifestObj[\"metadata\"] && manifestObj[\"metadata\"][\"title\"]);\n    if (title) {\n      this.metadata[metaTerms.title] = [{ v: title }];\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      const selector =\n        \"[role=doc-toc] a[href],\" +\n        \"[role=directory] a[href],\" +\n        \"nav li a[href],\" +\n        \".toc a[href],\" +\n        \"#toc a[href]\";\n      for (const anchorElem of doc.querySelectorAll(selector)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder =\n              manifestObj[\"readingOrder\"].includes(itemObj);\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url)\n            ) {\n              const baseUrl = manifestUrl\n                ? manifestUrl.replace(/\\/[^/]+$/, \"/\")\n                : this.pubURL;\n              const param = {\n                url: Base.resolveURL(Base.convertSpecialURL(url), baseUrl),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n\n              //TODO: items not in readingOrder should be excluded from linear reading but available with internal link navigation.\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.xhtmlToc = this.items[tocFound];\n      }\n\n      if (!this.xhtmlToc) {\n        this.xhtmlToc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> =\n      Task.newFrame(\"renderSinglePage\");\n    let page = this.makePage(viewItem, pos);\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  private findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    return this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    );\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPagesUpto\");\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getCurrentSpread\");\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(\n        /** @type Vtree.Spread */\n        { left: null, right: null } as Vtree.Spread,\n      );\n    }\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToEPage\");\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToCFI\");\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateTo\");\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      this.findPage(\n        {\n          spineIndex: item.spineIndex,\n          pageIndex: -1,\n          offsetInItem: target ? viewItem.xmldoc.getElementOffset(target) : 0,\n        },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n\n    // Workaround for Chromium problem (issues #758 and #793).\n    // Chromium currently uses legacy engine for multicol and print\n    // and uses new engine (LayoutNG) for non-multicol screen,\n    // so need to use multicol to match screen and print layouts.\n    // This will be unnecessary when the Chromium issue is resolved:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=829028\n    pageCont.style.columnCount = \"1\";\n    pageCont.style.height = \"99999999px\";\n\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n      pageCont.setAttribute(\"aria-hidden\", \"true\");\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (page.offset === 0) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"span\");\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[spineIndex] =\n        [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties =\n        item.itemRefElement.getAttribute(\"properties\");\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.xhtmlToc || opf.ncxToc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(350, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    pageCont.style.visibility = \"hidden\";\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 10}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  haveZipMetadata: boolean;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    const document = window.document;\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = document.getElementById(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.haveZipMetadata = false;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const haveZipMetadata = !!command[\"zipmeta\"];\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL, haveZipMetadata).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n      page.container.setAttribute(\"aria-hidden\", \"true\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n    page.container.setAttribute(\"aria-hidden\", \"false\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(this.window, this.fontSize, viewportElement);\n    }\n  }\n\n  private resolveSpreadView(viewport: Vgen.Viewport): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        // wide enough for a pair of pages of A/B paper sizes, but not too\n        // narrow\n        return viewport.width / viewport.height >= 1.45 && viewport.width > 800;\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const spreadView = this.resolveSpreadView(viewport);\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n    if (\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (\n      this.opfView &&\n      this.opfView.hasPages() &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    if (!this.pageSheetSizeAlreadySet && this.pageRuleStyleElement) {\n      let styleText = \"\";\n      Object.keys(pageSheetSize).forEach((selector) => {\n        styleText += `@page ${selector}{margin:0;size:`;\n        const size = pageSheetSize[selector];\n        styleText += `${size.width}px ${size.height}px;}`;\n      });\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.isTOCVisible();\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.hideTOC();\n      this.opfView.removeRenderedPages();\n    }\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n    if (this.pref.spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage =\n            page.side === Constants.PageSide.LEFT ? spread.left : spread.right;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle:\n                          this.opf.spine[this.pagePosition.spineIndex].title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] =\n                          this.opf.spine[this.pagePosition.spineIndex].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          if (this.renderAllPages) {\n                            this.setReadyState(Constants.ReadyState.COMPLETE);\n                          }\n                          this.callback({ t: \"loaded\" });\n                          frame.finish(p);\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> =\n          Task.newFrame(\"moveTo.showCurrent\");\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer.showCurrent(viewer.currentPage, true).then(() => {\n                loopFrame.continueLoop();\n              });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> =\n              Task.newFrame(\"waitForCommand\");\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: string;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!singleDocumentOptions) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      (this.adaptViewer_.opfView.opf.xhtmlToc ||\n        this.adaptViewer_.opfView.opf.ncxToc)\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n","// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\nimport { VivliostyleViewportCss, VivliostyleViewportScreenCss } from \"./assets\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>${VivliostyleViewportCss}</style>\n          <style>${VivliostyleViewportScreenCss}</style>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer(\n        {\n          viewportElement: this.iframeWin.document.body\n            .firstElementChild as HTMLElement,\n          window: this.iframeWin,\n          debug: true,\n        },\n        {\n          defaultPaperSize: {\n            width: 794, // These numbers give weird output, but not setting them crashes the browser when there is no CSS.\n            height: 1122,\n          },\n        },\n      );\n    return new Promise<void>((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n","import {\n    printHTML\n} from \"../src\"\n\n\ndocument.getElementById('print').addEventListener('click', () => {\n    const html = document.getElementById('html').value,\n        css = document.getElementById('css').value,\n        title = document.getElementById('title').value,\n        htmlDoc = `\n        <!doctype html>\n        <html>\n            <head>\n                <meta charset=\"UTF-8\">\n                <title>${title}</title>\n                <style>${css}</style>\n            <head>\n            <body>${html}</body>\n        </html>`,\n        printCallback = iframeWin => {\n            const pageCount = iframeWin.document.querySelectorAll('[data-vivliostyle-page-container]').length\n            console.log(`page count: ${pageCount}`)\n            iframeWin.print()\n        }\n\n    printHTML(htmlDoc, {\n        title,\n        printCallback,\n        hideIframe: true, // Whether to use a hidden iframe (default: true)\n        removeIframe: true // Whether to remove the iframe after use (default: true)\n    })\n})\n"],"names":["DIFF_DELETE","diff_main","text1","text2","cursor_pos","_fix_unicode","editdiff","oldText","newText","oldRange","index","length","newRange","oldLength","newLength","oldCursor","oldBefore","slice","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","Math","min","oldPrefix","newPrefix","make_edit_splice","cursor","suffixLength","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","i","indexOf","hm","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","j","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","mid_common","diff_halfMatch_","diffs_a","diffs_b","concat","text1_length","text2_length","max_d","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","unshift","push","diff_cleanupMerge","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","pointerend","is_surrogate_pair_end","fix_unicode","pointer","count_delete","count_insert","text_delete","text_insert","splice","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","n","pop","changes","charCode","str","before","oldMiddle","newMiddle","after","tuples","ret","remove_empty_tuples","diff","INSERT","DELETE","EQUAL","PageSide","ReadyState","LogLevel","setDebug","value","isDebug","pageProgressionOf","PageProgression","LTR","RTL","Error","argumentsToErrorInfo","args","a","from","e","shift","error","messages","buildMessageAndStackTrace","stack","frameTrace","toString","HOOKS","logger","opt_console","listeners","this","consoleDebug","msg","debug","log","console","consoleInfo","info","consoleWarn","warn","consoleError","triggerListeners","level","forEach","listener","addListener","arguments","DEBUG","INFO","WARN","ERROR","hooks","registerHook","name","fn","hooksForName","Logging","removeHook","getHooksForName","plugin","Profiler","performanceInstance","timestamps","registerTiming","registerStartTiming","registerEndTiming","noop","forceRegisterStartTiming","timestamp","call","forceRegisterEndTiming","printTimings","st","Object","keys","stamps","l","t","start","end","disable","enable","isEnabled","startEnd","now","fallbackPerformanceInstance","Date","profiler","window","performance","profile","firstLetterPattern","emptyObj","stringToJSON","JSON","parse","stripFragment","url","r","match","baseURL","location","href","setBaseURL","NS","resourceBaseURL","setResourceBaseURL","resolveURL","relURL","test","toLowerCase","substr","lastIndexOf","urlOption","replace","convertSpecialURL","exec","asString","v","PriorityQueue","queue","add","item","parentIndex","parent","compare","peek","remove","result","curr","size","childIndex","knownPrefixes","propNameMap","checkIfPropertySupported","prefix","prop","document","documentElement","style","cssPropName","txt","toUpperCase","getPrefixedPropertyNames","prefixed","setCSSProperty","elem","prefixedPropertyNames","elemStyle","setProperty","err","getCSSProperty","opt_value","propertyNames","getPropertyValue","getLangAttribute","element","lang","getAttributeNS","XML","namespaceURI","XHTML","getAttribute","StringBuffer","list","append","clear","join","escapeChar","escapeCSSIdent","escapeCSSStr","lightURLEncode","encodeURIComponent","isLetter","ch","escapeNameStrToHex","s","escapeRegExp","binarySearch","high","good","h","m","numberCompare","b","indexArray","arr","key","map","multiIndexArray","SimpleEventTarget","dispatchEvent","evt","type","target","currentTarget","addEventListener","capture","removeEventListener","hasVerticalBBoxBug","hasInlineBlockJustificationBug","hasSoftWrapOpportunityAfterHyphenBug","hasSoftWrapOpportunityByWbrBug","getId","node","nodeType","idtxt","escape","unescapeChar","unescape","parseExtVal","extstr","p","parseExt","ext","RefStep","appendTo","sb","applyTo","pos","ChildStep","id","sideBias","child","childElements","children","childElementCount","firstChild","next","nextSibling","OffsetStep","offset","textBefore","textAfter","textLength","textContent","Fragment","steps","fromString","fragstr","decodeURIComponent","parseInt","Base","navigate","doc","ref","trim","text","prependPathFromNode","parentNode","previousSibling","reverse","clonePreferences","pref","fontFamily","lineHeight","margin","hyphenate","columnWidth","horizontal","nightMode","spreadView","pageBorder","enabledMediaTypes","assign","defaultPaperSize","defaultPreferencesInstance","vivliostyle","print","Special","letterbox","viewW","viewH","objW","objH","scale","cssString","cssIdent","makeQualifiedName","objName","memberName","nextKeyIndex","LexicalScope","resolver","scopeKey","zero","one","_true","_false","values","funcs","builtIns","Const","round","sqrt","max","typeof","defineBuiltInName","pageWidth","pageHeight","fontSize","pubTitle","docTitle","Native","defineName","qualifiedName","val","defineFunc","defineBuiltIn","isViewportRelativeLengthUnit","unit","defaultUnitSizes","px","in","pt","pc","cm","mm","q","em","rem","ex","dppx","dpi","dpcm","needUnitConversion","Context","rootScope","viewportWidth","viewportHeight","actualPageWidth","actualPageHeight","initialFontSize","rootFontSize","isRelativeRootFontSize","scopes","pageAreaWidth","pageAreaHeight","pageVertical","getScopeContext","scope","clearScope","queryUnitSize","isRoot","pvw","pvh","vw","vh","evalName","evalCall","params","noBuiltInEval","body","evaluate","apply","evalMediaName","not","enabled","evalMediaTest","feature","req","actual","screen","availWidth","availHeight","pixelDepth","evalSupportsTest","isFunc","queryVal","storeVal","Val","buf","priority","evaluateCore","context","expand","dependCore","other","dependencyCache","dependOuter","cached","depend","isMediaName","Prefix","_this","getOp","evalPrefix","constructor","Infix","lhs","rhs","_this2","getPriority","evalInfix","thisPriority","Logical","Comparison","Additive","Multiplicative","Not","NotMedia","Negate","And","AndMedia","Or","Comma","OrMedia","Lt","Le","Gt","Ge","Eq","Ne","Add","Subtract","Multiply","Divide","Modulo","Numeric","num","_this3","Named","_this4","MediaName","_this5","_this6","Call","_this7","expandedParams","expanded","Cond","cond","ifTrue","ifFalse","_this8","_this9","MediaTest","_this10","SupportsTest","_this11","Param","_this12","and","sub","mul","div","Visitor","visitValues","visit","visitEmpty","empty","visitSlash","slash","visitStr","visitIdent","ident","visitNumeric","numeric","visitNum","visitInt","visitColor","color","visitURL","visitURange","urange","visitSpaceList","visitCommaList","visitFunc","func","visitExpr","expr","FilterVisitor","SpaceList","CommaList","Func","stringValue","toExpr","isExpr","isNumeric","isNum","isIdent","isSpaceList","visitor","Empty","Exprs","instance","Slash","Str","nameTable","Ident","getName","Num","Int","Color","rgb","URL","URange","urangeText","appendList","separator","Expr","toNumber","convertNumericToPx","absolute","all","always","anywhere","auto","avoid","balance","balance_all","block","block_end","block_start","both","bottom","border_box","break_all","break_word","crop","cross","column","exclusive","fixed","flex","footnote","footer","header","hidden","horizontal_tb","inherit","inline","inline_block","inline_end","inline_start","landscape","left","line","list_item","ltr","manual","none","normal","oeb_page_foot","oeb_page_head","page","relative","right","same","snap_block","spread","_static","rtl","table","table_caption","table_cell","table_footer_group","table_header_group","table_row","top","transparent","vertical_lr","vertical_rl","visible","hundredPercent","fullWidth","fullHeight","numericZero","fullURange","processingOrder","processingOrderFn","name1","name2","Number","MAX_VALUE","Rect","Point","Insets","Segment","low","winding","shapeId","Band","segmentCompare","s1","s2","Shape","points","addSegments","prev","withOffset","offsetX","offsetY","shapeForEllipse","cx","cy","rx","ry","PI","sin","cos","shapeForRect","BandIntersection","lowOrHigh","intersectY","isNaN","addBandIntersections","intersections","w1","w2","mergeIntersections","includeCount","excludeCount","shapeCount","windings1","windings2","xranges","inside","intersectionCount","intersection","stillInside","rotateBox","box","unrotateBox","rotateShape","shape","point","normalize","bands","currBand","prevBand","findBand","mid","findUppermostFullyOpenRect","rect","band","topEdge","bottomEdge","findBottommostFullyOpenRect","SetVisitor","propSet","Css","IntVisitor","toInt","def","ShapeVisitor","collect","coords","getShape","width","height","numbers","coord","GeometryUtil","toShape","CountersVisitor","reset","counters","toCounters","UrlTransformVisitor","baseUrl","transformer","transformURL","cloneCounterValues","TokenType","TargetCounterReference","targetId","resolved","pageCounters","spineIndex","pageIndex","equals","isResolved","resolve","unresolve","CounterListener","counterStore","countersOfId","documentURLTransformer","transformFragment","countersById","getExprContentListener","CounterResolver","pageScope","styler","namedStringValues","setStyler","getFragment","getTransformedId","transformedId","getPageCounterVal","format","currentPageCounters","registerPageCounterExpr","getPageCountersVal","getTargetCounters","lookForElement","targetCounters","styleUntilIdIsReached","getTargetPageCounters","currentPage","elementsById","pageCountersById","getTargetCounterVal","countersOfName","resolveReference","pageCountersOfName","saveReferenceOfCurrentPage","getTargetCountersVal","elementCounters","getNamedStringVal","retrievePosition","stringValues","offsets","sort","pageStartOffset","isBlankPage","pageLastOffset","container","querySelectorAll","firstOffset","startOffset","lastOffset","firstExceptOffset","offsetPrev","offsetNext","elementAtOffset","querySelector","elementAtPageStartOffset","firstElementChild","first","last","setNamedString","cascadeInstance","currentElementOffset","CounterStore","previousPageCounters","currentPageCountersStack","pageIndicesById","newReferencesOfCurrentPage","referencesToSolve","referencesToSolveStack","unresolvedReferences","resolvedReferences","pagesCounterExprs","createCounterListener","createCounterResolver","setCurrentPage","definePageCounter","counterName","forceSetPageCounter","pageNumber","updatePageCounters","cascadedPageStyle","resetMap","incrementMap","resetVal","CssProp","resetCounterName","increment","incrementVal","incrementCounterName","counterValues","pushPageCounters","popPageCounters","unresolvedRefs","resolvedRefs","pushed","some","finishPage","ids","oldPageIndex","prevPageCounters","every","getUnresolvedRefsToPage","refs","idRefs","r1","r2","o","pushReferencesToSolve","popReferencesToSolve","exprContentListener","bind","findIndex","createElement","setAttribute","PAGES_COUNTER_ATTR","finishLastPage","viewport","nodes","root","pages","createLayoutConstraint","LayoutConstraint","allowLayout","nodeContext","viewNode","escapeParseSingle","code","String","fromCharCode","escapeParse","Action","Token","precededBySpace","position","EOF","makeActions","spec","NaN","END","INVALID","actionsNormal","SPACE","BANG","STR2","HASH","DOLLAR","PERCENT","AMP","STR1","O_PAR","C_PAR","STAR","PLUS","COMMA","MINUS","DOT","SLASH","INT","COLON","SEMICOL","LT","EQ","GT","QMARK","AT","IDENT","O_BRK","BSLASH","C_BRK","HAT","O_BRC","BAR","C_BRC","TILDE","actionsIdent","ENDIDNT","FUNC","CONT","IDNTESC","actionsNumOrClass","TOCLASS","TONUM","TOIDES","actionsMinus","MINMIN","TOINT","TOIDENT","actionsIdentEsc","ENDIDES","CHKPOSS","FUNCES","actionsInt","ENDINT","PCUNIT","NUMBER","UNIT","actionsNumber","ENDNUM","FrameState","actionsCheckEq","EQTAIL","actionsColon","COL_COL","actionsBar","BAR_BAR","actionsAmp","AMP_AMP","actionsSlash","COMMENT","actionsComment","COMMST","actionsCommentStar","ENDNOTK","actionsMinusMinus","KILL1","actionsLt","LT_BG","actionsLtBang","LT_BG_M","actionsLtBangMinus","KILL2","actionsIdentEscChr","IDESCH","actionsStr1","ENDSTR","STR1ESC","actionsStr2","STR2ESC","actionsStr1Esc","ENDESTR","CHKPOSN","actionsStr2Esc","actionsURL","URL2","URL1","actionsURLInside","ENDURL","CHKSP","URLESC","actionsURLInside1","TERMURL","actionsURLInside2","actionsURLTail","FINURL","Tokenizer","input","handler","indexMask","buffer","head","tail","token","fillBuffer","nthToken","consume","mark","unmark","hasMark","reallocate","newIndexMask","newBuffer","oldIndex","newIndex","mnemonics","actions","tokenType","tokenPosition","tokenText","tokenNum","seenSpace","backslashPos","STR","CLASS","BANG_EQ","NUM","parseFloat","NUMERIC","URANGE","privateCurrentTask","primaryScheduler","currentTask","newFrame","task","frame","Frame","state","ACTIVE","newResult","SyncResultImpl","handle","onErr","raise","TimerImpl","currentTime","valueOf","setTimeout","delay","clearTimeout","Scheduler","timer","timeout","sliceOverTime","wakeupTime","timeoutToken","inTimeSlice","order","setSlice","isTimeSliceOver","arm","newTime","scheduledTime","doTimeSlice","schedule","continuation","opt_delay","c","canceled","resumeInternal","run","opt_name","Task","then","done","running","callbacks","callback","savedTask","suspend","Continuation","otherComp","getTask","scheduler","finish","cancel","exception","waitTarget","interrupt","getScheduler","isRunning","whenDone","unwind","opt_frame","fillStack","f","out","thenAsync","thenReturn","thenFinish","isPending","get","ResultImpl","res1","res2","res","INIT","checkEnvironment","FINISHED","DEAD","timeSlice","sleep","loop","step","more","loopWithFrame","LoopBodyFrame","opt_waitTarget","continueLoop","breakLoop","Fetcher","fetch","arrived","resource","piggybacks","piggibacks","piggyback","hasArrived","waitForFetchers","fetchers","fetcher","loadElement","src","localName","removeAttribute","SVG","setAttributeNS","XLINK","XMLHttpRequestResponseType","VivliostyleViewportScreenCss","VivliostyleViewportCss","ValidationTxt","UserAgentXml","UserAgentPageCss","UserAgentBaseCss","ajax","opt_type","opt_method","opt_data","opt_contentType","request","XMLHttpRequest","response","status","statusText","contentType","responseText","responseXML","responseBlob","open","responseType","onreadystatechange","readyState","DOCUMENT","HTMLDocument","TEXT","makeBlob","contentTypeHeader","getResponseHeader","setRequestHeader","send","overrideMimeType","parts","builderCtr","WebKitBlobBuilder","MSBlobBuilder","builder","getBlob","Blob","StylesheetFlavor","ResourceStore","parser","resources","load","opt_required","opt_message","fetchInner","isTocBox","endsWith","userAgentXmlUrl","isUserAgentXml","TaskUtil","parseJSONResource","store","colorFromHash","ParserHandler","flavor","AUTHOR","getCurrentToken","getScope","startStylesheet","tagSelector","ns","classSelector","pseudoclassSelector","pseudoelementSelector","idSelector","attributeSelector","op","descendantSelector","childSelector","adjacentSiblingSelector","followingSiblingSelector","nextSelector","startSelectorRule","startFontFaceRule","startFootnoteRule","pseudoelem","startViewportRule","startDefineRule","startRegionRule","startPageRule","startPageMarginBoxRule","startWhenRule","startMediaRule","startFlowRule","flowName","startPageTemplateRule","startPageMasterRule","pseudoName","classes","startPartitionRule","startPartitionGroupRule","startRuleBody","property","important","endRule","startFuncWithSelector","funcName","endFuncWithSelector","getImportantSpecificity","USER_AGENT","USER","getBaseSpecificity","DispatchParserHandler","tokenizer","slave","pushHandler","popHandler","errorMsg","_ParserHandler","SkippingParserHandler","owner","topLevel","depth","SlaveParserHandler","report","message","reportAndSkip","actionsBase","actionsStyleAttribute","actionsSelector","actionsSelectorInFunc","actionsSelectorCont","actionsSelectorStart","actionsPropVal","actionsExprVal","actionsExprOp","actionsError","actionsErrorDecl","actionsErrorSelector","ExprContext","OP_MEDIA_AND","CssTokenizer","LAST","OP_MEDIA_OR","OP_MEDIA_NOT","SELECTOR_START","RULE_END","DONE","PROP","SELECTOR_NAME","SELECTOR_ANY","SELECTOR_ID","SELECTOR_CLASS","SELECTOR_ATTR","SELECTOR_PSEUDOCLASS","SELECTOR_CHILD","SELECTOR_SIBLING","SELECTOR_FOLLOWING_SIBLING","SELECTOR_NAME_1","SELECTOR_ANY_1","SELECTOR_ID_1","SELECTOR_CLASS_1","SELECTOR_ATTR_1","SELECTOR_BODY","SELECTOR_PSEUDOCLASS_1","SELECTOR_PSEUDOELEM","SELECTOR_NEXT","VAL_IDENT","VAL_HASH","VAL_NUM","VAL_INT","VAL_NUMERIC","VAL_STR","VAL_URL","VAL_URANGE","VAL_COMMA","VAL_SLASH","VAL_FUNC","VAL_C_PAR","VAL_END","VAL_BRC","VAL_BANG","VAL_PLUS","VAL_FINISH","EXPR_IDENT","EXPR_NUM","EXPR_NUMERIC","EXPR_STR","EXPR_O_PAR","EXPR_FUNC","EXPR_PREFIX","EXPR_PARAM","EXPR_INFIX_NAME","EXPR_INFIX","GT_EQ","LT_EQ","EQ_EQ","EXPR_C_PAR","EXPR_O_BRC","EXPR_SEMICOL","ERROR_PUSH","ERROR_POP","ERROR_SEMICOL","ERROR_POP_DECL","Parser","valStack","namespacePrefixToURI","defaultNamespaceURI","propName","propImportant","exprContext","importReady","importURL","importCondition","errorBrackets","ruleStack","regionRule","pageRule","MEDIA","extractVals","sep","valStackReduce","count","exprError","exprStackReduce","val2","tok","e1","e2","er","readSupportsTest","startPosition","token1","token2","tokenN","parLevel","readPseudoParams","readNthPseudoParams","hasLeadingPlus","hasMinusSign","hasSign","makeCondition","condition","split","isInsidePropertyOnlyRule","runParser","parsingValue","parsingStyleAttr","parsingMediaQuery","parsingFunctionParam","parserLoop","pseudoclassType","POSITIVE_INFINITY","TILDE_EQ","BAR_EQ","HAT_EQ","DOLLAR_EQ","STAR_EQ","IMPORT","SUPPORTS","WHEN","supportsTest","ruleName","rulePseudoName","ErrorHandler","parseStylesheetFromText","media","resolvedURL","innerFrame","parseStylesheetFromURL","Net","xhr","parseValue","numProp","opacity","utilization","evaluateCSSToCSS","matchANPlusB","AnyMatcher","matchers","matches","matcher","AllMatcher","NthFragmentMatcher","elementOffset","registerFragmentIndex","fragmentIndex","indices","fragmentIndices","clearFragmentIndices","entry","LayoutProcessor","PageFloats","Selectors","RepetitiveElement","Table","Vtree","MatcherBuilder","buildViewConditionMatcher","viewCondition","strs","buildAllMatcher","buildAnyMatcher","restoreNewText","reduce","fastdiff","resolveIndex","coef","current","change","object","formattingContextType","FloatReference","flagmentLayoutConstraintType","isInstanceOfTableFormattingContext","isInstanceOfTableRowLayoutConstraint","Whitespace","ShadowType","delayedProps","transform","delayedPropsIfRelativePositioned","DelayedItem","show","obj","visibility","hide","play","pause","resume","mute","muted","unmute","makeListener","action","actionFn","Page","bleedBox","pageAreaElement","delayedItems","hrefHandler","dimensions","isFirstPage","isLastPage","isAutoPageWidth","isAutoPageHeight","side","marginBoxes","anchorElement","preventDefault","setAutoPageWidth","isAuto","AUTO_PAGE_WIDTH_ATTRIBUTE","setAutoPageHeight","AUTO_PAGE_HEIGHT_ATTRIBUTE","registerElementWithId","triggers","clientLayout","elems","contains","getElementClientRect","trigger","observers","observer","event","zoom","getPageAreaElement","whitespaceFromPropertyValue","whitespace","IGNORE","NEWLINE","PRESERVE","canIgnore","Flow","parentFlowName","forcedBreakOffsets","formattingContext","FlowChunk","linger","repeated","breakBefore","startPage","isBetter","clientrectIncreasingTop","clientrectDecreasingRight","isSameNodePositionStep","nps1","nps2","shadowType","isSameShadowContext","shadowContext","nodeShadow","shadowSibling","isSameNodePosition","np1","np2","offsetInNode","newNodePositionFromNodeContext","initialFragmentIndex","sourceNode","NONE","preprocessedTextContent","makeNodeContextFromNodePositionStep","NodeContext","copy","ShadowContext","xmldoc","parentShadow","superShadow","subShadow","sc1","sc2","FirstPseudo","outer","boxOffset","shared","overflow","breakPenalty","display","floatReference","floatSide","clearSide","floatMinWrapBlock","columnSpan","verticalAlign","captionSide","inlineBorderSpacing","blockBorderSpacing","flexContainer","hyphenateCharacter","breakWord","establishesBFC","containingBlockForAbsolute","breakAfter","clearSpacer","inheritedProps","vertical","direction","firstPseudo","repeatOnBreak","pluginProps","afterIfContinues","footnotePolicy","pageType","INLINE","resetView","cloneItem","np","create","modify","clone","npp","npc","toNodePositionStep","toNodePosition","nc","ROOTLESS","_nc$shadowContext","_nc$shadowContext$sty","_nc$shadowContext$sty2","_pseudos","isInsideBFC","getContainingBlockForAbsolute","walkUpBlocks","belongsTo","ChunkPosition","primary","floats","isSamePosition","FlowChunkPosition","chunkPosition","flowChunk","FlowPosition","positions","startSide","newfp","newarr","hasContent","LayoutPosition","flows","flowPositions","highestSeenOffset","highestSeenNode","lookupPositionOffset","newcp","thisFlowNames","otherFlowNames","flowPos","startSideOfFlow","firstFlowChunkOfFlow","flowChunkPosition","Container","marginLeft","marginRight","marginTop","marginBottom","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","originX","originY","exclusions","innerShape","computedBlockSize","snapWidth","snapHeight","snapOffsetX","snapOffsetY","getInsetTop","getInsetBottom","getInsetLeft","getInsetRight","getInsetBefore","getInsetAfter","getInsetStart","getInsetEnd","getBeforeEdge","getAfterEdge","getStartEdge","getEndEdge","getInlineSize","getBoxSize","getBoxDir","getInlineDir","copyFrom","setVerticalPosition","setHorizontalPosition","setBlockPosition","extent","setInlinePosition","lastChild","removeChild","getInnerShape","getInnerRect","getPaddingRect","paddingX","paddingY","getOuterShape","outerShapeProp","getOuterRect","outerX","outerY","outerWidth","outerHeight","ContentPropertyHandler","rootContentValue","visitStrInner","ownerDocument","createTextNode","appendChild","img","createElementNS","CssParser","nonTrivialContent","fill","hyphens","marker","orphans","quotes","stroke","widows","polyfilledInheritedProps","supportedNamespaces","coupledPatterns","coupledExtentPatterns","geomNames","sides","names","buildCouplingMap","sideMap","extentMap","pattern","extentPattern","couplingMapVert","couplingMapHor","couplingMapVertRtl","couplingMapHorRtl","CascadeValue","getBaseValue","filterValue","increaseSpecificity","specificity","ConditionalCascadeValue","cascadeValues","tv","av","SPECIALS","isPropName","isInherited","getProp","setProp","getStyleMap","getMutableStyleMap","getViewConditionalStyleMap","_viewConditionalStyles","getSpecial","getMutableSpecial","mergeIn","pseudoelement","regionId","viewConditionMatcher","styleKey","styleMap","styles","as","ts","prototype","chainActions","chain","chained","InheritanceVisitor","props","setPropName","getFontSize","cascval","parentFontSize","convertFontRelativeLengthToPx","baseFontSize","CascadeAction","mergeWith","CompoundAction","ConditionItemAction","conditionItem","pushConditionItem","fresh","ApplyRuleAction","viewConditionId","currentStyle","ChainedAction","makePrimary","cascade","CheckClassAction","className","currentClassNames","includes","insertInTable","CheckIdAction","currentId","currentXmlId","CheckLocalNameAction","currentLocalName","tags","CheckNSTagAction","currentNamespace","nsPrefix","nsCount","nstags","CheckTargetEpubTypeAction","epubTypePatt","currentElement","getElementById","epubType","epub","CheckNamespaceAction","CheckAttributePresentAction","_this13","hasAttributeNS","CheckAttributeEqAction","_this14","epubtypes","CheckNamespaceSupportedAction","_this15","CheckAttributeRegExpAction","regexp","_this16","attr","CheckLangAction","langRegExp","_this17","IsFirstAction","isFirst","IsRootAction","IsNthAction","_this18","Matchers","IsNthSiblingAction","currentSiblingOrder","IsNthSiblingOfTypeAction","currentSiblingTypeCounts","IsNthLastSiblingAction","currentFollowingSiblingOrder","IsNthLastSiblingOfTypeAction","counts","currentFollowingSiblingTypeCounts","nsCounts","nextElementSibling","IsEmptyAction","Node","ELEMENT_NODE","TEXT_NODE","IsEnabledAction","disabled","IsDisabledAction","IsCheckedAction","selected","checked","CheckConditionAction","_this19","conditions","dependentConditions","CheckAppliedAction","_this20","applied","cloned","NegateActionsSet","_this21","checkAppliedAction","firstAction","AbstractConditionItem","decrement","DescendantConditionItem","ChildConditionItem","AdjacentSiblingConditionItem","_this22","fired","FollowingSiblingConditionItem","_this23","AfterPseudoelementItem","afterprop","processPseudoelementProps","RestoreLangItem","QuotesScopeItem","oldQuotes","AttrValueFilterVisitor","_this24","createValueFromString","defaultValue","attributeName","hasAttribute","getStringValueFromCssContentVal","ContentPropVisitor","counterResolver","_this25","maxDepth","quoteDepth","upper","lower","additiveNumbering","entries","alphabeticNumbering","alphabetStr","alphabet","digit","numbering","digits","negative","formal","markers","thousands","hundreds","tens","ones","chineseTradInformal","visitFuncCounter","numval","_this26","visitFuncCounters","numvals","_this27","visitFuncTargetCounter","targetUrlStr","targetUrl","_this28","visitFuncTargetCounters","_this29","visitFuncString","visitFuncContent","pseudos","_pseudos$pseudoName","content","_pseudos$pseudoName$c","roman","armenian","georgian","hebrew","latin","alpha","greek","russian","square","disc","circle","copyTable","dst","ParseState","Cascade","pagetypes","createInstance","counterListener","CascadeInstance","nextOrder","currentNSTag","currentEpubTypes","currentPageType","previousPageType","firstPageType","counterScoping","siblingOrderStack","siblingTypeCountsStack","followingSiblingOrderStack","followingSiblingTypeCountsStack","viewConditions","elementStack","filter","dependentConditionMatchers","conditionId","_this30","applyAction","pushRule","baseStyle","EMPTY","applyActions","defineCounter","scoping","pushCounters","displayVal","floatVal","float","setMap","set","setVal","_this$currentElement","_this$currentElement2","DOCUMENT_NODE","incrPropValue","_this$currentStyle$co","_incrPropValue$values","setCounterName","listItemCounts","popCounters","setNamedStrings","stringSet","pseudoprops","pushElement","types","currentNamespaceTypeCounts","applyAttrFilter","quotesCasc","itemToPushLast","quotesVal","_this31","pseudoNames","pseudoProps","applyAttrFilterInner","elementStyle","pseudoMap","popRule","popElement","uaBaseCascade","CascadeParserHandler","validatorSet","_this32","conditionCount","footnoteContent","insideSelectorRule","TOP","insertNonPrimary","processChain","isInsideSelectorRule","patt","RegExp","ActionClass","nthSelectorActionClasses","finishChain","SELECTOR","_CssParser$SlaveParse","makeApplyRuleAction","special","validatePropertyAndHandleShorthand","invalidPropertyValue","unknownProperty","simpleProperty","Plugin","hook","converted","notParserHandler","NotParameterParserHandler","_this33","parentChain","_CascadeParserHandler","DefineParserHandler","dim","PropSetParserHandler","_this34","PropertyParserHandler","_this35","forEachViewConditionalStyles","viewConditionalStyles","mergeViewConditionalStyles","cascMap","mergeStyle","isVertical","cascaded","writingModeCasc","writingMode","isRtl","directionCasc","flattenCascadedStyle","regionIds","isFootnote","forEachStylesInRegion","regionStyle","regions","footnoteRegion","to","newVal","convertToPhysical","dest","couplingMap","hasOwnProperty","cascVal","coupledName","targetName","coupledCascVal","createRegExpMap","valueMaps","toPhysical","physical","logical","convert","maps","maps2","replaced","toPhysicalMaps","toLogicalMaps","toLogical","Size","lineRelativeValues","getSize","sizes","original","maxWidth","minWidth","maxHeight","minHeight","getComputedValue","getElementComputedStyle","insertBefore","writingModeProperty","writingModeValue","inlineSizeName","blockSizeName","getFillAvailableInline","getMaxContentInline","getMinContentInline","getFitContentInline","fillAvailableInline","minContentInline","parsedFillAvailable","maxContentInline","getIdealBlock","getFillAvailableBlock","FILL_AVAILABLE_INLINE_SIZE","MAX_CONTENT_INLINE_SIZE","MIN_CONTENT_INLINE_SIZE","FIT_CONTENT_INLINE_SIZE","FILL_AVAILABLE_BLOCK_SIZE","MAX_CONTENT_BLOCK_SIZE","MIN_CONTENT_BLOCK_SIZE","FIT_CONTENT_BLOCK_SIZE","FILL_AVAILABLE_WIDTH","FILL_AVAILABLE_HEIGHT","MAX_CONTENT_WIDTH","MAX_CONTENT_HEIGHT","MIN_CONTENT_WIDTH","MIN_CONTENT_HEIGHT","FIT_CONTENT_WIDTH","FIT_CONTENT_HEIGHT","isPageFloat","COLUMN","REGION","PAGE","PageFloat","nodePosition","getOrder","isAllowedOnContext","pageFloatLayoutContext","isAnchorAlreadyAppeared","isAllowedToPrecede","PageFloatStore","nextPageFloatIndex","createPageFloatId","addPageFloat","VtreeImpl","findPageFloatByNodePosition","findPageFloatById","PageFloatFragment","continuations","area","continues","hasFloat","findNotAllowedFloat","shouldBeStashedBefore","addContinuations","getFlowName","PageFloatContinuation","PageFloatLayoutContext","generatingNodePosition","invalidated","floatStore","forbiddenFloats","floatFragments","stashedFloatFragments","floatAnchors","floatsDeferredToNext","floatsDeferredFromPrevious","layoutConstraints","locked","getPreviousSibling","getParent","getPreviousSiblingOf","getContainer","setContainer","reattachFloatFragments","getPageFloatLayoutContext","forbid","PageFloatLayoutStrategyResolver","findByFloat","isForbidden","addPageFloatFragment","floatFragment","dontInvalidate","fr1","fr2","invalidate","removePageFloatFragment","fragment","findPageFloatFragment","hasFloatFragments","hasContinuingFloatFragmentsInFlow","registerPageFloatAnchor","anchorViewNode","collectPageFloatAnchors","anchors","floatId","getDeferredPageFloatContinuations","cont","deferPageFloat","hasPrecedingFloatsDeferredToNext","ignoreReference","getLastFollowingFloatInFragments","lastFollowing","lastFollowingOfParent","c1","c2","getPageFloatContinuationsDeferredToNext","getFloatsDeferredToNextInChildContexts","checkAndForbidNotAllowedFloat","checkAndForbidFloatFollowingDeferredFloat","notAllowedFloat","removeEndFloatFragments","deferredFloats","floatsInFragments","fr","f1","f2","hasSameContainerAs","detachChildren","attachChildren","isInvalidated","validate","CssLogicalUtil","logicalFloatSide","stashEndFloatFragments","fragmentFloatSide","restoreStashedFragments","stashed","discardStashedFragments","getStashedFloatFragments","getLimitValue","layoutContext","logicalSide","physicalSide","limit","getLimitValueInner","parentLimit","limits","getLimitValuesInner","paddingRect","floatMinWrapBlockStart","floatMinWrapBlockEnd","resolveLengthPercentage","containerLength","convertLengthToPx","fragments","rootViewNodes","setFloatAreaDimensions","anchorEdge","init","force","blockSize","inlineSize","outerBlockSize","outerInlineSize","blockStart","blockEnd","inlineStart","inlineEnd","blockOffset","inlineOffset","limitBlockStartEndValueWithOpenRect","getRect","openRect","availableBlockSize","containerRect","Sizing","adjustContentRelativeSize","getContentInlineSize","getFloatFragmentExclusions","getMaxReachedAfterEdge","edge","Infinity","getBlockStartEdgeOfBlockEndFloats","getPageFloatClearEdge","isContinuationOfAlreadyAppearedFloat","isFragmentWithAlreadyAppearedFloat","columnRect","columnBlockEnd","blockStartLimit","getPageFloatPlacementCondition","logicalSides","logicalClearSide","floatOrder","isPrecedingFragment","hasPrecedingFragmentInChildren","hasPrecedingFragmentInParents","getLayoutConstraints","addLayoutConstraint","layoutConstraint","isColumnFullWithPageFloats","getMaxBlockSizeOfPageFloats","lock","unlock","isLocked","pageFloatLayoutStrategies","register","strategy","findByNodeContext","appliesToNodeContext","appliesToFloat","createPageFloat","resolveFloatReferenceFromColumnSpan","createPageFloatFragment","floatArea","adjustPageFloatArea","floatContainer","Footnote","FootnoteFragment","LineFootnotePolicyLayoutConstraint","regionContext","applyFootnoteStyle","convertPercentageSizesToPx","setComputedInsets","setComputedWidthAndHeight","constraint","forcedBreakValues","recto","verso","region","isForcedBreakValue","spreadBreakValues","isSpreadBreakValue","avoidBreakValues","isAvoidBreakValue","resolveEffectiveBreakValue","second","firstIsForcedBreakValue","secondIsForcedBreakValue","breakValueToStartSideValue","breakValue","startSideValueToBreakValue","startSideValue","calculateEdge","extraOffset","cbox","range","createRange","setStart","setEnd","boxes","getRangeClientRects","getBoundingClientRect","fullRange","fullBoxes","fullBox","abs","getElementHeight","getComputedMargin","isOrphan","removeFollowingSiblings","isSpecial","isSpecialNodeContext","AbstractBreakPosition","calculateOffset","getNodeContext","collectElementsOffset","breakPositionChosen","elementsOffsets","repetitiveElement","minimum","calculateMinimumOffset","EdgeBreakPosition","breakOnEdge","overflows","overflowIfRepetitiveElementsDropped","isEdgeUpdated","findAcceptableBreak","penalty","updateOverflows","getMinBreakPenalty","findEdgeBreakPosition","preferDropping","isFirstContentOfRepetitiveElementsOwner","Break","updateEdge","clonedPaddingBorder","calculateClonedPaddingBorder","LayoutHelper","isOverflown","isInstanceOfRepetitiveElementsOwnerFormattingContext","repetitiveElements","getRepetitiveElements","isFirstContentNode","blockify","blockifiedStr","displayStr","isAbsolutelyPositioned","getComputedDislayValue","isBlock","isInlineLevel","LayoutProcessorResolver","find","RESOLVE_LAYOUT_PROCESSOR","processor","BlockLayoutProcessor","layout","leadingEdge","isFloatNodeContext","layoutFloatOrFootnote","isBreakable","layoutBreakableBlock","layoutUnbreakable","createEdgeBreakPosition","columnBlockSize","BreakPosition","startNonInlineElementNode","afterNonInlineElementNode","stopAtOverflow","clearOverflownViewNodes","parentNodeContext","removeSelf","finishBreak","forceRemoveSelf","endOfColumn","fixJustificationIfNeeded","processFragmentedBlockEdge","BlockFormattingContext","isFirstTime","firstTime","saveState","restoreState","blockLayoutProcessor","isInstanceOfBlockFormattingContext","RESOLVE_FORMATTING_CONTEXT","Display","AbstractLayoutRetryer","initialBreakPositions","initialStateOfFormattingContext","initialPosition","initialFragmentLayoutConstraints","prepareLayout","tryLayout","mode","resolveLayoutMode","doLayout","positionAfter","accepted","accept","postLayout","clearNodes","sibling","breakPositions","fragmentLayoutConstraints","LayoutIteratorStrategy","initialState","initialNodeContext","atUnforcedBreak","break","startNonDisplayableNode","afterNonDisplayableNode","startIgnoredTextNode","afterIgnoredTextNode","startNonElementNode","afterNonElementNode","startInlineElementNode","afterInlineElementNode","LayoutIterator","iterate","loopFrame","nextResult","nextInTree","nextNodeContext","EdgeSkipper","startNonInlineBox","endEmptyNonInlineBox","endNonInlineBox","breakAtTheEdge","onStartEdges","leadingEdgeContexts","lastAfterNodeContext","processForcedBreak","needForcedBreak","pageBreakType","saveEdgeAndProcessOverflow","checkOverflowAndSaveEdgeAndBreakPosition","processLayoutConstraint","violateConstraint","repetitiveElementsCache","DOMParser","parseFromString","SHADOW","getPseudoName","setPseudoName","PseudoelementStyler","contentProcessed","getStyle","deep","CssCascade","nest","processContent","contentVal","AfterIfContinues","viewRoot","pseudoColumn","PseudoColumn","initialPageBreakType","getColumn","createNodePositionForPseudoElement","pseudoElement","PseudoElement","createShadowContext","ROOTED","AfterIfContinuesLayoutConstraint","pseudoElementHeight","overflownNodeContext","nextCandidate","allowed","affectTo","AfterIfContinuesElementsOffset","equalsTo","getPriorityOfFinishBreak","processAfterIfContinuesOfNodeContext","processAfterIfContinues","mediaTags","svg","audio","video","AllLayoutConstraint","constraints","BoxBreakPosition","checkPoints","alreadyEvaluated","breakNodeContext","findBoxBreakPosition","isSpecialInlineDisplay","Column","viewDocument","flowRootFormattingContext","isFloat","startEdge","endEdge","beforeEdge","afterEdge","footnoteEdge","chunkPositions","overflown","forceNonfitting","leftFloatEdge","rightFloatEdge","bottommostFloatTop","lastAfterPosition","pseudoParent","nodeContextOverflowingDueToRepetitiveElements","blockDistanceToBlockEndFloats","getTopEdge","getBottomEdge","getLeftEdge","getRightEdge","stopByOverflow","getExclusions","pageFloatExclusions","openAllViews","setViewRoot","stepIndex","calculateOffsetInNodeForNodeContext","setCurrent","maybePeelOff","peelOff","buildViewToNextBlockEdge","bodyFrame","position1Param","positionParam","buildDeepElementView","postLayoutBlock","position1","createFloat","killFloats","cssFloat","createFloats","parseComputedLength","insets","getComputedPaddingBorder","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","getComputedInsets","boxSizing","nodeContextIn","layoutFloat","lineRelativeValue","nodeContextAfter","floatBBox","floatBox","probe","parentBox","floatBoxMeasure","floatHorBox","dir","boxExtent","floatWidth","floatHeight","floatBottom","floatBoxEdge","floatBoxTop","floatBands","lastY","floatBand","updateMaxReachedAfterEdge","setupFloatArea","floatLayoutContext","containingBlockRect","fitWithinContainer","createPageFloatArea","floatAreaElement","parentPageFloatLayoutContext","parentContainer","PageFloatArea","layoutSinglePageFloatFragment","allowFragmented","pageFloatFragment","firstFloat","newPosition","failed","floatChunkPosition","newFragment","layoutPageFloatInner","cancelLayout","layoutStashedPageFloats","success","excluded","newFloatAreas","newFragments","stashedFragment","setFloatAnchorViewNode","anchor","applyPseudoelementStyle","columnContext","layoutPageFloat","createJustificationAdjustmentElement","insertionPoint","span","inner","textIndent","textAlign","leftPos","rightPos","inlineBlock","padding","paddingStr","addAndAdjustJustificationElement","insertAfter","hyphenChar","resolveHyphenateCharacter","prevSibling","prevText","compensateJustificationLineHeight","br","spanRect","brRect","processLineStyling","resNodeContext","lastCheckPoints","totalLineCount","linePositions","findLinePositions","lineBreak","findAcceptableBreakInside","resNodeContextParam","isLoneImage","getTrailingMarginEdgeAdjustment","trailingEdgeContexts","maxPos","minNeg","checkPointIndex","saveBoxBreakPosition","POST_LAYOUT_BLOCK","findEndOfLine","linePosition","isUpdateMaxReachedAfterEdge","effectiveLinePosition","lowCP","low1","highCP","high1","mid1","edgePosition","textNode","resolveTextNodeBreaker","breakTextNode","RESOLVE_TEXT_NODE_BREAKER","TextNodeBreaker","getRangeBoxes","wentUp","lastGood","haveStart","endNotReached","seekRange","setStartBefore","setEndAfter","boxList","lineBefore","lineAfter","lineEnd","lineLength","overlap","boxSize","paddingBorders","getOffsetByRepetitiveElements","bp","repetitiveElementsOffset","firstOverflowing","findFirstOverflowingEdgeAndCheckPoint","lineIndex","forceCutBeforeOverflowing","checkPoint","blockEdge","getAfterEdgeOfBlockContainer","blockParent","cp","findAcceptableBreakPosition","nextPenalty","minPenalty","breakPosition","doFinishBreak","initialComputedBlockSize","skipTailEdges","flowPosition","zeroIndent","checkOverflowAndSaveEdge","marginEdge","saveEvenOverflown","saveEdgeBreakPosition","applyClearance","spacer","spacerBox","clearEdge","wAdj","hAdj","isBFC","skipEdges","forcedBreakValue","fc","_nodeContext$parent","layoutProcessor","_nodeContext$parent2","nodeContextParam","resultNodeContext","layoutNext","initGeom","columnBBox","include","exclude","granularity","segment","segments","segmentCount","lowestIncludeIndex","segmentIndex","activeSegments","y2min","yn","bandIntersections","bi1","bi2","rw","breakAtEdge","isFullWithPageFloats","nextInTreeListener","retryer","ColumnLayoutRetryer","doFinishBreakOfFragmentLayoutConstraints","sortedFragmentLayoutConstraints","pending","redoLayout","isPseudoelement","saveDistanceToBlockEndFloats","blockStartEdgeOfBlockEndFloats","isFinite","isInstanceOfRepetitiveElementsOwnerLayoutConstraint","isInstanceOfAfterIfContinuesLayoutConstraint","getElementsOffsetsForTableCell","startNodeContexts","parentClonedPaddingBorder","allowBreakAtStartPosition","startNodeContext","isStartNodeContext","isLastAfterNodeContext","getColumnElement","checkpointIndex","viewIndex","data","breakAfterSoftHyphen","breakAfterOtherCharacter","updateNodeContext","replaceData","ch0","ch1","initialOverflown","DefaultLayoutMode","_LayoutRetryers$Abstr","LayoutRetryers","hasNextCandidate","floatMargins","fixFloatSizeAndPosition","refWidth","refHeight","convertPercentageToPx","refValue","valueString","percentageValue","rootViewNode","RepetitiveElementsOwnerFormattingContext","rootSourceNode","getRootViewNode","getRootNodeContext","initializeRepetitiveElements","Shared","elements","RepetitiveElements","ownerSourceNode","headerSourceNode","footerSourceNode","headerViewNode","footerViewNode","headerNodePosition","footerNodePosition","headerHeight","footerHeight","isSkipHeader","isSkipFooter","enableSkippingFooter","enableSkippingHeader","doneInitialLayout","firstContentSourceNode","lastContentSourceNode","affectedNodeCache","afterLastContentNodeCache","allowInsert","allowInsertRepeatitiveElements","setHeaderNodeContext","setFooterNodeContext","updateHeight","prepareLayoutFragment","appendHeaderToFragment","rootNodeContext","appendElementToFragment","appendFooterToFragment","Layout","moveChildren","isAfterLastContent","findResultFromCache","isAfterNodeContextOf","cache","calculator","cacheEntry","includeChildren","parentsOfNode","currentParent","previousElementSibling","isEnableToUpdateState","updateState","preventSkippingHeader","preventSkippingFooter","isHeaderRegistered","isFooterRegistered","isHeaderSourceNode","isFooterSourceNode","LayoutEntireBlock","LayoutFragmentedBlock","LayoutEntireOwnerBlock","doInitialLayout","LayoutFragmentedOwnerBlock","RepetitiveElementsOwnerLayoutConstraint","RepetitiveElementsOwnerLayoutRetryer","EntireBlockLayoutStrategy","LayoutUtil","appendHeaderToAncestors","repetitiveLayoutProcessor","layoutEntireBlock","TableRow","rowIndex","cells","addCell","cell","getMinimumHeight","TableCell","columnIndex","viewElement","colSpan","rowSpan","anchorSlot","setHeight","setAnchorSlot","slot","TableSlot","TableCellFragment","pseudoColumnContainer","cellNodeContext","TableCaptionView","BetweenTableRowBreakPosition","acceptableCellBreakPositions","getAcceptableCellBreakPositions","cellFragments","getCellFragments","cellFragment","getRowIndex","findRowIndexBySourceNode","getRowSpanningCellsOverflowingTheRow","getCellFragmentOfCell","InsideTableRowBreakPosition","beforeNodeContext","allCellsBreakable","row","getRowByIndex","isFreelyFragmentableRow","getCellsFallingOnRow","TableFormattingContext","tableSourceNode","columnCount","tableWidth","captions","colGroups","colWidths","rows","slots","lastRowViewNode","cellBreakPositions","cellNodePosition","finishFragment","addRow","getRowSlots","rowSlots","rowUpper","startColIndex","addCellFragment","uniqueCells","getColumnCount","sum","updateCellSizes","findCellFromColumn","tableCell","col","collectElementsOffsetOfUpperCells","collected","collectElementsOffsetFromColumn","collectElementsOffsetOfHighestColumn","elementsInColumn","ElementsOffsetOfTableCell","RepetitiveElementImpl","repeatitiveElementsInColumns","calculateMaxOffsetOfColumn","maxOffset","isValidParentOfTableRow","skipNestedTable","parentDisplay","isNestedInlineTable","EntireTableLayoutStrategy","inRow","inHeaderOrFooter","postLayoutBlockContents","captionView","computedStyle","registerCheckPoint","TableLayoutStrategy","currentRowIndex","currentColumnIndex","originalStopAtOverflow","inHeader","inFooter","resetColumn","getColSpanningCellWidth","layoutCell","startChunkPosition","cellViewNode","hasBrokenCellAtSlot","slotIndex","cellBreakPosition","extractRowSpanningCellBreakPositions","rowSpanningCellBreakPositions","layoutRowSpanningCellsFromPreviousFragment","rowCount","currentRow","spanningCellRowIndex","occupiedSlotIndices","rowCellBreakPositions","rowNodeContext","cont1","addDummyCellUntil","upperColumnIndex","dummy","breakChunkPosition","startTableRow","registerCellFragmentIndex","tdNodeStep","getElementOffset","startTableCell","afterNodeContext","startNodePosition","ignoreList","tableLayoutOptionCache","TableLayoutProcessor","layoutEntireTable","getColumnWidths","lastRow","dummyRow","dummyCells","getColGroupElements","tableElement","normalizeAndGetColElements","cols","colGroup","cloneNode","addMissingColElements","normalizeColGroups","createDocumentFragment","tableRootSourceNode","pair","tableLayoutOption","tableBBox","calculateBreakPositionsInside","EntireTableBreakPosition","addCaptions","caption","addColGroups","removeColGroups","iterator","LayoutRetryer","cellContentElement","cellElement","cellElementRect","tableFormattingContext","LayoutFragmentedTable","LayoutEntireTable","tableNodeContext","EntireTableLayoutConstraint","tableRootNode","TableRowLayoutConstraint","cellFragmentLayoutConstraints","collectCellFragmentLayoutConstraints","removeDummyRowNodes","_RepetitiveElementImp4","array","dummyNode","getCellFragemnts","tableLayoutProcessor","mean","ColumnBalancingTrialResult","layoutResult","getBlockSize","setBlockSize","ColumnBalancer","layoutContainer","columnGenerator","regionPageFloatLayoutContext","originalContainerBlockSize","balanceColumns","preBalance","savePageFloatLayoutContexts","candidates","createTrialResult","updateCondition","restoreContents","postBalance","calculatePenalty","columnPageFloatLayoutContexts","newLayoutResult","columns","canReduceContainerSize","lastCandidate","secondLastCandidate","reduceContainerSize","newEdge","BalanceLastColumnBalancer","originalPosition","foundUpperBound","totalBlockSize","checkPosition","isLastColumnLongerThanAnyOtherColumn","lastColumnBlockSize","BalanceNonLastColumnBalancer","meanValue","computedBlockSizes","SlipRange","endStuckFixed","endFixed","endSlipped","SlipMap","getMaxFixed","getMaxSlipped","addStuckRange","addSlippedRange","slippedByFixed","fixedBySlipped","slipped","Box","atBlockStart","atFlowStart","isParentBoxDisplayed","isBlockValue","hasBoxValue","styleValues","beforeBox","afterBox","hasBox","styleValue","getBreakValue","buildAfterPseudoElementBox","cv","displayValue","BoxStack","atStartStack","lastBox","lastFlowName","isCurrentBoxDisplayed","newFlowChunk","isAtFlowStart","encounteredTextNode","CDATA_SECTION_NODE","atStart","nearestBlockStartOffset","Styler","primaryFlows","cascadeHolder","rootStyle","flowChunks","flowListener","flowToReach","idToReach","offsetMap","primaryStack","rootBackgroundAssigned","rootLayoutAssigned","breakBeforeValues","boxStack","bodyReached","rootOffset","getAttrStyle","postprocessTopStyle","replayFlowElementsFromOffset","hasProp","transferPropsToRoot","srcStyle","pname","isBody","backgroundColor","backgroundProps","backgroundImage","columnProps","layoutProps","isRelativeFontSize","unitSize","getTopContainerStyle","styleUntil","CSSStyleDeclaration","styleAttrValue","getReachedOffset","flowNameStr","encounteredFlowElement","getNodeByOffset","nodeOffset","getNodeOffset","resetFlowChunkStream","encounteredFlowChunk","styleUntilFlowIsReached","optionsCV","options","static","lingerCV","priorityCV","flow","registerForcedBreakOffset","lookup","targetSlippedOffset","afterPseudoBreakBefore","blockStartOffset","_style$page","beforePseudoBreakAfter","validator","failure","markAsStartGroup","isStartGroup","markAsEndGroup","isEndGroup","markAsStartAlternate","isStartAlternate","markAsEndAlternate","isEndAlternate","getAlternate","Connection","where","what","ValidatingGroup","connections","nomatch","emptyHead","connect","nodeIndex","group","clonedNode","connection","groupConnection","addSpecialToArr","clause","ALWAYS_FAIL","endSpecialGroup","arrs","startSpecialGroup","endClause","startClause","addPrimitive","isSimple","isPrimitive","PrimitiveValidator","addGroup","how","ALTERNATE","combine","connectionIndex","REPEATED","OPTIONAL","successTerminal","failTerminal","PropertyValidator","validateForShorthand","rval","idents","units","NO_IDENTS","ListValidator","failureTerminal","validateList","startIndex","alternativeStack","alternatives","inval","outval","SpaceListValidator","CommaListValidator","validateSingle","hasCommaListValidator","FuncValidator","ShorthandSyntaxNode","tryParse","shorthandValidator","ShorthandSyntaxProperty","validators","rvals","len","ShorthandSyntaxPropertyN","ShorthandSyntaxCompound","index0","ShorthandValidator","syntax","propList","setOwner","syntaxNodeForProperty","receiver","defaultValues","propagateInherit","SimpleShorthandValidator","InsetsShorthandValidator","createSyntaxNode","InsetsSlashShorthandValidator","slashIndex","index1","CommaShorthandValidator","acc","FontShorthandValidator","_SimpleShorthandValid2","fontVariant","fontStretch","familyList","family","systemFonts","shorthandValidators","SIMPLE","INSETS","INSETS_SLASH","FONT","ValidatorSet","prefixes","namedValidators","shorthands","addReplacement","cssval","newGroup","vals","subgroup","FOLLOW","addCounts","primitive","newFunc","initBuiltInValidators","HASHCOLOR","POS_INT","POS_NUM","POS_PERCENTAGE","NEGATIVE","ZERO","ZERO_PERCENTAGE","POS_LENGTH","vi","vb","vmin","vmax","pvi","pvb","pvmin","pvmax","POS_ANGLE","deg","grad","rad","turn","POS_TIME","ms","FREQUENCY","Hz","kHz","RESOLUTION","URI","STRING","stdfont","icon","menu","isBuiltIn","readNameAndPrefixes","section","rulePrefixes","parseValidators","expectval","setop","currop","builtIn","parseDefaults","parseShorthands","insetShorthand","compound","makePropSet","shorthand","pval","origName","rvalue","baseValidatorSet","traitProps","bogusFontData","bogusFontCounter","prepareProperties","properties","Face","fontTraitKey","blobURLs","blobs","traitsEqual","makeAtRule","fontBytes","blobURL","webkitURL","createObjectURL","DocumentFaces","deobfuscator","familyMap","registerFamily","srcFace","viewFace","srcFamily","viewFamilyFromSrc","viewFamilyFromView","filterFontFamily","newValues","rf","Mapper","opt_familyPrefix","srcURLMap","familyPrefix","familyCounter","getViewFontFamily","documentFaces","viewFamily","initFont","viewFontFace","killTime","bogusData","probeCont","initWidth","initHeight","loaded","loadFont","viewFaceParam","BLOB","findOrLoadFonts","srcFaces","keyCount","PageBox","specified","pageMaster","_scope","parentInstance","param","copySpecified","destSpecified","cloneChildren","RootPageBox","PageMasterScope","self","keyMap","boxInstance","lookupInstance","resolveFunc","resolveName","PageMaster","PageMasterInstance","resetScope","PartitionGroup","PartitionGroupInstance","Partition","PartitionInstance","toExprAuto","toExprZero","toExprZeroAuto","toExprZeroBorder","styleVal","toExprBool","PageBoxInstance","pageBox","autoWidth","autoHeight","isAutoWidth","isAutoHeight","isTopDependentOnAutoHeight","isRightDependentOnAutoWidth","calculatedWidth","calculatedHeight","pageMasterInstance","namedValues","namedFuncs","suppressEmptyBoxGeneration","addNamedValues","altName","columnGap","initEnabled","minPageWidth","minPageHeight","boxSpecificEnabled","initHorizontal","parentWidth","leftBP","rightBP","extra","remains","initVertical","parentHeight","topBP","bottomBP","initColumns","depends","registerInstance","getActiveRegions","getPropAsNumber","propagateProperty","docFaces","propagatePropertyToElement","propagateDelayedProperty","assignLeftPosition","assignRightPosition","xpos","assignTopPosition","ypos","assignBottomPosition","assignBeforePosition","assignAfterPosition","assignStartEndPosition","sizeWithMaxHeight","sizeWithMaxWidth","prepareContainer","passPreProperties","transferContentProps","passContentProperties","transferSinglUriContentProps","passSingleUriContentProperties","finishContainer","readHeight","readWidth","bbox","ruleWidth","ruleStyle","ruleColor","containerSize","border","rule","passPostProperties","delayedProperties","applyCascadeAndInit","docElementStyle","userAgentPageMasterPseudo","resolveAutoSizing","RootPageBoxInstance","_PageBoxInstance","adjustPageLayout","processPartitionList","listVal","conflicting","qname","term","required","pmEnabledVal","pmEnabled","_PageBoxInstance4","PageBoxParserHandler","PartitionParserHandler","PartitionGroupParserHandler","partition","partitionGroup","PageMasterParserHandler","resolvePageProgression","Constants","CornerMarkPosition","CrossMarkPosition","pageSizes","a10","a9","a8","a7","a6","a5","a4","a3","a2","a1","a0","b10","b9","b8","b7","b6","b5","b4","b3","b2","b1","b0","c10","c9","c8","c7","c6","c5","c4","c3","c0","letter","legal","ledger","defaultPrinterMarkLineWidth","defaultPrinterMarkOffset","defaultPrinterMarkLineLength","defaultBleedOffset","resolvePageSizeAndBleed","pageSizeAndBleed","bleed","bleedOffset","val1","marks","evaluatePageSizeAndBleed","evaluated","cropOffset","createPrinterMarkSvg","createPrinterMarkElement","lineWidth","elementType","MarginBoxPositionAlongVariableDimension","propertiesAppliedToPartition","outline","pageMarginBoxes","isInTopRow","isInBottomRow","isInLeftColumn","isInRightColumn","positionAlongVariableDimension","START","CENTER","pageMarginBoxNames","PageRuleMaster","bodyPartitionKey","pageSize","PageRulePartition","createPageMarginBoxes","applySpecified","marginBoxesMap","_marginBoxes","PageMarginBoxPartition","PageRuleMasterInstance","PageRulePartitionInstance","marginBoxName","ownStyle","ownVal","PageMarginBoxPartitionInstance","pageRuleMaster","pageAreaDimension","pageMarginBoxInstances","_PageMaster$PageMaste2","setPageAreaDimension","borderBoxWidth","borderBoxHeight","marginBoxContainers","horizontalDimensions","verticalDimensions","sizeMarginBoxesAlongVariableDimension","isHorizontal","containers","boxInstances","boxParams","boxInfo","boxParam","SingleBoxMarginBoxSizingParam","evaluatedDim","getSizesOfMarginBoxesAlongVariableDimension","needRecalculate","maxOuterSizes","maxSize","evaluatedMaxSize","FixedSizeMarginBoxSizingParam","getOuterSize","minOuterSizes","minSize","evaluatedMinSize","startEndSum","outerSize","availableSize","startBoxParam","centerBoxParam","endBoxParam","startEndBoxParam","MultipleBoxesMarginBoxSizingParam","centerSizes","distributeAutoMarginBoxSizes","xSize","startEndAutoSize","hasAutoSize","startEndSizes","ySize","xOuterMaxContentSize","getOuterMaxContentSize","yOuterMaxContentSize","maxContentSizeSum","xOuterMinContentSize","getOuterMinContentSize","minContentSizeSum","hasAutoSize_","fixedSize","pageRulePartition","_PageMaster$Partition3","resolvePageBoxDimensions","borderBoxExtent","marginStart","marginEnd","endSide","extentName","pageExtent","paddingStart","paddingEnd","borderStartWidth","borderEndWidth","pageMarginBoxPartition","applyVerticalAlign","_PageMaster$Partition4","flexAlign","availableExtent","outerExtent","positionAndSizeAlongFixedDimension","insideName","outsideName","outside","pageMargin","marginInside","marginOutside","paddingInside","paddingOutside","borderInsideWidth","borderOutsideWidth","getComputedValues","pageMarginValue","borderAndPadding","PageManager","rootPageBoxInstance","pageMasterCache","definePageProgression","styleInstance","isVersoFirstPage","isVersoPage","pageProgression","getCascadedPageStyle","getPageRulePageMaster","makeCacheKey","generatePageRuleMaster","generateCascadedPageMaster","propsStr","makeCascadeValueObjectKey","newPageMaster","pageMasterStyle","CheckPageTypeAction","IsFirstPageAction","IsBlankPageAction","IsLeftPageAction","IsRightPageAction","IsRectoPageAction","IsVersoPageAction","IsNthPageAction","layoutPositionAtPageStart","blankPageAtStart","ApplyPageRuleAction","targetMap","boxName","targetBox","PageParserHandler","pageProps","currentPageSelectors","currentNamedPageSelector","currentPseudoPageClassSelectors","finishSelector","selectors","_CssCascade$CascadePa","selector","noPageSelectorProps","prevCascVal","marginBoxMap","boxStyle","PageMarginBoxParserHandler","transformURIs","attributeValue","m1","namespacePrefixMap","frontEdgeBlackListHor","frontEdgeBlackListVert","frontEdgeUnforcedBreakBlackListHor","frontEdgeUnforcedBreakBlackListVert","ViewFactory","footnoteStyle","stylerProducer","customRenderer","fallbackMap","createPseudoelementShadow","cascStyle","getPseudoMap","addedNames","att","shadowStyler","computedPseudoStyleMap","computedPseudoStyle","createRefShadow","refDocParam","refDoc","refElement","getElement","refStyler","getStylerForDoc","createShadows","templateURLVal","template","shadow","cont2","computeStyle","displayValues","inheritFromSourceParent","shadowRoot","nodeStyle","inheritanceVisitor","sname","inheritLangAttribute","transferPolyfilledInheritedProps","POLYFILLED_INHERITED_PROPS","numericVal","resolveFormattingContext","createElementView","needToProcessChildren","inheritedValues","shadowParam","parentWritingMode","isFlowRoot","floating","listItem","isAtForcedBreak","borderCollapse","borderSpacing","processAfterIfcontinues","whitespaceValue","overflowWrap","processRepeatOnBreak","findAndProcessRepeatingElements","custom","tag","NCX","navParent","hp","behavior","dataset","iframe","contentWindow","navigator","epubReadingSystem","version","layoutStyle","hasFeature","imageResolution","images","cssWidth","cssHeight","attrWidth","attrHeight","hasAutoWidth","hasAutoHeight","attributes","attributeCount","delayedSrc","attribute","attributeNS","nodeValue","image","Image","isSVGUrlAttribute","Urls","attributePrefix","imageFetcher","listStyleImage","listStyleURL","preprocessElementStyle","applyComputedStyles","blackList","isParagraph","modifyElemDimensionWithImageResolution","textLevelElements","abbr","bdi","bdo","cite","del","dfn","ins","kbd","ruby","samp","small","strong","sup","time","u","var","childNode","SVG_URL_ATTRIBUTES","scaledWidth","scaledHeight","numericMaxHeight","numericMinWidth","numericMinHeight","PREPROCESS_ELEMENT_STYLE","createTextNodeView","preprocessTextContent","Diff","originl","PREPROCESS_TEXT_CONTENT","processedText","createNodeView","processChildren","processShadowContent","contentNode","contentShadowType","contentShadow","nextPositionInTree","shadowNode","sr","isTransclusion","transclusionType","proc","addImageFetchers","bg","isRelativePositioned","parentElement","_this$viewRoot","propertiesNotPassedToDOM","fixRubyTextFontSize","userAgent","fontSizeInPx","parentElem","_this$nodeContext2","_this$nodeContext2$pa","getComputedStyle","HTMLElement","minFontSizeInPx","pn","childComputedStyle","boxDecorationBreak","step1","step2","elem2","nodePosition1","nodePosition2","DOMParserSupportedType","DefaultClientLayout","layoutBox","subtractOffsets","originRect","viewportLeft","viewportTop","rects","getClientRects","layoutBoxRect","Viewport","opt_root","opt_width","opt_height","outerZoomBox","contentContainer","innerWidth","innerHeight","resetZoom","XMLDocHolder","totalOffset","idMap","NodeList","offsetStr","srcNode","getTotalOffset","buildIdMap","xmlid","getElementsByName","parseAndReturnNullIfError","opt_parser","docElement","errorTagName","parseXMLResource","supportedKeys","APPLICATION_XML","TEXT_HTML","APPLICATION_XHTML_XML","IMAGE_SVG_XML","predicate","check","withAttribute","Predicate","withChild","opt_childPredicate","asArray","pr","forEachNode","forEachNonNull","uaStylesheetBaseFetcher","CssValidator","Style","rootBox","fontFaces","footnoteProps","flowProps","viewportProps","fontDeobfuscator","currentLayoutPosition","matchPageSide","lookupOffset","flowChunkIsAfterParentFlowForcedBreak","pageNumberOffset","sizeViewport","textZoom","scaleFactor","defaultFontSize","widthVal","heightVal","StyleInstance","defaultLang","fontMapper","stylerMap","faces","pageBoxInstances","pageManager","rootPageFloatLayoutContext","pageBreaks","pageSheetSize","pageSheetHeight","pageSheetWidth","Font","CssStyler","CssPage","matchStartPageSide","fontFace","isRectoStart","isLTR","getStyleForDoc","supported","supportsReceiver","getConsumedOffset","chunkOffset","getPosition","layoutPosition","noLookAhead","currentPosition","consumedOffset","dumpLocation","updateStartSide","flowChunkBreakBefore","flowBreakAfter","selectPageMaster","pageMasters","coeff","pageArea","initLingering","breakOffsetBeforeStartIndex","breakOffsetBeforeStart","parentFlowPosition","parentStartOffset","setFormattingContextToColumn","layoutDeferredPageFloats","deferredFloatNode","deferredFloatOffset","pageStartPos","parentInvalidated","getLastAfterPositionIfDeferredFloatsExists","layoutColumn","repeatedIndices","removedIndices","alt","counterConstraint","createAndLayoutColumn","forceNonFitting","dontApplyExclusions","boxContainer","columnPageFloatLayoutContext","positionAtColumnStart","columnContainer","columnY","columnX","setPagePageFloatLayoutContextContainer","pagePageFloatLayoutContext","getRegionPageFloatLayoutContext","layoutFlowColumnsWithBalancing","positionAtContainerStart","layoutColumns","layoutFlowColumns","generatorResult","columnFill","columnBalancer","lastColumn","Vgen","dontExclude","forwardOrderInLayout","removed","innerContainerTag","innerContainer","outerShape","processLinger","noMorePrimaryFlows","layoutNextPage","_cp$flowPositions$bod","bleedBoxPaddingEdge","evaluatedPageSizeAndBleed","setPageSizeAndBleed","printerMarkOffset","bgcolor","cropMarkLineLength","bleedMarkLineLength","maxLineLength","svgWidth","points1","points2","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","line1","line2","longLineLength","BOTTOM","horizontalLine","verticalLine","opposite","LEFT","RIGHT","isLeftPage","getTriggersForDoc","BaseParserHandler","masterHandler","insideRegion","pageHandler","regionCount","regionHandler","processViewportMeta","meta","StyleParserHandler","cascadeParserHandler","parseOPSResource","OPSDocStore","styleByKey","styleFetcherByKey","styleByDocURL","triggersByDocURL","styleSheets","triggerSingleDocumentPreprocessing","authorStyleSheets","userStyleSheets","setStyleSheets","userAgentXML","clearStyleSheets","addAuthorStyleSheet","addUserStyleSheet","stylesheet","XmlDoc","PREPROCESS_SINGLE_DOCUMENT","triggerList","getElementsByTagNameNS","triggerElem","EV","sources","userAgentURL","title","rel","sph","source","encode32","decode32","bytes","bytesToSHA1Int32","appendCount","w","bi","TOCView","rendererFactory","setAutoHeight","makeCustomRenderer","renderer","srcElem","viewParent","replaceChild","createComment","adaptParentClass","button","toggleNodeExpansion","tabIndex","anchorElem","showTOC","viewportSize","OPS","bodyChildElem","hideTOC","isTOCVisible","getTOC","exportTree","links","exportLink","hash","innerText","tocNodeElem","ce","adaptClass","elem1","stopPropagation","EPUBDocStore","plainXMLStore","jsonStore","opfByURL","primaryOPFByEPubURL","deobfuscators","documents","makeDeobfuscatorFactory","loadAsPlainXML","startLoadingAsPlainXML","loadAsJSON","startLoadingAsJSON","loadPubDoc","haveZipMetadata","loadEPUBDoc","opf","loadOPF","manifestObj","reportLoadError","OPFDoc","initWithWebPubManifest","loadWebPub","containerXML","pubURL","opfXML","encXML","zipMetadata","initWithXMLDoc","manifestLink","manifestUrl","xhtmlToc","addDocument","docURL","domain","removePath","startsWith","OPFItem","mediaType","itemRefElement","compressedSize","compressed","epage","epageCount","skipPagesBefore","itemProperties","initWithElement","itemElem","opfURL","propStr","initWithParam","getOPFItemId","predefinedPrefixes","dcterms","marc","rendition","onix","xsd","defaultIRI","metaTerms","language","creator","titleType","displaySeq","alternateScript","role","getMetadataComparator","item1","item2","i1","_r1$metaTerms$display","i2","_r2$metaTerms$display","getMathJaxHub","math","MathJax","Hub","PageViewMode","supportedMediaTypes","items","spine","itemMap","itemMapByPath","uid","bindings","prePaginated","epageIsRenderedPage","epageCountCallback","metadata","ncxToc","cover","createDocumentURLTransformer","MATHML","OPFDocumentURLTransformer","path","restoreURL","encoded","getMetadata","getPathFromURL","epubBaseURL","manifestURL","pkg","uidref","uidElem","srcToFallbackId","fallback","nav","fallbackSrc","tocAttr","pageProgressionAttr","idpfObfURLs","mediaTypeElems","handlerId","mroot","prefixMap","resolveProperty","iri","rawItems","refines","scheme","DC","rawItemsByTarget","rawItem","makeMetadata","entryMap","sortMetadata","sha1Sum","blob","webkitSlice","fileReader","FileReader","readAsArrayBuffer","dataView","DataView","byteLength","getUint8","setUint8","assignAutoPages","manifestText","obfuscations","obfuscationKey","sha1","encodedPath","obfuscation","DEFAULT","setEPageCountMode","countEPages","offsetPerEPage","initWithChapters","itemref","readingProgression","primaryEntryPath","readingOrder","encodeURI","hrefNoFragment","itemCount","tocFound","readingOrderOrResources","itemObj","isInReadingOrder","encodingFormat","_this12$items","getCFI","offsetInItem","cfi","CFI","resolveFragment","opfNav","idref","nodeNav","resolveEPage","getEPageFromPosition","makePageAndPosition","OPFView","pageSheetSizeReporter","spineItems","spineItemLoadingContinuations","tocAutohide","tocView","Counters","getPage","viewItem","getCurrentPageProgression","finishPageContainer","oldPage","prevItem","newPage","insertPos","renderSinglePage","makePage","posParam","layoutPositions","prevPos","getPageViewItem","resultPosition","pageAndPosition","nextLayoutPosition","normalizeSeekPosition","seekOffset","seekOffsetPageIndex","complete","findPage","sync","resultPage","normalizedPosition","renderPage","renderAllPages","renderPagesUpto","notAllPages","lastResult","firstPage","lastPage","nextPage","nextViewItem","previousPage","isRectoPage","isLeft","getSpread","otherPageAndPosition","thisPage","otherPage","nextSpread","isRecto","next2","result2","previousSpread","oldPrevPageCont","navigateToEPage","navigateToFragment","navigateTo","restored","pageCont","matrix","cssMatrix","makeObjectView","handlerSrc","srcParam","typeParam","pvalue","makeMathJaxView","hub","clonedMath","importNode","resolveURLsInMathML","Push","tagName","newUrl","mathTypeset","loadingContinuations","epubSpineProperties","pageCounterOffset","_this27$spineItems$","previousViewItem","pubTitles","removeRenderedPages","hasAutoSizedPages","hasPages","autohide","toc","Toc","tocWidth","tocHeight","ZoomType","AdaptiveViewer","viewportElement","instanceId","callbackFn","kick","sendCommand","resizeListener","hyperlinkListener","pageRuleStyleElement","pageSheetSizeAlreadySet","renderTask","packageURL","touchActive","touchX","touchY","needResize","needRefresh","currentSpread","pagePosition","fitToScreen","pageViewMode","waitForLoading","opfView","pageReplacedListener","loadPublication","loadXML","configure","moveTo","addLogListeners","LOADING","SINGLE_PAGE","logLevel","setReadyState","command","Profile","zipmeta","authorStyleSheet","userStyleSheet","Epub","render","resolvedParams","cancelRenderingTask","resize","resolveLength","matched","autoresize","vp","userAgentRootURL","rootURL","configurePlugins","CONFIGURATION","showCurrent","forCurrentPages","removePageListeners","hidePages","showSinglePage","showPage","showSpread","leftWidth","rightWidth","reportPosition","sendLocationNotification","createViewport","vs","resolveSpreadView","SPREAD","updateSpreadView","sizeIsGood","spreadViewChanged","setPageSize","setPageSizePageRules","styleText","removePageSizePageRules","tocVisible","setSpreadZoom","setPageZoom","getAdjustedZoomFactor","getSpreadDimensions","pageDimension","calculateZoomFactorToFitInsideViewPort","queryZoomFactor","pageDim","FIT_INSIDE_VIEWPORT","RenderingCanceledError","resizeTask","INTERACTIVE","notification","COMPLETE","method","currentVisibility","changeAutohide","runCommand","actionName","initEmbed","cmd","maybeParse","viewer","hrefEvent","internal","frameInternal","adapt_command","setPrototypeOf","convertViewerOptions","Navigation","CoreViewer","settings","opt_options","initialized","adaptViewer_","eventTarget","dispatcher","autoResize","pageBorderWidth","AUTO_SPREAD","setOptions","defineProperty","removeListener","loadDocument","singleDocumentOptions","opt_documentOptions","opt_viewerOptions","loadDocumentOrPublication","pubUrl","documentOptions","convertStyleSheetArray","convertSingleDocumentOptions","documentObject","resolveNavigation","PREVIOUS","NEXT","navigateToPage","opt_epage","EPAGE","navigateToInternalUrl","opt_show","opt_autohide","getPageSizes","_this$adaptViewer_$op","_this$adaptViewer_$op2","getCover","toNumberOrNull","opt","isArray","VivliostylePrint","htmlDoc","printCallback","iframeWin","hideIframe","removeIframe","borderWidth","printInstance","srcdoc","runInIframe","preparePrint","browserPrint","cleanUp","docBlob","Viewer","Promise","config","html","css","printHTML"],"mappings":"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OACd5K,KAAe,QACf+iB,SAAmB,EAGjBxwB,KAAKmK,KAAOud,GAAU+I,cA6FVC,GAAYpK,EAAaqK,GACvC,IACIv4B,EADE8G,EAAchF,MAAM,KAE1B,IAAK9B,EAAI,EAAGA,EAAI,IAAKA,IACnB8G,EAAE9G,GAAKkuB,EAGT,IADApnB,EAAC0xB,IAAQtK,GAAO+J,GAAOQ,IAAMR,GAAOQ,IAAMR,GAAOS,QAC5C14B,EAAI,EAAGA,EAAIu4B,EAAKv6B,OAAQgC,GAAK,EAChC8G,EAAEyxB,EAAKv4B,IAAMu4B,EAAKv4B,EAAI,GAExB,OAAO8G,GAhGT,SAAYmxB,GACVA,qBACAA,iBACAA,qBACAA,mBACAA,mBACAA,uBACAA,yBACAA,iBACAA,sBACAA,sBACAA,oBACAA,oBACAA,sBACAA,sBACAA,kBACAA,sBACAA,sBACAA,0BACAA,gBACAA,gBACAA,gBACAA,sBACAA,gBACAA,sBACAA,sBACAA,sBACAA,sBACAA,wBACAA,kBACAA,kBACAA,sBACAA,oBACAA,oBACAA,kBACAA,wBACAA,wBACAA,wBACAA,oBACAA,oBACAA,wBACAA,wBACAA,0BACAA,0BACAA,0BAGAA,wBACAA,0BAGAA,0BACAA,0BACAA,0BACAA,0BACAA,oBACAA,wBACAA,0BACAA,wBACAA,0BACAA,wBACAA,sBACAA,sBACAA,0BACAA,wBACAA,sBACAA,sBACAA,kBACAA,oBACAA,oBACAA,wBACAA,0BACAA,wBACAA,sBACAA,0BACAA,0BACAA,0BACAA,0BACAA,wBACAA,wBACAA,0BACAA,0BACAA,sBACAA,kBAnFF,CAAYA,KAAAA,YAsGCU,GAA0B,CACrCV,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOW,MACPX,GAAOW,MACPX,GAAOS,QACPT,GAAOW,MACPX,GAAOW,MACPX,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAO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,uBAAuBp0C,EAAKnL,QAE1C,MACF,IAAK,kBACH,GAAImL,EAAKnL,OAAO/Z,QAAU,EACxB,YAAY05D,wBAAwBx0C,EAAKnL,QAE3C,MACF,IAAK,SACH,GAAImL,EAAKnL,OAAO/Z,QAAU,EACxB,YAAY45D,gBAAgB10C,EAAKnL,QAEnC,MACF,IAAK,UACH,GAAImL,EAAKnL,OAAO/Z,QAAU,EACxB,YAAY65D,iBAAiB30C,EAAKnL,QAKxC,OADAzO,EAAejB,KAAK,sBAAuB6a,EAAK3b,gBACrCwmB,GAAQ,QAlQiBA,IAqS3BioC,GAAoB,CAC/BkC,MAAO,CACL,KACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,IACA,GACA,KACA,GACA,IACA,GACA,KACA,GACA,IACA,EACA,KACA,EACA,IACA,EACA,KACA,EACA,KAEFC,SAAU,CACR,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,SAAU,CACR,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EA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cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,YAAa,CACX17E,MAAO,EACPo7E,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwCvlF,KAE1E,mBAAoB,CAClBuK,MAAO,EACPo7E,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,YAAa,CACXx7E,MAAO,EACPo7E,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCS,OAE5C,eAAgB,CACdz7E,MAAO,EACPo7E,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,eAAgB,CACd17E,MAAO,EACPo7E,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwCvlF,KAE1E,sBAAuB,CACrBuK,MAAO,EACPo7E,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,eAAgB,CACdx7E,MAAO,GACPo7E,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwCvlF,KAE1E,gBAAiB,CACfuK,MAAO,GACPo7E,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,cAAe,CACb17E,MAAO,GACPo7E,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCS,OAE5C,qBAAsB,CACpBz7E,MAAO,GACPo7E,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,cAAe,CACbx7E,MAAO,GACPo7E,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwCvlF,KAE1E,cAAe,CACbuK,MAAO,GACPo7E,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,WAAY,CACV17E,MAAO,GACPo7E,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCS,QAOjCE,IACLjtC,GAAQysC,GACP5zG,OAAOC,KAAKknE,IAAOl/C,MAAK,SAAC1rB,EAAGwK,UAAMogE,GAAM5qE,GAAGk8B,MAAQ0uC,GAAMpgE,GAAG0xB,UAmBxD47E,eAMX,WACE1jG,EACAxN,EACAe,UAEAqP,cAAM5C,EAAO,KAxBuB,+BAwBS,GAAIxN,EAAQ,KAAM,UA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"}