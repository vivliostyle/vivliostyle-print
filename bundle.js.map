{"version":3,"file":"bundle.js","sources":["../node_modules/fast-diff/diff.js","../node_modules/@vivliostyle/core/src/vivliostyle/constants.ts","../node_modules/@vivliostyle/core/src/vivliostyle/logging.ts","../node_modules/@vivliostyle/core/src/vivliostyle/plugin.ts","../node_modules/@vivliostyle/core/src/vivliostyle/profile.ts","../node_modules/@vivliostyle/core/src/vivliostyle/base.ts","../node_modules/@vivliostyle/core/src/vivliostyle/cfi.ts","../node_modules/@vivliostyle/core/src/vivliostyle/exprs.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css.ts","../node_modules/@vivliostyle/core/src/vivliostyle/geometry-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-prop.ts","../node_modules/@vivliostyle/core/src/vivliostyle/counters.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-tokenizer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/net.ts","../node_modules/@vivliostyle/core/src/vivliostyle/assets.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-parser.ts","../node_modules/@vivliostyle/core/src/vivliostyle/matchers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/types.ts","../node_modules/@vivliostyle/core/src/vivliostyle/diff.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vtree.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-cascade.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-logical-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sizing.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-floats.ts","../node_modules/@vivliostyle/core/src/vivliostyle/footnotes.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-helper.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break-position.ts","../node_modules/@vivliostyle/core/src/vivliostyle/display.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-processor.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-retryers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/shared.ts","../node_modules/@vivliostyle/core/src/vivliostyle/pseudo-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout.ts","../node_modules/@vivliostyle/core/src/vivliostyle/repetitive-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/table.ts","../node_modules/@vivliostyle/core/src/vivliostyle/math-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/columns.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-validator.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-styler.ts","../node_modules/@vivliostyle/core/src/vivliostyle/font.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-master.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-page.ts","../node_modules/@vivliostyle/core/src/vivliostyle/urls.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vgen.ts","../node_modules/@vivliostyle/core/src/vivliostyle/xml-doc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/ops.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sha1.ts","../node_modules/@vivliostyle/core/src/vivliostyle/toc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/epub.ts","../node_modules/@vivliostyle/core/src/vivliostyle/adaptive-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/core-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/print.ts","index.js"],"sourcesContent":["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 !== 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length && y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length && y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i), shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i), shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(\n          j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a, best_longtext_b,\n        best_shorttext_a, best_shorttext_b, best_common\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(0, -1);\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n        diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(0, diffs[pointer][1].length -\n            diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n};\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xD800 && charCode <= 0xDBFF;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xDC00 && charCode <= 0xDFFF;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after]\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange = typeof cursor_pos === 'number' ?\n    { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === 'number' ?\n    null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: ((p1: ErrorInfo) => void)[] } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listeners = this.listeners[level];\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(args);\n      });\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    let listeners = this.listeners[level];\n    if (!listeners) {\n      listeners = this.listeners[level] = [];\n    }\n    listeners.push(listener);\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (\n  p1: Base.JSON,\n) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Ident,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n */\nexport function registerHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    hooksForName.push(fn);\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\n      \"registerStartTiming\"\n    ] = this.registerStartTiming = registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern = /^[\\s\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:[\\s\\p{Zs}]*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  if (i < baseURL.length - 1) {\n    const j = baseURL.lastIndexOf(\".\");\n    if (j < i) {\n      // Assume the last part without '.' to be a directory name.\n      if (relURL == \"\") {\n        return baseURL;\n      }\n      baseURL += \"/\";\n      i = baseURL.length - 1;\n    }\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r = /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n      url,\n    ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r = /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n      url,\n    ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r = /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n      url,\n    ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r = /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n      url,\n    ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n  NCX = \"http://www.daisy.org/z3986/2005/ncx/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\n/**\n * @return ?string\n */\nexport function asString(v: any): any {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\n/**\n * @param prefix Prefix (containing leading and trailing hyphens)\n * @param cssPropName CSS property name\n * @return JavaScript property name\n */\nexport function cssToJSProp(prefix: string, cssPropName: string): string {\n  if (prefix) {\n    cssPropName = `-${cssPropName}`;\n    prefix = prefix.replace(/-/g, \"\");\n    if (prefix === \"moz\") {\n      prefix = \"Moz\";\n    }\n  }\n  return (\n    prefix +\n    cssPropName.replace(/-[a-z]/g, (txt) => txt.substr(1).toUpperCase())\n  );\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\", \"-ms-\", \"-o-\", \"-epub-\"];\n\nexport const propNameMap = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  // Special case\n  if (prop === \"writing-mode\") {\n    const probe = document.createElement(\"span\");\n    if (prefix === \"-ms-\") {\n      probe.style.setProperty(prefix + prop, \"tb-rl\");\n      return probe.style[\"writing-mode\"] === \"tb-rl\";\n    } else {\n      probe.style.setProperty(prefix + prop, \"vertical-rl\");\n      return probe.style[prefix + prop] === \"vertical-rl\";\n    }\n  } else {\n    const style = document.documentElement.style;\n    return typeof style[cssToJSProp(prefix, prop)] === \"string\";\n  }\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n    case \"writing-mode\":\n      // Special case: prefer '-ms-writing-mode' to 'writing-mode'\n      if (checkIfPropertySupported(\"-ms-\", \"writing-mode\")) {\n        propNameMap[prop] = [\"-ms-writing-mode\"];\n        return [\"-ms-writing-mode\"];\n      }\n      break;\n    case \"filter\":\n      // Special case: prefer '-webkit-filter' to 'filter'\n      if (checkIfPropertySupported(\"-webkit-\", \"filter\")) {\n        propNameMap[prop] = [\"-webkit-filter\"];\n        return [\"-webkit-filter\"];\n      }\n      break;\n    case \"clip-path\":\n      // Special case for chrome.\n      if (checkIfPropertySupported(\"-webkit-\", \"clip-path\")) {\n        return (propNameMap[prop] = [\"-webkit-clip-path\", \"clip-path\"]);\n      }\n      break;\n    case \"margin-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-start\")) {\n        propNameMap[prop] = [\"-webkit-margin-start\"];\n        return [\"-webkit-margin-start\"];\n      }\n      break;\n    case \"margin-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-end\")) {\n        propNameMap[prop] = [\"-webkit-margin-end\"];\n        return [\"-webkit-margin-end\"];\n      }\n      break;\n    case \"padding-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-start\")) {\n        propNameMap[prop] = [\"-webkit-padding-start\"];\n        return [\"-webkit-padding-start\"];\n      }\n      break;\n    case \"padding-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-end\")) {\n        propNameMap[prop] = [\"-webkit-padding-end\"];\n        return [\"-webkit-padding-end\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = prefix + prop;\n      propNameMap[prop] = [prefixed];\n      return [prefixed];\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  try {\n    const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n    if (!prefixedPropertyNames) {\n      return;\n    }\n    prefixedPropertyNames.forEach((prefixed) => {\n      if (prefixed === \"-ms-writing-mode\") {\n        switch (value) {\n          case \"horizontal-tb\":\n            value = \"lr-tb\";\n            break;\n          case \"vertical-rl\":\n            value = \"tb-rl\";\n            break;\n          case \"vertical-lr\":\n            value = \"tb-lr\";\n            break;\n        }\n      } else if (prefixed === \"-webkit-text-combine\") {\n        switch (value) {\n          case \"all\":\n            value = \"horizontal\";\n            break;\n        }\n      }\n      if (elem && (elem as HTMLElement).style) {\n        (elem as HTMLElement).style.setProperty(prefixed, value);\n      }\n    });\n  } catch (err) {\n    Logging.logger.warn(err);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\nexport const base64Chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nexport function appendBase64(sb: StringBuffer, data: string): void {\n  const length = data.length;\n  const length3 = Math.floor(length / 3) * 3;\n  for (let i = 0; i < length3; i += 3) {\n    const c1 = data.charCodeAt(i) & 255;\n    const c2 = data.charCodeAt(i + 1) & 255;\n    const c3 = data.charCodeAt(i + 2) & 255;\n    sb.append(base64Chars.charAt(c1 >> 2));\n    sb.append(base64Chars.charAt(((c1 << 4) | (c2 >> 4)) & 63));\n    sb.append(base64Chars.charAt(((c2 << 2) | (c3 >> 6)) & 63));\n    sb.append(base64Chars.charAt(c3 & 63));\n  }\n  switch (length - length3) {\n    case 1: {\n      const p1 = data.charCodeAt(length3) & 255;\n      sb.append(base64Chars.charAt(p1 >> 2));\n      sb.append(base64Chars.charAt((p1 << 4) & 63));\n      sb.append(\"==\");\n      break;\n    }\n    case 2: {\n      const q1 = data.charCodeAt(length3) & 255;\n      const q2 = data.charCodeAt(length3 + 1) & 255;\n      sb.append(base64Chars.charAt(q1 >> 2));\n      sb.append(base64Chars.charAt(((q1 << 4) | (q2 >> 4)) & 63));\n      sb.append(base64Chars.charAt((q2 << 2) & 63));\n      sb.append(\"=\");\n      break;\n    }\n  }\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      list.push(listener);\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n\nexport let hasLShapeFloatBug: boolean | null = null;\n\n/**\n * Check if there is a bug with L-shape floats overlapping text.\n */\nexport function checkLShapeFloatBug(body: HTMLElement): boolean {\n  if (hasLShapeFloatBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    body.appendChild(container);\n    const f1 = doc.createElement(\"div\") as HTMLElement;\n    f1.style.width = \"0px\";\n    f1.style.height = \"14px\";\n    f1.style.cssFloat = \"left\";\n    container.appendChild(f1);\n    const f2 = doc.createElement(\"div\") as HTMLElement;\n    f2.style.width = \"50px\";\n    f2.style.height = \"50px\";\n    f2.style.cssFloat = \"left\";\n    f2.style.clear = \"left\";\n    container.appendChild(f2);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const leftEdge = range.getBoundingClientRect().left;\n    hasLShapeFloatBug = leftEdge < 40;\n    body.removeChild(container);\n  }\n  return hasLShapeFloatBug;\n}\n\nexport let hasVerticalBBoxBug: boolean | null = null;\n\n/**\n * Check if there is a bug with the bounding boxes of vertical text characters.\n * Though method used to be used check Chrome bug, it seems that the bug has\n * been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method to check Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function checkVerticalBBoxBug(body: HTMLElement): boolean {\n  if (hasVerticalBBoxBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    setCSSProperty(container, \"writing-mode\", \"vertical-rl\");\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const box = range.getBoundingClientRect();\n    hasVerticalBBoxBug = box.right - box.left < 10;\n    body.removeChild(container);\n  }\n  return hasVerticalBBoxBug;\n}\n\nexport let hasInlineBlockJustificationBug: boolean | null = null;\n\nexport function checkInlineBlockJustificationBug(body: HTMLElement): boolean {\n  if (hasInlineBlockJustificationBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"30px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a | \");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"30px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 3);\n    const box = range.getBoundingClientRect();\n    hasInlineBlockJustificationBug = box.right < 27;\n    body.removeChild(container);\n  }\n  return hasInlineBlockJustificationBug;\n}\n\nexport let hasSoftWrapOpportunityAfterHyphenBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityAfterHyphenBug(\n  body: HTMLElement,\n): boolean {\n  if (hasSoftWrapOpportunityAfterHyphenBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityAfterHyphenBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityAfterHyphenBug;\n}\n\nexport let hasSoftWrapOpportunityByWbrBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityByWbrBug(body: HTMLElement): boolean {\n  if (hasSoftWrapOpportunityByWbrBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    container.appendChild(doc.createElement(\"wbr\"));\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityByWbrBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityByWbrBug;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      throw new Error(\"E_CFI_ID_MISMATCH\");\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  fontSize: () => number;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return this.pageVertical ? vh : vw;\n        case \"vb\":\n          return this.pageVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return this.pageVertical ? pvh : pvw;\n        case \"pvb\":\n          return this.pageVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= req;\n        case \"max\":\n          return actual <= req;\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    context.storeVal(this.scope, this.key, result);\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(scope: LexicalScope, public val: Val) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(scope: LexicalScope, public lhs: Val, public rhs: Val) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"-\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"&&\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"||\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \", \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"==\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"+\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" - \";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"*\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"/\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"%\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(scope: LexicalScope, public num: number, unit: string) {\n    super(scope);\n    this.unit = unit.toLowerCase();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(scope: LexicalScope, public qualifiedName: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  // FIXME: This property is added to reduce TypeScript error on `dependCore`\n  // but it is never initialized. Is it really correct code?\n  value: Val;\n\n  constructor(scope: LexicalScope, public not: boolean, public name: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(scope: LexicalScope, public val: Result) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(scope: LexicalScope, public name: MediaName, public value: Val) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class Param extends Val {\n  constructor(scope: LexicalScope, public index: number) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  /**\n   * @return void\n   */\n  visitValues(values: Val[]): any {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n  }\n\n  visitEmpty(empty: Val): Val {\n    throw new Error(\"E_CSS_EMPTY_NOT_ALLOWED\");\n  }\n\n  visitSlash(slash: Val): Val {\n    throw new Error(\"E_CSS_SLASH_NOT_ALLOWED\");\n  }\n\n  visitStr(str: Str): Val {\n    throw new Error(\"E_CSS_STR_NOT_ALLOWED\");\n  }\n\n  visitIdent(ident: Ident): Val {\n    throw new Error(\"E_CSS_IDENT_NOT_ALLOWED\");\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    throw new Error(\"E_CSS_NUMERIC_NOT_ALLOWED\");\n  }\n\n  visitNum(num: Num): Val {\n    throw new Error(\"E_CSS_NUM_NOT_ALLOWED\");\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitColor(color: Color): Val {\n    throw new Error(\"E_CSS_COLOR_NOT_ALLOWED\");\n  }\n\n  visitURL(url: URL): Val {\n    throw new Error(\"E_CSS_URL_NOT_ALLOWED\");\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    throw new Error(\"E_CSS_LIST_NOT_ALLOWED\");\n  }\n\n  visitCommaList(list: CommaList): Val {\n    throw new Error(\"E_CSS_COMMA_NOT_ALLOWED\");\n  }\n\n  visitFunc(func: Func): Val {\n    throw new Error(\"E_CSS_FUNC_NOT_ALLOWED\");\n  }\n\n  visitExpr(expr: Expr): Val {\n    throw new Error(\"E_CSS_EXPR_NOT_ALLOWED\");\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  constructor() {\n    super();\n  }\n\n  visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Str): Val {\n    return str;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Num): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Int): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Color): Val {\n    return color;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: URL): Val {\n    return url;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: any): any {\n    throw new Error(\"F_ABSTRACT\");\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitIdent(this);\n  }\n\n  /**\n   * @override\n   */\n  isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(public num: number, unit: string) {\n    super();\n    this.unit = unit.toLowerCase(); // units are case-insensitive in CSS\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNumeric(this);\n  }\n\n  /**\n   * @override\n   */\n  isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNum(this);\n  }\n\n  /**\n   * @override\n   */\n  isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class Color extends Val {\n  constructor(public rgb: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    const str = this.rgb.toString(16);\n    buf.append(\"000000\".substr(str.length));\n    buf.append(str);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURL(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0].appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i].appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSpaceList(this);\n  }\n\n  /**\n   * @override\n   */\n  isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(public name: string, public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"-epubx-expr(\");\n    this.expr.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitExpr(this);\n  }\n\n  /**\n   * @override\n   */\n  isExpr(): boolean {\n    return true;\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  color: 2,\n};\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  /** @override */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  /** @override */\n  visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters and named strings\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(public readonly targetId: string, public resolved: boolean) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /**\n   * @override\n   */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedStringValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedStringValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /**\n   * @override\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr) => {\n      return format(arr[0]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /**\n   * @override\n   */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * @override\n   */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const stringValues = this.namedStringValues[name];\n        if (!stringValues) {\n          return \"\";\n        }\n        const offsets = Object.keys(stringValues)\n          .map((a) => parseInt(a, 10))\n          .sort(Base.numberCompare);\n\n        const currentPage = this.counterStore.currentPage;\n        const pageStartOffset = currentPage.isBlankPage\n          ? currentPage.offset - 1\n          : currentPage.offset;\n        const pageLastOffset = currentPage.isBlankPage\n          ? pageStartOffset\n          : Math.max(\n              pageStartOffset,\n              ...Array.from(\n                currentPage.container.querySelectorAll(\n                  `[${Base.ELEMENT_OFFSET_ATTR}]`,\n                ),\n              ).map((e) =>\n                parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10),\n              ),\n            );\n\n        let firstOffset = -1;\n        let startOffset = -1;\n        let lastOffset = -1;\n        let firstExceptOffset = -1;\n\n        for (let i = 0; i < offsets.length; i++) {\n          const offset = offsets[i];\n          const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n          const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n          if (offset > pageLastOffset) {\n            break;\n          }\n          if (offset >= pageStartOffset) {\n            if (firstOffset < 0) {\n              firstOffset = offset;\n              firstExceptOffset = -1;\n            }\n            if (startOffset < 0) {\n              if (offset === pageStartOffset) {\n                startOffset = offset;\n              } else {\n                if (offsetPrev < firstOffset) {\n                  startOffset = offsetPrev;\n                }\n                // Check if the element at the offset is at beginning of the page\n                const elementAtOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n                );\n                if (!elementAtOffset) {\n                  // title or meta elements are not output, but should be treated as start\n                  if (startOffset < 0) {\n                    startOffset = offset;\n                  }\n                } else {\n                  let elementAtPageStartOffset = currentPage.container.querySelector(\n                    `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                  );\n                  if (!elementAtPageStartOffset) {\n                    // The element at pageStartOffset is not found when page break occured\n                    // within an element, so use the ancestor element with offset 0 instead.\n                    elementAtPageStartOffset = currentPage.container.querySelector(\n                      `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                    );\n                  }\n                  if (elementAtPageStartOffset) {\n                    // Find if the element at the offset is (the first child of)* the element at page start\n                    for (\n                      let element = elementAtPageStartOffset;\n                      element;\n                      element = element.firstElementChild\n                    ) {\n                      if (element === elementAtOffset) {\n                        startOffset = offset;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            lastOffset = offset;\n          } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n            firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n          }\n        }\n\n        const stringValue =\n          stringValues[\n            {\n              first: firstOffset,\n              start: startOffset,\n              last: lastOffset,\n              \"first-except\": firstExceptOffset,\n            }[retrievePosition]\n          ] || \"\";\n\n        return stringValue;\n      },\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CssCascade.CascadeInstance,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[cascadeInstance.currentElementOffset] = stringValue;\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(\n    page: Vtree.Page,\n  ): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    }\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(expr, val, document) {\n    const found = this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    if (found) {\n      const node = document.createElement(\"span\");\n      node.textContent = val;\n      node.setAttribute(PAGES_COUNTER_ATTR, expr.key);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = this.currentPageCounters[\"page\"][0];\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code <= 65535) {\n    return String.fromCharCode(code);\n  }\n  if (code <= 1114111) {\n    // non-BMP characters: convert to a surrogate pair\n    return String.fromCharCode(\n      55296 | ((code >> 10) & 1023),\n      56320 | (code & 1023),\n    );\n  }\n\n  // not a valid Unicode value\n  return \"\\ufffd\";\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{0,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  INVALID,\n  LAST = 51,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n}\n\nexport function makeActions(def: Action, spec: Action[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.ENDNOTK,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  9 /*tab*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  32 /*sp*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  head: number = -1; // saved, occupied if >= 0\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(public input: string, public readonly handler: TokenizerHandler) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  mark(): void {\n    if (this.head >= 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL mark\");\n    }\n    this.head = this.curr;\n  }\n\n  reset(): void {\n    if (this.head < 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL reset\");\n    }\n    this.curr = this.head;\n    this.head = -1;\n  }\n\n  unmark(): void {\n    this.head = -1;\n  }\n\n  hasMark(): boolean {\n    return this.head >= 0;\n  }\n\n  private reallocate(): void {\n    const newIndexMask = 2 * (this.indexMask + 1) - 1;\n    const newBuffer: Token[] = Array(newIndexMask + 1);\n    let oldIndex = this.head;\n    let newIndex = 0;\n    while (oldIndex != this.tail) {\n      newBuffer[newIndex] = this.buffer[oldIndex];\n      if (oldIndex == this.curr) {\n        this.curr = newIndex;\n      }\n      oldIndex = (oldIndex + 1) & this.indexMask;\n      newIndex++;\n    }\n    this.head = 0;\n    this.tail = newIndex;\n    this.indexMask = newIndexMask;\n    this.buffer = newBuffer;\n    while (newIndex <= newIndexMask) {\n      newBuffer[newIndex++] = new Token();\n    }\n  }\n\n  private error(position, token, mnemonics) {\n    if (this.handler) {\n      this.handler.error(mnemonics, token);\n    }\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.head >= 0 ? this.head : this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      // only expect to get here when mark is in effect\n      if (this.head < 0) {\n        throw new Error(\"F_CSSTOK_INTERNAL\");\n      }\n      this.reallocate();\n      tail = this.tail;\n      indexMask = this.indexMask;\n      head = indexMask; // this.head is zero\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenType = TokenType.INVALID;\n          if (isNaN(charCode)) {\n            tokenText = \"E_CSS_UNEXPECTED_EOF\";\n          } else {\n            tokenText = \"E_CSS_UNEXPECTED_CHAR\";\n          }\n          actions = actionsNormal;\n          position++;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = input.substring(tokenPosition, position);\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          continue;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   * @return.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /**\n   * @override\n   */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /**\n   * @override\n   */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /**\n   * @override\n   */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /**\n   * @override\n   */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(public scheduler: Scheduler, public name: string) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /**\n   * @override\n   */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /**\n   * @override\n   */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(public task: Task, public parent: Frame<T>, public name: string) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(public readonly fetch: () => Task.Result<T>, opt_name?: string) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(elem: Element, src: string): Fetcher<string> {\n  let width: string | null = null;\n  let height: string | null = null;\n  if (elem.localName == \"img\") {\n    width = elem.getAttribute(\"width\");\n    height = elem.getAttribute(\"height\");\n  }\n  const fetcher = new Fetcher(() => {\n    const frame: Task.Frame<string> = Task.newFrame(\"loadImage\");\n    const continuation = frame.suspend(elem);\n    let done = false;\n    const handler = (evt: Event) => {\n      if (done) {\n        return;\n      } else {\n        done = true;\n      }\n      if (elem.localName == \"img\") {\n        // IE puts these bogus attributes, even if they were not present\n        if (!width) {\n          elem.removeAttribute(\"width\");\n        }\n        if (!height) {\n          elem.removeAttribute(\"height\");\n        }\n      }\n      continuation.schedule(evt ? evt.type : \"timeout\");\n    };\n    elem.addEventListener(\"load\", handler, false);\n    elem.addEventListener(\"error\", handler, false);\n    elem.addEventListener(\"abort\", handler, false);\n    if (elem.namespaceURI == Base.NS.SVG) {\n      elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n\n      // SVG handlers are not reliable\n      setTimeout(handler, 300);\n    } else {\n      (elem as any).src = src;\n    }\n    return frame.result();\n  }, `loadElement ${src}`);\n  fetcher.start();\n  return fetcher;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum XMLHttpRequestResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type Response = Net.Response;\n\nexport function ajax(\n  url: string,\n  opt_type?: XMLHttpRequestResponseType,\n  opt_method?: string,\n  opt_data?: string,\n  opt_contentType?: string,\n): Task.Result<Response> {\n  const frame: Task.Frame<Response> = Task.newFrame(\"ajax\");\n  const request = new XMLHttpRequest();\n  const continuation = frame.suspend(request);\n  const response: Response = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n  request.open(opt_method || \"GET\", url, true);\n  if (opt_type) {\n    request.responseType = opt_type;\n  }\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      response.status = request.status;\n      response.statusText =\n        request.statusText || (request.status == 404 && \"Not Found\") || \"\";\n      if (response.status == 200 || response.status == 0) {\n        if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.responseXML &&\n          request.responseXML.documentElement.localName != \"parsererror\"\n        ) {\n          response.responseXML = request.responseXML;\n          response.contentType = (request.responseXML as any).contentType;\n        } else if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.response instanceof HTMLDocument\n        ) {\n          response.responseXML = request.response;\n          response.contentType = (request.response as any).contentType;\n        } else {\n          const text = request.response;\n          if (\n            (!opt_type || opt_type === XMLHttpRequestResponseType.TEXT) &&\n            typeof text == \"string\"\n          ) {\n            response.responseText = text;\n          } else if (!text) {\n            Logging.logger.warn(\"Unexpected empty success response for\", url);\n          } else {\n            if (typeof text == \"string\") {\n              response.responseBlob = makeBlob([text]);\n            } else {\n              response.responseBlob = text as Blob;\n            }\n          }\n          const contentTypeHeader = request.getResponseHeader(\"Content-Type\");\n          if (contentTypeHeader) {\n            response.contentType = contentTypeHeader.replace(/(.*);.*$/, \"$1\");\n          }\n        }\n      }\n      continuation.schedule(response);\n    }\n  };\n  try {\n    if (opt_data) {\n      request.setRequestHeader(\n        \"Content-Type\",\n        opt_contentType || \"text/plain; charset=UTF-8\",\n      );\n      request.send(opt_data);\n    } else {\n      if (\n        /^file:|^https?:\\/\\/[^/]+\\.githubusercontent\\.com|\\.(xhtml|xht|opf)$/i.test(\n          url,\n        )\n      ) {\n        // File or GitHub raw URL or .xht(ml) or .opf\n        if (\n          /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n        ) {\n          // Aozorabunko's (X)HTML support\n          request.overrideMimeType(\"text/html; charset=Shift_JIS\");\n        } else if (/\\.(html|htm)$/i.test(url)) {\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        } else if (/\\.(xhtml|xht|xml|opf)$/i.test(url)) {\n          request.overrideMimeType(\"application/xml; charset=UTF-8\");\n        } else if (/\\.(txt|css)$/i.test(url)) {\n          request.overrideMimeType(\"text/plain; charset=UTF-8\");\n        } else {\n          // fallback to HTML\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        }\n      } else if (/^data:,(<|%3c)/i.test(url)) {\n        request.overrideMimeType(\"text/html; charset=UTF-8\");\n      } else if (/^data:,/i.test(url)) {\n        request.overrideMimeType(\"text/plain; charset=UTF-8\");\n      }\n      request.send(null);\n    }\n  } catch (e) {\n    Logging.logger.warn(e, `Error fetching ${url}`);\n    continuation.schedule(response);\n  }\n  return frame.result();\n}\n\n/**\n * @return Blob\n */\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): any {\n  const type = opt_type || \"application/octet-stream\";\n  const builderCtr = window[\"WebKitBlobBuilder\"] || window[\"MSBlobBuilder\"]; // deprecated\n  if (builderCtr) {\n    const builder = new builderCtr();\n    for (let i = 0; i < parts.length; i++) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(type);\n  }\n  return new Blob(parts, { type });\n}\n\n/**\n * @return Task.Result.<ArrayBuffer>\n */\nexport function readBlob(blob: Blob): any {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  (window[\"URL\"] || window[\"webkitURL\"]).revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return (window[\"URL\"] || window[\"webkitURL\"]).createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: XMLHttpRequestResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    ajax(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: Response,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, XMLHttpRequestResponseType.TEXT);\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n// vivliostyle-viewport-screen.css\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    display: -webkit-flex;\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    -webkit-flex: none;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: -webkit-flex;\n    display: flex;\n    -webkit-flex: none;\n    flex: none;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -moz-transform-origin: left top;\n    -ms-transform-origin: left top;\n    -webkit-transform-origin: left top;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row;\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row-reverse;\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    -webkit-flex: none;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n// vivliostyle-viewport.css\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n  overflow: hidden;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  overflow: hidden;\n  max-width: 100%;\n  max-height: 100%;\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container],\n  [data-vivliostyle-page-container] {\n    -moz-transform: none !important;\n    -ms-transform: none !important;\n    -webkit-transform: none !important;\n    transform: none !important;\n  }\n\n  [data-vivliostyle-page-container] {\n    display: block !important;\n    max-width: 100%;\n    height: 100% !important;\n    max-height: 100%;\n  }\n\n  /* Workaround for Chrome printing problem */\n  /* [data-vivliostyle-page-box] {\n        padding-bottom: 0 !important;\n        overflow: visible !important;\n    } */\n  [data-vivliostyle-bleed-box] > div > div::before {\n    display: block;\n    content: \"\";\n    padding-top: 0.015625px;\n    margin-bottom: -0.015625px;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document regexp('.*') {\n    [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n  }\n}\n`;\n\n// validation.txt\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO | NEGATIVE;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nSCOLOR = HASHCOLOR | aliceblue: #F0F8FF | antiquewhite: #FAEBD7 | aqua: #00FFFF | aquamarine: #7FFFD4 | azure: #F0FFFF |\n    beige: #F5F5DC | bisque: #FFE4C4 | black: #000000 | blanchedalmond: #FFEBCD | blue: #0000FF | blueviolet: #8A2BE2 | brown: #A52A2A |\n    burlywood: #DEB887 | cadetblue: #5F9EA0 | chartreuse: #7FFF00 | chocolate: #D2691E | coral: #FF7F50 | cornflowerblue: #6495ED |\n    cornsilk: #FFF8DC | crimson: #DC143C | cyan: #00FFFF | darkblue: #00008B | darkcyan: #008B8B | darkgoldenrod: #B8860B |\n    darkgray: #A9A9A9 | darkgreen: #006400 | darkgrey: #A9A9A9 | darkkhaki: #BDB76B | darkmagenta: #8B008B | darkolivegreen: #556B2F |\n    darkorange: #FF8C00 | darkorchid: #9932CC | darkred: #8B0000 | darksalmon: #E9967A | darkseagreen: #8FBC8F | darkslateblue: #483D8B |\n    darkslategray: #2F4F4F | darkslategrey: #2F4F4F | darkturquoise: #00CED1 | darkviolet: #9400D3 | deeppink: #FF1493 |\n    deepskyblue: #00BFFF | dimgray: #696969 | dimgrey: #696969 | dodgerblue: #1E90FF | firebrick: #B22222 | floralwhite: #FFFAF0 |\n    forestgreen: #228B22 | fuchsia: #FF00FF | gainsboro: #DCDCDC | ghostwhite: #F8F8FF | gold: #FFD700 | goldenrod: #DAA520 |\n    gray: #808080 | green: #008000 | greenyellow: #ADFF2F | grey: #808080 | honeydew: #F0FFF0 | hotpink: #FF69B4 | indianred: #CD5C5C |\n    indigo: #4B0082 | ivory: #FFFFF0 | khaki: #F0E68C | lavender: #E6E6FA | lavenderblush: #FFF0F5 | lawngreen: #7CFC00 |\n    lemonchiffon: #FFFACD | lightblue: #ADD8E6 | lightcoral: #F08080 | lightcyan: #E0FFFF | lightgoldenrodyellow: #FAFAD2 |\n    lightgray: #D3D3D3 | lightgreen: #90EE90 | lightgrey: #D3D3D3 | lightpink: #FFB6C1 | lightsalmon: #FFA07A | lightseagreen: #20B2AA |\n    lightskyblue: #87CEFA | lightslategray: #778899 | lightslategrey: #778899 | lightsteelblue: #B0C4DE | lightyellow: #FFFFE0 |\n    lime: #00FF00 | limegreen: #32CD32 | linen: #FAF0E6 | magenta: #FF00FF | maroon: #800000 | mediumaquamarine: #66CDAA |\n    mediumblue: #0000CD | mediumorchid: #BA55D3 | mediumpurple: #9370DB | mediumseagreen: #3CB371 | mediumslateblue: #7B68EE |\n    mediumspringgreen: #00FA9A | mediumturquoise: #48D1CC | mediumvioletred: #C71585 | midnightblue: #191970 | mintcream: #F5FFFA |\n    mistyrose: #FFE4E1 | moccasin: #FFE4B5 | navajowhite: #FFDEAD | navy: #000080 | oldlace: #FDF5E6 | olive: #808000 |\n    olivedrab: #6B8E23 | orange: #FFA500 | orangered: #FF4500 | orchid: #DA70D6 | palegoldenrod: #EEE8AA | palegreen: #98FB98 |\n    paleturquoise: #AFEEEE | palevioletred: #DB7093 | papayawhip: #FFEFD5 | peachpuff: #FFDAB9 | peru: #CD853F | pink: #FFC0CB |\n    plum: #DDA0DD | powderblue: #B0E0E6 | purple: #800080 | rebeccapurple: #663399 | red: #FF0000 | rosybrown: #BC8F8F | royalblue: #4169E1 |\n    saddlebrown: #8B4513 | salmon: #FA8072 | sandybrown: #F4A460 | seagreen: #2E8B57 | seashell: #FFF5EE | sienna: #A0522D |\n    silver: #C0C0C0 | skyblue: #87CEEB | slateblue: #6A5ACD | slategray: #708090 | slategrey: #708090 | snow: #FFFAFA |\n    springgreen: #00FF7F | steelblue: #4682B4 | tan: #D2B48C | teal: #008080 | thistle: #D8BFD8 | tomato: #FF6347 |\n    turquoise: #40E0D0 | violet: #EE82EE | wheat: #F5DEB3 | white: #FFFFFF | whitesmoke: #F5F5F5 | yellow: #FFFF00 |\n    yellowgreen: #9ACD32 | transparent | currentcolor;\nRGBCOLOR = rgb(INT{3}) | rgb(STRICT_PERCENTAGE{3});\nRGBACOLOR = rgba(NUM{4}) | rgba(STRICT_PERCENTAGE{3} NUM);\nHSLCOLOR = hsl(NUM PERCENTAGE{2});\nHSLACOLOR = hsl(NUM PERCENTAGE{2} NUM);\nCOLOR = SCOLOR | RGBCOLOR | RGBACOLOR | HSLCOLOR | HSLACOLOR;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nSIDE_OR_CORNER =  [left | right] || [top | bottom];\nCOLOR_STOP = SPACE(COLOR [PERCENTAGE | LENGTH]?);\nLINEAR_GRADIENT = linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |\n                  repeating-linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |;\nGRADIENT_EXTENT = closest-corner | closest-side | farthest-corner | farthest-side;\nGRADIENT_POSITION = at BG_POSITION_TERM{1,4};\nGRADIENT_SHAPE = SPACE(circle LENGTH? GRADIENT_POSITION?) | SPACE(ellipse PLENGTH{2}? GRADIENT_POSITION?)| SPACE([circle | ellipse] GRADIENT_EXTENT? GRADIENT_POSITION?);\nRADIAL_GRADIENT = radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+) |\n                  repeating-radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+);\nURI_OR_NONE = URI | none;\nIMAGE =  URI | LINEAR_GRADIENT | RADIAL_GRADIENT | none;\nazimuth = ANGLE | [[ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = disc | circle | square | decimal | decimal-leading-zero | lower-roman |\n    upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha |\n    upper-alpha | russian | upper-russian | lower-russian | cjk-ideographic | trad-chinese-informal |\n    hebrew | none;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncue-after = URI_OR_NONE;\ncue-before = URI_OR_NONE;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker;\nelevation = ANGLE | below | level | above | higher | lower;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH | POS_NUM;\nfont-style = normal | italic | oblique;\nfont-variant = normal | small-caps;\nfont-weight = normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;\nheight = PAPLENGTH | POS_NUM ;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH;\nmax-width = NPLENGTH;\nmin-height = auto | PLENGTH;\nmin-width = auto | PLENGTH;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nPAUSE = POS_TIME | ZERO | POS_PERCENTAGE;\npause-after = PAUSE;\npause-before = PAUSE;\npitch-range = NUM;\npitch = FREQUENCY | x-low | low | medium | high | x-high;\nplay-during = [URI [ mix || repeat ]?] | auto | none;\nposition = static | relative | absolute | fixed;\nquotes = [STRING STRING]+ | none;\nrichness = NUM;\nright = APLENGTH;\nspeak-header = once | always;\nspeak-numeral = digits | continuous;\nspeak-punctuation = code | none;\nspeech-rate = NUM | x-slow | slow | medium | fast | x-fast | faster | slower;\nstress = NUM;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-decoration = none | [ underline || overline || line-through || blink ];\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nvoice-family = FAMILY_LIST;\nvolume = NUM | PERCENTAGE | silent | x-soft | soft | medium | loud | x-loud;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line;\nwidows = POS_INT;\nwidth = PAPLENGTH | POS_NUM ;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,ms,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | POS_NUM;\ninline-size = PAPLENGTH | POS_NUM;\nmax-block-size = NPLENGTH;\nmax-inline-size = NPLENGTH;\nmin-block-size = auto | PLENGTH;\nmin-inline-size = auto | PLENGTH;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx,ms]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub,ms]transform = none | TRANSFORM_FUNCTION+;\n[epub,ms]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto | IDENT; /* page: IDENT is for CSS Paged Media */\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-variant-east-asian = normal | [[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ] || [ full-width | proportional-width ] || ruby];\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nfont-stretch = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a10 | a9 | a8 | a7 | a6 | a5 | a4 | a3 | a2 | a1 | a0\n          | b10 | b9 | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0\n          | c10 | c9 | c8 | c7 | c6 | c5 | c4 | c3 | c2 | c1 | c0\n          | jis-b10 | jis-b9 | jis-b8 | jis-b7 | jis-b6 | jis-b5 | jis-b4 | jis-b3 | jis-b2 | jis-b1 | jis-b0\n          | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = block-start | block-end | inline-start | inline-end | snap-block | snap-inline | left | right | top | bottom | none | footnote;\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz,ms]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[ms,webkit]line-break = auto | loose | normal | strict;\noverflow-wrap = normal | break-word;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz,ms]text-align-last = auto | start | end | left | right | center | justify;\n[ms]text-justify = auto | none | inter-word | inter-character | inter-ideograph /* specified in UA stylesheet for IE */;\n[ms]word-break = normal | keep-all | break-all | break-word;\n[ms]word-wrap = normal | break-word;\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[ms,webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[ms,webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\nbox-sizing = content-box | padding-box | border-box;\n[ms]text-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[webkit]text-combine = none | horizontal;\n[epub,ms]text-combine-horizontal = none | all | [ digits POS_INT? ]; /* relaxed */\ntext-combine-upright = none | all | [ digits POS_INT? ]; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\n[ms]touch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-variant: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-type list-style-position list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\npause = INSETS pause-before pause-after;\nfont = FONT font-style font-variant font-weight font-stretch /* font-size line-height font-family are special-cased */;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\n\n/* old names  */\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n// user-agent.xml\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.footnote-content {\n  float: footnote;\n}\n\n.table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n// user-agent-page.css\nexport const UserAgentPageCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n// user-agent-base.css\nexport const UserAgentBaseCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\nhtml|html,\nhtml|address,\nhtml|blockquote,\nhtml|body,\nhtml|dd,\nhtml|div,\nhtml|dl,\nhtml|dt,\nhtml|fieldset,\nhtml|form,\nhtml|frame,\nhtml|frameset,\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|noframes,\nhtml|ol,\nhtml|p,\nhtml|ul,\nhtml|center,\nhtml|dir,\nhtml|hr,\nhtml|menu,\nhtml|pre,\nhtml|article,\nhtml|section,\nhtml|nav,\nhtml|aside,\nhtml|hgroup,\nhtml|footer,\nhtml|header,\nhtml|figure,\nhtml|figcaption,\nhtml|main {\n  display: block;\n  unicode-bidi: normal;\n}\nhtml|li {\n  display: list-item;\n}\nhtml|head {\n  display: none !important;\n}\nhtml|table {\n  display: table;\n}\nhtml|tr {\n  display: table-row;\n}\nhtml|thead {\n  display: table-header-group;\n  break-after: avoid;\n}\nhtml|tbody {\n  display: table-row-group;\n}\nhtml|tfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\nhtml|col {\n  display: table-column;\n}\nhtml|colgroup {\n  display: table-column-group;\n}\nhtml|td,\nhtml|th {\n  display: table-cell;\n}\nhtml|caption {\n  display: table-caption;\n  text-align: center;\n}\nhtml|th {\n  font-weight: bolder;\n  text-align: center;\n}\nhtml|*[hidden],\nhtml|link,\nhtml|style,\nhtml|script {\n  display: none;\n}\nhtml|body {\n  margin: 8px;\n}\nhtml|h1 {\n  font-size: 2em;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h2 {\n  font-size: 1.5em;\n  margin-block-start: 0.75em;\n  margin-block-end: 0.75em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h3 {\n  font-size: 1.17em;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h4,\nhtml|p,\nhtml|blockquote,\nhtml|ul,\nhtml|fieldset,\nhtml|form,\nhtml|ol,\nhtml|dl,\nhtml|dir,\nhtml|menu,\nhtml|h5,\nhtml|h6 {\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h5 {\n  font-size: 0.83em;\n}\nhtml|h6 {\n  font-size: 0.75em;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|b,\nhtml|strong {\n  font-weight: bolder;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6 {\n  break-after: avoid;\n}\nhtml|blockquote {\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n}\nhtml|i,\nhtml|cite,\nhtml|em,\nhtml|var,\nhtml|address {\n  font-style: italic;\n}\nhtml|pre,\nhtml|tt,\nhtml|code,\nhtml|kbd,\nhtml|samp {\n  font-family: monospace;\n}\nhtml|pre {\n  white-space: pre;\n}\nhtml|button,\nhtml|textarea,\nhtml|input,\nhtml|select {\n  display: inline-block;\n}\nhtml|big {\n  font-size: 1.17em;\n}\nhtml|small,\nhtml|sub,\nhtml|sup {\n  font-size: 0.83em;\n}\nhtml|sub {\n  vertical-align: sub;\n}\nhtml|sup {\n  vertical-align: super;\n}\nhtml|table {\n  border-spacing: 2px;\n}\nhtml|thead,\nhtml|tbody,\nhtml|tfoot {\n  vertical-align: middle;\n}\n/* for XHTML tables without tbody */\nhtml|table > html|tr {\n  vertical-align: middle;\n}\nhtml|td,\nhtml|th {\n  vertical-align: inherit;\n}\nhtml|s,\nhtml|strike,\nhtml|del {\n  text-decoration: line-through;\n}\nhtml|hr {\n  border: 1px inset;\n}\nhtml|ol,\nhtml|ul,\nhtml|dir,\nhtml|menu,\nhtml|dd {\n  margin: 0px;\n  margin-inline-start: 40px;\n}\nhtml|ol html|ul,\nhtml|ul html|ol,\nhtml|ul html|ul,\nhtml|ol html|ol {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\nhtml|u,\nhtml|ins {\n  text-decoration: underline;\n}\nhtml|center {\n  text-align: center;\n}\nhtml|q:before {\n  content: open-quote;\n}\nhtml|q:after {\n  content: close-quote;\n}\n\nhtml|audio,\nhtml|video {\n  break-inside: avoid;\n}\n\nhtml|ruby {\n  display: ruby;\n}\nhtml|rp {\n  display: none;\n}\nhtml|rbc {\n  display: ruby-base-container;\n}\nhtml|rtc {\n  display: ruby-text-container;\n}\nhtml|rb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nhtml|rt {\n  display: ruby-text;\n}\nhtml|ruby,\nhtml|rb,\nhtml|rt,\nhtml|rbc,\nhtml|rtc {\n  unicode-bidi: isolate;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-variant-east-asian: ruby;\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\n\nhtml|rtc:lang(zh),\nhtml|rt:lang(zh) {\n  ruby-align: center;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-size: 50%;\n}\n\nhtml|rtc:lang(zh-TW),\nhtml|rt:lang(zh-TW) {\n  font-size: 30%;\n}\n\nhtml|rtc > html|rt,\nhtml|rtc > html|rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nhtml|bdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nhtml|bdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\nhtml|*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: embed;\n}\nhtml|*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: embed;\n}\n\n/*------------------ epub-specific ---------------------*/\n\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml|a[epub|type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\nhtml|a[epub|type=\"noteref\"]:href-epub-type(footnote) {\n  -adapt-template: url(user-agent.xml#footnote);\n  text-decoration: none;\n}\n\nhtml|aside[epub|type=\"footnote\"] {\n  display: none;\n}\n\nhtml|aside[epub|type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n\n/*--------------- ncx and toc ----------------------*/\n\n@namespace ncx \"http://www.daisy.org/z3986/2005/ncx/\";\n\nncx|ncx {\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nncx|content {\n  display: none;\n}\n\nbody > * {\n  -adapt-behavior: body-child;\n}\n\n[role=\"doc-toc\"],\n[role=\"directory\"],\nnav,\n.toc,\n#toc,\n#table-of-contents,\n#contents {\n  -adapt-behavior: toc-root;\n}\n\n[role=\"doc-toc\"] a,\n[role=\"directory\"] a,\nnav a,\n.toc a,\n#toc a,\nncx|navLabel {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[role=\"doc-toc\"] li,\n[role=\"directory\"] li,\nnav li,\n.toc li,\n#toc li,\nncx|navPoint {\n  -adapt-behavior: toc-node;\n}\n\n[role=\"doc-toc\"] li > *:first-child,\n[role=\"directory\"] li > *:first-child,\nnav li > *:first-child,\n.toc li > *:first-child,\n#toc li > *:first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[role=\"doc-toc\"] ol,\n[role=\"directory\"] ol,\nnav ol,\n.toc ol,\n#toc ol,\n[role=\"doc-toc\"] ul,\n[role=\"directory\"] ul,\nnav ul,\n.toc ul,\n#toc ul,\nol[role=\"doc-toc\"],\nol[role=\"directory\"],\nol.toc,\nol#toc,\nul[role=\"doc-toc\"],\nul[role=\"directory\"],\nul.toc,\nul#toc {\n  -adapt-behavior: toc-container;\n}\n`;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 16777216;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 33554432;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 50331648;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 67108864;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 83886080;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 100663296;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\n/**\n * CSS Color value from hash text (without '#' character).\n */\nexport function colorFromHash(text: string): Css.Color {\n  let num = parseInt(text, 16);\n  if (isNaN(num)) {\n    throw new Error(\"E_CSS_COLOR\");\n  }\n  if (text.length == 6) {\n    return new Css.Color(num);\n  }\n  if (text.length == 3) {\n    num =\n      (num & 15) |\n      ((num & 15) << 4) |\n      ((num & 240) << 4) |\n      ((num & 240) << 8) |\n      ((num & 3840) << 8) |\n      ((num & 3840) << 12);\n    return new Css.Color(num);\n  }\n  throw new Error(\"E_CSS_COLOR\");\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as an\n   *     argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    this.slave.endRule();\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n  flavor: StylesheetFlavor;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    return this.owner.getCurrentToken();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner.errorMsg(mnemonics, token);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.depth++;\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = CssTokenizer.TokenType.LAST + 1;\n\n(() => {\n  actionsBase[CssTokenizer.TokenType.IDENT] = Action.IDENT;\n  actionsBase[CssTokenizer.TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.AT] = Action.AT;\n  actionsBase[CssTokenizer.TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[CssTokenizer.TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n\n  actionsSelector[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[CssTokenizer.TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[CssTokenizer.TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelector[CssTokenizer.TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.C_PAR] = Action.DONE;\n  actionsSelectorInFunc[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COL_COL] =\n    Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[CssTokenizer.TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[CssTokenizer.TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[CssTokenizer.TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[CssTokenizer.TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[CssTokenizer.TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[CssTokenizer.TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[CssTokenizer.TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[CssTokenizer.TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[CssTokenizer.TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[CssTokenizer.TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[CssTokenizer.TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[CssTokenizer.TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[CssTokenizer.TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[CssTokenizer.TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[CssTokenizer.TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[CssTokenizer.TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[CssTokenizer.TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[CssTokenizer.TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[CssTokenizer.TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[CssTokenizer.TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[CssTokenizer.TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[CssTokenizer.TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[CssTokenizer.TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[CssTokenizer.TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[CssTokenizer.TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[CssTokenizer.TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsError[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  priority[CssTokenizer.TokenType.C_PAR] = 0;\n  priority[CssTokenizer.TokenType.COMMA] = 0;\n  priority[CssTokenizer.TokenType.QMARK] = 1;\n  priority[CssTokenizer.TokenType.COLON] = 1;\n  priority[CssTokenizer.TokenType.AMP_AMP] = 2;\n  priority[CssTokenizer.TokenType.BAR_BAR] = 2;\n  priority[CssTokenizer.TokenType.LT] = 3;\n  priority[CssTokenizer.TokenType.GT] = 3;\n  priority[CssTokenizer.TokenType.LT_EQ] = 3;\n  priority[CssTokenizer.TokenType.GT_EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ_EQ] = 3;\n  priority[CssTokenizer.TokenType.BANG_EQ] = 3;\n  priority[CssTokenizer.TokenType.PLUS] = 4;\n  priority[CssTokenizer.TokenType.MINUS] = 4;\n  priority[CssTokenizer.TokenType.STAR] = 5;\n  priority[CssTokenizer.TokenType.SLASH] = 5;\n  priority[CssTokenizer.TokenType.PERCENT] = 5;\n  priority[CssTokenizer.TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index == valStack.length) {\n        break;\n      }\n      if (valStack[index++] != sep) {\n        throw new Error(\"Unexpected state\");\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let v;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n        this.actions = actionsErrorDecl;\n        return null;\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n      return null;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    return valStack[0] as Css.Val;\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    this.handler.error(mnemonics, token);\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == CssTokenizer.TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == CssTokenizer.TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.OrMedia(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = CssTokenizer.TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == CssTokenizer.TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = CssTokenizer.TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -CssTokenizer.TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -CssTokenizer.TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case CssTokenizer.TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.EQ:\n          case CssTokenizer.TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case CssTokenizer.TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case CssTokenizer.TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (op != CssTokenizer.TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case CssTokenizer.TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case CssTokenizer.TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case CssTokenizer.TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case CssTokenizer.TokenType.NUM:\n        case CssTokenizer.TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === CssTokenizer.TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === CssTokenizer.TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case CssTokenizer.TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case CssTokenizer.TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === CssTokenizer.TokenType.MINUS;\n          const hasSign =\n            token.type === CssTokenizer.TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === CssTokenizer.TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === CssTokenizer.TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === CssTokenizer.TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case CssTokenizer.TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery,\n    parsingFunctionParam,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n    parserLoop: for (; count > 0; --count) {\n      token = tokenizer.token();\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          token1 = tokenizer.nthToken(2);\n          if (\n            token1.precededBySpace ||\n            (token1.type != CssTokenizer.TokenType.IDENT &&\n              token1.type != CssTokenizer.TokenType.FUNC)\n          ) {\n            // cannot be a selector\n          } else {\n            // can be either a selector or a property assignment\n            tokenizer.mark();\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case CssTokenizer.TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case CssTokenizer.TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case CssTokenizer.TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"not\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(\"not\");\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  break parserLoop;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === CssTokenizer.TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.BAR) {\n            ns = text ? this.namespacePrefixToURI[text] : text;\n            if (ns == null) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != CssTokenizer.TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.EQ:\n            case CssTokenizer.TokenType.TILDE_EQ:\n            case CssTokenizer.TokenType.BAR_EQ:\n            case CssTokenizer.TokenType.HAT_EQ:\n            case CssTokenizer.TokenType.DOLLAR_EQ:\n            case CssTokenizer.TokenType.STAR_EQ:\n            case CssTokenizer.TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case CssTokenizer.TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                CssTokenizer.TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n            case CssTokenizer.TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != CssTokenizer.TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          try {\n            valStack.push(colorFromHash(token.text));\n          } catch (err) {\n            handler.error(\"E_CSS_COLOR\", token);\n            this.actions = actionsError;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          if (Exprs.isViewportRelativeLengthUnit(token.text)) {\n            // Treat numeric value with viewport unit as numeric in expr.\n            valStack.push(\n              new Css.Expr(\n                new Exprs.Numeric(handler.getScope(), token.num, token.text),\n              ),\n            );\n          } else {\n            valStack.push(new Css.Numeric(token.num, token.text));\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"calc\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == CssTokenizer.TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == CssTokenizer.TokenType.SEMICOL ||\n              token1.type == CssTokenizer.TokenType.EOF ||\n              token1.type == CssTokenizer.TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case CssTokenizer.TokenType.NUM:\n            case CssTokenizer.TokenType.NUMERIC:\n            case CssTokenizer.TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          } else {\n            this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n            continue;\n          }\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          if (parsingStyleAttr) {\n            return true;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == CssTokenizer.TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (\n            token.type != CssTokenizer.TokenType.INT ||\n            token.precededBySpace\n          ) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          if (token.text.toLowerCase() == \"and\") {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            if (this.propName) {\n              this.actions = actionsPropVal;\n            } else {\n              this.exprError(\"E_CSS_UNBALANCED_PAR\", token);\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR ||\n                token.type == CssTokenizer.TokenType.URL\n              ) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == CssTokenizer.TokenType.SEMICOL ||\n                  token.type == CssTokenizer.TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == CssTokenizer.TokenType.STR ||\n                      token.type == CssTokenizer.TokenType.URL) &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case CssTokenizer.TokenType.STR:\n                case CssTokenizer.TokenType.URL:\n                  if (\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  continue;\n                case CssTokenizer.TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == CssTokenizer.TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == CssTokenizer.TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == CssTokenizer.TokenType.COLON &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == CssTokenizer.TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (\n            this.errorBrackets.length == 0 &&\n            token.type == CssTokenizer.TokenType.C_BRC\n          ) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          if (parsingFunctionParam) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n          }\n          return true;\n        default:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            return false;\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    throw new Error(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.ajax(url).then((xhr) => {\n        if (!xhr.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            xhr.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n\n/**\n * @return val\n */\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName: string,\n): Css.Val {\n  if (val.isExpr()) {\n    try {\n      return evaluateExprToCSS(context, (val as Css.Expr).expr, propName);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return Css.empty;\n  }\n  return val;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export interface ElementStyle {}\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(element: Element, styles: { [key: string]: Css.Val });\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\" units or a number.\n     * @return value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string | number): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    createJustificationAdjustmentElement(\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n      vertical: boolean,\n    ): HTMLElement;\n    addAndAdjustJustificationElement(\n      nodeContext: Vtree.NodeContext,\n      insertAfter: boolean,\n      node: Node,\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n    ): HTMLElement;\n    compensateJustificationLineHeight(\n      span: Element,\n      br: Element,\n      nodeContext: Vtree.NodeContext,\n    ): void;\n    /**\n     * Fix justification of the last line of text broken across pages (if\n     * needed).\n     */\n    fixJustificationIfNeeded(\n      nodeContext: Vtree.NodeContext,\n      endOfColumn: boolean,\n    ): void;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(\n      checkPoints: Vtree.NodeContext[],\n    ): { edge: number; checkPoint: Vtree.NodeContext | null };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type Response = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: object;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n    pageType: string | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    /**\n     * Walk up NodeContext tree (starting from itself) and call the callback for\n     * each block.\n     */\n    walkUpBlocks(callback: (p1: NodeContext) => any): void;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\n/**\n * @returns string\n */\nexport function restoreOriginalText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\n/**\n * @returns string\n */\nexport function restoreNewText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport {\n  CssStyler,\n  PageFloats,\n  PseudoElement,\n  Selectors,\n  Vtree,\n  XmlDoc,\n} from \"./types\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isBlankPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Zoom page.\n   * @param scale Factor to which the page will be scaled.\n   */\n  zoom(scale: number) {\n    Base.setCSSProperty(this.container, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Returns the page area element.\n   */\n  getPageAreaElement(): HTMLElement {\n    return this.pageAreaElement || this.container;\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace: Whitespace): boolean {\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.IGNORE:\n      return !!text.match(/^\\s*$/);\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t\\f]*$/);\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n  }\n  throw new Error(`Unexpected whitespace: ${whitespace}`);\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    nps1.node === nps2.node &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: CssStyler.AbstractStyler,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: Vtree.ShadowContext,\n  sc2: Vtree.ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: Vtree.ShadowContext;\n  nodeShadow: Vtree.ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n  pageType: string | null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n    this.pageType = parent ? parent.pageType : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      (nc.shadowContext?.styler as PseudoElement.PseudoelementStyler)?.style?.[\n        \"_pseudos\"\n      ]\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Walk up NodeContext tree (starting from itself) and call the callback for\n   * each block.\n   */\n  walkUpBlocks(callback: (p1: NodeContext) => any) {\n    let nodeContext: NodeContext = this;\n    while (nodeContext) {\n      if (!nodeContext.inline) {\n        callback(nodeContext);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startSide: string = \"any\";\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startSide = this.startSide;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n  isBlankPage: boolean = false;\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.isBlankPage = this.isBlankPage;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page ||\n      this.highestSeenOffset !== other.highestSeenOffset\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return \"any\";\n    }\n    return flowPos.startSide;\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical ? box.top : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical ? box.bottom : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setHorizontalPosition(start + extent * this.getBoxDir(), extent);\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setVerticalPosition(start, extent);\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  /** @override */\n  visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /** @override */\n  visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.empty &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    val !== Css.ident.inherit\n  );\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssCascade } from \"./types\";\n\nexport interface ElementStyle extends CssCascade.ElementStyle {}\n\nexport const inheritedProps = {\n  azimuth: true,\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  elevation: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  \"pitch-range\": true,\n  quotes: true,\n  richness: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"speak-header\": true,\n  \"speak-numeral\": true,\n  \"speak-punctuation\": true,\n  \"speech-rate\": true,\n  \"shape-rendering\": true,\n  stress: true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"voice-family\": true,\n  volume: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"word-wrap\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"box-decoration-break\",\n  // TODO: box-decoration-block should not be inherited.\n  // https://github.com/vivliostyle/vivliostyle.js/issues/259\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(context: Exprs.Context, propName: string): Css.Val {\n    return CssParser.evaluateCSSToCSS(context, this.value, propName);\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  /**\n   * @override\n   */\n  getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  /**\n   * @override\n   */\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  /**\n   * @override\n   */\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return !!this.condition.evaluate(context);\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((tv == null || av.priority > tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) == \"_\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) != \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name];\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\n/**\n * @return void\n */\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): any {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyleMap }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyleMap;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target as ElementStyleMap,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const av = getProp(style, prop).increaseSpecificity(specificity);\n      const tv = getProp(target, prop);\n      setProp(target, prop, cascadeValues(context, tv, av));\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    if (!cascval.value.isNumeric()) {\n      // FIXME: cascval may be Ident value e.g. \"smaller\"\n      return Exprs.defaultUnitSizes[\"em\"];\n    }\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit == \"em\" ||\n      numeric.unit == \"ex\" ||\n      numeric.unit == \"rem\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    } else if (numeric.unit == \"%\") {\n      if (this.propName === \"line-height\") {\n        return numeric;\n      }\n      const unit = this.propName.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      return new Css.Numeric(numeric.num, unit);\n    }\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = CssParser.evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(public readonly epubTypePatt: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem && cascadeInstance.currentLocalName == \"a\") {\n      const href = elem.getAttribute(\"href\");\n      if (href && href.match(/^#/)) {\n        const id = href.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (target) {\n          const epubType = target.getAttributeNS(Base.NS.epub, \"type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.hasAttributeNS(this.ns, this.name)\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.getAttributeNS(this.ns, this.name) ==\n        this.value\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const ns = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (ns && supportedNamespaces[ns]) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const attr = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (attr && attr.match(this.regexp)) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(public readonly a: number, public readonly b: number) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\nexport class NegateActionsSet extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstAction: CascadeAction;\n\n  constructor(list: ChainedAction[]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    this.firstAction = chainActions(list, this.checkAppliedAction);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.firstAction.apply(cascadeInstance);\n    if (!this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return (this.firstAction as ChainedAction).getPriority();\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem {\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem {\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem {\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem {\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: any): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CascadeInstance,\n  ): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n    const c = new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n      case \"first-letter\":\n        stringValue = this.element.textContent.trim().replace(/\\s+/g, \" \");\n        if (pseudoName === \"first-letter\") {\n          const r = stringValue.match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val: Css.Val = pseudos?.[pseudoName]?.[\"content\"]?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n    }\n    Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return new Css.Str(\"\");\n  }\n}\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 1048576;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  previousPageType: string | null = null;\n  firstPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    if (this.counters[counterName]) {\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal = Css.ident.inline;\n    const display = props[\"display\"];\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"];\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"ua-list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"ua-list-item\"] = 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!resetMap) {\n          resetMap = {};\n        }\n        resetMap[\"ua-list-item\"] = (this.currentElement as any).value - 1;\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"ua-list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet: CascadeValue = props[\"string-set\"];\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(name, stringValue, this);\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    if (pseudoprops[\"content\"]) {\n      pseudoprops[\"content\"] = pseudoprops[\"content\"].filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack = this\n      .followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts = (this.currentFollowingSiblingTypeCounts =\n      followingSiblingTypeCountsStack[\n        followingSiblingTypeCountsStack.length - 1\n      ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"];\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(visitor, elementStyle): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName)) {\n        elementStyle[propName] = elementStyle[propName].filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\",\n  /* content */\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver {\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n      ? uaBaseCascade.clone()\n      : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    this.specificity += 1;\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by .${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by :${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|s)${Base.escapeRegExp(value)}(\\$|s)`);\n          this.chain.push(new CheckTargetEpubTypeAction(patt));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fais\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default:\n        Logging.logger.warn(`unknown pseudo-class selector: ${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 256;\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          Logging.logger.warn(\n            `Double pseudoelement ::${this.pseudoelement}::${name}`,\n          );\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              Logging.logger.warn(\n                `Double pseudoelement ::${this.pseudoelement}::${name}`,\n              );\n              this.chain.push(new CheckConditionAction(\"\")); // always fails\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(`Unrecognized pseudoelement: ::${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 1;\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case CssTokenizer.TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case CssTokenizer.TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case CssTokenizer.TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case CssTokenizer.TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          Logging.logger.warn(\"Unsupported :: attr selector op:\", value);\n          action = new CheckConditionAction(\"\"); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(\"Unsupported attr selector:\", op);\n        action = new CheckConditionAction(\"\"); // always fails\n    }\n    this.chain.push(action);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      const specificity: number = this.specificity + this.cascade.nextOrder();\n      this.processChain(this.makeApplyRuleAction(specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    switch (funcName) {\n      case \"not\": {\n        const notParserHandler = new NotParameterParserHandler(this);\n        notParserHandler.startSelectorRule();\n        this.owner.pushHandler(notParserHandler);\n        break;\n      }\n      default:\n        // TODO\n        break;\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\nexport class NotParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    if (funcName == \"not\") {\n      this.reportAndSkip(\"E_CSS_UNEXPECTED_NOT\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_NEXT_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    if (this.chain && this.chain.length > 0) {\n      this.parentChain.push(new NegateActionsSet(this.chain));\n    }\n    this.parent.specificity += this.specificity;\n    this.owner.popHandler();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.owner.popHandler();\n  }\n}\n\n/**\n * @override\n */\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver {\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const av = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, av);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver {\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (writingMode && writingMode !== Css.ident.inherit) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (direction && direction !== Css.ident.inherit) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n    ? couplingMapHorRtl\n    : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    return getComputedValue(inlineSizeName);\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition = PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext {\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent = this.parent.getLastFollowingFloatInFragments(\n        float,\n      );\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const logicalFloatSide2 = this.toLogical(fragment.floatSide);\n        if (logicalFloatSide2 === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogical(float.floatSide);\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogical(fragment.floatSide);\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical ? limits.top : limits.left;\n      case \"inline-end\":\n        return this.container.vertical ? limits.bottom : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogical(f.floatSide);\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    let logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSide]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSide === \"block-start\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-start\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSide === \"block-end\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = inlineEnd - inlineStart;\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSide === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSide = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSide = \"block-start\";\n          } else {\n            logicalFloatSide = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSide]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSide = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSide === \"inline-start\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize = inlineEnd - inlineStart;\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n    switch (logicalFloatSide) {\n      case \"inline-start\":\n      case \"block-start\":\n      case \"snap-block\":\n        area.setInlinePosition(inlineStart, inlineSize);\n        area.setBlockPosition(blockStart, blockSize);\n        break;\n      case \"inline-end\":\n      case \"block-end\":\n        area.setInlinePosition(inlineEnd - outerInlineSize, inlineSize);\n        area.setBlockPosition(\n          blockEnd - outerBlockSize * area.getBoxDir(),\n          blockSize,\n        );\n        break;\n      default:\n        throw new Error(`unknown float direction: ${floatSide}`);\n    }\n    return logicalFloatSide;\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogical(floatSide);\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /**\n   * @override\n   */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  /**\n   * @override\n   */\n  isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  /**\n   * @override\n   */\n  getOrder(): number {\n    return Infinity;\n  }\n\n  /**\n   * @override\n   */\n  shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint {\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      floatReference,\n    );\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /**\n   * @override\n   */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartSideValue(breakValue: string | null): string {\n  switch (breakValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return breakValue;\n    default:\n      return \"any\";\n  }\n}\n\nexport function startSideValueToBreakValue(\n  startSideValue: string,\n): string | null {\n  switch (startSideValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return startSideValue;\n    default:\n      return null;\n  }\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Though method used to be used as a workaround for Chrome bug, it seems that\n * the bug has been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method as a workaround for Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function fixBoxesForNode(\n  clientLayout: Vtree.ClientLayout,\n  boxes: Vtree.ClientRect[],\n  node: Node,\n): Vtree.ClientRect[] {\n  const fullRange = node.ownerDocument.createRange();\n  fullRange.setStart(node, 0);\n  fullRange.setEnd(node, node.textContent.length);\n  const fullBoxes = clientLayout.getRangeClientRects(fullRange);\n  const result = [];\n  for (const box of boxes) {\n    let k: number;\n    for (k = 0; k < fullBoxes.length; k++) {\n      const fullBox = fullBoxes[k];\n      if (\n        box.top >= fullBox.top &&\n        box.bottom <= fullBox.bottom &&\n        Math.abs(box.left - fullBox.left) < 1\n      ) {\n        result.push({\n          top: box.top,\n          left: fullBox.left,\n          bottom: box.bottom,\n          right: fullBox.right,\n        });\n        break;\n      }\n    }\n    if (k == fullBoxes.length) {\n      Logging.logger.warn(\"Could not fix character box\");\n      result.push(box);\n    }\n  }\n  return result;\n}\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n  if (node.nodeType == 1) {\n    if (nodeContext.after || !nodeContext.inline) {\n      const cbox = clientLayout.getElementClientRect(node as Element);\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    if (vertical && Base.checkVerticalBBoxBug(document.body)) {\n      boxes = fixBoxesForNode(clientLayout, boxes, node);\n    }\n    let maxSize = 0;\n\n    // Get first of the widest boxes (works around Chrome results for soft\n    // hyphens).\n    for (const box of boxes) {\n      const boxSize = vertical ? box.bottom - box.top : box.right - box.left;\n      if (\n        box.right > box.left &&\n        box.bottom > box.top &&\n        (isNaN(edge) || boxSize > maxSize)\n      ) {\n        edge = vertical ? box.left : box.bottom;\n        maxSize = boxSize;\n      }\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  let lastChild: Node;\n  while ((lastChild = parentNode.lastChild) != viewNode) {\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  if (!nodeContext) {\n    return false;\n  }\n  const viewNode = nodeContext.viewNode;\n  if (viewNode && viewNode.nodeType === 1) {\n    return isSpecial(viewNode as Element);\n  } else {\n    return false;\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition {\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition {\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display.toString();\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Ident): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDislayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Ident } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if ((float && float !== Css.ident.none) || isRoot) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDislayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    const parentNode = nodeContext.viewNode.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, nodeContext.viewNode);\n    if (removeSelf) {\n      parentNode.removeChild(nodeContext.viewNode);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.fixJustificationIfNeeded(nodeContext, true);\n      column.layoutContext.processFragmentedBlockEdge(\n        removeSelf ? nodeContext : nodeContext.parent,\n      );\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext {\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext = nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"LayoutIterator\",\n    );\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  /**\n   * @override\n   */\n  startNonElementNode(state: LayoutIteratorState): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint {\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset {\n  constructor(public nodeContext, public pseudoElementHeight) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\nexport const mediaTags = {\n  img: true,\n  svg: true,\n  audio: true,\n  video: true,\n};\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition {\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated = true;\n    }\n    return this.breakNodeContext;\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  switch (display) {\n    case \"ruby\":\n    case \"inline-block\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"inline-list-item\":\n    case \"inline-table\":\n      return true;\n  }\n  return false;\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null = null;\n  blockDistanceToBlockEndFloats: number = NaN;\n  computedBlockSize: number;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical ? this.startEdge : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical ? this.endEdge : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical ? this.afterEdge : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical ? this.beforeEdge : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions = this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode = this.calculateOffsetInNodeForNodeContext(\n              position,\n            );\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        return this.layoutContext.peelOff(position, r ? r[0].length : 0);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (position.viewNode && !LayoutHelper.isSpecialNodeContext(position)) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (this.isFloatNodeContext(position) && !this.vertical) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\" units or a number.\n   * @return value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string | number): number {\n    if (typeof val == \"number\") {\n      return val;\n    }\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return parseFloat(r[0]);\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = nodeContext.floatSide as string;\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.startEdge;\n      let x2 = this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(this.getStartEdge(parentBox), x1);\n        x2 = Math.min(this.getEndEdge(parentBox), x2);\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        parent.viewNode.appendChild(nodeContext.viewNode);\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe = containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n          \"div\",\n        );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft = area.paddingRight = area.paddingTop = area.paddingBottom = 0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext = this.pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments = context.getStashedFloatFragments(\n      floatReference,\n    );\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy = new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n          stashedFragment.continuations[0].float,\n        );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy = new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n      nodeContext,\n    );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  createJustificationAdjustmentElement(\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n    vertical: boolean,\n  ): HTMLElement {\n    const span = doc.createElement(\"span\") as HTMLElement;\n    span.style.visibility = \"hidden\";\n    span.style.verticalAlign = \"top\";\n    span.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    const inner = doc.createElement(\"span\") as HTMLElement;\n    inner.style.fontSize = \"0\";\n    inner.style.lineHeight = \"0\";\n    inner.textContent = \" #\";\n    span.appendChild(inner);\n\n    // Measure inline-start and inline-end edge positions of the line box,\n    // taking (exclusion) floats into consideration\n    span.style.display = \"block\";\n    span.style.textIndent = \"0\";\n    span.style.textAlign = \"left\";\n    parentNode.insertBefore(span, insertionPoint);\n    const leftPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"right\";\n    const rightPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"\";\n    if (Base.checkInlineBlockJustificationBug(document.body)) {\n      // For Chrome\n      span.style.display = \"inline\";\n    } else {\n      // For Firefox, Edge and IE\n      span.style.display = \"inline-block\";\n    }\n    const padding = vertical\n      ? rightPos.top - leftPos.top\n      : rightPos.left - leftPos.left;\n    const paddingStr = padding >= 1 ? `${padding - 1}px` : \"100%\";\n    if (vertical) {\n      span.style.paddingTop = paddingStr;\n    } else {\n      span.style.paddingLeft = paddingStr;\n    }\n    return span;\n  }\n\n  addAndAdjustJustificationElement(\n    nodeContext: Vtree.NodeContext,\n    insertAfter: boolean,\n    node: Node,\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n  ): HTMLElement {\n    fixJustificationOnHyphen(nodeContext, insertAfter, node, insertionPoint);\n    return this.createJustificationAdjustmentElement(\n      insertionPoint,\n      doc,\n      parentNode,\n      nodeContext.vertical,\n    );\n  }\n\n  compensateJustificationLineHeight(\n    span: Element,\n    br: Element,\n    nodeContext: Vtree.NodeContext,\n  ) {\n    const spanRect = this.clientLayout.getElementClientRect(span);\n    const brRect = this.clientLayout.getElementClientRect(br);\n    if (nodeContext.vertical) {\n      (br as HTMLElement).style.marginRight = `${\n        brRect.right - spanRect.right\n      }px`;\n      (br as HTMLElement).style.width = \"0px\";\n    } else {\n      (br as HTMLElement).style.marginTop = `${spanRect.top - brRect.top}px`;\n      (br as HTMLElement).style.height = \"0px\";\n    }\n    br.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n  }\n\n  /**\n   * Fix justification of the last line of text broken across pages (if\n   * needed).\n   */\n  fixJustificationIfNeeded(\n    nodeContext: Vtree.NodeContext,\n    endOfColumn: boolean,\n  ): void {\n    if (nodeContext.after && !nodeContext.inline) {\n      return;\n    }\n    if (endOfColumn) {\n      let textAlign = \"\";\n      for (\n        let parent = nodeContext.parent;\n        parent && !textAlign;\n        parent = parent.parent\n      ) {\n        if (!parent.inline && parent.viewNode) {\n          textAlign = (parent.viewNode as HTMLElement).style.textAlign;\n        }\n      }\n      if (textAlign !== \"justify\") {\n        return;\n      }\n    }\n    const node = nodeContext.viewNode;\n    const doc = node.ownerDocument;\n    const insertAfter =\n      endOfColumn && (nodeContext.after || node.nodeType != 1);\n    let insertionPoint = insertAfter ? node.nextSibling : node;\n    if (insertionPoint && !insertionPoint.parentNode) {\n      // Possible if removeSelf = false in finishBreak()\n      insertionPoint = null;\n    }\n    const parentNode =\n      node.parentNode || (nodeContext.parent && nodeContext.parent.viewNode);\n    if (!parentNode) {\n      // Possible if nothing was added to the column\n      return;\n    }\n    const span = this.addAndAdjustJustificationElement(\n      nodeContext,\n      insertAfter,\n      node,\n      insertionPoint,\n      doc,\n      parentNode,\n    );\n    if (!endOfColumn) {\n      const br = doc.createElement(\"div\") as HTMLElement;\n      parentNode.insertBefore(br, insertionPoint);\n      this.compensateJustificationLineHeight(span, br, nodeContext);\n    }\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"processLineStyling\",\n    );\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              this.fixJustificationIfNeeded(nodeContext, false);\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos - minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          this.postLayoutBlock(nodeContext, checkPoints);\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n    const viewNode = nodeContext.viewNode;\n    if (viewNode.nodeType != 1) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elments\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        if (node.nodeType != 1) {\n          if (!haveStart) {\n            if (node.parentNode == null) {\n              endNotReached = false;\n            } else {\n              range.setStartBefore(node);\n              haveStart = true;\n            }\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(node as Element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          (node as Element).localName == \"ruby\" ||\n          isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(node as Element).display,\n          )\n        ) {\n          // ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    nodeContext.walkUpBlocks((block) => {\n      if (block.inheritedProps[\"box-decoration-break\"] === \"clone\") {\n        Asserts.assert(block.viewNode instanceof Element);\n        const paddingBorders = this.getComputedPaddingBorder(\n          block.viewNode as Element,\n        );\n        clonedPaddingBorder += block.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (block.display === \"table\") {\n          clonedPaddingBorder += block.blockBorderSpacing;\n        }\n      }\n    });\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing = this.findFirstOverflowingEdgeAndCheckPoint(\n      checkPoints,\n    );\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && blockEdge < edge) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(\n    checkPoints: Vtree.NodeContext[],\n  ): { edge: number; checkPoint: Vtree.NodeContext | null } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch (flowPosition.sourceNode.namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    switch (clear) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (this.vertical) {\n        let wAdj = afterEdge + margin.right - clearEdge;\n        if (wAdj > 0 == margin.right >= 0) {\n          // In addition to collapsed portion\n          wAdj += margin.right;\n        }\n        spacer.style.marginLeft = `${wAdj}px`;\n      } else {\n        let hAdj = clearEdge - (afterEdge + margin.top);\n        if (hAdj > 0 == margin.top >= 0) {\n          // In addition to collapsed portion\n          hAdj += margin.top;\n        }\n        spacer.style.marginBottom = `${hAdj}px`;\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent && nodeContext.parent.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak() {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge && Break.isForcedBreakValue(breakAtTheEdge))\n      );\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n            nodeContext.formattingContext,\n          );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (this.stopAtOverflow\n                    ? lastAfterNodeContext || nodeContext\n                    : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // new formatting context, or float or flex container\n                // (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (this.stopAtOverflow\n                    ? lastAfterNodeContext || nodeContext\n                    : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (\n                !Break.isForcedBreakValue(breakAtTheEdge) && // Fix for issue #722\n                !this.layoutConstraint.allowLayout(nodeContext)\n              ) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (this.stopAtOverflow\n                    ? lastAfterNodeContext || nodeContext\n                    : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n            formattingContext,\n          );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n        formattingContext,\n      );\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.top\n        : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.bottom\n        : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    const penalty = checkPoints[0].breakPenalty;\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext = this\n                  .nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats = this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder = this.column.calculateClonedPaddingBorder(\n      parentNodeContext,\n    );\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\nexport function fixJustificationOnHyphen(\n  nodeContext: Vtree.NodeContext,\n  insertAfter: boolean,\n  node: Node,\n  insertionPoint: Node,\n): void {\n  if (Base.checkSoftWrapOpportunityAfterHyphenBug(document.body)) {\n    const hyphenChar = resolveHyphenateCharacter(nodeContext);\n    const prevSibling = insertAfter ? node : node.previousSibling;\n    const prevText = prevSibling ? prevSibling.textContent : \"\";\n    if (prevText.charAt(prevText.length - 1) === hyphenChar) {\n      const doc = node.ownerDocument;\n      const parent = node.parentNode;\n      if (Base.checkSoftWrapOpportunityByWbrBug(document.body)) {\n        // For IE\n        parent.insertBefore(doc.createTextNode(\" \"), insertionPoint);\n      } else {\n        // For Edge\n        parent.insertBefore(doc.createElement(\"wbr\"), insertionPoint);\n      }\n    }\n  }\n}\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord ? resolveHyphenateCharacter(nodeContext) : \"\",\n    );\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  /**\n   * @override\n   */\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  /**\n   * @override\n   */\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  /**\n   * @override\n   */\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements {\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  /**\n   * @return\n   */\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (nodeContext && this.isAfterLastContent(nodeContext)) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode = nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor {\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContextOrNull(\n      nodeContext,\n    );\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as Element;\n    const verticalAlign = this.cellNodeContext.verticalAlign;\n    if (verticalAlign === \"middle\" || verticalAlign === \"bottom\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext = position.formattingContext as TableFormattingContext;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = 0;\n    if (!formattingContext.isFreelyFragmentableRow(row)) {\n      penalty += 10;\n    }\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext {\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  isFreelyFragmentableRow(row: TableRow): boolean {\n    return row.getMinimumHeight() > this.tableWidth / 2;\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  /** @override */\n  saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  /** @override */\n  restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset {\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode = nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  /** @override */\n  startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer = cellViewNode.ownerDocument.createElement(\n      \"div\",\n    );\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions = this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy = rowNodeContext.viewNode.ownerDocument.createElement(\n                  \"td\",\n                );\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n                cellNodePosition.steps[0],\n                rowNodeContext,\n              );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition = this.formattingContext.cellBreakPositions[\n        cell.columnIndex\n      ];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (this.column\n          .layoutContext as Vgen.ViewFactory).xmldoc.getElementOffset(\n          tdNodeStep.node as Element,\n        );\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    if (!cell) {\n      // Fix for Issue #712\n      state.break = true;\n      return Task.newResult(true);\n    }\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition = this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      return vertical ? rect[\"height\"] : rect[\"width\"];\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells = formattingContext.getRowSpanningCellsOverflowingTheRow(\n          rowIndex,\n        );\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext = cellFragment.findAcceptableBreakPosition()\n              .nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode = cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (!repetitiveElements) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n  Base.setCSSProperty(cellContentElement, \"overflow\", \"hidden\");\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode = this.tableFormattingContext.getRootViewNode(\n      initialPosition,\n    );\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint {\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /**\n   * @override\n   */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /**\n   * @override\n   */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /**\n   * @override\n   */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint {\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints = this.collectCellFragmentLayoutConstraints(\n      positionAfter,\n      formattingContext,\n    );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints: entry.fragment.pseudoColumn.getColumn()\n          .fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Ident,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n  return otherColumns.every((c) => lastColumnBlockSize > c.computedBlockSize);\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Logging from \"./logging\";\nimport { ValidationTxt } from \"./assets\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(public where: number, public success: boolean) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (this.nodes[0]\n        .validator as PrimitiveValidator).combine(\n        group.nodes[0].validator as PrimitiveValidator,\n      );\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 1;\n\nexport const ALLOW_STR = 2;\n\nexport const ALLOW_IDENT = 4;\n\nexport const ALLOW_POS_NUMERIC = 8;\n\nexport const ALLOW_POS_NUM = 16;\n\nexport const ALLOW_POS_INT = 32;\n\nexport const ALLOW_COLOR = 64;\n\nexport const ALLOW_URL = 128;\n\nexport const ALLOW_NEGATIVE = 256;\n\nexport const ALLOW_ZERO = 512;\n\nexport const ALLOW_ZERO_PERCENT = 1024;\n\nexport const ALLOW_SLASH = 2048;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      return color;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(public readonly name: string, group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(validatorSet: ValidatorSet, public readonly name: string) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(validatorSet: ValidatorSet, public readonly names: string[]) {\n    super(validatorSet, names[0]);\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] || this.validatorSet.defaultValues[name],\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateInherit(important: boolean, receiver: PropertyReceiver): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, Css.ident.inherit, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    this.error = true;\n    return null;\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val = values[name] || this.validatorSet.defaultValues[name];\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\"font-family\", \"line-height\", \"font-size\");\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == CssTokenizer.TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == CssTokenizer.TokenType.HASH) {\n      cssval = CssParser.colorFromHash(token.text);\n    } else if (token.type == CssTokenizer.TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"HASHCOLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == CssTokenizer.TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == CssTokenizer.TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != CssTokenizer.TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == CssTokenizer.TokenType.COMMA);\n      if (token.type != CssTokenizer.TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != CssTokenizer.TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != CssTokenizer.TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != CssTokenizer.TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case CssTokenizer.TokenType.INT: {\n            const idents = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.BAR:\n            setop(\"|\");\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case CssTokenizer.TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != CssTokenizer.TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == CssTokenizer.TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != CssTokenizer.TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != CssTokenizer.TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == CssTokenizer.TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case CssTokenizer.TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case CssTokenizer.TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case CssTokenizer.TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (\n        token.type == CssTokenizer.TokenType.IDENT &&\n        shorthandValidators[token.text]\n      ) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              propList.push(token.text);\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        const pval = this.defaultValues[pname];\n        if (!pval) {\n          Logging.logger.warn(\"Unknown property in makePropSet:\", pname);\n        } else {\n          map[pname] = pval;\n        }\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      receiver.unknownProperty(origName, value);\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        value === Css.ident.inherit || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (value === Css.ident.inherit) {\n        shorthand.propagateInherit(important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  /**\n   * @return void\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv = this.style[name];\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed && this.displayValue() !== Css.ident.none;\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if ((this.atBlockStart || this.atFlowStart) && box.hasBox()) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      Asserts.assert(whitespace !== null);\n      if (!Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name];\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    [\"writing-mode\", \"direction\"].forEach((propName) => {\n      if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n        // Copy it over, but keep it at the root element as well.\n        this.rootStyle[propName] = elemStyle[propName];\n      }\n    });\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? elemStyle[\"background-color\"].evaluate(this.context)\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? elemStyle[\"background-image\"].evaluate(this.context)\n        : (null as Css.Val);\n      if (\n        (backgroundColor && backgroundColor !== Css.ident.inherit) ||\n        (backgroundImage && backgroundImage !== Css.ident.inherit)\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      const fontSize = elemStyle[\"font-size\"];\n      if (fontSize) {\n        const val = fontSize.evaluate(this.context);\n        let px = val.num;\n        switch (val.unit) {\n          case \"em\":\n          case \"rem\":\n            px *= this.context.initialFontSize;\n            break;\n          case \"ex\":\n            px *=\n              (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n              Exprs.defaultUnitSizes[\"em\"];\n            break;\n          case \"%\":\n            px *= this.context.initialFontSize / 100;\n            break;\n          default: {\n            const unitSize = Exprs.defaultUnitSizes[val.unit];\n            if (unitSize) {\n              px *= unitSize;\n            }\n          }\n        }\n        this.context.rootFontSize = px;\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"];\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"];\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"];\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore = box.afterBox.getBreakValue(\n                \"before\",\n              );\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n\n        if (blockStartOffset === 0) {\n          // Named page type at first page\n          const pageType = style[\"page\"]?.value.toString();\n          if (pageType && pageType.toLowerCase() !== \"auto\") {\n            this.cascade.firstPageType = pageType;\n          }\n        }\n\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const traitProps: { [key: string]: Css.Val } = {\n  \"font-style\": Css.ident.normal,\n  \"font-variant\": Css.ident.normal,\n  \"font-weight\": Css.ident.normal,\n};\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop in traitProps) {\n    sb.append(\" \");\n    sb.append(properties[prop].toString());\n  }\n  return sb.toString();\n}\n\nexport function fillDefaults(properties: { [key: string]: Css.Val }): void {\n  for (const prop in traitProps) {\n    if (!properties[prop]) {\n      properties[prop] = traitProps[prop];\n    }\n  }\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  fillDefaults(result);\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop in traitProps) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop in traitProps) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const probe = this.body.ownerDocument.createElement(\"span\");\n    probe.textContent = \"M\";\n    const killTime = new Date().valueOf() + 1000;\n    const style = this.head.ownerDocument.createElement(\"style\");\n    const bogusData = bogusFontData + bogusFontCounter++;\n    style.textContent = viewFontFace.makeAtRule(\"\", Net.makeBlob([bogusData]));\n    this.head.appendChild(style);\n    const probeCont = this.body.ownerDocument.createElement(\"span\");\n    probeCont.style.width = \"0\";\n    probeCont.style.height = \"0\";\n    probeCont.style.overflow = \"hidden\";\n    probeCont.appendChild(probe);\n    this.body.appendChild(probeCont);\n    probe.style.visibility = \"hidden\";\n    probe.style.fontFamily = fontFamily;\n    for (const pname in traitProps) {\n      Base.setCSSProperty(probe, pname, props[pname].toString());\n    }\n    const rect = probe.getBoundingClientRect();\n    const initWidth = rect.right - rect.left;\n    const initHeight = rect.bottom - rect.top;\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    Logging.logger.info(\"Starting to load font:\", src);\n    let loaded = false;\n    frame\n      .loop(() => {\n        const rect = probe.getBoundingClientRect();\n        const currWidth = rect.right - rect.left;\n        const currHeight = rect.bottom - rect.top;\n        if (initWidth != currWidth || initHeight != currHeight) {\n          loaded = true;\n          return Task.newResult(false);\n        }\n        const currTime = new Date().valueOf();\n        if (currTime > killTime) {\n          return Task.newResult(false);\n        }\n        return frame.sleep(10);\n      })\n      .then(() => {\n        if (loaded) {\n          Logging.logger.info(\"Loaded font:\", src);\n        } else {\n          Logging.logger.warn(\"Failed to load font:\", src);\n        }\n        this.body.removeChild(probeCont);\n        frame.finish(viewFontFace);\n      });\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    let fetcher = this.srcURLMap[src];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.warn(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(src)\n          : null;\n        if (deobfuscator) {\n          Net.ajax(src, Net.XMLHttpRequestResponseType.BLOB).then((xhr) => {\n            if (!xhr.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(xhr.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[src] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(scope: Exprs.LexicalScope, public pageMaster: PageMaster) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>\n> extends PageBox<I> {\n  pageMaster: PageMaster;\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  pageMaster: PageMaster;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance\n> extends PageBox<I> {\n  pageMaster: PageMaster;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSinglUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      this.propagatePropertyToElement(\n        context,\n        element,\n        passSingleUriContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos =\n            ((containerSize + columnGap) * i) / columnCount -\n            columnGap / 2 +\n            container.paddingLeft -\n            ruleWidth / 2;\n          const size =\n            container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    if (style[\"content\"]) {\n      style[\"content\"] = style[\"content\"].filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"font-variant\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-shadow\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>\n> extends PageBoxInstance<P> {\n  pageMasterInstance: PageMasterInstance;\n\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  pageMasterInstance: PageMasterInstance;\n\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>\n> extends PageBoxInstance<P> {\n  pageMasterInstance: PageMasterInstance;\n\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    Base.setCSSProperty(container.element, \"overflow\", \"hidden\"); // default value\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  let writingMode = style[\"writing-mode\"];\n  writingMode = writingMode && writingMode.value;\n  let direction = style[\"direction\"];\n  direction = direction && direction.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a10: { width: new Css.Numeric(26, \"mm\"), height: new Css.Numeric(37, \"mm\") },\n  a9: { width: new Css.Numeric(37, \"mm\"), height: new Css.Numeric(52, \"mm\") },\n  a8: { width: new Css.Numeric(52, \"mm\"), height: new Css.Numeric(74, \"mm\") },\n  a7: { width: new Css.Numeric(74, \"mm\"), height: new Css.Numeric(105, \"mm\") },\n  a6: { width: new Css.Numeric(105, \"mm\"), height: new Css.Numeric(148, \"mm\") },\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  a2: { width: new Css.Numeric(420, \"mm\"), height: new Css.Numeric(594, \"mm\") },\n  a1: { width: new Css.Numeric(594, \"mm\"), height: new Css.Numeric(841, \"mm\") },\n  a0: {\n    width: new Css.Numeric(841, \"mm\"),\n    height: new Css.Numeric(1189, \"mm\"),\n  },\n  b10: { width: new Css.Numeric(31, \"mm\"), height: new Css.Numeric(44, \"mm\") },\n  b9: { width: new Css.Numeric(44, \"mm\"), height: new Css.Numeric(62, \"mm\") },\n  b8: { width: new Css.Numeric(62, \"mm\"), height: new Css.Numeric(88, \"mm\") },\n  b7: { width: new Css.Numeric(88, \"mm\"), height: new Css.Numeric(125, \"mm\") },\n  b6: { width: new Css.Numeric(125, \"mm\"), height: new Css.Numeric(176, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  b3: { width: new Css.Numeric(353, \"mm\"), height: new Css.Numeric(500, \"mm\") },\n  b2: { width: new Css.Numeric(500, \"mm\"), height: new Css.Numeric(707, \"mm\") },\n  b1: {\n    width: new Css.Numeric(707, \"mm\"),\n    height: new Css.Numeric(1000, \"mm\"),\n  },\n  b0: {\n    width: new Css.Numeric(1000, \"mm\"),\n    height: new Css.Numeric(1414, \"mm\"),\n  },\n  c10: { width: new Css.Numeric(28, \"mm\"), height: new Css.Numeric(40, \"mm\") },\n  c9: { width: new Css.Numeric(40, \"mm\"), height: new Css.Numeric(57, \"mm\") },\n  c8: { width: new Css.Numeric(57, \"mm\"), height: new Css.Numeric(81, \"mm\") },\n  c7: { width: new Css.Numeric(81, \"mm\"), height: new Css.Numeric(114, \"mm\") },\n  c6: { width: new Css.Numeric(114, \"mm\"), height: new Css.Numeric(162, \"mm\") },\n  c5: { width: new Css.Numeric(162, \"mm\"), height: new Css.Numeric(229, \"mm\") },\n  c4: { width: new Css.Numeric(229, \"mm\"), height: new Css.Numeric(324, \"mm\") },\n  c3: { width: new Css.Numeric(324, \"mm\"), height: new Css.Numeric(458, \"mm\") },\n  c2: { width: new Css.Numeric(458, \"mm\"), height: new Css.Numeric(648, \"mm\") },\n  c1: { width: new Css.Numeric(648, \"mm\"), height: new Css.Numeric(917, \"mm\") },\n  c0: {\n    width: new Css.Numeric(917, \"mm\"),\n    height: new Css.Numeric(1297, \"mm\"),\n  },\n  \"jis-b10\": {\n    width: new Css.Numeric(32, \"mm\"),\n    height: new Css.Numeric(45, \"mm\"),\n  },\n  \"jis-b9\": {\n    width: new Css.Numeric(45, \"mm\"),\n    height: new Css.Numeric(64, \"mm\"),\n  },\n  \"jis-b8\": {\n    width: new Css.Numeric(64, \"mm\"),\n    height: new Css.Numeric(91, \"mm\"),\n  },\n  \"jis-b7\": {\n    width: new Css.Numeric(91, \"mm\"),\n    height: new Css.Numeric(128, \"mm\"),\n  },\n  \"jis-b6\": {\n    width: new Css.Numeric(128, \"mm\"),\n    height: new Css.Numeric(182, \"mm\"),\n  },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  \"jis-b3\": {\n    width: new Css.Numeric(364, \"mm\"),\n    height: new Css.Numeric(515, \"mm\"),\n  },\n  \"jis-b2\": {\n    width: new Css.Numeric(515, \"mm\"),\n    height: new Css.Numeric(728, \"mm\"),\n  },\n  \"jis-b1\": {\n    width: new Css.Numeric(728, \"mm\"),\n    height: new Css.Numeric(1030, \"mm\"),\n  },\n  \"jis-b0\": {\n    width: new Css.Numeric(1030, \"mm\"),\n    height: new Css.Numeric(1456, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marks = style[\"marks\"];\n  if (marks && marks.value !== Css.ident.none) {\n    pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n  }\n  const bleed = style[\"bleed\"];\n  if (!bleed || bleed.value === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks) {\n      let hasCrop = false;\n      if (marks.value.isSpaceList()) {\n        hasCrop = (marks.value as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks.value === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.value && bleed.value.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed.value as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    pageSizeAndBleed.bleed.num *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    pageSizeAndBleed.bleedOffset.num *\n    context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false);\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\"stroke\", \"black\");\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"];\n  if (marks) {\n    const value = marks.value;\n    if (value.isSpaceList()) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Css.toNumber(defaultPrinterMarkOffset, context);\n  const lineLength = Css.toNumber(defaultPrinterMarkLineLength, context);\n\n  if (bleed) {\n    const bgcolor = cascadedPageStyle[\"background-color\"];\n    if (bgcolor && bgcolor.value) {\n      page.bleedBox.style.backgroundColor = bgcolor.value.stringValue();\n    }\n  }\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (val && val.value !== Css.ident.inherit) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    this.hasAutoSize_ = !PageMaster.toExprAuto(\n      scope,\n      style[isHorizontal ? \"width\" : \"height\"],\n      new Exprs.Numeric(scope, 0, \"px\"),\n    );\n  }\n\n  /**\n   *  @override\n   */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /**\n   * @override\n   */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return false;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n    style[startSide] = new Css.Expr(marginStart);\n    style[endSide] = new Css.Expr(marginEnd);\n    style[`margin-${startSide}`] = Css.numericZero;\n    style[`margin-${endSide}`] = Css.numericZero;\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n    style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n    page.pageAreaElement = container.element as HTMLElement;\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(\n        element,\n        \"flex-flow\",\n        this.vertical ? \"row\" : \"column\",\n      );\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(\n      context: Exprs.Context,\n    ): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(pageType: string): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], pageType, style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop];\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size = style[\"size\"];\n    if (size) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      pageMasterStyle[\"width\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"width\"],\n        new CssCascade.CascadeValue(pageSize.width, priority),\n      );\n      pageMasterStyle[\"height\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"height\"],\n        new CssCascade.CascadeValue(pageSize.height, priority),\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsBlankPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const blankPage = new Exprs.Named(this.scope, \"blank-page\");\n    if (blankPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver {\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, null, parent, null, validatorSet, false);\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"blank\":\n          this.chain.push(new IsBlankPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        let result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(props, n, noPageSelectorProps[n]);\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          const prevCascVal = CssCascade.getProp(props, name);\n          result = prevCascVal\n            ? CssCascade.cascadeValues(null, result, prevCascVal)\n            : result;\n          CssCascade.setProp(props, name, result);\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  /**\n   * @override\n   */\n  makeApplyRuleAction(specificity: number): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap = {};\n\nexport const frontEdgeBlackListHor: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-top\": \"0px\",\n  \"padding-top\": \"0px\",\n  \"border-top-width\": \"0px\",\n  \"border-top-style\": \"none\",\n  \"border-top-color\": \"transparent\",\n  \"border-top-left-radius\": \"0px\",\n  \"border-top-right-radius\": \"0px\",\n};\n\nexport const frontEdgeBlackListVert: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-right\": \"0px\",\n  \"padding-right\": \"0px\",\n  \"border-right-width\": \"0px\",\n  \"border-right-style\": \"none\",\n  \"border-right-color\": \"transparent\",\n  \"border-top-right-radius\": \"0px\",\n  \"border-bottom-right-radius\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListHor: { [key: string]: string } = {\n  \"margin-top\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListVert: { [key: string]: string } = {\n  \"margin-right\": \"0px\",\n};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext {\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /**\n   * @override\n   */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"];\n          if (\n            !content ||\n            content === Css.ident.normal ||\n            content === Css.ident.none\n          ) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle = (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> = Task.newFrame(\n      \"createRefShadow\",\n    );\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> = Task.newFrame(\n      \"createShadows\",\n    );\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (templateURLVal instanceof Css.URL) {\n      const url = (templateURLVal as Css.URL).url;\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n      });\n      cont2.then((shadow) => {\n        shadow = this.createPseudoelementShadow(\n          element,\n          isRoot,\n          cascStyle,\n          computedStyle,\n          styler,\n          context,\n          shadowContext,\n          shadow,\n        );\n        frame.finish(shadow);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      (name, cascVal) => {\n        let value = cascVal.evaluate(context, name);\n        if (name == \"font-family\") {\n          value = this.docFaces.filterFontFamily(value);\n        }\n        return value;\n      },\n    );\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"] as Css.Ident;\n    const displayValues = Display.getComputedDislayValue(\n      (computedStyle[\"display\"] as Css.Ident) || Css.ident.inline,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(\n    elementStyle: CssCascade.ElementStyle,\n  ): { lang: string | null; elementStyle: CssCascade.ElementStyle } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const value = CssCascade.getProp(style, name);\n        if (value.value !== Css.ident.inherit) {\n          props[name] = value.filterValue(inheritanceVisitor);\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps = CssCascade.getPolyfilledInheritedProps().filter(\n      (name) => computedStyle[name],\n    );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n            }\n          } else {\n            props[name] = value;\n          }\n          delete computedStyle[name];\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Ident,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? (this.nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const floatReference =\n      elementStyle[\"float-reference\"] &&\n      PageFloats.floatReferenceOf(\n        elementStyle[\"float-reference\"].value.toString(),\n      );\n    if (\n      this.nodeContext.parent &&\n      floatReference &&\n      PageFloats.isPageFloat(floatReference)\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    styler.processContent(element, computedStyle);\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"];\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext as Vtree.ShadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"];\n      let floatSide = computedStyle[\"float\"];\n      let clearSide = computedStyle[\"clear\"];\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"],\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute = Display.establishesCBForAbsolute(\n        position,\n      );\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      if (\n        floating ||\n        (computedStyle[\"break-inside\"] &&\n          computedStyle[\"break-inside\"] !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      this.nodeContext.floatMinWrapBlock =\n        computedStyle[\"float-min-wrap-block\"] || null;\n      this.nodeContext.columnSpan = computedStyle[\"column-span\"];\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (breakAfter) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (breakBefore) {\n          this.nodeContext.breakBefore = breakBefore.toString();\n        }\n        // Named page type\n        let pageType = computedStyle[\"page\"]?.toString() || null;\n        if (!pageType || pageType.toLowerCase() === \"auto\") {\n          pageType = this.nodeContext.pageType;\n        } else {\n          this.nodeContext.pageType = pageType;\n        }\n        if (this.styler.cascade.currentPageType !== pageType) {\n          if (!this.isAtForcedBreak()) {\n            this.nodeContext.breakBefore = \"page\";\n          }\n          this.styler.cascade.previousPageType = this.styler.cascade.currentPageType;\n          this.styler.cascade.currentPageType = pageType;\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing;\n        let blockBorderSpacing;\n        if (borderSpacing) {\n          if (borderSpacing.isSpaceList()) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      this.nodeContext.footnotePolicy = computedStyle[\"footnote-policy\"];\n      const firstPseudo = computedStyle[\"x-first-pseudo\"];\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter !== Css.ident.auto) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"] || [\"word-wrap\"];\n      this.nodeContext.breakWord =\n        wordBreak === Css.ident.break_all ||\n        overflowWrap === Css.ident.break_word;\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak = this.processRepeatOnBreak(\n          computedStyle,\n        );\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (\n            elementStyle[\"content\"] &&\n            elementStyle[\"content\"].value &&\n            elementStyle[\"content\"].value.url\n          ) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.NCX) {\n        ns = Base.NS.XHTML;\n        if (tag == \"ncx\" || tag == \"navPoint\") {\n          tag = \"div\";\n        } else if (tag == \"navLabel\") {\n          // Cheat here. Translate source to HTML, so it will plug\n          // in into the rest of the pipeline.\n          tag = \"span\";\n          const navParent = element.parentNode;\n          if (navParent) {\n            // find the content element\n            let href: string | null = null;\n            for (let c: Node = navParent.firstChild; c; c = c.nextSibling) {\n              if (c.nodeType != 1) {\n                continue;\n              }\n              const childElement = c as Element;\n              if (\n                childElement.namespaceURI == Base.NS.NCX &&\n                childElement.localName == \"content\"\n              ) {\n                href = childElement.getAttribute(\"src\");\n                break;\n              }\n            }\n            if (href) {\n              tag = \"a\";\n              element = element.ownerDocument.createElementNS(ns, \"a\");\n              element.setAttribute(\"href\", href);\n            }\n          }\n        } else {\n          tag = \"span\";\n        }\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                attributeValue = this.documentURLTransformer.transformFragment(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n                result.setAttribute(attributeName, attributeValue);\n                this.page.registerElementWithId(result, attributeValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = TaskUtil.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.resolveURL(attributeValue);\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(\n              TaskUtil.loadElement(result, attributeValue),\n            );\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              try {\n                result.setAttribute(attributeName, attributeValue);\n              } catch (err) {\n                Logging.logger.warn(err);\n              }\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = TaskUtil.loadElement(image, delayedSrc);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          if (!hasAutoWidth && !hasAutoHeight) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(TaskUtil.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n        if (!this.nodeContext.inline) {\n          let blackList: { [key: string]: string } = null;\n          if (!firstTime) {\n            if (\n              this.nodeContext.inheritedProps[\"box-decoration-break\"] !==\n              \"clone\"\n            ) {\n              blackList = this.nodeContext.vertical\n                ? frontEdgeBlackListVert\n                : frontEdgeBlackListHor;\n            } else {\n              // When box-decoration-break: clone, cloned margins are always\n              // truncated to zero.\n              blackList = this.nodeContext.vertical\n                ? frontEdgeUnforcedBreakBlackListVert\n                : frontEdgeUnforcedBreakBlackListHor;\n            }\n          } else if (atUnforcedBreak && !this.isAtForcedBreak()) {\n            blackList = this.nodeContext.vertical\n              ? frontEdgeUnforcedBreakBlackListVert\n              : frontEdgeUnforcedBreakBlackListHor;\n          }\n          if (blackList) {\n            for (const propName in blackList) {\n              Base.setCSSProperty(result, propName, blackList[propName]);\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Check if the current position is at a forced break\n   * (Fix for Issue #690)\n   */\n  private isAtForcedBreak(): boolean {\n    for (\n      let nodeContext = this.nodeContext;\n      nodeContext && !nodeContext.after;\n      nodeContext = nodeContext.parent\n    ) {\n      if (Break.isForcedBreakValue(nodeContext.breakBefore)) {\n        return true;\n      }\n      if (\n        nodeContext.parent &&\n        (nodeContext.parent.sourceNode as Element).firstElementChild !==\n          nodeContext.sourceNode\n      ) {\n        break;\n      }\n    }\n    return false;\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  /**\n   * @return isSVGUrlAttribute\n   */\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext = new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n        parentFormattingContext,\n        this.nodeContext.sourceNode as Element,\n      );\n      (this.nodeContext\n        .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext).initializeRepetitiveElements(\n        this.nodeContext.vertical,\n      );\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (repeatOnBreak === Css.ident.auto) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const parent = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : this.viewRoot;\n        if (parent) {\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      pos.sourceNode.namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    const contentShadow = shadow.subShadow || shadow.parentShadow;\n    if (shadow.subShadow) {\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /**\n   * @override\n   */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(TaskUtil.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    for (const propName in computedStyle) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      if (!value || value === Css.empty) {\n        continue;\n      }\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value.isNumeric() &&\n        Exprs.needUnitConversion((value as Css.Numeric).unit)\n      ) {\n        // font-size for the root element is already converted to px\n        value = Css.convertNumericToPx(value, this.context);\n      }\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      if (target.localName === \"rt\" && propName === \"font-size\") {\n        // Fix for Issue #673\n        if (this.fixRubyTextFontSize(target, value)) {\n          continue;\n        }\n      }\n      Base.setCSSProperty(target, propName, value.toString());\n    }\n  }\n\n  /**\n   * Fix ruby text font size.\n   * Issue #673: Minimum font size setting in Chrome causes ruby font size problem\n   * @param target the rt element\n   * @param value the font-size value\n   * @returns true if the font-size fix is done\n   */\n  fixRubyTextFontSize(target: Element, value: Css.Val): boolean {\n    if (!/Chrome/.test(navigator.userAgent)) {\n      // Do nothing if the browser engine is not \"Chrome\"\n      return false;\n    }\n    if (!value.isNumeric()) {\n      return false;\n    }\n    const numeric = value as Css.Numeric;\n    let fontSizeInPx: number;\n    if (numeric.unit === \"%\" || numeric.unit === \"em\") {\n      const parentElem = this.nodeContext?.parent?.viewNode as Element;\n      const parentFontSize =\n        parentElem && parseFloat(window.getComputedStyle(parentElem).fontSize);\n      fontSizeInPx =\n        (parentFontSize * numeric.num) / (numeric.unit === \"%\" ? 100 : 1);\n    } else {\n      fontSizeInPx = Css.convertNumericToPx(numeric, this.context).num;\n    }\n    if (!fontSizeInPx) {\n      return false;\n    }\n    const minFontSizeInPx = 10; // Default minimum font size setting in Chrome\n    if (fontSizeInPx >= minFontSizeInPx) {\n      return false;\n    }\n    if (!(target instanceof HTMLElement && \"zoom\" in target.style)) {\n      return false;\n    }\n    const zoom = fontSizeInPx / minFontSizeInPx;\n    Base.setCSSProperty(target, \"font-size\", `${minFontSizeInPx}px`);\n    Base.setCSSProperty(target, \"zoom\", `${zoom}`);\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /**\n   * @override\n   */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /**\n   * @override\n   */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /**\n   * @override\n   */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    if (nodeContext) {\n      nodeContext.walkUpBlocks((block) => {\n        const boxDecorationBreak = block.inheritedProps[\"box-decoration-break\"];\n        if (!boxDecorationBreak || boxDecorationBreak === \"slice\") {\n          const elem = block.viewNode as Element;\n          Asserts.assert(elem instanceof Element);\n          if (block.vertical) {\n            Base.setCSSProperty(elem, \"padding-left\", \"0\");\n            Base.setCSSProperty(elem, \"border-left\", \"none\");\n            Base.setCSSProperty(elem, \"border-top-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n          } else {\n            Base.setCSSProperty(elem, \"padding-bottom\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom\", \"none\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-right-radius\", \"0\");\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /**\n   * @override\n   */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"box-decoration-break\": true,\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  page: true,\n};\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /**\n   * @override\n   */\n  getRangeClientRects(range: Range): ClientRect[] {\n    const rects = range[\"getClientRects\"]();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.subtractOffsets(rect, layoutBoxRect),\n    );\n  }\n\n  /**\n   * @override\n   */\n  getElementClientRect(element: Element): ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.subtractOffsets(rect, layoutBoxRect);\n  }\n\n  /**\n   * @override\n   */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: Element;\n  width: number;\n  height: number;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n    let outerZoomBox = this.root.firstElementChild;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n    let layoutBox = outerZoomBox.nextElementSibling;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox as HTMLElement;\n    this.contentContainer = contentContainer as HTMLElement;\n    this.layoutBox = layoutBox as HTMLElement;\n    const clientLayout = new DefaultClientLayout(this);\n    const computedStyle = clientLayout.getElementComputedStyle(this.root);\n    this.width =\n      opt_width || parseFloat(computedStyle[\"width\"]) || window.innerWidth;\n    this.height =\n      opt_height || parseFloat(computedStyle[\"height\"]) || window.innerHeight;\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n    Base.setCSSProperty(this.contentContainer, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.Response): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.Response,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.XMLHttpRequestResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> = new TaskUtil.Fetcher(\n  () => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  },\n  \"uaStylesheetBaseFetcher\",\n);\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n    this.pageScope.defineName(\n      \"blank-page\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          const cp = styleInstance.currentLayoutPosition;\n          return cp?.isBlankPage;\n        },\n        \"blank-page\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"];\n      const height = viewportProps[\"height\"];\n      const textZoom = viewportProps[\"text-zoom\"];\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer {\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n  actualPageWidth: number;\n  actualPageHeight: number;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n\n    // Named page type at first page\n    this.styler.cascade.currentPageType = this.styler.cascade.firstPageType;\n\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).thenFinish(frame);\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    Object.keys(pageProps).forEach((selector) => {\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageProps[selector] as any),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /**\n   * @override\n   */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /**\n   * @override\n   */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /**\n   * @override\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = Break.startSideValueToBreakValue(\n            flowPos.startSide,\n          );\n          flowPos.startSide = Break.breakValueToStartSideValue(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          cascadedPageStyle = {}; // clear margin boxes\n          // TODO: support the :blank page selector\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition = this.layoutPositionAtPageStart.flowPositions[\n        parentFlowName\n      ];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startSide);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats = pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Fix for issue #681\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats.\n    if (\n      deferredFloats.length &&\n      deferredFloats[0].float.floatReference === \"page\"\n    ) {\n      const deferredFloatNode =\n        deferredFloats[0].float.nodePosition.steps[0].node;\n      const deferredFloatOffset =\n        deferredFloatNode &&\n        this.xmldoc.getNodeOffset(deferredFloatNode, 0, false);\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      if (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      ) {\n        return Task.newResult(true);\n      }\n    }\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n        const strategy = new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated = pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats = pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startSide)) {\n      return Task.newResult(true);\n    }\n    flowPosition.startSide = \"any\";\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition = this.getLastAfterPositionIfDeferredFloatsExists(\n                    column,\n                    newPosition,\n                  );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    if (column.pageBreakType) {\n                      // forced break\n                      flowPosition.startSide = Break.breakValueToStartSideValue(\n                        column.pageBreakType,\n                      );\n                    }\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint = this.counterStore.createLayoutConstraint(\n      pageIndex,\n    );\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if (column.width >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition = this.currentLayoutPosition.flowPositions[\n        flowNameStr\n      ];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> = Task.newFrame(\n      \"layoutFlowColumns\",\n    );\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer = this.viewport.document.createElement(\n          innerContainerTag,\n        );\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSinglUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition = this.currentLayoutPosition.flowPositions[\n            flowNameStr\n          ];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n\n          // Though it seems that LShapeFloatBug still exists in Firefox, it\n          // apparently does not occur on exclusion floats. See the test file:\n          // test/files/column-break-bug.html\n          // if (Base.checkLShapeFloatBug(this.viewport.root)) {\n          // \t// Simplistic bug workaround: add a copy of the shape translated up.\n          //     exclusions.push(outerShape.withOffset(0, -1.25 * this.queryUnitSize(\"em\", false)));\n          // }\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n    cp.page++;\n\n    const startSide = cp.flowPositions[\"body\"]?.startSide;\n    cp.isBlankPage =\n      startSide && startSide !== \"any\" && this.matchPageSide(startSide);\n    page.isBlankPage = cp.isBlankPage;\n\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle(\n          (page.isBlankPage\n            ? this.styler.cascade.previousPageType\n            : this.styler.cascade.currentPageType) ?? \"\",\n        );\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        pageMaster.pageBox.specified[\"width\"].value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        pageMaster.pageBox.specified[\"height\"].value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> = Task.newFrame(\n      \"layoutNextPage\",\n    );\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n\n    // Shift 1px to workaround Chrome printing bug (Canceled because of another Chrome problem)\n    // page.bleedBox.style.paddingTop = `${evaluatedPageSizeAndBleed.bleed+1}px`;\n\n    // Shift 0.01px to workaround Firefox printing problem\n    // (This small value (< 1/64 px) has no effect to Chrome)\n    page.bleedBox.style.paddingTop = `${\n      evaluatedPageSizeAndBleed.bleed + 0.01\n    }px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {}\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\n// override, so we don't register an error\nexport function processViewportMeta(meta: Element): string {\n  let content = meta.getAttribute(\"content\");\n  if (!content) {\n    return \"\";\n  }\n  const vals = {};\n  let r: RegExpMatchArray;\n  while (\n    (r = content.match(\n      /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n    )) != null\n  ) {\n    content = content.substr(r[0].length);\n    vals[r[1]] = r[2];\n  }\n  const width = vals[\"width\"] - 0;\n  const height = vals[\"height\"] - 0;\n  if (width && height) {\n    return `@-epubx-viewport{width:${width}px;height:${height}px;}`;\n  }\n  return \"\";\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n  slave: BaseParserHandler;\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(\"CSS parser:\", mnemonics);\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.Response,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.XMLHttpRequestResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const userAgentXML = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.load(userAgentXML).then(() => {\n        this.triggerSingleDocumentPreprocessing = true;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(response: Net.Response): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> = Task.newFrame(\n      \"OPSDocStore.load\",\n    );\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] = Plugin.getHooksForName(\n            Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT,\n          );\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        const userAgentURL = Base.resolveURL(\n          \"user-agent-page.css\",\n          Base.resourceBaseURL,\n        );\n        sources.push({\n          url: userAgentURL,\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (!isTocBox) {\n          const elemList = xmldoc.document.querySelectorAll(\n            \"style, link, meta\",\n          );\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const rel = elem.getAttribute(\"rel\");\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  rel == \"stylesheet\" ||\n                  (rel == \"alternate stylesheet\" && classes)\n                ) {\n                  let src = elem.getAttribute(\"href\");\n                  src = Base.resolveURL(src, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> = Task.newFrame(\n              \"fetchStylesheet\",\n            );\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sha1 - Calculate SHA1 hash of the given content.\n */\nimport * as Base from \"./base\";\n\n/**\n * @return big-endian byte sequence\n */\nexport function encode32(n: number): string {\n  return String.fromCharCode(\n    (n >>> 24) & 255,\n    (n >>> 16) & 255,\n    (n >>> 8) & 255,\n    n & 255,\n  );\n}\n\n/**\n * @param bytes big-endian byte sequence\n */\nexport function decode32(bytes: string): number {\n  // Important facts: \"\".charCodeAt(0) == NaN, NaN & 0xFF == 0\n  const b0 = bytes.charCodeAt(0) & 255;\n  const b1 = bytes.charCodeAt(1) & 255;\n  const b2 = bytes.charCodeAt(2) & 255;\n  const b3 = bytes.charCodeAt(3) & 255;\n  return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return big-endian uint32 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int32(bytes: string): number[] {\n  const sb = new Base.StringBuffer();\n  sb.append(bytes);\n  let appendCount = (55 - bytes.length) & 63;\n  sb.append(\"\\u0080\");\n  while (appendCount > 0) {\n    appendCount--;\n    sb.append(\"\\x00\");\n  }\n  sb.append(\"\\x00\\x00\\x00\\x00\");\n  sb.append(encode32(bytes.length * 8));\n  bytes = sb.toString();\n  const h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  const w =\n    /** @type Array.<number> */\n    [] as number[];\n  let i: number;\n  for (let bi = 0; bi < bytes.length; bi += 64) {\n    for (i = 0; i < 16; i++) {\n      w[i] = decode32(bytes.substr(bi + 4 * i, 4));\n    }\n    for (; i < 80; i++) {\n      const q = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n      w[i] = (q << 1) | (q >>> 31);\n    }\n    let a = h[0];\n    let b = h[1];\n    let c = h[2];\n    let d = h[3];\n    let e = h[4];\n    let f: number;\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = ((b & c) | (~b & d)) + 1518500249;\n      } else if (i < 40) {\n        f = (b ^ c ^ d) + 1859775393;\n      } else if (i < 60) {\n        f = ((b & c) | (b & d) | (c & d)) + 2400959708;\n      } else {\n        f = (b ^ c ^ d) + 3395469782;\n      }\n      f += ((a << 5) | (a >>> 27)) + e + w[i];\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = f;\n    }\n    h[0] = (h[0] + a) | 0;\n    h[1] = (h[1] + b) | 0;\n    h[2] = (h[2] + c) | 0;\n    h[3] = (h[3] + d) | 0;\n    h[4] = (h[4] + e) | 0;\n  }\n  return h;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return uint8 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int8(bytes: string): number[] {\n  const h = bytesToSHA1Int32(bytes);\n  const res = [];\n  for (const n of h) {\n    res.push((n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, n & 255);\n  }\n  return res;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return chars with codes 0 - 255 equal to SHA1 hash of the input\n */\nexport function bytesToSHA1Bytes(bytes: string): string {\n  const h = bytesToSHA1Int32(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < h.length; i++) {\n    sb.append(encode32(h[i]));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return hex-encoded SHA1 hash\n */\nexport function bytesToSHA1Hex(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < sha1.length; i++) {\n    sb.append((sha1.charCodeAt(i) | 256).toString(16).substr(1));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return base64-encoded SHA1 hash of the input\n */\nexport function bytesToSHA1Base64(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  Base.appendBase64(sb, sha1);\n  return sb.toString();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"body-child\":\n            if (\n              !srcElem.querySelector(\n                \"[role=doc-toc], [role=directory], nav li a, .toc, #toc\",\n              )\n            ) {\n              // hide elements not containing TOC.\n              computedStyle[\"display\"] = Css.ident.none;\n            }\n            break;\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        firstChild.textContent.trim() === \"\"\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = this.url + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      // Mark if this doc is the primary entry page.\n      const nonTocBoxDoc = this.store.resources[this.url];\n\n      // Make hidden TOC visible in TOC box\n      for (const elem of xmldoc.document.querySelectorAll(\n        \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n      )) {\n        if (elem.hasAttribute(\"hidden\")) {\n          elem.removeAttribute(\"hidden\");\n        }\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          Array.from(\n            page.container.querySelectorAll(\n              \"[data-vivliostyle-toc-box]>*>*>*>*>*[style*='display: none']\",\n            ),\n          ).forEach((bodyChildElem) => {\n            bodyChildElem.setAttribute(\"aria-hidden\", \"true\");\n            bodyChildElem.setAttribute(\"hidden\", \"hidden\");\n          });\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as SHA1 from \"./sha1\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  startLoadingAsJSON(url: string): void {\n    this.jsonStore.fetch(url);\n  }\n\n  loadPubDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.ajax(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root, haveZipMetadata).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    if (haveZipMetadata) {\n      this.startLoadingAsJSON(url + \"?r=list\");\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root, haveZipMetadata).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(\n    pubURL: string,\n    root: string,\n    haveZipMetadata: boolean,\n  ): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              const zipMetadataResult = haveZipMetadata\n                ? this.loadAsJSON(`${pubURL}?r=list`)\n                : Task.newResult(null);\n              zipMetadataResult.then((zipMetadata) => {\n                opf = new OPFDoc(this, pubURL);\n                opf\n                  .initWithXMLDoc(\n                    opfXML,\n                    encXML,\n                    zipMetadata,\n                    `${pubURL}?r=manifest`,\n                  )\n                  .then(() => {\n                    this.opfByURL[url] = opf;\n                    this.primaryOPFByEPubURL[pubURL] = opf;\n                    frame.finish(opf);\n                  });\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        if (doc.body) {\n          doc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n        }\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(manifestUrl).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.xhtmlToc && opf.xhtmlToc.src === xmldoc.url) {\n              // xhtmlToc is the primari entry (X)HTML\n              if (\n                !doc.querySelector(\n                  \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n                )\n              ) {\n                // TOC is not found in the primari entry (X)HTML\n                opf.xhtmlToc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  // TODO: use UTF8 of uid\n  const sha1Sum = SHA1.bytesToSHA1Int8(uid);\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    let head: Blob;\n    let tail: Blob;\n    if (blob.slice) {\n      head = blob.slice(0, 1040);\n      tail = blob.slice(1040, blob.size);\n    } else {\n      head = blob[\"webkitSlice\"](0, 1040);\n      tail = blob[\"webkitSlice\"](1040, blob.size - 1040);\n    }\n    Net.readBlob(head).then((buf) => {\n      const dataView = new DataView(buf);\n      for (let k = 0; k < dataView.byteLength; k++) {\n        let b = dataView.getUint8(k);\n        b ^= sha1Sum[k % 20];\n        dataView.setUint8(k, b);\n      }\n      frame.finish(Net.makeBlob([dataView, tail]));\n    });\n    return frame.result();\n  };\n}\n\nexport function makeObfuscationKey(uid: string): string {\n  return `1040:${SHA1.bytesToSHA1Hex(uid)}`;\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport function checkMathJax(): void {\n  if (getMathJaxHub()) {\n    CssCascade.supportedNamespaces[Base.NS.MATHML] = true;\n  }\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  ncxToc: OPFItem = null;\n  xhtmlToc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n    checkMathJax();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /**\n       * @override\n       */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /**\n       * @override\n       */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.items.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /**\n       * @override\n       */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURIComponent(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n    zipMetadata: Base.JSON,\n    manifestURL: string,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.xhtmlToc && item.itemProperties[\"nav\"]) {\n          this.xhtmlToc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const tocAttr = pkg.child(\"spine\").attribute(\"toc\")[0];\n    if (tocAttr) {\n      this.ncxToc = this.itemMap[tocAttr];\n    }\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (!zipMetadata) {\n      if (idpfObfURLs.length > 0 && this.uid) {\n        // Have to deobfuscate in JavaScript\n        const deobfuscator = makeDeobfuscator(this.uid);\n        for (let i = 0; i < idpfObfURLs.length; i++) {\n          this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n        }\n      }\n      if (this.prePaginated) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n    const manifestText = new Base.StringBuffer();\n    const obfuscations = {};\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Deobfuscate in the server.\n      const obfuscationKey = makeObfuscationKey(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        obfuscations[idpfObfURLs[i]] = obfuscationKey;\n      }\n    }\n    for (let i = 0; i < zipMetadata.length; i++) {\n      const entry = zipMetadata[i];\n      const encodedPath = entry[\"n\"];\n      if (encodedPath) {\n        const path = decodeURIComponent(encodedPath);\n        const item = this.itemMapByPath[path];\n        let mediaType: string | null = null;\n        if (item) {\n          item.compressed = entry[\"m\"] != 0;\n          item.compressedSize = entry[\"c\"];\n          if (item.mediaType) {\n            mediaType = item.mediaType.replace(/\\s+/g, \"\");\n          }\n        }\n        const obfuscation = obfuscations[path];\n        if (mediaType || obfuscation) {\n          manifestText.append(encodedPath);\n          manifestText.append(\" \");\n          manifestText.append(mediaType || \"application/octet-stream\");\n          if (obfuscation) {\n            manifestText.append(\" \");\n            manifestText.append(obfuscation);\n          }\n          manifestText.append(\"\\n\");\n        }\n      }\n    }\n    this.assignAutoPages();\n    return Net.ajax(\n      manifestURL,\n      Net.XMLHttpRequestResponseType.DEFAULT,\n      \"POST\",\n      manifestText.toString(),\n      \"text/plain\",\n    );\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      (doc && doc.title) ||\n      manifestObj[\"name\"] ||\n      (manifestObj[\"metadata\"] && manifestObj[\"metadata\"][\"title\"]);\n    if (title) {\n      this.metadata[metaTerms.title] = [{ v: title }];\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      const selector =\n        \"[role=doc-toc] a[href],\" +\n        \"[role=directory] a[href],\" +\n        \"nav li a[href],\" +\n        \".toc a[href],\" +\n        \"#toc a[href]\";\n      for (const anchorElem of doc.querySelectorAll(selector)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder = manifestObj[\"readingOrder\"].includes(\n              itemObj,\n            );\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url)\n            ) {\n              const baseUrl = manifestUrl\n                ? manifestUrl.replace(/\\/[^/]+$/, \"/\")\n                : this.pubURL;\n              const param = {\n                url: Base.resolveURL(Base.convertSpecialURL(url), baseUrl),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n\n              //TODO: items not in readingOrder should be excluded from linear reading but available with internal link navigation.\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.xhtmlToc = this.items[tocFound];\n      }\n\n      if (!this.xhtmlToc) {\n        this.xhtmlToc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> = Task.newFrame(\n      \"renderSinglePage\",\n    );\n    let page = this.makePage(viewItem, pos);\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  private findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"renderPage\",\n    );\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    return this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    );\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"renderPagesUpto\",\n    );\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getCurrentSpread\");\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(\n        /** @type Vtree.Spread */\n        { left: null, right: null } as Vtree.Spread,\n      );\n    }\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"navigateToEPage\",\n    );\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"navigateToCFI\",\n    );\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"navigateTo\",\n    );\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      if (target) {\n        this.findPage(\n          {\n            spineIndex: item.spineIndex,\n            pageIndex: -1,\n            offsetInItem: viewItem.xmldoc.getElementOffset(target),\n          },\n          sync,\n        ).thenFinish(frame);\n      } else if (position.spineIndex !== item.spineIndex) {\n        // no fragment, different spine item\n        this.findPage(\n          {\n            spineIndex: item.spineIndex,\n            pageIndex: 0,\n            offsetInItem: -1,\n          },\n          sync,\n        ).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n      pageCont.setAttribute(\"aria-hidden\", \"true\");\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (page.offset === 0) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"span\");\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[\n        spineIndex\n      ] = [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties = item.itemRefElement.getAttribute(\n        \"properties\",\n      );\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.xhtmlToc || opf.ncxToc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(350, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    pageCont.style.visibility = \"hidden\";\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 10}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  haveZipMetadata: boolean;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    const document = window.document;\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = document.getElementById(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.haveZipMetadata = false;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const haveZipMetadata = !!command[\"zipmeta\"];\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL, haveZipMetadata).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n      page.container.setAttribute(\"aria-hidden\", \"true\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n    page.container.setAttribute(\"aria-hidden\", \"false\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(this.window, this.fontSize, viewportElement);\n    }\n  }\n\n  private resolveSpreadView(viewport: Vgen.Viewport): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        // wide enough for a pair of pages of A/B paper sizes, but not too\n        // narrow\n        return viewport.width / viewport.height >= 1.45 && viewport.width > 800;\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const spreadView = this.resolveSpreadView(viewport);\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n    if (\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (\n      this.opfView &&\n      this.opfView.hasPages() &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    if (!this.pageSheetSizeAlreadySet && this.pageRuleStyleElement) {\n      let styleText = \"\";\n      Object.keys(pageSheetSize).forEach((selector) => {\n        styleText += `@page ${selector}{margin:0;size:`;\n        const size = pageSheetSize[selector];\n        styleText += `${size.width}px ${size.height}px;}`;\n      });\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.isTOCVisible();\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.hideTOC();\n      this.opfView.removeRenderedPages();\n    }\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n    if (this.pref.spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage = page;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle: this.opf.spine[this.pagePosition.spineIndex]\n                          .title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] = this.opf.spine[\n                          this.pagePosition.spineIndex\n                        ].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          if (this.renderAllPages) {\n                            this.setReadyState(Constants.ReadyState.COMPLETE);\n                          }\n                          this.callback({ t: \"loaded\" });\n                          frame.finish(p);\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> = Task.newFrame(\n          \"moveTo.showCurrent\",\n        );\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer.showCurrent(viewer.currentPage).then(() => {\n                loopFrame.continueLoop();\n              });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> = Task.newFrame(\n              \"waitForCommand\",\n            );\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: string;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!singleDocumentOptions) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      (this.adaptViewer_.opfView.opf.xhtmlToc ||\n        this.adaptViewer_.opfView.opf.ncxToc)\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n","// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\nimport { VivliostyleViewportCss, VivliostyleViewportScreenCss } from \"./assets\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>${VivliostyleViewportCss}</style>\n          <style>${VivliostyleViewportScreenCss}</style>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer(\n        {\n          viewportElement: this.iframeWin.document.body\n            .firstElementChild as HTMLElement,\n          window: this.iframeWin,\n          debug: true,\n        },\n        {\n          defaultPaperSize: {\n            width: 794, // These numbers give weird output, but not setting them crashes the browser when there is no CSS.\n            height: 1122,\n          },\n        },\n      );\n    return new Promise<void>((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n","import {\n    printHTML\n} from \"../src\"\n\n\ndocument.getElementById('print').addEventListener('click', () => {\n    const html = document.getElementById('html').value,\n        css = document.getElementById('css').value,\n        title = document.getElementById('title').value,\n        htmlDoc = `\n        <!doctype html>\n        <html>\n            <head>\n                <meta charset=\"UTF-8\">\n                <title>${title}</title>\n                <style>${css}</style>\n            <head>\n            <body>${html}</body>\n        </html>`,\n        printCallback = iframeWin => {\n            const pageCount = iframeWin.document.querySelectorAll('[data-vivliostyle-page-container]').length\n            console.log(`page count: ${pageCount}`)\n            iframeWin.print()\n        }\n\n    printHTML(htmlDoc, {\n        title,\n        printCallback,\n        hideIframe: true, // Whether to use a hidden iframe (default: true)\n        removeIframe: true // Whether to remove the iframe after use (default: true)\n    })\n})\n"],"names":["DIFF_DELETE","diff_main","text1","text2","cursor_pos","_fix_unicode","editdiff","oldText","newText","oldRange","index","length","newRange","oldLength","newLength","oldCursor","oldBefore","slice","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","Math","min","oldPrefix","newPrefix","make_edit_splice","cursor","suffixLength","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","i","indexOf","hm","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","j","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","mid_common","diff_halfMatch_","diffs_a","diffs_b","concat","text1_length","text2_length","max_d","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","unshift","push","diff_cleanupMerge","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","pointerend","is_surrogate_pair_end","fix_unicode","pointer","count_delete","count_insert","text_delete","text_insert","splice","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","n","pop","changes","charCode","str","before","oldMiddle","newMiddle","after","tuples","ret","remove_empty_tuples","diff","INSERT","DELETE","EQUAL","PageSide","ReadyState","LogLevel","setDebug","value","isDebug","pageProgressionOf","PageProgression","LTR","RTL","Error","argumentsToErrorInfo","args","a","from","e","shift","error","messages","buildMessageAndStackTrace","stack","frameTrace","toString","HOOKS","logger","opt_console","this","consoleDebug","msg","debug","log","console","consoleInfo","info","consoleWarn","warn","consoleError","triggerListeners","level","listeners","forEach","listener","addListener","arguments","DEBUG","INFO","WARN","ERROR","hooks","registerHook","name","fn","hooksForName","Logging","removeHook","getHooksForName","plugin","Profiler","performanceInstance","registerTiming","noop","registerStartTiming","registerEndTiming","forceRegisterStartTiming","timestamp","call","forceRegisterEndTiming","printTimings","timestamps","st","Object","keys","stamps","l","t","start","end","disable","enable","isEnabled","startEnd","now","fallbackPerformanceInstance","Date","profiler","window","performance","profile","firstLetterPattern","emptyObj","stringToJSON","JSON","parse","stripFragment","url","r","match","baseURL","location","href","setBaseURL","NS","resourceBaseURL","setResourceBaseURL","resolveURL","relURL","test","toLowerCase","substr","lastIndexOf","urlOption","replace","convertSpecialURL","exec","asString","v","PriorityQueue","queue","add","item","parentIndex","parent","compare","peek","remove","result","curr","size","childIndex","knownPrefixes","propNameMap","checkIfPropertySupported","prefix","prop","probe","document","createElement","style","setProperty","documentElement","cssPropName","txt","toUpperCase","getPrefixedPropertyNames","prefixed","setCSSProperty","elem","prefixedPropertyNames","err","getCSSProperty","opt_value","propertyNames","getPropertyValue","getLangAttribute","element","lang","getAttributeNS","XML","namespaceURI","XHTML","getAttribute","StringBuffer","append","list","clear","join","escapeChar","escapeCSSIdent","escapeCSSStr","lightURLEncode","encodeURIComponent","isLetter","ch","escapeNameStrToHex","s","escapeRegExp","binarySearch","high","good","h","m","numberCompare","b","indexArray","arr","key","map","multiIndexArray","SimpleEventTarget","dispatchEvent","evt","type","target","currentTarget","addEventListener","capture","removeEventListener","hasVerticalBBoxBug","hasInlineBlockJustificationBug","hasSoftWrapOpportunityAfterHyphenBug","hasSoftWrapOpportunityByWbrBug","getId","node","nodeType","idtxt","escape","unescapeChar","unescape","parseExtVal","extstr","p","parseExt","ext","RefStep","appendTo","sb","applyTo","pos","ChildStep","id","sideBias","child","childElements","children","childElementCount","firstChild","next","nextSibling","OffsetStep","offset","textBefore","textAfter","textLength","textContent","Fragment","fromString","fragstr","decodeURIComponent","steps","parseInt","Base","navigate","doc","ref","trim","text","prependPathFromNode","parentNode","previousSibling","reverse","clonePreferences","pref","fontFamily","lineHeight","margin","hyphenate","columnWidth","horizontal","nightMode","spreadView","pageBorder","enabledMediaTypes","assign","defaultPaperSize","defaultPreferencesInstance","vivliostyle","print","Special","letterbox","viewW","viewH","objW","objH","scale","cssString","cssIdent","makeQualifiedName","objName","memberName","nextKeyIndex","LexicalScope","resolver","scopeKey","zero","Const","one","_true","_false","builtIns","round","sqrt","max","typeof","defineBuiltInName","pageWidth","pageHeight","fontSize","pubTitle","docTitle","values","Native","defineName","qualifiedName","val","defineFunc","funcs","defineBuiltIn","isViewportRelativeLengthUnit","unit","defaultUnitSizes","px","in","pt","pc","cm","mm","q","em","rem","ex","dppx","dpi","dpcm","needUnitConversion","Context","rootScope","viewportWidth","viewportHeight","actualPageWidth","actualPageHeight","initialFontSize","rootFontSize","getScopeContext","scope","scopes","clearScope","queryUnitSize","isRoot","pvw","pvh","vw","pageAreaWidth","vh","pageAreaHeight","pageVertical","evalName","evalCall","params","noBuiltInEval","body","evaluate","apply","evalMediaName","not","enabled","evalMediaTest","feature","req","actual","screen","availWidth","availHeight","pixelDepth","queryVal","storeVal","Val","buf","priority","evaluateCore","context","expand","dependCore","other","dependencyCache","dependOuter","cached","depend","isMediaName","Prefix","_this","getOp","evalPrefix","constructor","Infix","lhs","rhs","_this2","getPriority","evalInfix","thisPriority","Logical","Comparison","Additive","Multiplicative","Not","Negate","And","AndMedia","Or","OrMedia","Lt","Le","Gt","Ge","Eq","Ne","Add","Subtract","Multiply","Divide","Modulo","Numeric","num","_this3","Named","_this4","MediaName","_this5","_this6","Call","_this7","expandedParams","expanded","Cond","cond","ifTrue","ifFalse","_this8","_this9","MediaTest","_this10","Param","_this11","and","sub","mul","div","Visitor","visitValues","visit","visitEmpty","empty","visitSlash","slash","visitStr","visitIdent","ident","visitNumeric","numeric","visitNum","visitInt","visitColor","color","visitURL","visitSpaceList","visitCommaList","visitFunc","func","visitExpr","expr","FilterVisitor","SpaceList","CommaList","Func","stringValue","toExpr","isExpr","isNumeric","isNum","isIdent","isSpaceList","visitor","Exprs","Empty","instance","Slash","Str","nameTable","Ident","getName","Num","Int","Color","rgb","URL","appendList","separator","Expr","toNumber","convertNumericToPx","absolute","all","always","auto","avoid","balance","balance_all","block","block_end","block_start","both","bottom","border_box","break_all","break_word","crop","cross","column","exclusive","fixed","flex","footnote","footer","header","hidden","horizontal_tb","inherit","inline","inline_block","inline_end","inline_start","landscape","left","line","list_item","ltr","manual","none","normal","oeb_page_foot","oeb_page_head","page","relative","right","same","snap_block","spread","_static","rtl","table","table_caption","table_cell","table_footer_group","table_header_group","table_row","top","transparent","vertical_lr","vertical_rl","visible","hundredPercent","fullWidth","fullHeight","numericZero","processingOrder","font-size","processingOrderFn","name1","name2","Number","MAX_VALUE","Rect","Point","Insets","Segment","low","winding","shapeId","Band","segmentCompare","s1","s2","Shape","points","addSegments","prev","withOffset","offsetX","offsetY","shapeForEllipse","cx","cy","rx","ry","PI","sin","cos","shapeForRect","BandIntersection","lowOrHigh","intersectY","isNaN","addBandIntersections","intersections","w1","w2","mergeIntersections","includeCount","excludeCount","shapeCount","windings1","windings2","xranges","inside","intersectionCount","intersection","stillInside","rotateBox","box","unrotateBox","rotateShape","shape","point","normalize","bands","currBand","prevBand","findBand","mid","findUppermostFullyOpenRect","rect","band","topEdge","bottomEdge","findBottommostFullyOpenRect","SetVisitor","propSet","Css","IntVisitor","toInt","def","ShapeVisitor","collect","coords","getShape","width","height","numbers","coord","GeometryUtil","toShape","CountersVisitor","reset","counters","toCounters","UrlTransformVisitor","baseUrl","transformer","transformURL","cloneCounterValues","TokenType","TargetCounterReference","targetId","resolved","equals","spineIndex","pageIndex","isResolved","resolve","unresolve","CounterListener","counterStore","countersOfId","documentURLTransformer","transformFragment","countersById","getExprContentListener","CounterResolver","pageScope","setStyler","styler","getFragment","getTransformedId","transformedId","getPageCounterVal","format","currentPageCounters","registerPageCounterExpr","getPageCountersVal","getTargetCounters","lookForElement","targetCounters","styleUntilIdIsReached","getTargetPageCounters","currentPage","elementsById","pageCountersById","getTargetCounterVal","countersOfName","pageCounters","resolveReference","pageCountersOfName","saveReferenceOfCurrentPage","getTargetCountersVal","elementCounters","getNamedStringVal","retrievePosition","stringValues","namedStringValues","offsets","sort","pageStartOffset","isBlankPage","pageLastOffset","container","querySelectorAll","firstOffset","startOffset","lastOffset","firstExceptOffset","offsetPrev","offsetNext","elementAtOffset","querySelector","elementAtPageStartOffset","firstElementChild","first","last","first-except","setNamedString","cascadeInstance","currentElementOffset","CounterStore","createCounterListener","createCounterResolver","setCurrentPage","definePageCounter","counterName","forceSetPageCounter","pageNumber","updatePageCounters","cascadedPageStyle","resetMap","previousPageCounters","incrementMap","resetVal","CssProp","resetCounterName","increment","incrementVal","incrementCounterName","counterValues","pushPageCounters","currentPageCountersStack","popPageCounters","unresolvedRefs","unresolvedReferences","resolvedRefs","resolvedReferences","pushed","referencesToSolve","newReferencesOfCurrentPage","some","finishPage","ids","oldPageIndex","pageIndicesById","prevPageCounters","every","getUnresolvedRefsToPage","refs","idRefs","r1","r2","o","pushReferencesToSolve","referencesToSolveStack","popReferencesToSolve","pagesCounterExprs","exprContentListener","bind","findIndex","setAttribute","PAGES_COUNTER_ATTR","finishLastPage","viewport","nodes","root","pages","createLayoutConstraint","LayoutConstraint","allowLayout","nodeContext","viewNode","escapeParseSingle","code","String","fromCharCode","escapeParse","Action","Token","EOF","makeActions","spec","NaN","END","INVALID","actionsNormal","SPACE","BANG","STR2","HASH","DOLLAR","PERCENT","AMP","STR1","O_PAR","C_PAR","STAR","PLUS","COMMA","MINUS","DOT","SLASH","INT","COLON","SEMICOL","LT","EQ","GT","QMARK","AT","IDENT","O_BRK","BSLASH","C_BRK","HAT","O_BRC","BAR","C_BRC","TILDE","actionsIdent","ENDIDNT","FUNC","CONT","IDNTESC","actionsNumOrClass","TOCLASS","TONUM","TOIDES","actionsMinus","MINMIN","TOINT","TOIDENT","actionsIdentEsc","ENDIDES","CHKPOSS","FUNCES","actionsInt","ENDINT","PCUNIT","NUMBER","UNIT","actionsNumber","ENDNUM","FrameState","actionsCheckEq","EQTAIL","actionsColon","COL_COL","actionsBar","BAR_BAR","actionsAmp","AMP_AMP","actionsSlash","COMMENT","actionsComment","COMMST","actionsCommentStar","ENDNOTK","actionsMinusMinus","KILL1","actionsLt","LT_BG","actionsLtBang","LT_BG_M","actionsLtBangMinus","KILL2","actionsIdentEscChr","IDESCH","actionsStr1","ENDSTR","STR1ESC","actionsStr2","STR2ESC","actionsStr1Esc","ENDESTR","CHKPOSN","actionsStr2Esc","actionsURL","URL2","URL1","actionsURLInside","ENDURL","CHKSP","URLESC","actionsURLInside1","TERMURL","actionsURLInside2","actionsURLTail","FINURL","Tokenizer","input","handler","indexMask","buffer","token","tail","fillBuffer","nthToken","consume","mark","head","unmark","hasMark","reallocate","newIndexMask","newBuffer","oldIndex","newIndex","position","mnemonics","actions","tokenType","tokenPosition","tokenText","tokenNum","seenSpace","backslashPos","STR","CLASS","BANG_EQ","NUM","parseFloat","NUMERIC","precededBySpace","privateCurrentTask","primaryScheduler","currentTask","newFrame","task","frame","Frame","state","ACTIVE","newResult","SyncResultImpl","handle","onErr","raise","TimerImpl","currentTime","valueOf","setTimeout","delay","clearTimeout","Scheduler","timer","setSlice","timeout","isTimeSliceOver","sliceOverTime","arm","inTimeSlice","newTime","scheduledTime","timeoutToken","wakeupTime","doTimeSlice","schedule","continuation","opt_delay","c","order","canceled","resumeInternal","run","opt_name","Task","then","done","running","callbacks","callback","savedTask","suspend","Continuation","otherComp","getTask","scheduler","finish","cancel","interrupt","waitTarget","getScheduler","isRunning","whenDone","unwind","exception","opt_frame","fillStack","f","out","thenAsync","thenReturn","thenFinish","isPending","get","ResultImpl","res1","res2","res","INIT","checkEnvironment","FINISHED","DEAD","timeSlice","sleep","loop","step","more","loopWithFrame","LoopBodyFrame","opt_waitTarget","continueLoop","breakLoop","Fetcher","fetch","resource","piggibacks","piggybacks","arrived","piggyback","hasArrived","waitForFetchers","fetchers","fetcher","loadElement","src","localName","removeAttribute","SVG","setAttributeNS","XLINK","XMLHttpRequestResponseType","VivliostyleViewportScreenCss","VivliostyleViewportCss","ValidationTxt","UserAgentXml","UserAgentPageCss","UserAgentBaseCss","ajax","opt_type","opt_method","opt_data","opt_contentType","request","XMLHttpRequest","response","status","statusText","contentType","responseText","responseXML","responseBlob","open","responseType","onreadystatechange","readyState","DOCUMENT","HTMLDocument","TEXT","makeBlob","contentTypeHeader","getResponseHeader","setRequestHeader","send","overrideMimeType","parts","builderCtr","WebKitBlobBuilder","MSBlobBuilder","builder","getBlob","Blob","StylesheetFlavor","ResourceStore","parser","load","opt_required","opt_message","resources","fetchInner","isTocBox","endsWith","userAgentXmlUrl","isUserAgentXml","TaskUtil","parseJSONResource","store","colorFromHash","ParserHandler","flavor","AUTHOR","getCurrentToken","getScope","startStylesheet","tagSelector","ns","classSelector","pseudoclassSelector","pseudoelementSelector","idSelector","attributeSelector","op","descendantSelector","childSelector","adjacentSiblingSelector","followingSiblingSelector","nextSelector","startSelectorRule","startFontFaceRule","startFootnoteRule","pseudoelem","startViewportRule","startDefineRule","startRegionRule","startPageRule","startPageMarginBoxRule","startWhenRule","startMediaRule","startFlowRule","flowName","startPageTemplateRule","startPageMasterRule","pseudoName","classes","startPartitionRule","startPartitionGroupRule","startRuleBody","property","important","endRule","startFuncWithSelector","funcName","endFuncWithSelector","getImportantSpecificity","USER_AGENT","USER","getBaseSpecificity","DispatchParserHandler","pushHandler","slave","popHandler","tokenizer","errorMsg","_ParserHandler","SkippingParserHandler","owner","topLevel","depth","SlaveParserHandler","report","message","reportAndSkip","actionsBase","actionsStyleAttribute","actionsSelector","actionsSelectorInFunc","actionsSelectorCont","actionsSelectorStart","actionsPropVal","actionsExprVal","actionsExprOp","actionsError","actionsErrorDecl","actionsErrorSelector","ExprContext","OP_MEDIA_AND","CssTokenizer","LAST","SELECTOR_START","RULE_END","DONE","PROP","SELECTOR_NAME","SELECTOR_ANY","SELECTOR_ID","SELECTOR_CLASS","SELECTOR_ATTR","SELECTOR_PSEUDOCLASS","SELECTOR_CHILD","SELECTOR_SIBLING","SELECTOR_FOLLOWING_SIBLING","SELECTOR_NAME_1","SELECTOR_ANY_1","SELECTOR_ID_1","SELECTOR_CLASS_1","SELECTOR_ATTR_1","SELECTOR_BODY","SELECTOR_PSEUDOCLASS_1","SELECTOR_PSEUDOELEM","SELECTOR_NEXT","VAL_IDENT","VAL_HASH","VAL_NUM","VAL_INT","VAL_NUMERIC","VAL_STR","VAL_URL","VAL_COMMA","VAL_SLASH","VAL_FUNC","VAL_C_PAR","VAL_END","VAL_BRC","VAL_BANG","VAL_PLUS","VAL_FINISH","EXPR_IDENT","EXPR_NUM","EXPR_NUMERIC","EXPR_STR","EXPR_O_PAR","EXPR_FUNC","EXPR_PREFIX","EXPR_PARAM","EXPR_INFIX_NAME","EXPR_INFIX","GT_EQ","LT_EQ","EQ_EQ","EXPR_C_PAR","EXPR_O_BRC","EXPR_SEMICOL","ERROR_PUSH","ERROR_POP","ERROR_SEMICOL","ERROR_POP_DECL","Parser","exprContext","MEDIA","extractVals","sep","valStack","valStackReduce","count","exprError","propName","exprStackReduce","val2","tok","e1","e2","er","readPseudoParams","readNthPseudoParams","hasLeadingPlus","hasMinusSign","hasSign","makeCondition","condition","split","isInsidePropertyOnlyRule","ruleStack","runParser","parsingValue","parsingStyleAttr","parsingMediaQuery","parsingFunctionParam","token1","parserLoop","propImportant","namespacePrefixToURI","defaultNamespaceURI","pseudoclassType","POSITIVE_INFINITY","TILDE_EQ","BAR_EQ","HAT_EQ","DOLLAR_EQ","STAR_EQ","regionRule","pageRule","IMPORT","WHEN","importCondition","importReady","importURL","ruleName","rulePseudoName","errorBrackets","ErrorHandler","parseStylesheetFromText","media","resolvedURL","innerFrame","parseStylesheetFromURL","Net","xhr","parseValue","numProp","z-index","column-count","flow-linger","opacity","flow-priority","utilization","evaluateCSSToCSS","matchANPlusB","AnyMatcher","matchers","matches","matcher","AllMatcher","NthFragmentMatcher","elementOffset","registerFragmentIndex","fragmentIndex","indices","fragmentIndices","clearFragmentIndices","entry","LayoutProcessor","PageFloats","Selectors","RepetitiveElement","Table","Vtree","MatcherBuilder","buildViewConditionMatcher","viewCondition","strs","buildAllMatcher","buildAnyMatcher","restoreNewText","reduce","fastdiff","resolveIndex","coef","current","change","object","formattingContextType","FloatReference","flagmentLayoutConstraintType","isInstanceOfTableFormattingContext","isInstanceOfTableRowLayoutConstraint","Whitespace","ShadowType","delayedProps","transform","transform-origin","delayedPropsIfRelativePositioned","DelayedItem","show","obj","visibility","hide","play","pause","resume","mute","muted","unmute","makeListener","action","actionFn","Page","bleedBox","hrefHandler","anchorElement","preventDefault","setAutoPageWidth","isAuto","isAutoPageWidth","AUTO_PAGE_WIDTH_ATTRIBUTE","setAutoPageHeight","isAutoPageHeight","AUTO_PAGE_HEIGHT_ATTRIBUTE","registerElementWithId","triggers","clientLayout","elems","contains","delayedItems","getElementClientRect","dimensions","trigger","observers","observer","event","zoom","getPageAreaElement","pageAreaElement","whitespaceFromPropertyValue","whitespace","IGNORE","NEWLINE","PRESERVE","canIgnore","Flow","parentFlowName","FlowChunk","linger","repeated","breakBefore","isBetter","clientrectIncreasingTop","clientrectDecreasingRight","isSameNodePositionStep","nps1","nps2","shadowType","isSameShadowContext","shadowContext","nodeShadow","shadowSibling","isSameNodePosition","np1","np2","offsetInNode","newNodePositionFromNodeContext","initialFragmentIndex","sourceNode","NONE","formattingContext","preprocessedTextContent","makeNodeContextFromNodePositionStep","NodeContext","copy","ShadowContext","xmldoc","parentShadow","superShadow","subShadow","sc1","sc2","FirstPseudo","outer","boxOffset","breakPenalty","floatReference","INLINE","hyphenateCharacter","breakWord","inheritedProps","vertical","direction","firstPseudo","pageType","resetView","clearSpacer","display","floatSide","clearSide","floatMinWrapBlock","columnSpan","verticalAlign","flexContainer","breakAfter","establishesBFC","containingBlockForAbsolute","repeatOnBreak","pluginProps","afterIfContinues","footnotePolicy","cloneItem","np","captionSide","inlineBorderSpacing","blockBorderSpacing","overflow","create","modify","shared","clone","npp","npc","toNodePositionStep","toNodePosition","nc","ROOTLESS","_nc$shadowContext","_nc$shadowContext$sty","_nc$shadowContext$sty2","_pseudos","isInsideBFC","getContainingBlockForAbsolute","walkUpBlocks","belongsTo","ChunkPosition","primary","floats","isSamePosition","FlowChunkPosition","chunkPosition","flowChunk","FlowPosition","newfp","positions","newarr","startSide","hasContent","LayoutPosition","newcp","highestSeenNode","highestSeenOffset","lookupPositionOffset","flows","flowPositions","thisFlowNames","otherFlowNames","flowPos","startSideOfFlow","firstFlowChunkOfFlow","flowChunkPosition","Container","getInsetTop","marginTop","borderTop","paddingTop","getInsetBottom","marginBottom","borderBottom","paddingBottom","getInsetLeft","marginLeft","borderLeft","paddingLeft","getInsetRight","marginRight","borderRight","paddingRight","getInsetBefore","getInsetAfter","getInsetStart","getInsetEnd","getBeforeEdge","getAfterEdge","getStartEdge","getEndEdge","getInlineSize","getBoxSize","getBoxDir","getInlineDir","copyFrom","originX","originY","innerShape","exclusions","computedBlockSize","snapWidth","snapHeight","setVerticalPosition","setHorizontalPosition","setBlockPosition","extent","setInlinePosition","lastChild","removeChild","getInnerShape","getInnerRect","getPaddingRect","paddingX","paddingY","getOuterShape","outerShapeProp","getOuterRect","outerX","outerY","outerWidth","outerHeight","ContentPropertyHandler","rootContentValue","visitStrInner","ownerDocument","createTextNode","appendChild","img","createElementNS","CssParser","nonTrivialContent","azimuth","border-collapse","border-spacing","caption-side","clip-rule","color-interpolation","color-rendering","elevation","empty-cells","fill","fill-opacity","fill-rule","font-kerning","font-size-adjust","font-family","font-feature-settings","font-style","font-stretch","font-variant","font-weight","glyph-orientation-vertical","hyphens","hyphenate-character","hyphenate-limit-chars","hyphenate-limit-last","image-rendering","image-resolution","letter-spacing","line-break","line-height","list-style-image","list-style-position","list-style-type","marker","marker-end","marker-mid","marker-start","orphans","overflow-wrap","paint-order","pointer-events","pitch-range","quotes","richness","ruby-align","ruby-position","speak-header","speak-numeral","speak-punctuation","speech-rate","shape-rendering","stress","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tab-size","text-align","text-align-last","text-anchor","text-decoration-skip","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-combine-upright","text-indent","text-justify","text-rendering","text-size-adjust","text-transform","text-underline-position","voice-family","volume","white-space","widows","word-break","word-spacing","word-wrap","writing-mode","polyfilledInheritedProps","supportedNamespaces","http://www.idpf.org/2007/ops","http://www.w3.org/1999/xhtml","http://www.w3.org/2000/svg","coupledPatterns","coupledExtentPatterns","geomNames","sides","names","max-width","max-height","min-width","min-height","buildCouplingMap","sideMap","extentMap","pattern","side","extentPattern","couplingMapVert","block-start","block-end","inline-start","inline-end","block-size","inline-size","couplingMapHor","couplingMapVertRtl","couplingMapHorRtl","CascadeValue","getBaseValue","filterValue","increaseSpecificity","specificity","ConditionalCascadeValue","cascadeValues","tv","av","SPECIALS","region-id","fragment-selector-id","isPropName","isInherited","getProp","setProp","getStyleMap","getMutableStyleMap","getViewConditionalStyleMap","_viewConditionalStyles","getSpecial","getMutableSpecial","mergeIn","pseudoelement","regionId","viewConditionMatcher","styleKey","styleMap","styles","as","ts","prototype","chainActions","chain","chained","InheritanceVisitor","props","setPropName","getFontSize","cascval","parentFontSize","convertFontRelativeLengthToPx","baseFontSize","CascadeAction","mergeWith","CompoundAction","ConditionItemAction","conditionItem","pushConditionItem","fresh","ApplyRuleAction","viewConditionId","currentStyle","ChainedAction","makePrimary","cascade","CheckClassAction","className","currentClassNames","includes","insertInTable","CheckIdAction","currentId","currentXmlId","CheckLocalNameAction","currentLocalName","tags","CheckNSTagAction","currentNamespace","nsPrefix","nsCount","nstags","CheckTargetEpubTypeAction","epubTypePatt","currentElement","getElementById","epubType","epub","CheckNamespaceAction","_this12","CheckAttributePresentAction","_this13","hasAttributeNS","CheckAttributeEqAction","_this14","epubtypes","CheckNamespaceSupportedAction","_this15","CheckAttributeRegExpAction","regexp","_this16","attr","CheckLangAction","langRegExp","_this17","IsFirstAction","isFirst","IsRootAction","IsNthAction","_this18","Matchers","IsNthSiblingAction","currentSiblingOrder","IsNthSiblingOfTypeAction","currentSiblingTypeCounts","IsNthLastSiblingAction","currentFollowingSiblingOrder","IsNthLastSiblingOfTypeAction","counts","currentFollowingSiblingTypeCounts","nsCounts","nextElementSibling","IsEmptyAction","Node","ELEMENT_NODE","TEXT_NODE","IsEnabledAction","disabled","IsDisabledAction","IsCheckedAction","selected","checked","CheckConditionAction","_this19","conditions","dependentConditions","CheckAppliedAction","_this20","applied","cloned","NegateActionsSet","_this21","checkAppliedAction","firstAction","AbstractConditionItem","decrement","DescendantConditionItem","ChildConditionItem","AdjacentSiblingConditionItem","_this22","fired","FollowingSiblingConditionItem","_this23","AfterPseudoelementItem","afterprop","processPseudoelementProps","RestoreLangItem","QuotesScopeItem","oldQuotes","AttrValueFilterVisitor","_this24","createValueFromString","defaultValue","attributeName","hasAttribute","getStringValueFromCssContentVal","ContentPropVisitor","counterResolver","_this25","maxDepth","quoteDepth","upper","lower","additiveNumbering","entries","alphabeticNumbering","alphabetStr","alphabet","digit","numbering","digits","negative","formal","markers","thousands","hundreds","tens","ones","chineseTradInformal","visitFuncCounter","numval","_this26","visitFuncCounters","numvals","_this27","visitFuncTargetCounter","targetUrlStr","targetUrl","_this28","visitFuncTargetCounters","_this29","visitFuncString","visitFuncContent","pseudos","_pseudos$pseudoName","content","_pseudos$pseudoName$c","roman","armenian","georgian","hebrew","latin","alpha","greek","russian","square","disc","circle","copyTable","dst","ParseState","Cascade","pagetypes","createInstance","counterListener","CascadeInstance","nextOrder","siblingTypeCountsStack","followingSiblingOrderStack","viewConditions","filter","dependentConditionMatchers","conditionId","_this30","applyAction","pushRule","baseStyle","currentNSTag","currentEpubTypes","EMPTY","currentPageType","applyActions","defineCounter","scoping","counterScoping","pushCounters","displayVal","setMap","set","setVal","_this$currentElement","_this$currentElement2","setCounterName","listItemCounts","popCounters","setNamedStrings","stringSet","pseudoprops","pushElement","types","siblingOrderStack","currentNamespaceTypeCounts","followingSiblingTypeCountsStack","applyAttrFilter","quotesCasc","itemToPushLast","quotesVal","_this31","pseudoNames","pseudoProps","applyAttrFilterInner","elementStyle","pseudoMap","popRule","popElement","uaBaseCascade","CascadeParserHandler","validatorSet","_this32","TOP","insertNonPrimary","processChain","isInsideSelectorRule","patt","RegExp","footnoteContent","ActionClass","nthSelectorActionClasses","conditionCount","finishChain","SELECTOR","_CssParser$SlaveParse","insideSelectorRule","makeApplyRuleAction","special","validatePropertyAndHandleShorthand","invalidPropertyValue","unknownProperty","simpleProperty","Plugin","hook","converted","notParserHandler","NotParameterParserHandler","nth-child","nth-of-type","nth-last-child","nth-last-of-type","_this33","parentChain","_CascadeParserHandler","DefineParserHandler","dim","PropSetParserHandler","_this34","PropertyParserHandler","_this35","forEachViewConditionalStyles","viewConditionalStyles","mergeViewConditionalStyles","cascMap","mergeStyle","isVertical","cascaded","writingModeCasc","writingMode","isRtl","directionCasc","flattenCascadedStyle","regionIds","isFootnote","forEachStylesInRegion","regionStyle","regions","footnoteRegion","to","newVal","convertToPhysical","dest","couplingMap","hasOwnProperty","cascVal","coupledName","targetName","coupledCascVal","createRegExpMap","valueMaps","toPhysical","physical","logical","convert","maps","maps2","replaced","Size","horizontal-tb","vertical-rl","vertical-lr","toPhysicalMaps","toLogicalMaps","getSize","sizes","original","maxWidth","minWidth","maxHeight","minHeight","getComputedValue","getElementComputedStyle","insertBefore","writingModeProperty","writingModeValue","inlineSizeName","blockSizeName","getFillAvailableInline","getMaxContentInline","getMinContentInline","getFitContentInline","fillAvailableInline","minContentInline","parsedFillAvailable","maxContentInline","getIdealBlock","getFillAvailableBlock","FILL_AVAILABLE_INLINE_SIZE","MAX_CONTENT_INLINE_SIZE","MIN_CONTENT_INLINE_SIZE","FIT_CONTENT_INLINE_SIZE","FILL_AVAILABLE_BLOCK_SIZE","MAX_CONTENT_BLOCK_SIZE","MIN_CONTENT_BLOCK_SIZE","FIT_CONTENT_BLOCK_SIZE","FILL_AVAILABLE_WIDTH","FILL_AVAILABLE_HEIGHT","MAX_CONTENT_WIDTH","MAX_CONTENT_HEIGHT","MIN_CONTENT_WIDTH","MIN_CONTENT_HEIGHT","FIT_CONTENT_WIDTH","FIT_CONTENT_HEIGHT","isPageFloat","COLUMN","REGION","PAGE","PageFloat","nodePosition","getOrder","isAllowedOnContext","pageFloatLayoutContext","isAnchorAlreadyAppeared","isAllowedToPrecede","PageFloatStore","nextPageFloatIndex","createPageFloatId","addPageFloat","float","VtreeImpl","findPageFloatByNodePosition","findPageFloatById","PageFloatFragment","continuations","area","continues","hasFloat","findNotAllowedFloat","shouldBeStashedBefore","addContinuations","getFlowName","PageFloatContinuation","PageFloatLayoutContext","generatingNodePosition","floatStore","getPreviousSibling","floatsDeferredFromPrevious","floatsDeferredToNext","getParent","getPreviousSiblingOf","getContainer","setContainer","reattachFloatFragments","getPageFloatLayoutContext","forbid","forbiddenFloats","PageFloatLayoutStrategyResolver","findByFloat","isForbidden","addPageFloatFragment","floatFragment","dontInvalidate","floatFragments","fr1","fr2","invalidate","removePageFloatFragment","fragment","findPageFloatFragment","hasFloatFragments","hasContinuingFloatFragmentsInFlow","registerPageFloatAnchor","anchorViewNode","floatAnchors","collectPageFloatAnchors","anchors","floatId","getDeferredPageFloatContinuations","cont","deferPageFloat","hasPrecedingFloatsDeferredToNext","ignoreReference","getLastFollowingFloatInFragments","lastFollowing","lastFollowingOfParent","c1","c2","getPageFloatContinuationsDeferredToNext","getFloatsDeferredToNextInChildContexts","checkAndForbidNotAllowedFloat","checkAndForbidFloatFollowingDeferredFloat","notAllowedFloat","locked","removeEndFloatFragments","deferredFloats","floatsInFragments","fr","f1","f2","hasSameContainerAs","invalidated","layoutConstraints","detachChildren","attachChildren","isInvalidated","validate","toLogical","logicalFloatSide","stashEndFloatFragments","fragmentFloatSide","stashedFloatFragments","restoreStashedFragments","stashed","discardStashedFragments","getStashedFloatFragments","getLimitValue","layoutContext","logicalSide","physicalSide","limit","getLimitValueInner","parentLimit","limits","getLimitValuesInner","paddingRect","floatMinWrapBlockStart","floatMinWrapBlockEnd","resolveLengthPercentage","containerLength","convertLengthToPx","fragments","rootViewNodes","setFloatAreaDimensions","anchorEdge","init","force","blockSize","inlineSize","outerBlockSize","outerInlineSize","blockStart","blockEnd","inlineStart","inlineEnd","blockOffset","inlineOffset","limitBlockStartEndValueWithOpenRect","getRect","openRect","availableBlockSize","containerRect","Sizing","adjustContentRelativeSize","getContentInlineSize","getFloatFragmentExclusions","getMaxReachedAfterEdge","edge","Infinity","getBlockStartEdgeOfBlockEndFloats","getPageFloatClearEdge","isContinuationOfAlreadyAppearedFloat","isFragmentWithAlreadyAppearedFloat","columnRect","columnBlockEnd","blockStartLimit","getPageFloatPlacementCondition","logicalSides","logicalClearSide","floatOrder","isPrecedingFragment","hasPrecedingFragmentInChildren","hasPrecedingFragmentInParents","getLayoutConstraints","addLayoutConstraint","layoutConstraint","isColumnFullWithPageFloats","getMaxBlockSizeOfPageFloats","lock","unlock","isLocked","pageFloatLayoutStrategies","register","strategy","findByNodeContext","appliesToNodeContext","appliesToFloat","createPageFloat","resolveFloatReferenceFromColumnSpan","createPageFloatFragment","floatArea","adjustPageFloatArea","floatContainer","Footnote","FootnoteFragment","LineFootnotePolicyLayoutConstraint","regionContext","applyFootnoteStyle","convertPercentageSizesToPx","setComputedInsets","setComputedWidthAndHeight","constraint","forcedBreakValues","recto","verso","region","isForcedBreakValue","spreadBreakValues","isSpreadBreakValue","avoidBreakValues","avoid-page","avoid-column","avoid-region","isAvoidBreakValue","resolveEffectiveBreakValue","second","firstIsForcedBreakValue","secondIsForcedBreakValue","breakValueToStartSideValue","breakValue","startSideValueToBreakValue","startSideValue","calculateEdge","extraOffset","cbox","range","createRange","setStart","setEnd","boxes","getRangeClientRects","getBoundingClientRect","fullRange","fullBoxes","fullBox","abs","maxSize","boxSize","getElementHeight","getComputedMargin","isOrphan","removeFollowingSiblings","isSpecial","isSpecialNodeContext","AbstractBreakPosition","calculateOffset","getNodeContext","collectElementsOffset","breakPositionChosen","elementsOffsets","repetitiveElement","minimum","calculateMinimumOffset","EdgeBreakPosition","breakOnEdge","overflows","overflowIfRepetitiveElementsDropped","findAcceptableBreak","penalty","updateOverflows","getMinBreakPenalty","findEdgeBreakPosition","isEdgeUpdated","preferDropping","isFirstContentOfRepetitiveElementsOwner","Break","updateEdge","clonedPaddingBorder","calculateClonedPaddingBorder","LayoutHelper","isOverflown","isInstanceOfRepetitiveElementsOwnerFormattingContext","repetitiveElements","getRepetitiveElements","isFirstContentNode","blockify","blockifiedStr","displayStr","isAbsolutelyPositioned","getComputedDislayValue","isBlock","isInlineLevel","LayoutProcessorResolver","find","RESOLVE_LAYOUT_PROCESSOR","processor","BlockLayoutProcessor","layout","leadingEdge","isFloatNodeContext","layoutFloatOrFootnote","isBreakable","layoutBreakableBlock","layoutUnbreakable","createEdgeBreakPosition","columnBlockSize","BreakPosition","startNonInlineElementNode","afterNonInlineElementNode","stopAtOverflow","clearOverflownViewNodes","parentNodeContext","removeSelf","finishBreak","forceRemoveSelf","endOfColumn","fixJustificationIfNeeded","processFragmentedBlockEdge","BlockFormattingContext","isFirstTime","firstTime","saveState","restoreState","blockLayoutProcessor","isInstanceOfBlockFormattingContext","RESOLVE_FORMATTING_CONTEXT","Display","AbstractLayoutRetryer","prepareLayout","tryLayout","mode","resolveLayoutMode","doLayout","positionAfter","accepted","accept","postLayout","initialPosition","clearNodes","sibling","initialBreakPositions","breakPositions","initialFragmentLayoutConstraints","fragmentLayoutConstraints","initialStateOfFormattingContext","LayoutIteratorStrategy","initialState","initialNodeContext","atUnforcedBreak","break","startNonDisplayableNode","afterNonDisplayableNode","startIgnoredTextNode","afterIgnoredTextNode","startNonElementNode","afterNonElementNode","startInlineElementNode","afterInlineElementNode","LayoutIterator","iterate","loopFrame","nextResult","nextInTree","nextNodeContext","EdgeSkipper","startNonInlineBox","endEmptyNonInlineBox","endNonInlineBox","breakAtTheEdge","onStartEdges","leadingEdgeContexts","lastAfterNodeContext","processForcedBreak","needForcedBreak","pageBreakType","saveEdgeAndProcessOverflow","checkOverflowAndSaveEdgeAndBreakPosition","processLayoutConstraint","violateConstraint","repetitiveElementsCache","DOMParser","parseFromString","SHADOW","getPseudoName","setPseudoName","PseudoelementStyler","getStyle","deep","CssCascade","nest","processContent","contentProcessed","contentVal","AfterIfContinues","viewRoot","pseudoColumn","PseudoColumn","initialPageBreakType","getColumn","createNodePositionForPseudoElement","pseudoElement","PseudoElement","createShadowContext","ROOTED","AfterIfContinuesLayoutConstraint","pseudoElementHeight","overflownNodeContext","nextCandidate","allowed","affectTo","AfterIfContinuesElementsOffset","equalsTo","getPriorityOfFinishBreak","processAfterIfContinuesOfNodeContext","processAfterIfContinues","mediaTags","svg","audio","video","AllLayoutConstraint","constraints","BoxBreakPosition","checkPoints","alreadyEvaluated","breakNodeContext","findBoxBreakPosition","isSpecialInlineDisplay","Column","viewDocument","getTopEdge","startEdge","beforeEdge","getBottomEdge","endEdge","afterEdge","getLeftEdge","getRightEdge","isFloat","stopByOverflow","footnoteEdge","getExclusions","pageFloatExclusions","openAllViews","setViewRoot","stepIndex","flowRootFormattingContext","calculateOffsetInNodeForNodeContext","setCurrent","maybePeelOff","peelOff","buildViewToNextBlockEdge","bodyFrame","position1Param","positionParam","buildDeepElementView","postLayoutBlock","position1","createFloat","killFloats","cssFloat","createFloats","parseComputedLength","insets","getComputedPaddingBorder","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","getComputedInsets","boxSizing","nodeContextIn","layoutFloat","nodeContextAfter","floatBBox","floatBox","parentBox","floatBoxMeasure","floatHorBox","dir","bottommostFloatTop","boxExtent","floatWidth","floatHeight","floatBottom","floatBoxEdge","floatBoxTop","floatBands","lastY","floatBand","leftFloatEdge","rightFloatEdge","updateMaxReachedAfterEdge","setupFloatArea","floatLayoutContext","forceNonfitting","containingBlockRect","fitWithinContainer","createPageFloatArea","floatAreaElement","parentPageFloatLayoutContext","parentContainer","PageFloatArea","layoutSinglePageFloatFragment","allowFragmented","pageFloatFragment","firstFloat","newPosition","failed","floatChunkPosition","newFragment","layoutPageFloatInner","cancelLayout","layoutStashedPageFloats","success","excluded","newFloatAreas","newFragments","stashedFragment","setFloatAnchorViewNode","anchor","applyPseudoelementStyle","columnContext","layoutPageFloat","nodeContextOverflowingDueToRepetitiveElements","createJustificationAdjustmentElement","insertionPoint","span","inner","textIndent","textAlign","leftPos","rightPos","inlineBlock","padding","paddingStr","addAndAdjustJustificationElement","insertAfter","hyphenChar","resolveHyphenateCharacter","prevSibling","prevText","compensateJustificationLineHeight","br","spanRect","brRect","processLineStyling","resNodeContext","lastCheckPoints","totalLineCount","linePositions","findLinePositions","lineBreak","findAcceptableBreakInside","resNodeContextParam","isLoneImage","getTrailingMarginEdgeAdjustment","trailingEdgeContexts","maxPos","minNeg","checkPointIndex","overflown","saveBoxBreakPosition","POST_LAYOUT_BLOCK","findEndOfLine","linePosition","isUpdateMaxReachedAfterEdge","effectiveLinePosition","lowCP","low1","highCP","high1","mid1","edgePosition","textNode","resolveTextNodeBreaker","breakTextNode","RESOLVE_TEXT_NODE_BREAKER","TextNodeBreaker","getRangeBoxes","wentUp","lastGood","haveStart","endNotReached","seekRange","setStartBefore","setEndAfter","boxList","lineBefore","lineAfter","lineEnd","lineLength","overlap","paddingBorders","getOffsetByRepetitiveElements","bp","repetitiveElementsOffset","firstOverflowing","findFirstOverflowingEdgeAndCheckPoint","lineIndex","forceCutBeforeOverflowing","checkPoint","blockEdge","getAfterEdgeOfBlockContainer","blockParent","cp","findAcceptableBreakPosition","nextPenalty","minPenalty","breakPosition","doFinishBreak","initialComputedBlockSize","skipTailEdges","flowPosition","zeroIndent","checkOverflowAndSaveEdge","marginEdge","saveEvenOverflown","saveEdgeBreakPosition","applyClearance","spacer","spacerBox","clearEdge","wAdj","hAdj","isBFC","skipEdges","forcedBreakValue","fc","layoutProcessor","nodeContextParam","lastAfterPosition","resultNodeContext","layoutNext","initGeom","columnBBox","include","exclude","granularity","segment","segments","segmentCount","lowestIncludeIndex","segmentIndex","activeSegments","y2min","yn","bandIntersections","bi1","bi2","rw","chunkPositions","breakAtEdge","isFullWithPageFloats","nextInTreeListener","retryer","ColumnLayoutRetryer","pseudoParent","doFinishBreakOfFragmentLayoutConstraints","sortedFragmentLayoutConstraints","pending","redoLayout","isPseudoelement","saveDistanceToBlockEndFloats","blockStartEdgeOfBlockEndFloats","isFinite","blockDistanceToBlockEndFloats","isInstanceOfRepetitiveElementsOwnerLayoutConstraint","isInstanceOfAfterIfContinuesLayoutConstraint","getElementsOffsetsForTableCell","parentClonedPaddingBorder","startNodeContexts","allowBreakAtStartPosition","startNodeContext","isStartNodeContext","isLastAfterNodeContext","getColumnElement","checkpointIndex","viewIndex","data","breakAfterSoftHyphen","breakAfterOtherCharacter","updateNodeContext","replaceData","ch0","ch1","DefaultLayoutMode","_LayoutRetryers$Abstr","initialOverflown","LayoutRetryers","hasNextCandidate","fixFloatSizeAndPosition","refWidth","refHeight","convertPercentageToPx","refValue","valueString","percentageValue","rootViewNode","floatMargins","RepetitiveElementsOwnerFormattingContext","rootSourceNode","getRootViewNode","getRootNodeContext","initializeRepetitiveElements","Shared","elements","RepetitiveElements","ownerSourceNode","setHeaderNodeContext","headerNodePosition","headerSourceNode","headerViewNode","setFooterNodeContext","footerNodePosition","footerSourceNode","footerViewNode","updateHeight","headerHeight","footerHeight","prepareLayoutFragment","isSkipHeader","isSkipFooter","enableSkippingFooter","enableSkippingHeader","appendHeaderToFragment","rootNodeContext","appendElementToFragment","appendFooterToFragment","Layout","allowInsertRepeatitiveElements","moveChildren","isAfterLastContent","findResultFromCache","afterLastContentNodeCache","isAfterNodeContextOf","lastContentSourceNode","affectedNodeCache","cache","calculator","cacheEntry","includeChildren","parentsOfNode","currentParent","previousElementSibling","firstContentSourceNode","isEnableToUpdateState","updateState","preventSkippingHeader","preventSkippingFooter","isHeaderRegistered","isFooterRegistered","isHeaderSourceNode","isFooterSourceNode","LayoutEntireBlock","doneInitialLayout","LayoutFragmentedBlock","LayoutEntireOwnerBlock","doInitialLayout","LayoutFragmentedOwnerBlock","RepetitiveElementsOwnerLayoutConstraint","RepetitiveElementsOwnerLayoutRetryer","EntireBlockLayoutStrategy","LayoutUtil","appendHeaderToAncestors","repetitiveLayoutProcessor","layoutEntireBlock","TableRow","rowIndex","addCell","cell","cells","getMinimumHeight","TableCell","columnIndex","viewElement","colSpan","rowSpan","setHeight","setAnchorSlot","slot","anchorSlot","TableSlot","TableCellFragment","pseudoColumnContainer","cellNodeContext","TableCaptionView","BetweenTableRowBreakPosition","getAcceptableCellBreakPositions","acceptableCellBreakPositions","cellFragments","getCellFragments","cellFragment","getRowIndex","findRowIndexBySourceNode","getRowSpanningCellsOverflowingTheRow","getCellFragmentOfCell","InsideTableRowBreakPosition","beforeNodeContext","allCellsBreakable","row","getRowByIndex","isFreelyFragmentableRow","getCellsFallingOnRow","TableFormattingContext","tableSourceNode","cellBreakPositions","cellNodePosition","finishFragment","addRow","rows","getRowSlots","rowSlots","slots","rowUpper","startColIndex","addCellFragment","uniqueCells","tableWidth","getColumnCount","columnCount","sum","updateCellSizes","findCellFromColumn","tableCell","col","collectElementsOffsetOfUpperCells","collected","collectElementsOffsetFromColumn","collectElementsOffsetOfHighestColumn","elementsInColumn","ElementsOffsetOfTableCell","RepetitiveElementImpl","repeatitiveElementsInColumns","calculateMaxOffsetOfColumn","maxOffset","isValidParentOfTableRow","skipNestedTable","parentDisplay","isNestedInlineTable","EntireTableLayoutStrategy","postLayoutBlockContents","captionView","captions","inHeaderOrFooter","inRow","computedStyle","lastRowViewNode","registerCheckPoint","TableLayoutStrategy","originalStopAtOverflow","resetColumn","getColSpanningCellWidth","colWidths","layoutCell","startChunkPosition","cellViewNode","hasBrokenCellAtSlot","slotIndex","cellBreakPosition","extractRowSpanningCellBreakPositions","rowSpanningCellBreakPositions","currentRowIndex","layoutRowSpanningCellsFromPreviousFragment","rowCount","currentRow","spanningCellRowIndex","occupiedSlotIndices","rowCellBreakPositions","rowNodeContext","cont1","addDummyCellUntil","upperColumnIndex","dummy","breakChunkPosition","startTableRow","inHeader","inFooter","currentColumnIndex","registerCellFragmentIndex","tdNodeStep","getElementOffset","startTableCell","afterNodeContext","startNodePosition","ignoreList","table-caption","table-column-group","table-column","tableLayoutOptionCache","TableLayoutProcessor","layoutEntireTable","getColumnWidths","lastRow","dummyRow","dummyCells","getColGroupElements","tableElement","colGroups","normalizeAndGetColElements","cols","colGroup","cloneNode","addMissingColElements","normalizeColGroups","createDocumentFragment","tableRootSourceNode","pair","tableLayoutOption","tableBBox","calculateBreakPositionsInside","EntireTableBreakPosition","addCaptions","caption","addColGroups","removeColGroups","iterator","LayoutRetryer","cellContentElement","cellElement","cellElementRect","tableFormattingContext","LayoutFragmentedTable","LayoutEntireTable","tableNodeContext","EntireTableLayoutConstraint","tableRootNode","TableRowLayoutConstraint","collectCellFragmentLayoutConstraints","cellFragmentLayoutConstraints","removeDummyRowNodes","_RepetitiveElementImp4","array","dummyNode","getCellFragemnts","tableLayoutProcessor","mean","ColumnBalancingTrialResult","layoutResult","getBlockSize","setBlockSize","ColumnBalancer","layoutContainer","columnGenerator","regionPageFloatLayoutContext","originalContainerBlockSize","balanceColumns","preBalance","savePageFloatLayoutContexts","candidates","createTrialResult","updateCondition","restoreContents","postBalance","calculatePenalty","columnPageFloatLayoutContexts","newLayoutResult","columns","canReduceContainerSize","lastCandidate","secondLastCandidate","reduceContainerSize","newEdge","BalanceLastColumnBalancer","totalBlockSize","originalPosition","checkPosition","isLastColumnLongerThanAnyOtherColumn","foundUpperBound","lastColumnBlockSize","BalanceNonLastColumnBalancer","meanValue","computedBlockSizes","SlipRange","endStuckFixed","endFixed","endSlipped","SlipMap","getMaxFixed","getMaxSlipped","addStuckRange","addSlippedRange","slippedByFixed","fixedBySlipped","slipped","Box","atBlockStart","atFlowStart","isParentBoxDisplayed","hasBox","beforeBox","styleValue","getBreakValue","buildAfterPseudoElementBox","afterBox","styleValues","cv","displayValue","isBlockValue","hasBoxValue","BoxStack","lastBox","lastFlowName","isCurrentBoxDisplayed","newFlowChunk","atStartStack","isAtFlowStart","encounteredTextNode","atStart","nearestBlockStartOffset","Styler","primaryFlows","cascadeHolder","offsetMap","rootOffset","boxStack","getAttrStyle","postprocessTopStyle","bodyReached","primaryStack","replayFlowElementsFromOffset","hasProp","transferPropsToRoot","srcStyle","pname","rootStyle","elemStyle","isBody","rootBackgroundAssigned","backgroundColor","backgroundProps","backgroundImage","rootLayoutAssigned","columnProps","layoutProps","unitSize","getTopContainerStyle","styleUntil","CSSStyleDeclaration","styleAttrValue","getReachedOffset","flowNameStr","encounteredFlowElement","getNodeByOffset","nodeOffset","getNodeOffset","resetFlowChunkStream","flowListener","flowChunks","encounteredFlowChunk","styleUntilFlowIsReached","flowToReach","idToReach","optionsCV","options","static","lingerCV","priorityCV","breakBeforeValues","flow","registerForcedBreakOffset","forcedBreakOffsets","lookup","targetSlippedOffset","afterPseudoBreakBefore","blockStartOffset","_style$page","firstPageType","beforePseudoBreakAfter","validator","markAsStartGroup","isStartGroup","markAsEndGroup","isEndGroup","markAsStartAlternate","isStartAlternate","markAsEndAlternate","isEndAlternate","getAlternate","Connection","where","ValidatingGroup","connect","nodeIndex","connections","what","group","clonedNode","connection","groupConnection","nomatch","addSpecialToArr","clause","ALWAYS_FAIL","failure","endSpecialGroup","arrs","startSpecialGroup","endClause","startClause","addPrimitive","emptyHead","isSimple","isPrimitive","PrimitiveValidator","addGroup","how","ALTERNATE","combine","connectionIndex","REPEATED","OPTIONAL","successTerminal","failTerminal","PropertyValidator","validateForShorthand","rval","idents","units","NO_IDENTS","ListValidator","failureTerminal","validateList","startIndex","alternativeStack","alternatives","inval","outval","SpaceListValidator","CommaListValidator","validateSingle","hasCommaListValidator","FuncValidator","ShorthandSyntaxNode","tryParse","shorthandValidator","ShorthandSyntaxProperty","validators","rvals","len","ShorthandSyntaxPropertyN","ShorthandSyntaxCompound","index0","ShorthandValidator","setOwner","syntaxNodeForProperty","syntax","propList","receiver","defaultValues","propagateInherit","SimpleShorthandValidator","InsetsShorthandValidator","createSyntaxNode","shorthandValidators","SIMPLE","INSETS","INSETS_SLASH","slashIndex","index1","acc","FONT","_SimpleShorthandValid2","familyList","family","systemFonts","ValidatorSet","addReplacement","cssval","newGroup","vals","subgroup","FOLLOW","addCounts","primitive","newFunc","initBuiltInValidators","namedValidators","HASHCOLOR","POS_INT","POS_NUM","POS_PERCENTAGE","%","NEGATIVE","ZERO","ZERO_PERCENTAGE","POS_LENGTH","vi","vb","vmin","vmax","pvi","pvb","pvmin","pvmax","POS_ANGLE","deg","grad","rad","turn","POS_TIME","ms","FREQUENCY","Hz","kHz","RESOLUTION","URI","STRING","stdfont","icon","menu","isBuiltIn","readNameAndPrefixes","section","rulePrefixes","prefixes","parseValidators","expectval","setop","currop","builtIn","parseDefaults","parseShorthands","shorthands","insetShorthand","compound","makePropSet","shorthand","pval","origName","rvalue","baseValidatorSet","traitProps","bogusFontData","bogusFontCounter","prepareProperties","properties","Face","fontTraitKey","traitsEqual","makeAtRule","fontBytes","blobURL","webkitURL","createObjectURL","blobURLs","blobs","DocumentFaces","deobfuscator","registerFamily","srcFace","viewFace","srcFamily","viewFamilyFromSrc","familyMap","viewFamilyFromView","filterFontFamily","newValues","rf","Mapper","opt_familyPrefix","familyPrefix","getViewFontFamily","documentFaces","viewFamily","familyCounter","initFont","viewFontFace","killTime","bogusData","probeCont","initWidth","initHeight","loaded","loadFont","srcURLMap","viewFaceParam","BLOB","findOrLoadFonts","srcFaces","keyCount","PageBox","_scope","parentInstance","param","copySpecified","specified","destSpecified","cloneChildren","RootPageBox","PageMasterScope","pageMaster","isFunc","self","keyMap","boxInstance","lookupInstance","resolveFunc","resolveName","PageMaster","PageMasterInstance","resetScope","PartitionGroup","PartitionGroupInstance","Partition","PartitionInstance","toExprAuto","toExprZero","toExprZeroAuto","toExprZeroBorder","styleVal","toExprBool","PageBoxInstance","pageBox","calculatedWidth","calculatedHeight","addNamedValues","namedValues","altName","namedFuncs","columnGap","initEnabled","minPageWidth","minPageHeight","boxSpecificEnabled","initHorizontal","parentWidth","leftBP","rightBP","extra","autoWidth","isAutoWidth","remains","initVertical","parentHeight","topBP","bottomBP","autoHeight","isAutoHeight","initColumns","depends","registerInstance","getActiveRegions","getPropAsNumber","propagateProperty","docFaces","propagatePropertyToElement","propagateDelayedProperty","assignLeftPosition","assignRightPosition","xpos","snapOffsetX","assignTopPosition","ypos","snapOffsetY","assignBottomPosition","assignBeforePosition","assignAfterPosition","assignStartEndPosition","sizeWithMaxHeight","isTopDependentOnAutoHeight","sizeWithMaxWidth","isRightDependentOnAutoWidth","prepareContainer","passPreProperties","transferContentProps","passContentProperties","transferSinglUriContentProps","passSingleUriContentProperties","finishContainer","readHeight","readWidth","bbox","ruleWidth","ruleStyle","ruleColor","containerSize","border","rule","passPostProperties","delayedProperties","applyCascadeAndInit","docElementStyle","userAgentPageMasterPseudo","resolveAutoSizing","RootPageBoxInstance","_PageBoxInstance","pageMasterInstance","adjustPageLayout","processPartitionList","listVal","conflicting","qname","term","required","pmEnabledVal","pmEnabled","_PageBoxInstance4","PageBoxParserHandler","PartitionParserHandler","PartitionGroupParserHandler","partition","partitionGroup","PageMasterParserHandler","resolvePageProgression","Constants","CornerMarkPosition","CrossMarkPosition","pageSizes","a10","a9","a8","a7","a6","a5","a4","a3","a2","a1","a0","b10","b9","b8","b7","b6","b5","b4","b3","b2","b1","b0","c10","c9","c8","c7","c6","c5","c4","c3","c0","jis-b10","jis-b9","jis-b8","jis-b7","jis-b6","jis-b5","jis-b4","jis-b3","jis-b2","jis-b1","jis-b0","letter","legal","ledger","defaultPrinterMarkLineWidth","defaultPrinterMarkOffset","defaultPrinterMarkLineLength","defaultBleedOffset","resolvePageSizeAndBleed","pageSizeAndBleed","bleed","bleedOffset","val1","marks","evaluatePageSizeAndBleed","evaluated","cropOffset","createPrinterMarkSvg","createPrinterMarkElement","lineWidth","elementType","MarginBoxPositionAlongVariableDimension","propertiesAppliedToPartition","outline","outline-width","outline-style","outline-color","pageMarginBoxes","top-left-corner","isInTopRow","isInBottomRow","isInLeftColumn","isInRightColumn","positionAlongVariableDimension","top-left","START","top-center","CENTER","top-right","top-right-corner","right-top","right-middle","right-bottom","bottom-right-corner","bottom-right","bottom-center","bottom-left","bottom-left-corner","left-bottom","left-middle","left-top","pageMarginBoxNames","PageRuleMaster","pageSize","PageRulePartition","bodyPartitionKey","createPageMarginBoxes","applySpecified","marginBoxesMap","_marginBoxes","PageMarginBoxPartition","PageRuleMasterInstance","PageRulePartitionInstance","marginBoxName","ownStyle","ownVal","PageMarginBoxPartitionInstance","pageRuleMaster","_PageMaster$PageMaste2","setPageAreaDimension","pageAreaDimension","borderBoxWidth","borderBoxHeight","marginBoxContainers","marginBoxes","horizontalDimensions","verticalDimensions","sizeMarginBoxesAlongVariableDimension","isHorizontal","containers","boxInstances","boxParams","boxInfo","pageMarginBoxInstances","boxParam","SingleBoxMarginBoxSizingParam","evaluatedDim","getSizesOfMarginBoxesAlongVariableDimension","needRecalculate","maxOuterSizes","evaluatedMaxSize","FixedSizeMarginBoxSizingParam","getOuterSize","minOuterSizes","minSize","evaluatedMinSize","startEndSum","outerSize","availableSize","startBoxParam","centerBoxParam","endBoxParam","startEndBoxParam","MultipleBoxesMarginBoxSizingParam","centerSizes","distributeAutoMarginBoxSizes","xSize","startEndAutoSize","hasAutoSize","startEndSizes","ySize","xOuterMaxContentSize","getOuterMaxContentSize","yOuterMaxContentSize","maxContentSizeSum","xOuterMinContentSize","getOuterMinContentSize","minContentSizeSum","hasAutoSize_","fixedSize","pageRulePartition","_PageMaster$Partition3","resolvePageBoxDimensions","borderBoxExtent","marginStart","marginEnd","endSide","extentName","pageExtent","paddingStart","paddingEnd","borderStartWidth","borderEndWidth","pageMarginBoxPartition","applyVerticalAlign","_PageMaster$Partition4","flexAlign","availableExtent","outerExtent","positionAndSizeAlongFixedDimension","insideName","outsideName","outside","pageMargin","marginInside","marginOutside","paddingInside","paddingOutside","borderInsideWidth","borderOutsideWidth","getComputedValues","pageMarginValue","borderAndPadding","PageManager","rootPageBoxInstance","definePageProgression","styleInstance","isVersoFirstPage","isVersoPage","pageProgression","getCascadedPageStyle","getPageRulePageMaster","makeCacheKey","pageMasterCache","generatePageRuleMaster","generateCascadedPageMaster","propsStr","makeCascadeValueObjectKey","newPageMaster","pageMasterStyle","CheckPageTypeAction","IsFirstPageAction","IsBlankPageAction","IsLeftPageAction","IsRightPageAction","IsRectoPageAction","IsVersoPageAction","IsNthPageAction","layoutPositionAtPageStart","blankPageAtStart","ApplyPageRuleAction","targetMap","boxName","targetBox","PageParserHandler","pageProps","currentNamedPageSelector","currentPseudoPageClassSelectors","finishSelector","selectors","currentPageSelectors","_CssCascade$CascadePa","selector","noPageSelectorProps","prevCascVal","marginBoxMap","boxStyle","PageMarginBoxParserHandler","transformURIs","attributeValue","m1","namespacePrefixMap","frontEdgeBlackListHor","margin-top","padding-top","border-top-width","border-top-style","border-top-color","border-top-left-radius","border-top-right-radius","frontEdgeBlackListVert","margin-right","padding-right","border-right-width","border-right-style","border-right-color","border-bottom-right-radius","frontEdgeUnforcedBreakBlackListHor","frontEdgeUnforcedBreakBlackListVert","ViewFactory","footnoteStyle","stylerProducer","customRenderer","fallbackMap","createPseudoelementShadow","cascStyle","getPseudoMap","addedNames","att","shadowStyler","computedPseudoStyleMap","computedPseudoStyle","createRefShadow","refDocParam","refDoc","refElement","getElement","refStyler","getStylerForDoc","createShadows","templateURLVal","template","shadow","cont2","computeStyle","displayValues","inheritFromSourceParent","shadowRoot","nodeStyle","inheritanceVisitor","sname","inheritLangAttribute","transferPolyfilledInheritedProps","POLYFILLED_INHERITED_PROPS","numericVal","resolveFormattingContext","createElementView","needToProcessChildren","inheritedValues","shadowParam","parentWritingMode","isFlowRoot","floating","listItem","isAtForcedBreak","previousPageType","borderCollapse","borderSpacing","processAfterIfcontinues","whitespaceValue","processRepeatOnBreak","findAndProcessRepeatingElements","custom","tag","NCX","navParent","hp","behavior","dataset","iframe","contentWindow","navigator","epubReadingSystem","version","layoutStyle","hasFeature","imageResolution","images","cssWidth","cssHeight","attrWidth","attrHeight","hasAutoWidth","hasAutoHeight","attributes","attributeCount","delayedSrc","attribute","attributeNS","nodeValue","image","Image","isSVGUrlAttribute","Urls","attributePrefix","imageFetcher","listStyleImage","listStyleURL","preprocessElementStyle","applyComputedStyles","blackList","modifyElemDimensionWithImageResolution","SVG_URL_ATTRIBUTES","scaledWidth","scaledHeight","numericMaxHeight","numericMinWidth","numericMinHeight","PREPROCESS_ELEMENT_STYLE","createTextNodeView","preprocessTextContent","Diff","originl","PREPROCESS_TEXT_CONTENT","processedText","createNodeView","processChildren","processShadowContent","contentNode","contentShadowType","contentShadow","nextPositionInTree","shadowNode","sr","isTransclusion","transclusionType","proc","addImageFetchers","bg","isRelativePositioned","propertiesNotPassedToDOM","fixRubyTextFontSize","userAgent","fontSizeInPx","parentElem","_this$nodeContext","_this$nodeContext$par","getComputedStyle","HTMLElement","minFontSizeInPx","pn","childComputedStyle","boxDecorationBreak","step1","step2","elem2","parentElement","nodePosition1","nodePosition2","DOMParserSupportedType","box-decoration-break","float-min-wrap-block","float-reference","flow-into","flow-options","footnote-policy","DefaultClientLayout","layoutBox","subtractOffsets","originRect","viewportLeft","viewportTop","rects","getClientRects","layoutBoxRect","Viewport","opt_root","opt_width","opt_height","outerZoomBox","contentContainer","innerWidth","innerHeight","resetZoom","XMLDocHolder","NodeList","offsetStr","srcNode","getTotalOffset","totalOffset","buildIdMap","idMap","xmlid","getElementsByName","parseAndReturnNullIfError","opt_parser","docElement","errorTagName","parseXMLResource","supportedKeys","APPLICATION_XML","TEXT_HTML","APPLICATION_XHTML_XML","IMAGE_SVG_XML","predicate","check","withAttribute","Predicate","withChild","opt_childPredicate","asArray","pr","forEachNode","forEachNonNull","uaStylesheetBaseFetcher","CssValidator","Style","rootBox","fontFaces","footnoteProps","flowProps","viewportProps","fontDeobfuscator","currentLayoutPosition","matchPageSide","lookupOffset","flowChunkIsAfterParentFlowForcedBreak","pageNumberOffset","sizeViewport","textZoom","scaleFactor","defaultFontSize","widthVal","heightVal","StyleInstance","defaultLang","fontMapper","faces","Font","rootPageFloatLayoutContext","CssStyler","stylerMap","CssPage","matchStartPageSide","pageManager","fontFace","pageSheetSize","isRectoStart","isLTR","getStyleForDoc","pageBoxInstances","getConsumedOffset","chunkOffset","getPosition","layoutPosition","noLookAhead","currentPosition","consumedOffset","dumpLocation","updateStartSide","flowChunkBreakBefore","flowBreakAfter","selectPageMaster","pageMasters","coeff","pageArea","initLingering","breakOffsetBeforeStartIndex","breakOffsetBeforeStart","parentFlowPosition","parentStartOffset","setFormattingContextToColumn","layoutDeferredPageFloats","deferredFloatNode","deferredFloatOffset","pageStartPos","parentInvalidated","getLastAfterPositionIfDeferredFloatsExists","layoutColumn","repeatedIndices","removedIndices","alt","counterConstraint","createAndLayoutColumn","forceNonFitting","dontApplyExclusions","boxContainer","columnPageFloatLayoutContext","positionAtColumnStart","columnContainer","columnY","columnX","setPagePageFloatLayoutContextContainer","pagePageFloatLayoutContext","getRegionPageFloatLayoutContext","layoutFlowColumnsWithBalancing","positionAtContainerStart","layoutColumns","layoutFlowColumns","generatorResult","columnFill","columnBalancer","lastColumn","Vgen","pageBreaks","dontExclude","forwardOrderInLayout","removed","innerContainerTag","innerContainer","suppressEmptyBoxGeneration","outerShape","processLinger","startPage","noMorePrimaryFlows","layoutNextPage","_cp$flowPositions$bod","bleedBoxPaddingEdge","evaluatedPageSizeAndBleed","setPageSizeAndBleed","printerMarkOffset","bgcolor","cropMarkLineLength","bleedMarkLineLength","maxLineLength","svgWidth","points1","points2","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","line1","line2","longLineLength","BOTTOM","horizontalLine","verticalLine","opposite","LEFT","RIGHT","isLeftPage","getTriggersForDoc","pageSheetWidth","pageSheetHeight","BaseParserHandler","masterHandler","insideRegion","pageHandler","regionCount","regionHandler","processViewportMeta","meta","StyleParserHandler","cascadeParserHandler","parseOPSResource","OPSDocStore","authorStyleSheets","userStyleSheets","setStyleSheets","userAgentXML","triggerSingleDocumentPreprocessing","styleByDocURL","triggersByDocURL","clearStyleSheets","addAuthorStyleSheet","addUserStyleSheet","styleSheets","stylesheet","XmlDoc","PREPROCESS_SINGLE_DOCUMENT","triggerList","getElementsByTagNameNS","triggerElem","EV","sources","userAgentURL","title","rel","styleByKey","styleFetcherByKey","sph","source","encode32","decode32","bytes","bytesToSHA1Int32","appendCount","w","bi","TOCView","rendererFactory","setAutoHeight","makeCustomRenderer","renderer","srcElem","viewParent","replaceChild","createComment","adaptParentClass","button","toggleNodeExpansion","tabIndex","anchorElem","showTOC","viewportSize","OPS","bodyChildElem","hideTOC","isTOCVisible","getTOC","exportTree","links","exportLink","hash","innerText","tocNodeElem","ce","adaptClass","elem1","stopPropagation","EPUBDocStore","makeDeobfuscatorFactory","plainXMLStore","jsonStore","deobfuscators","loadAsPlainXML","startLoadingAsPlainXML","loadAsJSON","startLoadingAsJSON","loadPubDoc","haveZipMetadata","loadEPUBDoc","opf","loadOPF","manifestObj","reportLoadError","OPFDoc","initWithWebPubManifest","loadWebPub","containerXML","pubURL","opfByURL","opfXML","encXML","zipMetadata","initWithXMLDoc","primaryOPFByEPubURL","manifestLink","manifestUrl","xhtmlToc","addDocument","docURL","documents","domain","removePath","startsWith","OPFItem","itemProperties","initWithElement","itemElem","opfURL","mediaType","propStr","initWithParam","skipPagesBefore","getOPFItemId","predefinedPrefixes","dcterms","marc","rendition","onix","xsd","defaultIRI","metaTerms","language","creator","titleType","displaySeq","alternateScript","role","getMetadataComparator","item1","item2","i1","_r1$metaTerms$display","i2","_r2$metaTerms$display","getMathJaxHub","math","MathJax","Hub","PageViewMode","supportedMediaTypes","application/xhtml+xml","image/jpeg","image/png","image/svg+xml","image/gif","audio/mp3","createDocumentURLTransformer","MATHML","path","items","restoreURL","encoded","getMetadata","metadata","getPathFromURL","epubBaseURL","manifestURL","pkg","uidref","uidElem","uid","srcToFallbackId","fallback","nav","cover","itemMap","itemMapByPath","fallbackSrc","spine","itemRefElement","tocAttr","ncxToc","pageProgressionAttr","idpfObfURLs","mediaTypeElems","handlerId","bindings","mroot","prefixMap","resolveProperty","iri","rawItems","refines","scheme","DC","rawItemsByTarget","rawItem","makeMetadata","entryMap","sortMetadata","prePaginated","sha1Sum","blob","webkitSlice","fileReader","FileReader","readAsArrayBuffer","dataView","DataView","byteLength","getUint8","setUint8","assignAutoPages","manifestText","obfuscations","obfuscationKey","sha1","encodedPath","compressed","compressedSize","obfuscation","DEFAULT","epage","epageCount","epageCountCallback","setEPageCountMode","epageIsRenderedPage","countEPages","offsetPerEPage","initWithChapters","itemref","readingProgression","primaryEntryPath","readingOrder","encodeURI","hrefNoFragment","itemCount","tocFound","readingOrderOrResources","itemObj","isInReadingOrder","encodingFormat","_this12$items","getCFI","offsetInItem","cfi","CFI","resolveFragment","opfNav","idref","nodeNav","resolveEPage","getEPageFromPosition","makePageAndPosition","OPFView","pageSheetSizeReporter","Counters","getPage","viewItem","spineItems","getCurrentPageProgression","finishPageContainer","oldPage","isFirstPage","prevItem","newPage","insertPos","renderSinglePage","makePage","posParam","layoutPositions","prevPos","getPageViewItem","resultPosition","pageAndPosition","isLastPage","nextLayoutPosition","normalizeSeekPosition","seekOffset","seekOffsetPageIndex","complete","findPage","sync","resultPage","normalizedPosition","renderPage","renderAllPages","renderPagesUpto","notAllPages","lastResult","firstPage","lastPage","nextPage","nextViewItem","spineItemLoadingContinuations","previousPage","isRectoPage","isLeft","getSpread","otherPageAndPosition","thisPage","otherPage","nextSpread","isRecto","next2","result2","previousSpread","oldPrevPageCont","navigateToEPage","navigateToFragment","navigateTo","restored","pageCont","matrix","cssMatrix","makeObjectView","handlerSrc","srcParam","typeParam","pvalue","makeMathJaxView","hub","clonedMath","importNode","resolveURLsInMathML","Push","tagName","newUrl","mathTypeset","loadingContinuations","epubSpineProperties","pageCounterOffset","_this27$spineItems$","previousViewItem","pubTitles","removeRenderedPages","hasAutoSizedPages","hasPages","autohide","toc","tocAutohide","tocView","Toc","tocWidth","tocHeight","ZoomType","AdaptiveViewer","viewportElement","instanceId","callbackFn","kick","sendCommand","resizeListener","needResize","pageReplacedListener","hyperlinkListener","pageRuleStyleElement","loadPublication","loadXML","configure","moveTo","addLogListeners","LOADING","packageURL","touchActive","touchX","touchY","needRefresh","currentSpread","pagePosition","fitToScreen","pageViewMode","SINGLE_PAGE","waitForLoading","logLevel","setReadyState","command","Profile","zipmeta","authorStyleSheet","userStyleSheet","Epub","render","resolvedParams","cancelRenderingTask","resize","resolveLength","matched","autoresize","vp","userAgentRootURL","rootURL","configurePlugins","CONFIGURATION","showCurrent","forCurrentPages","removePageListeners","hidePages","showSinglePage","showPage","showSpread","leftWidth","rightWidth","reportPosition","sendLocationNotification","createViewport","vs","resolveSpreadView","SPREAD","AUTO_SPREAD","updateSpreadView","sizeIsGood","spreadViewChanged","opfView","setPageSize","setPageSizePageRules","pageSheetSizeAlreadySet","styleText","removePageSizePageRules","tocVisible","setSpreadZoom","setPageZoom","getAdjustedZoomFactor","getSpreadDimensions","pageDimension","calculateZoomFactorToFitInsideViewPort","queryZoomFactor","FIT_INSIDE_VIEWPORT","pageDim","renderTask","RenderingCanceledError","resizeTask","INTERACTIVE","notification","COMPLETE","method","currentVisibility","changeAutohide","runCommand","actionName","initEmbed","cmd","maybeParse","viewer","hrefEvent","internal","frameInternal","adapt_command","setPrototypeOf","convertViewerOptions","Navigation","CoreViewer","settings","opt_options","adaptViewer_","dispatcher","autoResize","pageBorderWidth","setOptions","eventTarget","defineProperty","removeListener","loadDocument","singleDocumentOptions","opt_documentOptions","opt_viewerOptions","loadDocumentOrPublication","pubUrl","documentOptions","convertStyleSheetArray","convertSingleDocumentOptions","documentObject","initialized","resolveNavigation","PREVIOUS","NEXT","navigateToPage","opt_epage","EPAGE","navigateToInternalUrl","opt_show","opt_autohide","getPageSizes","_this$adaptViewer_$op","_this$adaptViewer_$op2","getCover","toNumberOrNull","opt","isArray","VivliostylePrint","htmlDoc","printCallback","iframeWin","hideIframe","removeIframe","borderWidth","printInstance","srcdoc","runInIframe","preparePrint","browserPrint","cleanUp","docBlob","Viewer","Promise","config","html","css","printHTML"],"mappings":"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3B,IAAM03B,EAAK13B,EAAI,GAExB,OAAO8G,GAhGT,SAAYwwB,GACVA,qBACAA,iBACAA,qBACAA,mBACAA,mBACAA,uBACAA,yBACAA,iBACAA,sBACAA,sBACAA,oBACAA,oBACAA,sBACAA,sBACAA,kBACAA,sBACAA,sBACAA,0BACAA,gBACAA,gBACAA,gBACAA,sBACAA,gBACAA,sBACAA,sBACAA,sBACAA,sBACAA,wBACAA,kBACAA,kBACAA,sBACAA,oBACAA,oBACAA,kBACAA,wBACAA,wBACAA,wBACAA,oBACAA,oBACAA,wBACAA,wBACAA,0BACAA,0BACAA,0BAGAA,wBACAA,0BAGAA,0BACAA,0BACAA,0BACAA,0BACAA,oBACAA,wBACAA,0BACAA,wBACAA,0BACAA,wBACAA,sBACAA,sBACAA,0BACAA,wBACAA,sBACAA,sBACAA,kBACAA,oBACAA,oBACAA,wBACAA,0BACAA,wBACAA,sBACAA,0BACAA,0BACAA,0BACAA,0BACAA,wBACAA,wBACAA,0BACAA,0BACAA,sBACAA,kBAnFF,CAAYA,KAAAA,YAsGCQ,GAA0B,CACrCR,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOS,MACPT,GAAOS,MACPT,GAAOO,QACPP,GAAOS,MACPT,GAAOS,MACPT,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOS,MACPT,GAAOU,KACPV,GAAOW,KACPX,GAAOY,KACPZ,GAAOa,OACPb,GAAOc,QACPd,GAAOe,IACPf,GAAOgB,KACPhB,GAAOiB,MACPjB,GAAOkB,MACPlB,GAAOmB,KACPnB,GAAOoB,KACPpB,GAAOqB,MACPrB,GAAOsB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xD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOyD,QACPzD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOyD,QACPzD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAO0D,OACP1D,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAOwD,QACPxD,GAAO8C,QACP9C,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAO6C,KACP7C,GAAOwD,QACPxD,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,SAGTD,GAAelD,IAAQL,GAAOwD,YAKjBG,GAAuB,CAClC3D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO6D,OACP7D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO8D,OACP9D,GAAO4D,OACP5D,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO+D,KACP/D,GAAO4D,OACP5D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,OACP5D,GAAO4D,QAGTD,GAAUtD,IAAQL,GAAO4D,WAKZI,GAA0B,CACrChE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAO6D,OACP7D,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAO6C,KACP7C,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAOiE,OACPjE,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,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C,GACR,IAAM5I,EAAK4I,EAAKM,SACZlK,EAAMgB,EAAG+B,SAASpU,KAAKuV,SAC3B,GAAmB,iBAARlE,EAAkB,CACvBgB,aAAcyJ,KAGhBzK,EAAM8vC,GACJ9uC,EAAGc,MACH,IAAI80B,GAAuB52B,EAAK,MAChC,IACAiK,eAGJ,IAAMtQ,EAAOhL,KAAKuuB,oBAAoBlc,EAAIhB,EAAKrR,KAAKwH,KAAKs5C,eACzD9gD,KAAK6gD,cAAcxvC,EAAKrG,mBAzDcya,aA+D5B27B,GAAkB/vC,GAChC,aACEA,GACAA,IAAQoU,IACRpU,IAAQoU,GAAUnG,QAClBjO,IAAQoU,GAAUpG,MAClBhO,IAAQoU,GAAU/G,YCtyCTk6B,GAAiB,CAC5ByI,WACAC,qBACAC,oBACAC,kBACAC,eACA/mC,SACAgnC,yBACAC,qBACApqD,UACAuhD,aACA8I,aACAC,iBACAC,QACAC,kBACAC,eACAC,kBACAhhC,eACAihC,sBACAC,iBACAC,2BACAC,gBACAC,kBACAC,kBACAC,iBACAC,gCACAC,WACAC,yBACAC,2BACAC,0BACAC,qBACAC,sBACAC,oBACAC,gBACAC,iBACAC,sBACAC,yBACAC,qBACAC,UACAC,gBACAC,gBACAC,kBACAC,WACAC,mBACAC,iBACAC,oBACAC,iBACAC,UACAC,YACAC,gBACAC,mBACAC,kBACAC,mBACAC,uBACAC,iBACAC,qBACAC,UACAC,UACAC,sBACAC,uBACAC,oBACAC,qBACAC,uBACAC,oBACAC,kBACAC,cACAC,gBACAC,qBACAC,iBACAC,0BACAC,yBACAC,4BACAC,yBACAC,0BACAC,iBACAC,kBACAC,oBACAC,sBACAC,oBACAC,6BACA5S,cACA6S,kBACAC,UACAC,iBACAC,UACAC,gBACAC,kBACAC,eACAC,mBAGWC,GAA2B,CACtC,uBAGA,mBACA,UACA,UAaWC,GAAsB,CACjCC,kCACAC,kCACAC,iCAGWC,GAAkB,CAC7B,WACA,YACA,iBACA,iBACA,iBACA,KAGWC,GAAwB,CAAC,QAAS,QAAS,KAE3CC,GAAyC,WAUpD,IATA,IAAMC,EAAQ,CAAC,OA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,SADOsC,YAAAA,EAAUlvB,cAAVmvB,EAAAC,gBAAAC,EAAoCh2D,OAK/D,WAAW+mB,GAAQnK,MAMrBR,UAAA,SAAUC,GACR,OAAQA,EAAKvZ,MACX,IAAK,UACH,GAAIuZ,EAAK9J,OAAO5a,QAAU,EACxB,YAAYo9D,iBAAiB14C,EAAK9J,QAEpC,MACF,IAAK,WACH,GAAI8J,EAAK9J,OAAO5a,QAAU,EACxB,YAAYu9D,kBAAkB74C,EAAK9J,QAErC,MACF,IAAK,iBACH,GAAI8J,EAAK9J,OAAO5a,QAAU,EACxB,YAAY09D,uBAAuBh5C,EAAK9J,QAE1C,MACF,IAAK,kBACH,GAAI8J,EAAK9J,OAAO5a,QAAU,EACxB,YAAY89D,wBAAwBp5C,EAAK9J,QAE3C,MACF,IAAK,SACH,GAAI8J,EAAK9J,OAAO5a,QAAU,EACxB,YAAYg+D,gBAAgBt5C,EAAK9J,QAEnC,MACF,IAAK,UACH,GAAI8J,EAAK9J,OAAO5a,QAAU,EACxB,YAAYi+D,iBAAiBv5C,EAAK9J,QAKxC,OADAtP,EAAelB,KAAK,sBAAuBsa,EAAKnb,gBACrC6lB,GAAQ,QAlQiBA,IAqS3BgtC,GAAoB,CAC/BkC,MAAO,CACL,KACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,IACA,GACA,KACA,GACA,IACA,GACA,KACA,GACA,IACA,EACA,KACA,EACA,IACA,EACA,KACA,EACA,KAEFC,SAAU,CACR,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,SAAU,CACR,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,OAAQ,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,MAISnC,GAAsB,CACjCoC,MAAO,MACPC,MAAO,MACPC,MAAO,SACPC,QAAS,aAGE/2C,GAAQ,CACnBg3C,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRh2C,KAAM,IAmEKm0C,GAAwC,CACnDN,UACAF,OAAQ,aACRG,QAAS,MACTF,SAAU,cA4DIqC,GAAUl2B,EAAkBm2B,GAC1C,IAAK,IAAMj4D,KAAK8hC,EACdm2B,EAAIj4D,GAAK8hC,EAAI9hC,GAAGo9C,YAqnBR8a,GAjnBCC,cAAb,aACEz1D,aAAkB,EAClBA,cAAsC,GACtCA,UAAoB,GACpBA,YAAsB,GACtBA,eAAyB,GACzBA,aAAuB,GACvBA,SAAmB,GACnBA,eAAyB,GACzBA,WAAgB,6BAEhB06C,MAAA,WACE,IAAMr2C,EAAI,IAAIoxD,EAEd,IAAK,IAAMjqD,KADXnH,EAAEuoD,QAAU5sD,KAAK4sD,aACID,SACnBtoD,EAAEsoD,SAASnhD,GAAKxL,KAAK2sD,SAASnhD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CA+hC,gBACAC,iBACA95C,UACAqyE,WACA20B,UACAgG,WACAC,mBACAC,mBACAC,oBAzBY,CACZ,OACA,QACA,MACA,SACA,SACA,QACA,QACA,MACA,cACA,YACA,eACA,cAeIz6G,SAAQ,SAAC4mD,GACbgD,aAAgBhD,MAChBgD,cAAiBhD,MACjBgD,aAAgBhD,eAChBgD,aAAgBhD,eAChBgD,aAAgBhD,kBAEXgD,KAaT,SAAYwwD,GACVA,gBACAA,kBACAA,YAHF,CAAYA,KAAAA,YAkKJ/sC,GA/IKqtC,GAA+D,CAC1EC,kBAAmB,CACjBtgF,MAAO,EACPugF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElCC,WAAY,CACV5gF,MAAO,EACPugF,cACAC,iBACAC,kBACAC,mBACAC,+BACEZ,GAAwCc,OAE5CC,aAAc,CACZ9gF,MAAO,EACPugF,cACAC,iBACAC,kBACAC,mBACAC,+BACEZ,GAAwCgB,QAE5CC,YAAa,CACXhhF,MAAO,EACPugF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCZ,GAAwCjrF,KAE1EmsF,mBAAoB,CAClBjhF,MAAO,EACPugF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElCO,YAAa,CACXlhF,MAAO,EACPugF,cACAC,iBACAC,kBACAC,mBACAC,+BACEZ,GAAwCc,OAE5CM,eAAgB,CACdnhF,MAAO,EACPugF,cACAC,iBACAC,kBACAC,mBACAC,+BACEZ,GAAwCgB,QAE5CK,eAAgB,CACdphF,MAAO,EACPugF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCZ,GAAwCjrF,KAE1EusF,sBAAuB,CACrBrhF,MAAO,EACPugF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElCW,eAAgB,CACdthF,MAAO,GACPugF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCZ,GAAwCjrF,KAE1EysF,gBAAiB,CACfvhF,MAAO,GACPugF,cACAC,iBACAC,kBACAC,mBACAC,+BACEZ,GAAwCgB,QAE5CS,cAAe,CACbxhF,MAAO,GACPugF,cACAC,iBACAC,kBACAC,mBACAC,+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"}